import { User } from '../../models/User';
import { Bet } from '../../models/Bet';
import { Prediction } from '../../models/Prediction';
import { EventEmitter } from 'events';
export declare class UserPersonalizationService extends EventEmitter {
    private static instance;
    private constructor();
    static getInstance(): UserPersonalizationService;
    initialize(): Promise<void>;
    private userProfiles;
    private clusters;
    private readonly minClusterSize;
    private readonly maxClusters;
    updateUserProfile(user: User, bet: Bet, prediction: Prediction): void;
    private createNewProfile;
    private updateClusters;
    private performClustering;
    private initializeCentroids;
    private assignToClusters;
    private updateCentroid;
    private calculateDistance;
    private average;
    private areAssignmentsEqual;
    private updateClusterStatistics;
    getPersonalizedPrediction(userId: string, prediction: Prediction): Promise<Prediction>;
    private adjustPredictionForCluster;
    private adjustPredictionForUser;
    private calculateROI;
    private calculateWinRate;
    private calculateAverageOdds;
    private calculateStakeVariation;
    private calculateOddsPreference;
    private calculateConfidenceThreshold;
    private calculateModelTrust;
    private calculateMarketSensitivity;
    private calculateTemporalPreference;
    private calculateFactorImpact;
    private calculateClusterImpact;
    private calculateTotalImpact;
}
export declare const userPersonalizationService: UserPersonalizationService;
