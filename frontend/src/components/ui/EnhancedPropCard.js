import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import GlassCard from './GlassCard';
import GlowButton from './GlowButton';
const badge = (label, value, color) => (_jsxs("span", { className: `px-2 py-1 rounded-full text-xs font-semibold ${color} bg-opacity-10`, children: [label, ": ", value] }));
export const EnhancedPropCard = ({ playerName, team, position, statType, line, overOdds, underOdds, sentiment, aiBoost, patternStrength, bonusPercent, enhancementPercent, pickType = 'normal', trendValue, gameInfo, playerImageUrl, onSelect, onViewDetails, selected = false, className = '', }) => (_jsxs(GlassCard, { className: `relative p-6 flex flex-col space-y-3 transition-all ${selected ? 'ring-4 ring-primary-500' : ''} ${className}`, children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsxs("div", { className: "flex items-center gap-2", children: [playerImageUrl && (_jsx("img", { src: playerImageUrl, alt: playerName, className: "w-10 h-10 rounded-lg object-cover border border-gray-300" })), _jsxs("div", { className: "text-xs text-gray-400", children: [team, " - ", position] })] }), trendValue !== undefined && (_jsxs("span", { className: "text-xs text-white bg-gradient-to-r from-green-500 to-blue-500 px-2 py-1 rounded-full font-bold shadow", children: [trendValue, "K"] })), (pickType === 'demon' || pickType === 'goblin') && (_jsx("img", { src: pickType === 'demon' ? 'https://app.prizepicks.com/7534b2e82fa0ac08ec43.png' : 'https://app.prizepicks.com/e00b98475351cdfd1c38.png', alt: pickType, className: "w-7 h-7 ml-2" }))] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "font-bold text-lg text-primary-600", children: playerName }), gameInfo && (_jsxs("div", { className: "text-xs text-gray-400", children: ["vs ", gameInfo.opponent, " ", gameInfo.day, " ", gameInfo.time] }))] }), _jsxs("div", { className: "flex items-center justify-center gap-2 mt-2", children: [_jsx("span", { className: "text-xl font-bold text-white", children: line }), _jsx("span", { className: "text-gray-400 text-sm", children: statType })] }), _jsxs("div", { className: "flex items-center justify-between space-x-2 mt-2", children: [_jsxs(GlowButton, { onClick: () => onSelect?.('over'), className: `flex-1 ${pickType === 'demon' ? 'bg-red-900/30 hover:bg-red-800/40 text-red-100' : pickType === 'goblin' ? 'bg-green-900/30 hover:bg-green-800/40 text-green-100' : ''}`, children: ["Over ", _jsx("span", { className: "ml-1 text-green-400", children: overOdds > 0 ? `+${overOdds}` : overOdds }), pickType === 'demon' && _jsx("span", { className: "text-xs opacity-75 ml-1", children: "1.25x" }), pickType === 'goblin' && _jsx("span", { className: "text-xs opacity-75 ml-1", children: "0.85x" })] }), _jsxs(GlowButton, { onClick: () => onSelect?.('under'), className: "flex-1", children: ["Under ", _jsx("span", { className: "ml-1 text-blue-400", children: underOdds > 0 ? `+${underOdds}` : underOdds })] })] }), _jsxs("div", { className: "flex flex-wrap gap-2 mt-2", children: [aiBoost !== undefined && badge('AI Boost', `${aiBoost}%`, 'text-yellow-400'), patternStrength !== undefined && badge('Pattern', `${patternStrength}%`, 'text-purple-400'), bonusPercent !== undefined && badge('Bonus', `${bonusPercent}%`, 'text-green-400'), enhancementPercent !== undefined && badge('Enhance', `${enhancementPercent}%`, 'text-blue-400'), sentiment && badge('Sentiment', sentiment, 'text-pink-400')] }), _jsx("button", { onClick: onViewDetails, className: "absolute top-2 right-2 text-xs text-gray-400 hover:text-primary-500 underline focus:outline-none", "aria-label": "Show prediction explanation", children: "Why this prediction?" })] }));
export default EnhancedPropCard;
