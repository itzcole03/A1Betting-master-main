import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React, { useState } from 'react';
import { motion } from 'framer-motion';
const BankrollManager = ({ userId: _userId }) => {
    const [bankroll, setBankroll] = useState(1000);
    const [riskLevel, setRiskLevel] = useState(0.02); // 2% default risk per bet
    const recommendedStake = bankroll * riskLevel;
    const maxDailyRisk = bankroll * 0.1; // 10% max daily risk
    const stopLoss = bankroll * 0.05; // 5% stop loss
    return (_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-semibold mb-4", children: "Bankroll Management" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(motion.div, { animate: { opacity: 1, y: 0 }, className: "bg-white rounded-lg p-4 shadow-sm", initial: { opacity: 0, y: 20 }, children: [_jsxs("div", { className: "mb-4", children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Current Bankroll ($)" }), _jsx("input", { className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", type: "number", value: bankroll, onChange: e => setBankroll(Math.max(0, Number(e.target.value))) })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Risk Level (% per bet)" }), _jsx("input", { className: "w-full", max: 0.1, min: 0.01, step: 0.01, type: "range", value: riskLevel, onChange: e => setRiskLevel(Number(e.target.value)) }), _jsxs("div", { className: "text-sm text-gray-600 mt-1", children: [(riskLevel * 100).toFixed(1), "% per bet"] })] })] }), _jsxs(motion.div, { animate: { opacity: 1, y: 0 }, className: "bg-white rounded-lg p-4 shadow-sm", initial: { opacity: 0, y: 20 }, transition: { delay: 0.1 }, children: [_jsx("h4", { className: "font-medium mb-4", children: "Recommendations" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("div", { className: "text-sm text-gray-600", children: "Recommended Stake" }), _jsxs("div", { className: "text-xl font-bold text-blue-600", children: ["$", recommendedStake.toFixed(2)] })] }), _jsxs("div", { children: [_jsx("div", { className: "text-sm text-gray-600", children: "Max Daily Risk" }), _jsxs("div", { className: "text-xl font-bold text-blue-600", children: ["$", maxDailyRisk.toFixed(2)] })] }), _jsxs("div", { children: [_jsx("div", { className: "text-sm text-gray-600", children: "Stop Loss" }), _jsxs("div", { className: "text-xl font-bold text-red-600", children: ["$", stopLoss.toFixed(2)] })] })] })] })] })] }));
};
export default React.memo(BankrollManager);
