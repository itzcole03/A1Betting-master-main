import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar, } from 'recharts';
const TimeSeriesInsights = ({ forecast, confidence, metrics, seasonality, changePoints, anomalies, }) => {
    // Prepare data for visualization
    const forecastData = forecast.map((value, index) => ({
        x: index,
        value,
        lower: confidence.lower[index],
        upper: confidence.upper[index],
    }));
    const seasonalityData = seasonality.trend.map((trend, index) => ({
        x: index,
        trend,
        seasonal: seasonality.seasonal[index],
        residual: seasonality.residual[index],
    }));
    const anomalyData = anomalies.map(anomaly => ({
        x: anomaly.index,
        value: anomaly.value,
        score: anomaly.score,
    }));
    return (_jsxs("div", { className: "space-y-8", children: [_jsxs("section", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Time Series Metrics" }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4", children: [_jsxs("div", { className: "p-4 bg-gray-50 rounded-lg", children: [_jsx("h3", { className: "text-sm font-medium text-gray-500", children: "Mean Squared Error" }), _jsx("p", { className: "text-2xl font-bold text-gray-900", children: metrics.mse.toFixed(4) })] }), _jsxs("div", { className: "p-4 bg-gray-50 rounded-lg", children: [_jsx("h3", { className: "text-sm font-medium text-gray-500", children: "Mean Absolute Error" }), _jsx("p", { className: "text-2xl font-bold text-gray-900", children: metrics.mae.toFixed(4) })] }), _jsxs("div", { className: "p-4 bg-gray-50 rounded-lg", children: [_jsx("h3", { className: "text-sm font-medium text-gray-500", children: "Mean Absolute Percentage Error" }), _jsxs("p", { className: "text-2xl font-bold text-gray-900", children: [metrics.mape.toFixed(2), "%"] })] }), _jsxs("div", { className: "p-4 bg-gray-50 rounded-lg", children: [_jsx("h3", { className: "text-sm font-medium text-gray-500", children: "R-squared" }), _jsx("p", { className: "text-2xl font-bold text-gray-900", children: metrics.r2.toFixed(4) })] })] })] }), _jsxs("section", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Forecast" }), _jsx("div", { className: "h-96", children: _jsx(ResponsiveContainer, { height: "100%", width: "100%", children: _jsxs(LineChart, { data: forecastData, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "x" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Legend, {}), _jsx(Line, { dataKey: "value", dot: false, name: "Forecast", stroke: "#3B82F6", strokeWidth: 2, type: "monotone" }), _jsx(Line, { dataKey: "lower", dot: false, name: "Lower Bound", stroke: "#93C5FD", strokeDasharray: "3 3", type: "monotone" }), _jsx(Line, { dataKey: "upper", dot: false, name: "Upper Bound", stroke: "#93C5FD", strokeDasharray: "3 3", type: "monotone" })] }) }) })] }), _jsxs("section", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Seasonality Decomposition" }), _jsxs("div", { className: "grid grid-cols-1 gap-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Trend" }), _jsx(ResponsiveContainer, { height: 200, width: "100%", children: _jsxs(LineChart, { data: seasonalityData, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "x" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, { dataKey: "trend", dot: false, stroke: "#3B82F6", type: "monotone" })] }) })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Seasonal Pattern" }), _jsx(ResponsiveContainer, { height: 200, width: "100%", children: _jsxs(LineChart, { data: seasonalityData, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "x" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, { dataKey: "seasonal", dot: false, stroke: "#10B981", type: "monotone" })] }) })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Residuals" }), _jsx(ResponsiveContainer, { height: 200, width: "100%", children: _jsxs(LineChart, { data: seasonalityData, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "x" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Line, { dataKey: "residual", dot: false, stroke: "#EF4444", type: "monotone" })] }) })] })] })] }), _jsxs("section", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Change Points" }), _jsx("div", { className: "space-y-4", children: changePoints.map((point, index) => (_jsxs("div", { className: "p-4 bg-gray-50 rounded-lg flex items-center justify-between", children: [_jsxs("div", { children: [_jsxs("h3", { className: "text-lg font-semibold", children: [point.type.charAt(0).toUpperCase() + point.type.slice(1), " Change"] }), _jsxs("p", { className: "text-sm text-gray-500", children: ["At time index: ", point.index] })] }), _jsx("div", { className: "text-right", children: _jsx("p", { className: "text-xl font-bold text-gray-900", children: point.value.toFixed(4) }) })] }, index))) })] }), _jsxs("section", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Anomaly Detection" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Anomaly Scores" }), _jsx(ResponsiveContainer, { height: 300, width: "100%", children: _jsxs(BarChart, { data: anomalyData, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "x" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Bar, { dataKey: "score", fill: "#3B82F6", name: "Anomaly Score" })] }) })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Anomaly Points" }), _jsx("div", { className: "space-y-2", children: anomalies.map((anomaly, index) => (_jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-50 rounded", children: [_jsxs("span", { className: "text-gray-600", children: ["Time Index: ", anomaly.index] }), _jsxs("div", { className: "text-right", children: [_jsxs("span", { className: "block font-mono", children: ["Value: ", anomaly.value.toFixed(4)] }), _jsxs("span", { className: "block text-sm text-gray-500", children: ["Score: ", anomaly.score.toFixed(4)] })] })] }, index))) })] })] })] })] }));
};
export default React.memo(TimeSeriesInsights);
