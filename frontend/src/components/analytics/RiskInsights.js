import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { BarChart, Bar, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter, } from 'recharts';
const RiskInsights = ({ riskMetrics, recommendations, simulation, }) => {
    return (_jsxs("div", { className: "space-y-8", children: [_jsxs("section", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Risk Metrics" }), _jsx("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4", children: Object.entries(riskMetrics).map(([metric, value]) => (_jsxs("div", { className: "p-4 bg-gray-50 rounded-lg", children: [_jsx("h3", { className: "text-sm font-medium text-gray-500 capitalize", children: metric.replace(/([A-Z])/g, ' $1').trim() }), _jsx("p", { className: "text-2xl font-bold text-gray-900", children: typeof value === 'number' ? value.toFixed(4) : value })] }, metric))) })] }), _jsxs("section", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Betting Recommendations" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Should Bet" }), _jsx("span", { className: `px-3 py-1 rounded-full text-white ${recommendations.shouldBet ? 'bg-green-500' : 'bg-red-500'}`, children: recommendations.shouldBet ? 'Yes' : 'No' })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Confidence" }), _jsxs("span", { className: "font-mono", children: [recommendations.confidence.toFixed(2), "%"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Max Stake" }), _jsxs("span", { className: "font-mono", children: ["$", recommendations.maxStake.toFixed(2)] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Expected Value" }), _jsxs("span", { className: `font-mono ${recommendations.expectedValue >= 0 ? 'text-green-600' : 'text-red-600'}`, children: ["$", recommendations.expectedValue.toFixed(2)] })] })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Confidence Distribution" }), _jsx(ResponsiveContainer, { height: 200, width: "100%", children: _jsxs(AreaChart, { data: [
                                                { x: 0, y: 0 },
                                                { x: recommendations.confidence / 100, y: 1 },
                                                { x: 1, y: 0 },
                                            ], children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "x", tickFormatter: value => `${(value * 100).toFixed(0)}%` }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Area, { dataKey: "y", fill: "#93C5FD", stroke: "#3B82F6", type: "monotone" })] }) })] })] })] }), _jsxs("section", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Simulation Results" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Risk Measures" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Value at Risk (95%)" }), _jsxs("span", { className: "font-mono", children: ["$", simulation.var.toFixed(2)] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Conditional VaR" }), _jsxs("span", { className: "font-mono", children: ["$", simulation.cvar.toFixed(2)] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Sharpe Ratio" }), _jsx("span", { className: "font-mono", children: simulation.sharpeRatio.toFixed(4) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Max Drawdown" }), _jsxs("span", { className: "font-mono", children: [(simulation.maxDrawdown * 100).toFixed(2), "%"] })] })] })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Return Distribution" }), _jsx(ResponsiveContainer, { height: 200, width: "100%", children: _jsxs(AreaChart, { data: simulation.distribution.map((value, index) => ({
                                                x: index,
                                                value,
                                            })), children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "x" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Area, { dataKey: "value", fill: "#93C5FD", stroke: "#3B82F6", type: "monotone" })] }) })] })] })] }), _jsxs("section", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Risk Visualization" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Risk-Return Profile" }), _jsx(ResponsiveContainer, { height: 200, width: "100%", children: _jsxs(ScatterChart, { children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "risk", domain: [0, 100], name: "Risk", unit: "%" }), _jsx(YAxis, { dataKey: "return", domain: [-100, 100], name: "Return", unit: "%" }), _jsx(Tooltip, { cursor: { strokeDasharray: '3 3' } }), _jsx(Scatter, { data: [
                                                        {
                                                            risk: simulation.var,
                                                            return: recommendations.expectedValue,
                                                        },
                                                    ], fill: "#3B82F6", name: "Risk-Return" })] }) })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Risk Decomposition" }), _jsx(ResponsiveContainer, { height: 200, width: "100%", children: _jsxs(BarChart, { data: Object.entries(riskMetrics).map(([metric, value]) => ({
                                                metric,
                                                value,
                                            })), children: [_jsx(CartesianGrid, { strokeDasharray: "3 3" }), _jsx(XAxis, { dataKey: "metric" }), _jsx(YAxis, {}), _jsx(Tooltip, {}), _jsx(Bar, { dataKey: "value", fill: "#3B82F6" })] }) })] })] })] })] }));
};
export default React.memo(RiskInsights);
