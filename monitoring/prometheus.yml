# Prometheus configuration for A1Betting backend monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: "a1betting-backend"
    environment: "${A1BETTING_ENVIRONMENT:-production}"

rule_files:
  - "alert_rules.yml"

scrape_configs:
  # Backend API metrics
  - job_name: "a1betting-api"
    static_configs:
      - targets: ["api:8000"]
    metrics_path: "/metrics"
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true
    params:
      format: ["prometheus"]

  # Model service metrics
  - job_name: "a1betting-models"
    static_configs:
      - targets: ["model-service:8001"]
    metrics_path: "/metrics"
    scrape_interval: 30s
    scrape_timeout: 10s

  # PostgreSQL metrics
  - job_name: "postgres"
    static_configs:
      - targets: ["postgres-exporter:9187"]
    scrape_interval: 30s

  # Redis metrics
  - job_name: "redis"
    static_configs:
      - targets: ["redis-exporter:9121"]
    scrape_interval: 30s

  # System metrics
  - job_name: "node-exporter"
    static_configs:
      - targets: ["node-exporter:9100"]
    scrape_interval: 30s

  # Container metrics
  - job_name: "cadvisor"
    static_configs:
      - targets: ["cadvisor:8080"]
    scrape_interval: 30s

  # Nginx metrics
  - job_name: "nginx"
    static_configs:
      - targets: ["nginx-exporter:9113"]
    scrape_interval: 30s

  # Custom application metrics
  - job_name: "a1betting-custom"
    static_configs:
      - targets: ["api:8000"]
    metrics_path: "/api/v2/metrics/prometheus"
    scrape_interval: 60s
    params:
      format: ["prometheus"]

  # Data pipeline health
  - job_name: "data-pipeline"
    http_sd_configs:
      - url: "http://api:8000/api/v2/data/sources"
        refresh_interval: 300s
    relabel_configs:
      - source_labels: [__meta_http_sd_name]
        target_label: data_source
      - source_labels: [__meta_http_sd_url]
        target_label: __metrics_path__
        replacement: "/health"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Recording rules for common queries
recording_rules:
  - name: a1betting.rules
    rules:
      # Request rate
      - record: a1betting:request_rate_5m
        expr: rate(http_requests_total[5m])

      # Error rate
      - record: a1betting:error_rate_5m
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m])

      # Response time percentiles
      - record: a1betting:response_time_p95_5m
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))

      - record: a1betting:response_time_p99_5m
        expr: histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m]))

      # Model prediction rates
      - record: a1betting:prediction_rate_5m
        expr: rate(model_predictions_total[5m])

      # Model accuracy (requires actual vs predicted tracking)
      - record: a1betting:model_accuracy_1h
        expr: avg_over_time(model_accuracy_ratio[1h])

      # Data pipeline success rate
      - record: a1betting:data_pipeline_success_rate_5m
        expr: rate(data_pipeline_requests_successful_total[5m]) / rate(data_pipeline_requests_total[5m])

      # Database connection pool utilization
      - record: a1betting:db_pool_utilization
        expr: db_connections_active / db_connections_max

      # Cache hit rate
      - record: a1betting:cache_hit_rate_5m
        expr: rate(cache_hits_total[5m]) / rate(cache_requests_total[5m])

# Federation configuration for multi-cluster setup
federation:
  - job_name: "federate"
    scrape_interval: 15s
    honor_labels: true
    metrics_path: "/federate"
    params:
      "match[]":
        - '{job=~"a1betting-.*"}'
        - '{__name__=~"up|a1betting:.*"}'
    static_configs:
      - targets:
          - "prometheus-region-us:9090"
          - "prometheus-region-eu:9090"
