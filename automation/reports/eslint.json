
> frontend@0.0.0 lint
> eslint . --format json

[{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\backend-dev.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\component_audit.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\component_audit.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\fix-react-imports.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\legacy\\dashboards\\Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\legacy\\prototype\\components\\dashboard\\Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\public\\sw.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\scripts\\analyze-component-features.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\setupTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\App.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\App.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\App_UserFriendly.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\LoginPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\LoginPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\LoginPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\TestComponent.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\DailyFantasyAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\DailyFantasyAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\DailyFantasyAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\ESPNAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\ESPNAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\ESPNAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\PrizePicksAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\PrizePicksAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\PrizePicksAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\SocialSentimentAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\SocialSentimentAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\SocialSentimentAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\SportsRadarAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\SportsRadarAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\SportsRadarAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\TheOddsAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\TheOddsAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\TheOddsAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\__tests__\\SocialSentimentAdapter.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\__tests__\\SocialSentimentAdapter.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\__tests__\\SocialSentimentAdapter.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\poeToApiAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\poeToApiAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\poeToApiAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\poe\\PoeToApiAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\poe\\PoeToApiAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\poe\\PoeToApiAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\poe\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\poe\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\poe\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\prizepicks.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\prizepicks.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\adapters\\prizepicks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\FeatureEngineeringService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\FeatureEngineeringService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\FeatureEngineeringService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\FeatureRegistry.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\FeatureRegistry.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\FeatureRegistry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\FeatureSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\FeatureSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\FeatureSelector.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\UnifiedFeatureService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\UnifiedFeatureService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analytics\\UnifiedFeatureService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analyzers\\ProjectionAnalyzer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analyzers\\ProjectionAnalyzer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analyzers\\ProjectionAnalyzer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analyzers\\SentimentEnhancedAnalyzer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analyzers\\SentimentEnhancedAnalyzer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\analyzers\\SentimentEnhancedAnalyzer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\PrizePicksAPI.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\PrizePicksAPI.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\PrizePicksAPI.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\dailyfantasy\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\dailyfantasy\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\dailyfantasy\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\prediction.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\prediction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\prediction.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\predictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\predictions\\generate.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\predictions\\generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\predictions\\generate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\routes\\modelPerformance.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\routes\\modelPerformance.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\api\\routes\\modelPerformance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\builder.config.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\builder.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\builder.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\cleanup-duplicates.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Accordion.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Accordion.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Accordion.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Alert.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Alert.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Alert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AllFeatures.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AllFeatures.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AllFeatures.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Analytics.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Analytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Analytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AnalyticsPage.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AnalyticsPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AnalyticsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ApiDebug.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'runTests'. Either include it or remove the dependency array.","line":86,"column":6,"nodeType":"ArrayExpression","endLine":86,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [runTests]","fix":{"range":[2325,2327],"text":"[runTests]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * API Debug Component\n * Simple component to test API connections and display detailed error information\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { backendApi } from \"../services/backendApi\";\n\ninterface ApiTestResult {\n  endpoint: string;\n  status: \"success\" | \"error\" | \"loading\";\n  data?: any;\n  error?: string;\n  responseTime?: number;\n}\n\nexport const ApiDebug: React.FC = () => {\n  const [results, setResults] = useState<ApiTestResult[]>([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState<any>(null);\n\n  const testEndpoints = [\n    { name: \"Health Check\", fn: () => backendApi.getHealth() },\n    {\n      name: \"Betting Opportunities\",\n      fn: () => backendApi.getBettingOpportunities(),\n    },\n    { name: \"Advanced Analytics\", fn: () => backendApi.getAdvancedAnalytics() },\n    { name: \"Model Performance\", fn: () => backendApi.getModelPerformance() },\n  ];\n\n  const runTests = async () => {\n    setIsRunning(true);\n    setResults([]);\n\n    // First, get connection status\n    try {\n      const status = await backendApi.getConnectionStatus();\n      setConnectionStatus(status);\n      console.log(\"[Debug] Connection status:\", status);\n    } catch (error) {\n      console.error(\"[Debug] Failed to get connection status:\", error);\n    }\n\n    for (const test of testEndpoints) {\n      const startTime = Date.now();\n      try {\n        setResults((prev) => [\n          ...prev,\n          { endpoint: test.name, status: \"loading\" },\n        ]);\n\n        const data = await test.fn();\n        const responseTime = Date.now() - startTime;\n\n        setResults((prev) =>\n          prev.map((r) =>\n            r.endpoint === test.name\n              ? { ...r, status: \"success\", data, responseTime }\n              : r,\n          ),\n        );\n      } catch (error: any) {\n        const responseTime = Date.now() - startTime;\n\n        setResults((prev) =>\n          prev.map((r) =>\n            r.endpoint === test.name\n              ? {\n                  ...r,\n                  status: \"error\",\n                  error: error.message || \"Unknown error\",\n                  responseTime,\n                }\n              : r,\n          ),\n        );\n      }\n    }\n\n    setIsRunning(false);\n  };\n\n  useEffect(() => {\n    runTests();\n  }, []);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"success\":\n        return \"text-green-400\";\n      case \"error\":\n        return \"text-red-400\";\n      case \"loading\":\n        return \"text-yellow-400\";\n      default:\n        return \"text-gray-400\";\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"success\":\n        return \"✅\";\n      case \"error\":\n        return \"❌\";\n      case \"loading\":\n        return \"⏳\";\n      default:\n        return \"❓\";\n    }\n  };\n\n  return (\n    <div className=\"w-full h-full overflow-auto bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"max-w-4xl mx-auto p-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-white\">\n            API Connection Debug\n          </h2>\n          <button\n            onClick={runTests}\n            disabled={isRunning}\n            className=\"px-4 py-2 bg-cyan-600 hover:bg-cyan-700 text-white rounded-lg disabled:opacity-50 transition-colors\"\n          >\n            {isRunning ? \"Testing...\" : \"Run Tests\"}\n          </button>\n        </div>\n\n        <div className=\"space-y-4\">\n          {results.map((result, index) => (\n            <div\n              key={index}\n              className=\"bg-black/30 backdrop-blur-lg rounded-lg p-4 border border-cyan-500/20\"\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <div className=\"flex items-center space-x-2\">\n                  <span>{getStatusIcon(result.status)}</span>\n                  <h3 className=\"font-semibold text-white\">\n                    {result.endpoint}\n                  </h3>\n                  <span\n                    className={`text-sm ${result.status === \"success\" ? \"text-green-400\" : result.status === \"error\" ? \"text-red-400\" : \"text-yellow-400\"}`}\n                  >\n                    {result.status}\n                  </span>\n                </div>\n                {result.responseTime && (\n                  <span className=\"text-sm text-gray-400\">\n                    {result.responseTime}ms\n                  </span>\n                )}\n              </div>\n\n              {result.error && (\n                <div className=\"bg-red-500/10 border border-red-500/30 rounded p-3 mb-2\">\n                  <p className=\"text-red-400 text-sm font-medium\">Error:</p>\n                  <p className=\"text-red-300 text-sm\">{result.error}</p>\n                </div>\n              )}\n\n              {result.data && (\n                <div className=\"bg-gray-800/30 border border-gray-600/30 rounded p-3\">\n                  <p className=\"text-gray-300 text-sm font-medium mb-2\">\n                    Response:\n                  </p>\n                  <pre className=\"text-xs text-gray-200 overflow-auto max-h-40 bg-black/20 p-2 rounded\">\n                    {JSON.stringify(result.data, null, 2)}\n                  </pre>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6 p-4 bg-cyan-500/10 border border-cyan-500/30 rounded-lg backdrop-blur-sm\">\n          <h3 className=\"font-semibold text-cyan-400 mb-2\">\n            Debug Information\n          </h3>\n          <div className=\"text-sm text-gray-300 space-y-1\">\n            <p>\n              <strong>Environment:</strong>{\" \"}\n              {import.meta.env.DEV ? \"Development\" : \"Production\"}\n            </p>\n            <p>\n              <strong>API Base URL:</strong>{\" \"}\n              {import.meta.env.VITE_API_URL || \"http://localhost:8000\"}\n            </p>\n            <p>\n              <strong>WebSocket URL:</strong>{\" \"}\n              {import.meta.env.VITE_WEBSOCKET_URL || \"ws://localhost:8000\"}\n            </p>\n            <p>\n              <strong>Current Time:</strong> {new Date().toISOString()}\n            </p>\n            <p>\n              <strong>Cloud Environment:</strong>{\" \"}\n              {window.location.hostname.includes(\"fly.dev\")\n                ? \"Yes (Mock Service Active)\"\n                : \"No\"}\n            </p>\n          </div>\n        </div>\n\n        {connectionStatus && (\n          <div className=\"mt-4 p-4 bg-purple-500/10 border border-purple-500/30 rounded-lg backdrop-blur-sm\">\n            <h3 className=\"font-semibold text-purple-400 mb-2\">\n              Connection Status\n            </h3>\n            <div className=\"text-sm space-y-2\">\n              <div className=\"flex items-center space-x-2\">\n                <span>{connectionStatus.isConnected ? \"✅\" : \"❌\"}</span>\n                <span className=\"text-gray-300\">\n                  <strong>Backend Connection:</strong>{\" \"}\n                  {connectionStatus.isConnected ? \"Connected\" : \"Disconnected\"}\n                </span>\n              </div>\n              <p className=\"text-gray-300\">\n                <strong>Base URL:</strong> {connectionStatus.baseURL}\n              </p>\n              {connectionStatus.error && (\n                <p className=\"text-red-400\">\n                  <strong>Error:</strong> {connectionStatus.error}\n                </p>\n              )}\n\n              <div className=\"mt-2\">\n                <p className=\"font-medium mb-1 text-gray-300\">\n                  Endpoint Status:\n                </p>\n                <div className=\"grid grid-cols-2 gap-1 text-xs\">\n                  {Object.entries(connectionStatus.endpoints).map(\n                    ([endpoint, isWorking]) => (\n                      <div\n                        key={endpoint}\n                        className=\"flex items-center space-x-1\"\n                      >\n                        <span>{isWorking ? \"✅\" : \"❌\"}</span>\n                        <span className=\"text-gray-400\">{endpoint}</span>\n                      </div>\n                    ),\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ApiDebug;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ApiErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AppInitializer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AppInitializer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AppInitializer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AppShell.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AppShell.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AppShell.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Arbitrage.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Arbitrage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Arbitrage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitrageDetector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitrageDetector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitrageDetector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitrageOpportunities.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitrageOpportunities.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitrageOpportunities.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitragePage.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitragePage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitragePage.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitragePage.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitragePage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ArbitragePage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AuthLayout.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AuthLayout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AuthLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AuthProvider.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AuthProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\AuthProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Avatar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Avatar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Avatar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BackendConnectionTest.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Badge.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Badge.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BankrollManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BankrollManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BankrollManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BankrollPage.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BankrollPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BankrollPage.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BankrollPage.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BankrollPage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BankrollPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BetBuilder.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BetBuilder.js","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","message":"Definition for rule '@typescript-eslint/no-unused-vars' was not found.","line":4,"column":1,"endLine":4,"endColumn":62,"severity":2,"nodeType":null},{"ruleId":"@typescript-eslint/no-unused-vars","message":"Definition for rule '@typescript-eslint/no-unused-vars' was not found.","line":9,"column":1,"endLine":9,"endColumn":62,"severity":2,"nodeType":null}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport useStore from \"../store/useStore\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { EntryStatus, LineupType } from \"../types/core\";\nimport { getErrorMessage } from \"../utils/errorUtils\";\nimport { isTeamDiversified, validateEntry } from \"../utils/businessRules\";\nimport { oddsToDecimal, calculatePotentialPayout, calculateWinProbability, } from \"../utils/odds\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst getSentimentBadge = (sentiment) => {\n    if (!sentiment)\n        return null;\n    const color = sentiment.direction === \"up\"\n        ? \"bg-green-100 text-green-700\"\n        : sentiment.direction === \"down\"\n            ? \"bg-red-100 text-red-700\"\n            : \"bg-gray-200 text-gray-700\";\n    const icon = sentiment.direction === \"up\"\n        ? \"▲\"\n        : sentiment.direction === \"down\"\n            ? \"▼\"\n            : \"−\";\n    return (_jsxs(\"span\", { className: `ml-2 px-2 py-1 rounded-full text-xs ${color} cursor-help`, title: sentiment.tooltip || \"\", children: [icon, \" \", sentiment.score] }));\n};\n// Map confidence to emoji (example logic)\nfunction getPropEmoji(confidence) {\n    if (confidence >= 80)\n        return \"💰\";\n    if (confidence <= 35)\n        return \"👹\";\n    return \"⇄\";\n}\nexport const BetBuilder = () => {\n    // Use only selectedProps for betslip UI\n    const selectedProps = useStore((s) => s.selectedProps);\n    const props = useStore((s) => s.props);\n    const togglePropSelection = useStore((s) => s.togglePropSelection);\n    const addEntry = useStore((s) => s.addEntry);\n    // Create helper functions for prop selection\n    const clearSelectedProps = () => {\n        selectedProps.forEach((propId) => togglePropSelection(propId));\n    };\n    const [entry, setEntry] = useState(10);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(null);\n    // Get actual prop objects from selectedProps IDs\n    const selectedPropObjects = selectedProps\n        .map((propId) => props.find((p) => p.id === propId))\n        .filter(Boolean);\n    // Odds and payout calculation\n    const oddsArr = selectedPropObjects.map((p) => p.odds?.toString() || \"2.0\");\n    const payout = calculatePotentialPayout(entry, oddsArr);\n    const winProb = calculateWinProbability(selectedPropObjects.map((p) => p.confidence || 50));\n    // Team diversification check\n    const diversified = isTeamDiversified(selectedPropObjects);\n    // Combined odds (decimal)\n    const combinedDecimal = oddsArr.reduce((acc, o) => acc * oddsToDecimal(o), 1);\n    // Handle prop selection (no-op, as only selectedProps are shown)\n    // In a real app, you would source PlayerProp[] from a dedicated prop list, not players[]\n    // Submit betslip\n    const handleSubmit = async () => {\n        setError(null);\n        setSuccess(null);\n        if (selectedPropObjects.length < 2) {\n            setError(\"You must select at least 2 picks.\");\n            return;\n        }\n        if (!diversified) {\n            setError(\"Too many props from the same team.\");\n            return;\n        }\n        const entryObj = {\n            id: `entry-${Date.now()}`,\n            userId: \"user-1\",\n            status: EntryStatus.PENDING,\n            type: LineupType.PARLAY,\n            props: selectedProps,\n            stake: entry,\n            potentialWinnings: payout,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n        };\n        const validationErrors = validateEntry(entryObj);\n        if (validationErrors.length) {\n            setError(validationErrors.join(\" \"));\n            return;\n        }\n        setLoading(true);\n        try {\n            const res = await fetch(\"/api/entries/submit\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(entryObj),\n            });\n            if (!res.ok) {\n                const err = await res.json();\n                setError(getErrorMessage(err));\n                setLoading(false);\n                return;\n            }\n            addEntry(entryObj);\n            setSuccess(\"Entry submitted successfully!\");\n            clearSelectedProps();\n        }\n        catch (err) {\n            setError(getErrorMessage(err));\n        }\n        finally {\n            setLoading(false);\n        }\n    };\n    return (_jsxs(\"div\", { className: \"bg-white rounded-lg shadow overflow-hidden\", children: [_jsx(\"div\", { className: \"px-4 py-3 border-b border-gray-200\", children: _jsx(\"h2\", { className: \"text-lg font-semibold text-gray-800\", children: \"Bet Builder\" }) }), _jsxs(\"div\", { className: \"p-4 bg-gray-50 border-b border-gray-200 flex gap-4 items-center\", children: [_jsxs(\"div\", { children: [_jsx(\"label\", { className: \"block text-sm font-medium text-gray-700\", children: \"Entry\" }), _jsxs(\"div\", { className: \"premium-input-container w-24\", children: [_jsx(\"span\", { className: \"currency-symbol\", children: \"$\" }), _jsx(\"input\", { className: \"premium-input text-gray-900\", max: 1000, min: 1, type: \"number\", value: entry, onChange: (e) => setEntry(Number(e.target.value)) })] })] }), _jsxs(\"div\", { children: [_jsx(\"div\", { className: \"text-sm text-gray-600 font-medium\", children: \"Payout\" }), _jsxs(\"div\", { className: \"text-xl font-bold text-green-600\", children: [\"$\", payout.toFixed(2)] })] }), _jsxs(\"div\", { children: [_jsx(\"div\", { className: \"text-sm text-gray-600 font-medium\", children: \"Win Prob\" }), _jsxs(\"div\", { className: \"text-xl font-bold text-blue-600\", children: [winProb.toFixed(1), \"%\"] })] }), _jsxs(\"div\", { children: [_jsx(\"div\", { className: \"text-sm text-gray-600 font-medium\", children: \"Combined Odds\" }), _jsx(\"div\", { className: \"text-xl font-bold text-purple-600\", children: combinedDecimal.toFixed(2) })] })] }), selectedPropObjects.length > 0 && (_jsxs(\"div\", { className: \"p-4 border-t border-gray-200\", children: [_jsx(\"h3\", { className: \"text-sm font-medium text-gray-700 mb-3\", children: \"Your Picks\" }), _jsx(\"div\", { className: \"space-y-2\", children: selectedPropObjects.map((leg, idx) => (_jsxs(\"div\", { className: \"flex justify-between items-center p-3 rounded-lg glass\", children: [_jsxs(\"div\", { children: [_jsxs(\"span\", { className: \"font-bold text-gray-900\", children: [leg.player?.name || \"Unknown Player\", \" \", leg.type || \"Unknown Type\", \" \", leg.line || \"N/A\"] }), _jsx(\"span\", { className: \"ml-2 text-2xl\", children: getPropEmoji(leg.confidence || 50) })] }), _jsx(\"div\", { className: \"text-right\", children: _jsxs(\"span\", { className: \"font-bold text-blue-600\", children: [leg.confidence || 50, \"%\"] }) })] }, idx))) })] })), error && (_jsx(\"div\", { className: \"p-4 text-red-600 text-sm font-medium\", children: error })), success && (_jsx(\"div\", { className: \"p-4 text-green-600 text-sm font-medium\", children: success })), _jsx(\"div\", { className: \"p-4 border-t flex justify-end\", children: _jsx(\"button\", { className: \"modern-button bg-primary-500 text-white px-8 py-3 rounded-xl font-bold text-lg disabled:opacity-50 disabled:cursor-not-allowed\", disabled: loading || selectedPropObjects.length < 2, onClick: handleSubmit, children: loading ? (_jsx(\"span\", { className: \"loading-spinner-premium\" })) : (\"Submit Entry\") }) })] }));\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BetBuilder.tsx","messages":[{"ruleId":null,"message":"Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-unused-vars').","line":3,"column":1,"severity":1,"nodeType":null,"fix":{"range":[83,144],"text":" "}},{"ruleId":null,"message":"Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-unused-vars').","line":13,"column":1,"severity":1,"nodeType":null,"fix":{"range":[450,511],"text":" "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"import React, { useState } from \"react\";\nimport useStore from \"../store/useStore\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { EntryStatus, LineupType, PlayerProp } from \"../types/core\";\nimport { getErrorMessage } from \"../utils/errorUtils\";\nimport { isTeamDiversified, validateEntry } from \"../utils/businessRules\";\nimport {\n  oddsToDecimal,\n  calculatePotentialPayout,\n  calculateWinProbability,\n} from \"../utils/odds\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst getSentimentBadge = (sentiment?: {\n  score: number;\n  direction: \"up\" | \"down\" | \"neutral\";\n  tooltip?: string;\n}) => {\n  if (!sentiment) return null;\n  const color =\n    sentiment.direction === \"up\"\n      ? \"bg-green-100 text-green-700\"\n      : sentiment.direction === \"down\"\n        ? \"bg-red-100 text-red-700\"\n        : \"bg-gray-200 text-gray-700\";\n  const icon =\n    sentiment.direction === \"up\"\n      ? \"▲\"\n      : sentiment.direction === \"down\"\n        ? \"▼\"\n        : \"−\";\n  return (\n    <span\n      className={`ml-2 px-2 py-1 rounded-full text-xs ${color} cursor-help`}\n      title={sentiment.tooltip || \"\"}\n    >\n      {icon} {sentiment.score}\n    </span>\n  );\n};\n\n// Map confidence to emoji (example logic)\nfunction getPropEmoji(confidence: number): string {\n  if (confidence >= 80) return \"💰\";\n  if (confidence <= 35) return \"👹\";\n  return \"⇄\";\n}\n\nexport const BetBuilder: React.FC = () => {\n  // Use only selectedProps for betslip UI\n  const selectedProps = useStore((s) => s.selectedProps);\n  const props = useStore((s) => s.props);\n  const togglePropSelection = useStore((s) => s.togglePropSelection);\n  const addEntry = useStore((s) => s.addEntry);\n\n  // Create helper functions for prop selection\n  const clearSelectedProps = () => {\n    selectedProps.forEach((propId) => togglePropSelection(propId));\n  };\n  const [entry, setEntry] = useState(10);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  // Get actual prop objects from selectedProps IDs\n  const selectedPropObjects = selectedProps\n    .map((propId) => props.find((p) => p.id === propId))\n    .filter(Boolean) as PlayerProp[];\n\n  // Odds and payout calculation\n  const oddsArr = selectedPropObjects.map((p) => p.odds?.toString() || \"2.0\");\n  const payout = calculatePotentialPayout(entry, oddsArr);\n  const winProb = calculateWinProbability(\n    selectedPropObjects.map((p) => p.confidence || 50),\n  );\n\n  // Team diversification check\n  const diversified = isTeamDiversified(selectedPropObjects);\n\n  // Combined odds (decimal)\n  const combinedDecimal = oddsArr.reduce((acc, o) => acc * oddsToDecimal(o), 1);\n\n  // Handle prop selection (no-op, as only selectedProps are shown)\n  // In a real app, you would source PlayerProp[] from a dedicated prop list, not players[]\n\n  // Submit betslip\n  const handleSubmit = async () => {\n    setError(null);\n    setSuccess(null);\n    if (selectedPropObjects.length < 2) {\n      setError(\"You must select at least 2 picks.\");\n      return;\n    }\n    if (!diversified) {\n      setError(\"Too many props from the same team.\");\n      return;\n    }\n    const entryObj = {\n      id: `entry-${Date.now()}`,\n      userId: \"user-1\",\n      status: EntryStatus.PENDING,\n      type: LineupType.PARLAY,\n      props: selectedProps,\n      stake: entry,\n      potentialWinnings: payout,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    };\n    const validationErrors = validateEntry(entryObj);\n    if (validationErrors.length) {\n      setError(validationErrors.join(\" \"));\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch(\"/api/entries/submit\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(entryObj),\n      });\n      if (!res.ok) {\n        const err = await res.json();\n        setError(getErrorMessage(err));\n        setLoading(false);\n        return;\n      }\n      addEntry(entryObj);\n      setSuccess(\"Entry submitted successfully!\");\n      clearSelectedProps();\n    } catch (err) {\n      setError(getErrorMessage(err));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n      <div className=\"px-4 py-3 border-b border-gray-200\">\n        <h2 className=\"text-lg font-semibold text-gray-800\">Bet Builder</h2>\n      </div>\n      <div className=\"p-4 bg-gray-50 border-b border-gray-200 flex gap-4 items-center\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Entry\n          </label>\n          <div className=\"premium-input-container w-24\">\n            <span className=\"currency-symbol\">$</span>\n            <input\n              className=\"premium-input text-gray-900\"\n              max={1000}\n              min={1}\n              type=\"number\"\n              value={entry}\n              onChange={(e) => setEntry(Number(e.target.value))}\n            />\n          </div>\n        </div>\n        <div>\n          <div className=\"text-sm text-gray-600 font-medium\">Payout</div>\n          <div className=\"text-xl font-bold text-green-600\">\n            ${payout.toFixed(2)}\n          </div>\n        </div>\n        <div>\n          <div className=\"text-sm text-gray-600 font-medium\">Win Prob</div>\n          <div className=\"text-xl font-bold text-blue-600\">\n            {winProb.toFixed(1)}%\n          </div>\n        </div>\n        <div>\n          <div className=\"text-sm text-gray-600 font-medium\">Combined Odds</div>\n          <div className=\"text-xl font-bold text-purple-600\">\n            {combinedDecimal.toFixed(2)}\n          </div>\n        </div>\n      </div>\n      {/* In a real app, you would render available PlayerProp[] here for selection */}\n      {selectedPropObjects.length > 0 && (\n        <div className=\"p-4 border-t border-gray-200\">\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Your Picks</h3>\n          <div className=\"space-y-2\">\n            {selectedPropObjects.map((leg, idx) => (\n              <div\n                key={idx}\n                className=\"flex justify-between items-center p-3 rounded-lg glass\"\n              >\n                <div>\n                  <span className=\"font-bold text-gray-900\">\n                    {leg.player?.name || \"Unknown Player\"}{\" \"}\n                    {leg.type || \"Unknown Type\"} {leg.line || \"N/A\"}\n                  </span>\n                  <span className=\"ml-2 text-2xl\">\n                    {getPropEmoji(leg.confidence || 50)}\n                  </span>\n                  {/* Add ESPN/news/sentiment if available on PlayerProp in the future */}\n                </div>\n                <div className=\"text-right\">\n                  <span className=\"font-bold text-blue-600\">\n                    {leg.confidence || 50}%\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {error && (\n        <div className=\"p-4 text-red-600 text-sm font-medium\">{error}</div>\n      )}\n      {success && (\n        <div className=\"p-4 text-green-600 text-sm font-medium\">{success}</div>\n      )}\n      <div className=\"p-4 border-t flex justify-end\">\n        <button\n          className=\"modern-button bg-primary-500 text-white px-8 py-3 rounded-xl font-bold text-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n          disabled={loading || selectedPropObjects.length < 2}\n          onClick={handleSubmit}\n        >\n          {loading ? (\n            <span className=\"loading-spinner-premium\"></span>\n          ) : (\n            \"Submit Entry\"\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BettingDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BettingDashboard.js","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","message":"Definition for rule '@typescript-eslint/no-unused-vars' was not found.","line":2,"column":1,"endLine":2,"endColumn":62,"severity":2,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// TODO: Implement BettingDashboard component\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst WS_ENDPOINT = import.meta.env.VITE_WS_ENDPOINT || 'wss://ws.your-production-domain.com';\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BettingDashboard.tsx","messages":[{"ruleId":null,"message":"Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-unused-vars').","line":2,"column":1,"severity":1,"nodeType":null,"fix":{"range":[46,107],"text":" "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"// TODO: Implement BettingDashboard component\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst WS_ENDPOINT = import.meta.env.VITE_WS_ENDPOINT || 'wss://ws.your-production-domain.com';\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BettingOpportunities.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BettingOpportunities.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BettingOpportunities.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BettingStats.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BettingStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BettingStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BookmakerAnalysis.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BookmakerAnalysis.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\BookmakerAnalysis.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Breadcrumb.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Breadcrumb.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Breadcrumb.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Button.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Button.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Card.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Card.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ConfidenceIndicator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ConfidenceIndicator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ConfidenceIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ConnectionStatus.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ConnectionStatus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ConnectionStatus.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ConnectionTest.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'testConnection'. Either include it or remove the dependency array.","line":71,"column":6,"nodeType":"ArrayExpression","endLine":71,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [testConnection]","fix":{"range":[2136,2138],"text":"[testConnection]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\n\nexport const ConnectionTest: React.FC = () => {\n  const [status, setStatus] = useState<string>(\"Testing...\");\n  const [details, setDetails] = useState<any>({});\n\n  const isCloudEnvironment =\n    window.location.protocol === \"https:\" &&\n    window.location.hostname.includes(\"fly.dev\");\n\n  const testConnection = async () => {\n    const apiUrl = import.meta.env.VITE_API_URL || \"http://192.168.1.125:8000\";\n\n    if (isCloudEnvironment) {\n      setStatus(\"✅ Cloud Preview Mode Active\");\n      setDetails({\n        mode: \"cloud_preview\",\n        apiUrl: \"Mock Service (HTTPS Cloud Environment)\",\n        mock_accuracy: \"96.5%\",\n        note: \"Using realistic demo data in cloud preview\",\n        timestamp: new Date().toISOString(),\n      });\n      return;\n    }\n\n    try {\n      console.log(\"Testing connection to:\", apiUrl);\n      setStatus(\"Connecting...\");\n      setDetails({ apiUrl, timestamp: new Date().toISOString() });\n\n      const response = await fetch(`${apiUrl}/health`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setStatus(\"✅ Connected to local backend!\");\n        setDetails({\n          apiUrl,\n          status: response.status,\n          data: data,\n          timestamp: new Date().toISOString(),\n        });\n      } else {\n        setStatus(`❌ HTTP ${response.status}: ${response.statusText}`);\n        setDetails({\n          apiUrl,\n          status: response.status,\n          statusText: response.statusText,\n          timestamp: new Date().toISOString(),\n        });\n      }\n    } catch (error: any) {\n      setStatus(`❌ Connection failed: ${error.message}`);\n      setDetails({\n        apiUrl,\n        error: error.message,\n        timestamp: new Date().toISOString(),\n      });\n      console.error(\"Connection test failed:\", error);\n    }\n  };\n\n  useEffect(() => {\n    testConnection();\n    const interval = setInterval(testConnection, 10000); // Test every 10 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"fixed top-4 right-4 bg-black/90 text-white p-4 rounded-lg border border-cyan-500/30 backdrop-blur-lg z-50 max-w-md\">\n      <h3 className=\"font-bold mb-2\">🔗 Backend Connection</h3>\n      <div className=\"text-sm mb-2\">{status}</div>\n      <div className=\"text-xs text-gray-300\">\n        <div>API: {details.apiUrl}</div>\n        {details.mode === \"cloud_preview\" && (\n          <>\n            <div className=\"text-blue-400\">\n              🎭 Demo Mode: {details.mock_accuracy} Accuracy\n            </div>\n            <div className=\"text-yellow-400\">💡 {details.note}</div>\n          </>\n        )}\n        {details.data && <div>✅ Backend Status: {details.data.status}</div>}\n        {details.error && (\n          <div className=\"text-red-400\">Error: {details.error}</div>\n        )}\n        <div>\n          Last check:{\" \"}\n          {details.timestamp &&\n            new Date(details.timestamp).toLocaleTimeString()}\n        </div>\n      </div>\n      <button\n        onClick={testConnection}\n        className=\"mt-2 px-3 py-1 bg-cyan-600 hover:bg-cyan-700 rounded text-xs transition-colors\"\n      >\n        {isCloudEnvironment ? \"Refresh Status\" : \"Test Now\"}\n      </button>\n    </div>\n  );\n};\n\nexport default ConnectionTest;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Dashboard.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Dashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Dashboard.tsx","messages":[{"ruleId":null,"message":"Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-unused-vars').","line":9,"column":1,"severity":1,"nodeType":null,"fix":{"range":[431,492],"text":" "}},{"ruleId":null,"message":"Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-unused-vars').","line":25,"column":1,"severity":1,"nodeType":null,"fix":{"range":[1088,1149],"text":" "}},{"ruleId":null,"message":"Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-unused-vars').","line":33,"column":1,"severity":1,"nodeType":null,"fix":{"range":[1250,1311],"text":" "}},{"ruleId":null,"message":"Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-unused-vars').","line":42,"column":1,"severity":1,"nodeType":null,"fix":{"range":[1434,1495],"text":" "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"import React, { useEffect, useState } from \"react\";\nimport ArbitrageOpportunities from \"./ArbitrageOpportunities\";\nimport LiveOddsTicker from \"./LiveOddsTicker\"; // Changed to default import\nimport MLFactorViz from \"./MLFactorViz\";\nimport ModelPerformance from \"./ModelPerformance\";\nimport { UniversalMoneyMaker } from \"./index\";\nimport Navbar from \"./navigation/Navbar\";\nimport { PerformanceMetrics } from \"./PerformanceMetrics\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { useAppStore } from \"../store/useAppStore\"; // Corrected import path\nimport { WebSocketManager } from \"../services/unified/WebSocketManager\";\nimport { RiskProfileType, PredictionData } from \"../types/betting\"; // Import enum and PredictionData\nimport { ModelMetrics } from \"../types/prediction\";\nimport { StrategyRecommendation } from \"../types/core\"; // Assuming this path is correct\n\n// Local type definitions (consider moving to a central types file if they grow)\ninterface MLInsight {\n  id: string;\n  title: string;\n  description: string;\n  confidence: number;\n  timestamp: Date;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface OddsUpdate {\n  market: string;\n  bookmaker: string;\n  odds: number;\n  timestamp: Date;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface PlayerProp {\n  playerName: string;\n  propName: string;\n  value: number;\n  odds: number;\n}\n\ntype Sport = string;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype PropType = string;\n\ninterface ArbitrageOpportunityItem {\n  id: string;\n  sport: Sport;\n  event: string;\n  market: string;\n  outcomes: Array<{\n    bookmaker: string;\n    name: string;\n    price: number;\n  }>;\n  profitPercentage: number;\n  lastUpdated: Date;\n}\n\n// Placeholder types for WebSocket events - define properly based on actual data\n// interface ArbitrageAlertPayload {\n//   // type: 'ARBITRAGE_ALERT';\n//   // data: Opportunity; // Assuming Opportunity would be defined in central types\n// }\n\n// interface OddsUpdateData {\n//   // type: 'ODDS_UPDATE';\n//   // data: OddsUpdate[];\n// }\n\n// Types for PerformanceMetrics component - BetRecommendation kept local for now\ninterface BetRecommendation {\n  id: string;\n  market: string;\n  outcome: string;\n  stake: number;\n  odds: number;\n  potentialWin: number;\n  confidence?: number;\n  status: \"pending\" | \"won\" | \"lost\" | \"void\";\n  result?: \"win\" | \"loss\";\n  timestamp: Date;\n}\n\n// Type for LiveOddsTicker component data\ntype BookOdds = Record<string, number>; // e.g. { \"BookieA\": 1.85, \"BookieB\": 1.90 }\n\nconst Dashboard: React.FC = () => {\n  const [_activeView, setActiveView] = useState(\"overview\");\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  // useToast removed as the hook is not found\n\n  // State for PerformanceMetrics\n  const [bankroll, _setBankroll] = useState(10000);\n  const [profit, _setProfit] = useState(1500);\n  const [riskProfile, _setRiskProfile] = useState<RiskProfileType>(\n    RiskProfileType.MODERATE,\n  ); // Use enum\n  const [recommendations, _setRecommendations] = useState<BetRecommendation[]>([\n    {\n      id: \"rec1\",\n      market: \"Game A Winner\",\n      outcome: \"Team X\",\n      stake: 100,\n      odds: 1.5,\n      potentialWin: 150,\n      status: \"won\",\n      result: \"win\",\n      timestamp: new Date(),\n    },\n    {\n      id: \"rec2\",\n      market: \"Game B Over/Under\",\n      outcome: \"Over 2.5\",\n      stake: 50,\n      odds: 2.0,\n      potentialWin: 100,\n      status: \"lost\",\n      result: \"loss\",\n      timestamp: new Date(),\n    },\n  ]);\n\n  // State for LiveOddsTicker: Record<MarketName, Record<Bookmaker, Odds>>\n  const [liveOddsData, _setLiveOddsData] = useState<Record<string, BookOdds>>({\n    \"Game X Winner\": { Bookie1: 1.85, Bookie2: 1.9 },\n    \"Game Y Total Points\": { Bookie1: 200.5, Bookie3: 199.5 },\n  });\n\n  // State for Arbitrage Opportunities\n  const [arbitrageOpportunities, _setArbitrageOpportunities] = useState<\n    ArbitrageOpportunityItem[]\n  >([\n    {\n      id: \"arb1\",\n      sport: \"Soccer\",\n      event: \"Team A vs Team B\",\n      market: \"Match Winner\",\n      outcomes: [\n        { bookmaker: \"BookmakerX\", name: \"Team A\", price: 2.0 },\n        { bookmaker: \"BookmakerY\", name: \"Draw\", price: 3.5 },\n        { bookmaker: \"BookmakerZ\", name: \"Team B\", price: 4.0 },\n      ],\n      profitPercentage: 2.5,\n      lastUpdated: new Date(),\n    },\n    {\n      id: \"arb2\",\n      sport: \"Basketball\",\n      event: \"Team C vs Team D\",\n      market: \"Total Points Over/Under 210.5\",\n      outcomes: [\n        { bookmaker: \"BookmakerP\", name: \"Over 210.5\", price: 1.9 },\n        { bookmaker: \"BookmakerQ\", name: \"Under 210.5\", price: 1.95 },\n      ],\n      profitPercentage: 1.8,\n      lastUpdated: new Date(),\n    },\n  ]);\n\n  // State for Model Performance (matches ModelMetrics type from src/types/prediction.ts)\n  const [modelMetricsData, _setModelMetricsData] = useState<ModelMetrics>({\n    accuracy: 0.85,\n    precision: 0.8,\n    recall: 0.82,\n    f1Score: 0.81,\n    lastUpdated: new Date().toISOString(),\n    winRate: 0.55,\n    profitFactor: 0.1,\n    averageOdds: 1.9,\n    averageConfidence: 0.75,\n    totalPredictions: 100,\n    successfulPredictions: 55,\n  });\n\n  // State for ML Insights (original, potentially to be removed or refactored)\n  const [_mlInsightsData, _setMlInsightsData] = useState<MLInsight[]>([\n    {\n      id: \"insight1\",\n      title: \"High Value Bet Detected\",\n      description:\n        \"Strong signal for upcoming NBA game based on player performance.\",\n      confidence: 0.88,\n      timestamp: new Date(),\n    },\n  ]);\n\n  // State for MLFactorViz props\n  const [currentPlayerId, _setCurrentPlayerId] = useState<string | null>(\n    \"player123\",\n  );\n  const [currentMetric, _setCurrentMetric] = useState<string | null>(\"points\");\n  const [currentPredictionData, _setCurrentPredictionData] = useState<\n    PredictionData | undefined\n  >({\n    value: 25.5,\n    confidence: 0.78,\n    timestamp: Date.now(),\n  });\n  const [currentStrategyData, _setCurrentStrategyData] = useState<\n    StrategyRecommendation | undefined\n  >({\n    confidence: 0.65,\n    expectedValue: 1.2,\n  });\n\n  useEffect(() => {\n    // TEMPORARILY DISABLED FOR DEBUGGING WEBSOCKET ISSUES\n    // Migrated to unified WebSocketManager\n    // WebSocketManager.getInstance();\n    console.log(\n      \"Dashboard: Skipping WebSocketManager initialization for debugging\",\n    );\n    // Example WebSocket event listeners (currently commented out)\n    // wsServiceInstance.on('arbitrageAlert', (data: any) => {\n    //   console.log('Arbitrage Alert:', data);\n    //   // Update arbitrageOpportunities state here\n    // });\n    // wsServiceInstance.on('oddsUpdate', (data: any) => {\n    //   console.log('Odds Update:', data);\n    //   // Update liveOddsData state here\n    // });\n\n    return () => {\n      // Clean up WebSocket listeners if they were active\n      // wsServiceInstance.off('arbitrageAlert');\n      // wsServiceInstance.off('oddsUpdate');\n      // Consider if disconnect is needed here or managed by WebSocketService singleton lifecycle\n    };\n  }, []);\n\n  const _handleViewChange = (view: string) => {\n    setActiveView(view);\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const handleMenuClick = () => {\n    console.log(\"Menu clicked\");\n    toggleSidebar();\n  };\n\n  const handleSmartSidebarClick = () => {\n    console.log(\"Smart sidebar clicked\");\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-100 dark:bg-gray-900\">\n      {/* Sidebar placeholder, actual implementation might be different */}\n      {/* <Sidebar isOpen={isSidebarOpen} activeView={activeView} onViewChange={handleViewChange} /> */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Navbar\n          onMenuClick={handleMenuClick}\n          onSmartSidebarClick={handleSmartSidebarClick}\n        />\n        <main className=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100 dark:bg-gray-900 p-6 pt-20\">\n          <h1 className=\"text-2xl font-semibold text-gray-800 dark:text-white mb-6\">\n            AI Sports Betting Dashboard\n          </h1>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 shadow rounded-lg p-4\">\n              <h2 className=\"text-lg font-semibold text-gray-700 dark:text-white mb-3\">\n                Model Performance\n              </h2>\n              <ModelPerformance modelMetricsData={modelMetricsData} />\n            </div>\n            <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg p-4\">\n              <h2 className=\"text-lg font-semibold text-gray-700 dark:text-white mb-3\">\n                Performance Metrics\n              </h2>\n              <PerformanceMetrics\n                bankroll={bankroll}\n                profit={profit}\n                recommendations={recommendations}\n                riskProfile={riskProfile}\n              />\n            </div>\n            <div className=\"md:col-span-2 lg:col-span-3 bg-white dark:bg-gray-800 shadow rounded-lg p-4\">\n              <h2 className=\"text-lg font-semibold text-gray-700 dark:text-white mb-3\">\n                Live Odds\n              </h2>\n              <LiveOddsTicker data={liveOddsData} />\n            </div>\n            <div className=\"lg:col-span-1 bg-white dark:bg-gray-800 shadow rounded-lg p-4\">\n              <h2 className=\"text-lg font-semibold text-gray-700 dark:text-white mb-3\">\n                Money Maker\n              </h2>\n              <MoneyMaker />\n            </div>\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 shadow rounded-lg p-4\">\n              <h2 className=\"text-lg font-semibold text-gray-700 dark:text-white mb-3\">\n                Arbitrage Opportunities\n              </h2>\n              <ArbitrageOpportunities opportunities={arbitrageOpportunities} />\n            </div>\n            <div className=\"md:col-span-1 lg:col-span-3 bg-white dark:bg-gray-800 shadow rounded-lg p-4\">\n              <h2 className=\"text-lg font-semibold text-gray-700 dark:text-white mb-3\">\n                ML Factor Viz\n              </h2>\n              <MLFactorViz\n                metric={currentMetric}\n                playerId={currentPlayerId}\n                prediction={currentPredictionData}\n                strategy={currentStrategyData}\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Dashboard);\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\DebugApiStatus.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'endpoints'. Either include it or remove the dependency array. You can also do a functional update 'setEndpoints(e => ...)' if you only need 'endpoints' in the 'setEndpoints' call.","line":55,"column":6,"nodeType":"ArrayExpression","endLine":55,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [endpoints]","fix":{"range":[1647,1649],"text":"[endpoints]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport { CheckCircle, XCircle, Clock, Wifi } from \"lucide-react\";\n\ninterface ApiEndpoint {\n  name: string;\n  url: string;\n  status: \"pending\" | \"success\" | \"error\";\n  response?: any;\n  error?: string;\n}\n\nexport const DebugApiStatus: React.FC = () => {\n  const [endpoints, setEndpoints] = useState<ApiEndpoint[]>([\n    { name: \"Health\", url: \"/health\", status: \"pending\" },\n    {\n      name: \"Betting Opportunities\",\n      url: \"/api/betting-opportunities\",\n      status: \"pending\",\n    },\n    { name: \"Predictions\", url: \"/api/predictions\", status: \"pending\" },\n    { name: \"Analytics\", url: \"/api/analytics/advanced\", status: \"pending\" },\n  ]);\n\n  const [environment, setEnvironment] = useState({\n    isDev: import.meta.env.DEV,\n    hostname: window.location.hostname,\n    protocol: window.location.protocol,\n    port: window.location.port,\n  });\n\n  useEffect(() => {\n    const testEndpoints = async () => {\n      const results = await Promise.allSettled(\n        endpoints.map(async (endpoint) => {\n          try {\n            const response = await fetch(endpoint.url);\n            const data = await response.json();\n            return { ...endpoint, status: \"success\", response: data };\n          } catch (error: any) {\n            return { ...endpoint, status: \"error\", error: error.message };\n          }\n        }),\n      );\n\n      setEndpoints(\n        results.map((result, index) =>\n          result.status === \"fulfilled\"\n            ? result.value\n            : { ...endpoints[index], status: \"error\", error: \"Request failed\" },\n        ),\n      );\n    };\n\n    testEndpoints();\n  }, []);\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"success\":\n        return <CheckCircle className=\"w-5 h-5 text-green-400\" />;\n      case \"error\":\n        return <XCircle className=\"w-5 h-5 text-red-400\" />;\n      default:\n        return <Clock className=\"w-5 h-5 text-yellow-400 animate-spin\" />;\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50 max-w-sm\">\n      <div className=\"bg-black/80 backdrop-blur-lg border border-gray-700 rounded-lg p-4 text-sm\">\n        <div className=\"flex items-center gap-2 mb-3\">\n          <Wifi className=\"w-4 h-4 text-cyan-400\" />\n          <span className=\"font-semibold text-cyan-400\">API Status</span>\n        </div>\n\n        <div className=\"space-y-2 mb-3\">\n          {endpoints.map((endpoint, index) => (\n            <div key={index} className=\"flex items-center justify-between\">\n              <span className=\"text-gray-300\">{endpoint.name}</span>\n              <div className=\"flex items-center gap-2\">\n                {getStatusIcon(endpoint.status)}\n                <span\n                  className={`text-xs ${\n                    endpoint.status === \"success\"\n                      ? \"text-green-400\"\n                      : endpoint.status === \"error\"\n                        ? \"text-red-400\"\n                        : \"text-yellow-400\"\n                  }`}\n                >\n                  {endpoint.status}\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"border-t border-gray-700 pt-2 text-xs text-gray-400\">\n          <div>\n            Environment: {environment.isDev ? \"Development\" : \"Production\"}\n          </div>\n          <div>\n            Host: {environment.hostname}:{environment.port}\n          </div>\n          <div>Protocol: {environment.protocol}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DebugApiStatus;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\DebugPanel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\DebugPanel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\DebugPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\DevelopmentGuide.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Dialog.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Dialog.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Dropdown.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Dropdown.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Dropdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ESPNHeadlinesTicker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ESPNHeadlinesTicker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ESPNHeadlinesTicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\EnhancedFeaturesStatus.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\EntryCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\EntryCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\EntryCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ErrorBoundary.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ErrorBoundary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ErrorFallback.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ErrorFallback.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ErrorFallback.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\FeatureStatusPanel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\FeatureStatusPanel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\FeatureStatusPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\FilterBar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\FilterBar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\FilterBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Header.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Header.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Header.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\IntegrationStatus.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Layout.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Layout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LineupComparisonTable.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LineupComparisonTable.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LineupComparisonTable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LiveOddsTicker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LiveOddsTicker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LiveOddsTicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LoadingScreen.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LoadingScreen.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LoadingScreen.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LoadingSpinner.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LoadingSpinner.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LoadingSpinner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LoginForm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LoginForm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\LoginForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MLFactorViz.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MLFactorViz.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MLFactorViz.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MLPredictions.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MLPredictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MLPredictions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MarketAnalysisDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MarketAnalysisDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MarketAnalysisDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MasterA1BettingDashboard.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'initializeDashboard' and 'updateLiveData'. Either include them or remove the dependency array.","line":72,"column":6,"nodeType":"ArrayExpression","endLine":72,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [initializeDashboard, updateLiveData]","fix":{"range":[2503,2505],"text":"[initializeDashboard, updateLiveData]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Master A1Betting Dashboard - Consolidates ALL Best Features\n * The ultimate money-making interface with real API integrations\n */\n\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport {\n  BarChart3, Bell, Brain, DollarSign, Home, Menu, Search,\n  Settings as SettingsIcon, Trophy, TrendingUp, User, Zap,\n  Target, Gamepad2, Activity, Shield, BarChart, Wifi, WifiOff,\n  AlertTriangle, CheckCircle, Clock, Star, ArrowUp, ArrowDown\n} from \"lucide-react\";\n\n// Consolidated service imports\nimport LiveAPIIntegrationService from \"../../services/LiveAPIIntegrationService\";\nimport RealTimeMoneyMakingService from \"../../services/RealTimeMoneyMakingService\";\nimport APITestSuite from \"../../utils/APITestSuite\";\nimport { analytics } from \"../../utils/analytics\";\n\n// UI Components\nimport RealTimeAPIIntegrationDashboard from \"../api/RealTimeAPIIntegrationDashboard\";\nimport toast from \"react-hot-toast\";\n\n// Feature interfaces\ninterface MoneyMakingStats {\n  totalProfit: number;\n  winRate: number;\n  opportunitiesFound: number;\n  activeBets: number;\n  apiStatus: 'healthy' | 'degraded' | 'critical';\n}\n\ninterface LiveOpportunity {\n  id: string;\n  type: 'arbitrage' | 'value_bet' | 'prop_special';\n  player: string;\n  sport: string;\n  line: number;\n  odds: number;\n  confidence: number;\n  expectedValue: number;\n  timeRemaining: number;\n  source: string;\n}\n\nexport const MasterA1BettingDashboard: React.FC = () => {\n  // State management\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionStatus, setConnectionStatus] = useState<'online' | 'offline'>('online');\n  const [moneyMakingStats, setMoneyMakingStats] = useState<MoneyMakingStats>({\n    totalProfit: 0,\n    winRate: 0,\n    opportunitiesFound: 0,\n    activeBets: 0,\n    apiStatus: 'healthy'\n  });\n  const [liveOpportunities, setLiveOpportunities] = useState<LiveOpportunity[]>([]);\n  const [apiHealth, setApiHealth] = useState<any>({});\n\n  // Service instances\n  const liveAPI = useMemo(() => LiveAPIIntegrationService.getInstance(), []);\n  const moneyMaker = useMemo(() => RealTimeMoneyMakingService.getInstance(), []);\n  const testSuite = useMemo(() => new APITestSuite(), []);\n\n  // Initialize dashboard\n  useEffect(() => {\n    initializeDashboard();\n    const interval = setInterval(updateLiveData, 30000); // Update every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const initializeDashboard = async () => {\n    setIsLoading(true);\n    try {\n      // Test API connections\n      const healthCheck = await testSuite.quickHealthCheck();\n      setApiHealth(healthCheck);\n      \n      // Initialize money-making service\n      const stats = moneyMaker.getPerformanceMetrics();\n      setMoneyMakingStats({\n        totalProfit: stats.totalProfit,\n        winRate: stats.winRate,\n        opportunitiesFound: stats.totalOpportunitiesFound,\n        activeBets: stats.totalBetsPlaced,\n        apiStatus: healthCheck.status\n      });\n\n      // Start opportunity scanning\n      const opportunities = await moneyMaker.scanForOpportunities({\n        sports: ['NFL', 'NBA', 'MLB'],\n        minConfidence: 70,\n        maxExposure: 1000\n      });\n      \n      setLiveOpportunities(opportunities.slice(0, 10).map(opp => ({\n        id: opp.id,\n        type: opp.type as any,\n        player: opp.playerName,\n        sport: 'NFL', // Default\n        line: opp.line,\n        odds: opp.odds,\n        confidence: opp.confidence,\n        expectedValue: opp.expectedValue,\n        timeRemaining: opp.timeRemaining,\n        source: opp.source\n      })));\n\n      analytics.track('dashboard_initialized', {\n        api_status: healthCheck.status,\n        opportunities_found: opportunities.length\n      });\n\n    } catch (error) {\n      console.error('Dashboard initialization failed:', error);\n      toast.error('Failed to initialize dashboard');\n    }\n    setIsLoading(false);\n  };\n\n  const updateLiveData = async () => {\n    try {\n      const healthCheck = await testSuite.quickHealthCheck();\n      setApiHealth(healthCheck);\n      \n      const stats = moneyMaker.getPerformanceMetrics();\n      setMoneyMakingStats(prev => ({\n        ...prev,\n        totalProfit: stats.totalProfit,\n        winRate: stats.winRate,\n        apiStatus: healthCheck.status\n      }));\n    } catch (error) {\n      console.error('Live data update failed:', error);\n    }\n  };\n\n  const handleTabChange = useCallback((tab: string) => {\n    setActiveTab(tab);\n    analytics.track('tab_changed', { tab });\n  }, []);\n\n  // Render loading state\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-yellow-400 mx-auto mb-4\"></div>\n          <h2 className=\"text-2xl font-bold text-white mb-2\">🚀 Initializing A1Betting</h2>\n          <p className=\"text-gray-300\">Testing API connections and loading opportunities...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\n      {/* Header */}\n      <header className=\"bg-black/20 backdrop-blur-md border-b border-white/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <h1 className=\"text-2xl font-bold text-white\">\n                  A1<span className=\"text-yellow-400\">Betting</span>\n                </h1>\n              </div>\n            </div>\n            \n            {/* Connection Status */}\n            <div className=\"flex items-center space-x-4\">\n              <div className={`flex items-center space-x-2 px-3 py-1 rounded-full text-sm ${\n                apiHealth.status === 'healthy' \n                  ? 'bg-green-500/20 text-green-400'\n                  : apiHealth.status === 'degraded'\n                  ? 'bg-yellow-500/20 text-yellow-400'\n                  : 'bg-red-500/20 text-red-400'\n              }`}>\n                {apiHealth.status === 'healthy' ? (\n                  <><CheckCircle size={16} /> All Systems Operational</>\n                ) : apiHealth.status === 'degraded' ? (\n                  <><AlertTriangle size={16} /> Limited Functionality</>\n                ) : (\n                  <><WifiOff size={16} /> Connection Issues</>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <motion.div \n            className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 border border-white/20\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n          >\n            <div className=\"flex items-center\">\n              <DollarSign className=\"h-8 w-8 text-green-400\" />\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-300\">Total Profit</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  ${moneyMakingStats.totalProfit.toFixed(2)}\n                </p>\n              </div>\n            </div>\n          </motion.div>\n\n          <motion.div \n            className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 border border-white/20\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.2 }}\n          >\n            <div className=\"flex items-center\">\n              <Trophy className=\"h-8 w-8 text-yellow-400\" />\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-300\">Win Rate</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {moneyMakingStats.winRate.toFixed(1)}%\n                </p>\n              </div>\n            </div>\n          </motion.div>\n\n          <motion.div \n            className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 border border-white/20\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3 }}\n          >\n            <div className=\"flex items-center\">\n              <Target className=\"h-8 w-8 text-blue-400\" />\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-300\">Opportunities</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {moneyMakingStats.opportunitiesFound}\n                </p>\n              </div>\n            </div>\n          </motion.div>\n\n          <motion.div \n            className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 border border-white/20\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.4 }}\n          >\n            <div className=\"flex items-center\">\n              <Activity className=\"h-8 w-8 text-purple-400\" />\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-300\">Active Bets</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {moneyMakingStats.activeBets}\n                </p>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className=\"mb-8\">\n          <nav className=\"flex space-x-8\">\n            {[\n              { id: 'dashboard', label: 'Dashboard', icon: Home },\n              { id: 'opportunities', label: 'Live Opportunities', icon: Target },\n              { id: 'arbitrage', label: 'Arbitrage Hunter', icon: Brain },\n              { id: 'apis', label: 'API Status', icon: Activity },\n              { id: 'analytics', label: 'Analytics', icon: BarChart3 }\n            ].map(({ id, label, icon: Icon }) => (\n              <button\n                key={id}\n                onClick={() => handleTabChange(id)}\n                className={`flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors ${\n                  activeTab === id\n                    ? 'bg-yellow-400 text-black'\n                    : 'text-gray-300 hover:text-white hover:bg-white/10'\n                }`}\n              >\n                <Icon className=\"h-4 w-4 mr-2\" />\n                {label}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        <AnimatePresence mode=\"wait\">\n          {activeTab === 'dashboard' && (\n            <motion.div\n              key=\"dashboard\"\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -20 }}\n              className=\"space-y-6\"\n            >\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* Live Opportunities Preview */}\n                <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 border border-white/20\">\n                  <h3 className=\"text-xl font-bold text-white mb-4\">🎯 Top Opportunities</h3>\n                  <div className=\"space-y-3\">\n                    {liveOpportunities.slice(0, 5).map((opp) => (\n                      <div key={opp.id} className=\"flex justify-between items-center p-3 bg-black/20 rounded-lg\">\n                        <div>\n                          <p className=\"text-white font-medium\">{opp.player}</p>\n                          <p className=\"text-gray-400 text-sm\">{opp.type} • {opp.source}</p>\n                        </div>\n                        <div className=\"text-right\">\n                          <p className=\"text-green-400 font-bold\">+{opp.expectedValue.toFixed(2)}%</p>\n                          <p className=\"text-gray-400 text-sm\">{opp.confidence}% confidence</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* API Health Overview */}\n                <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 border border-white/20\">\n                  <h3 className=\"text-xl font-bold text-white mb-4\">📡 API Health</h3>\n                  <div className=\"space-y-3\">\n                    {Object.entries(apiHealth.services || {}).map(([service, status]) => (\n                      <div key={service} className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-300 capitalize\">{service}</span>\n                        <span className={`px-2 py-1 rounded text-sm ${\n                          status ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'\n                        }`}>\n                          {status ? 'Operational' : 'Issues'}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'opportunities' && (\n            <motion.div\n              key=\"opportunities\"\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -20 }}\n            >\n              <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 border border-white/20\">\n                <h3 className=\"text-xl font-bold text-white mb-6\">🎯 Live Money-Making Opportunities</h3>\n                <div className=\"grid gap-4\">\n                  {liveOpportunities.map((opp) => (\n                    <div key={opp.id} className=\"bg-black/20 rounded-lg p-4 border border-white/10\">\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-2\">\n                            <span className=\"text-white font-bold\">{opp.player}</span>\n                            <span className={`px-2 py-1 rounded text-xs ${\n                              opp.type === 'arbitrage' ? 'bg-green-500/20 text-green-400' :\n                              opp.type === 'value_bet' ? 'bg-blue-500/20 text-blue-400' :\n                              'bg-purple-500/20 text-purple-400'\n                            }`}>\n                              {opp.type.replace('_', ' ').toUpperCase()}\n                            </span>\n                          </div>\n                          <p className=\"text-gray-400 text-sm\">\n                            Line: {opp.line} • Odds: {opp.odds} • Source: {opp.source}\n                          </p>\n                          <div className=\"flex items-center space-x-4 mt-2\">\n                            <span className=\"text-green-400\">\n                              EV: +{opp.expectedValue.toFixed(2)}%\n                            </span>\n                            <span className=\"text-blue-400\">\n                              Confidence: {opp.confidence}%\n                            </span>\n                            <span className=\"text-yellow-400 flex items-center\">\n                              <Clock size={14} className=\"mr-1\" />\n                              {opp.timeRemaining}m\n                            </span>\n                          </div>\n                        </div>\n                        <button \n                          className=\"bg-yellow-400 text-black px-4 py-2 rounded-lg font-medium hover:bg-yellow-300 transition-colors\"\n                          onClick={() => {\n                            toast.success(`Analyzing ${opp.player} opportunity...`);\n                            analytics.track('opportunity_clicked', { opportunity_id: opp.id });\n                          }}\n                        >\n                          Analyze\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'apis' && (\n            <motion.div\n              key=\"apis\"\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -20 }}\n            >\n              <RealTimeAPIIntegrationDashboard />\n            </motion.div>\n          )}\n\n          {activeTab === 'arbitrage' && (\n            <motion.div\n              key=\"arbitrage\"\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -20 }}\n            >\n              <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 border border-white/20\">\n                <h3 className=\"text-xl font-bold text-white mb-6\">🧠 Arbitrage Hunter</h3>\n                <div className=\"text-center py-12\">\n                  <Brain className=\"h-16 w-16 text-yellow-400 mx-auto mb-4\" />\n                  <h4 className=\"text-xl font-bold text-white mb-2\">Advanced Arbitrage Detection</h4>\n                  <p className=\"text-gray-400 mb-6\">\n                    Cross-platform arbitrage opportunities using TheOdds and PrizePicks APIs\n                  </p>\n                  <button \n                    className=\"bg-yellow-400 text-black px-6 py-3 rounded-lg font-medium hover:bg-yellow-300 transition-colors\"\n                    onClick={() => {\n                      toast.loading('Scanning for arbitrage opportunities...');\n                      analytics.track('arbitrage_scan_started');\n                    }}\n                  >\n                    Start Arbitrage Scan\n                  </button>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'analytics' && (\n            <motion.div\n              key=\"analytics\"\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -20 }}\n            >\n              <div className=\"bg-white/10 backdrop-blur-md rounded-lg p-6 border border-white/20\">\n                <h3 className=\"text-xl font-bold text-white mb-6\">📊 Advanced Analytics</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"bg-black/20 rounded-lg p-4\">\n                    <h4 className=\"text-white font-bold mb-2\">Performance Metrics</h4>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-400\">ROI</span>\n                        <span className=\"text-green-400\">+12.5%</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-400\">Sharpe Ratio</span>\n                        <span className=\"text-blue-400\">1.8</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-400\">Max Drawdown</span>\n                        <span className=\"text-red-400\">-3.2%</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-black/20 rounded-lg p-4\">\n                    <h4 className=\"text-white font-bold mb-2\">API Usage</h4>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-400\">SportsRadar</span>\n                        <span className=\"text-yellow-400\">75% quota used</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-400\">TheOdds</span>\n                        <span className=\"text-green-400\">45% quota used</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-400\">PrizePicks</span>\n                        <span className=\"text-green-400\">Unlimited</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n\n      {/* Footer */}\n      <footer className=\"bg-black/20 backdrop-blur-md border-t border-white/10 mt-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"text-center text-gray-400\">\n            <p>A1Betting Platform • Real API Integrations • Live Money-Making Opportunities</p>\n            <p className=\"text-sm mt-1\">\n              SportsRadar: R10yQ...7s • TheOdds: 8684b...0ee • Enhanced with AI Analytics\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default MasterA1BettingDashboard;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Modal.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Modal.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ModelPerformance.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ModelPerformance.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ModelPerformance.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\AdvancedMLDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\AdvancedMLDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\AdvancedMLDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\AdvancedMLDashboardPanels.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\AdvancedMLDashboardPanels.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\AdvancedMLDashboardPanels.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\CleanMoneyMaker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\CleanMoneyMaker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\ConsolidatedUniversalMoneyMaker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\ConsolidatedUniversalMoneyMaker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerAdvanced.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerAdvanced.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerAdvanced.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerConfig.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerConfig.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerResults.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerResults.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerResults.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerStatus.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerStatus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\MoneyMakerStatus.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\UltimateMoneyMaker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\UltimateMoneyMaker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\UltimateMoneyMaker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\UniversalMoneyMaker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\MoneyMaker\\UniversalMoneyMaker.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'generateOpportunities'. Either include it or remove the dependency array.","line":245,"column":6,"nodeType":"ArrayExpression","endLine":245,"endColumn":22,"suggestions":[{"desc":"Update the dependencies array to be: [players, games, generateOpportunities]","fix":{"range":[6268,6284],"text":"[players, games, generateOpportunities]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'scanForOpportunities'. Either include it or remove the dependency array.","line":260,"column":6,"nodeType":"ArrayExpression","endLine":260,"endColumn":24,"suggestions":[{"desc":"Update the dependencies array to be: [scanForOpportunities, state.isAutoMode]","fix":{"range":[6589,6607],"text":"[scanForOpportunities, state.isAutoMode]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has missing dependencies: 'generateGameOpportunities', 'generatePlayerPropOpportunity', and 'generatePortfolios'. Either include them or remove the dependency array.","line":322,"column":6,"nodeType":"ArrayExpression","endLine":322,"endColumn":52,"suggestions":[{"desc":"Update the dependencies array to be: [players, games, toast, connectedSourcesCount, generatePlayerPropOpportunity, generateGameOpportunities, generatePortfolios]","fix":{"range":[8773,8819],"text":"[players, games, toast, connectedSourcesCount, generatePlayerPropOpportunity, generateGameOpportunities, generatePortfolios]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  DollarSign,\n  TrendingUp,\n  Target,\n  Zap,\n  Brain,\n  AlertCircle,\n  Settings,\n  Play,\n  Pause,\n  BarChart3,\n  Activity,\n  Coins,\n  Calculator,\n  Eye,\n  RefreshCw,\n  Filter,\n  SortDesc,\n  Star,\n  Shield,\n  Flame,\n  Award,\n  Users,\n} from \"lucide-react\";\n\n// Import consolidated systems\nimport { MegaCard, MegaButton, MegaInput, MegaAlert } from \"../mega/MegaUI\";\nimport { CyberText, CyberContainer } from \"../mega/CyberTheme\";\nimport {\n  usePredictions,\n  useBettingOpportunities,\n  useUserProfile,\n  useToast,\n} from \"../../hooks/UniversalHooks\";\nimport { UniversalServiceFactory } from \"../../services/UniversalServiceLayer\";\nimport {\n  formatters,\n  validators,\n  betting,\n  analytics,\n} from \"../../utils/UniversalUtils\";\n\n// Import prototype features\nimport { useEnhancedRealDataSources } from \"../../hooks/useEnhancedRealDataSources\";\nimport { useEnhancedBettingEngine } from \"../../hooks/useEnhancedBettingEngine\";\nimport { EnhancedPrizePicks } from \"../enhanced/EnhancedPrizePicks\";\n\n// ============================================================================\n// TYPES & INTERFACES\n// ============================================================================\n\nexport interface MoneyMakerConfig {\n  investmentAmount: number;\n  riskLevel: \"conservative\" | \"moderate\" | \"aggressive\";\n  timeHorizon: \"short\" | \"medium\" | \"long\"; // minutes, hours, days\n  autoMode: boolean;\n  minConfidence: number;\n  maxExposure: number;\n  diversificationLevel: number;\n  preferredSports: string[];\n  excludedMarkets: string[];\n  kellyMultiplier: number;\n  stopLossPercentage: number;\n  profitTargetPercentage: number;\n}\n\nexport interface OpportunityCandidate {\n  id: string;\n  eventId: string;\n  sport: string;\n  league: string;\n  game: string;\n  market: string;\n  description: string;\n  currentOdds: number;\n  predictedProbability: number;\n  valueEdge: number;\n  kellyFraction: number;\n  recommendedStake: number;\n  confidence: number;\n  riskLevel: \"low\" | \"medium\" | \"high\";\n  maxStake: number;\n  expectedReturn: number;\n  potentialPayout: number;\n  timeToStart: number;\n  liquidityScore: number;\n  marketEfficiency: number;\n  historicalPerformance: number;\n  mlFactors: {\n    momentum: number;\n    form: number;\n    headToHead: number;\n    injuries: number;\n    weather: number;\n    venue: number;\n  };\n  arbitrageOpportunity?: {\n    isArbitrage: boolean;\n    guaranteedProfit: number;\n    bookmakers: string[];\n  };\n}\n\nexport interface MoneyMakerPortfolio {\n  id: string;\n  legs: OpportunityCandidate[];\n  totalOdds: number;\n  totalStake: number;\n  totalPayout: number;\n  expectedValue: number;\n  riskScore: number;\n  diversificationScore: number;\n  kellyScore: number;\n  confidence: number;\n  type: \"single\" | \"parlay\" | \"round_robin\" | \"arbitrage\";\n}\n\nexport interface MoneyMakerMetrics {\n  totalProfit: number;\n  totalStaked: number;\n  roi: number;\n  winRate: number;\n  averageOdds: number;\n  betsPlaced: number;\n  opportunitiesFound: number;\n  avgConfidence: number;\n  avgValueEdge: number;\n  maxDrawdown: number;\n  sharpeRatio: number;\n  calmarRatio: number;\n  profitFactor: number;\n  clv: number; // Closing Line Value\n}\n\nexport interface MoneyMakerState {\n  isScanning: boolean;\n  isAutoMode: boolean;\n  scanProgress: number;\n  lastScanTime: Date | null;\n  alertsCount: number;\n  systemHealth: \"excellent\" | \"good\" | \"fair\" | \"poor\";\n}\n\n// ============================================================================\n// MAIN COMPONENT\n// ============================================================================\n\nexport const UniversalMoneyMaker: React.FC = () => {\n  // Enhanced state with prototype features\n  const [activeTab, setActiveTab] = useState<\n    \"scanner\" | \"prizepicks\" | \"portfolio\" | \"analytics\"\n  >(\"prizepicks\");\n\n  // State\n  const [config, setConfig] = useState<MoneyMakerConfig>({\n    investmentAmount: 1000,\n    riskLevel: \"moderate\",\n    timeHorizon: \"medium\",\n    autoMode: false,\n    minConfidence: 75,\n    maxExposure: 25,\n    diversificationLevel: 3,\n    preferredSports: [\"nfl\", \"nba\", \"mlb\"],\n    excludedMarkets: [],\n    kellyMultiplier: 0.25,\n    stopLossPercentage: 10,\n    profitTargetPercentage: 20,\n  });\n\n  const [opportunities, setOpportunities] = useState<OpportunityCandidate[]>(\n    [],\n  );\n  const [portfolios, setPortfolios] = useState<MoneyMakerPortfolio[]>([]);\n  const [metrics, setMetrics] = useState<MoneyMakerMetrics>({\n    totalProfit: 12547.83,\n    totalStaked: 45230.0,\n    roi: 27.7,\n    winRate: 68.4,\n    averageOdds: 1.85,\n    betsPlaced: 234,\n    opportunitiesFound: 1847,\n    avgConfidence: 82.3,\n    avgValueEdge: 5.8,\n    maxDrawdown: 8.2,\n    sharpeRatio: 2.14,\n    calmarRatio: 3.38,\n    profitFactor: 1.89,\n    clv: 4.2,\n  });\n\n  const [state, setState] = useState<MoneyMakerState>({\n    isScanning: false,\n    isAutoMode: false,\n    scanProgress: 0,\n    lastScanTime: null,\n    alertsCount: 3,\n    systemHealth: \"excellent\",\n  });\n\n  const [selectedOpportunity, setSelectedOpportunity] =\n    useState<OpportunityCandidate | null>(null);\n  const [filterCriteria, setFilterCriteria] = useState({\n    sport: \"all\",\n    riskLevel: \"all\",\n    minConfidence: 0,\n    minEdge: 0,\n  });\n  const [sortBy, setSortBy] = useState<keyof OpportunityCandidate>(\"valueEdge\");\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"desc\");\n\n  // Enhanced hooks from prototype\n  const {\n    dataSources,\n    games,\n    players,\n    loading: dataLoading,\n    connectionStatus,\n    dataQuality,\n    dataReliability,\n    refreshData,\n    connectedSourcesCount,\n    totalSourcesCount,\n  } = useEnhancedRealDataSources();\n\n  const {\n    generateEnhancedPortfolio,\n    currentOpportunities,\n    isGenerating,\n    realTimeData,\n  } = useEnhancedBettingEngine();\n\n  // Universal hooks\n  const { toast } = useToast();\n  const { predictions, loading: predictionsLoading } = usePredictions();\n  const { opportunities: legacyOpportunities } = useBettingOpportunities();\n  const { userProfile } = useUserProfile();\n\n  // Initialize data and scan for opportunities\n  useEffect(() => {\n    if (players.length > 0 && games.length > 0) {\n      generateOpportunities();\n    }\n  }, [players, games]);\n\n  // Auto-scan interval\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (state.isAutoMode) {\n      interval = setInterval(() => {\n        scanForOpportunities();\n      }, 300000); // Scan every 5 minutes\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [state.isAutoMode]);\n\n  // Generate opportunities from real data\n  const generateOpportunities = useCallback(async () => {\n    if (!players.length || !games.length) return;\n\n    setState((prev) => ({ ...prev, isScanning: true, scanProgress: 0 }));\n\n    try {\n      const newOpportunities: OpportunityCandidate[] = [];\n\n      // Generate player prop opportunities\n      for (let i = 0; i < Math.min(players.length, 50); i++) {\n        const player = players[i];\n        setState((prev) => ({ ...prev, scanProgress: (i / 50) * 50 }));\n\n        const statTypes = getStatTypesForSport(player.sport);\n\n        for (const statType of statTypes.slice(0, 2)) {\n          // Limit to 2 stat types per player\n          const opportunity = generatePlayerPropOpportunity(player, statType);\n          if (opportunity && opportunity.valueEdge > 3) {\n            // Only include high-value opportunities\n            newOpportunities.push(opportunity);\n          }\n        }\n      }\n\n      // Generate game-based opportunities\n      for (let i = 0; i < Math.min(games.length, 20); i++) {\n        const game = games[i];\n        setState((prev) => ({ ...prev, scanProgress: 50 + (i / 20) * 50 }));\n\n        const gameOpportunities = generateGameOpportunities(game);\n        newOpportunities.push(...gameOpportunities);\n      }\n\n      // Sort by value edge\n      newOpportunities.sort((a, b) => b.valueEdge - a.valueEdge);\n\n      setOpportunities(newOpportunities.slice(0, 25)); // Keep top 25\n      setState((prev) => ({\n        ...prev,\n        isScanning: false,\n        scanProgress: 100,\n        lastScanTime: new Date(),\n        alertsCount: newOpportunities.filter((o) => o.valueEdge > 8).length,\n      }));\n\n      // Generate enhanced portfolios\n      if (newOpportunities.length > 0) {\n        await generatePortfolios(newOpportunities);\n      }\n\n      toast.success(\n        `Found ${newOpportunities.length} opportunities from ${connectedSourcesCount} live data sources`,\n      );\n    } catch (error) {\n      console.error(\"Error generating opportunities:\", error);\n      setState((prev) => ({ ...prev, isScanning: false }));\n      toast.error(\"Failed to generate opportunities\");\n    }\n  }, [players, games, connectedSourcesCount, toast]);\n\n  const generatePlayerPropOpportunity = (\n    player: any,\n    statType: string,\n  ): OpportunityCandidate | null => {\n    try {\n      const baseLine = calculateBaseLine(player, statType);\n      const prediction = calculatePrediction(player, statType, baseLine);\n      const confidence = calculateConfidence(\n        player,\n        statType,\n        prediction,\n        baseLine,\n      );\n      const odds = generateOdds(prediction, baseLine);\n      const impliedProbability = oddsToImpliedProbability(odds);\n      const predictedProbability =\n        (confidence / 100) * (prediction > baseLine ? 1 : -1) + 0.5;\n      const valueEdge =\n        ((predictedProbability - impliedProbability) / impliedProbability) *\n        100;\n\n      if (valueEdge < 2) return null; // Skip low-value opportunities\n\n      return {\n        id: `${player.id}_${statType}_${Date.now()}`,\n        eventId: `game_${player.team}`,\n        sport: player.sport,\n        league: getLeagueForSport(player.sport),\n        game: `${player.team} vs Opponent`,\n        market: \"player_props\",\n        description: `${player.name} ${prediction > baseLine ? \"Over\" : \"Under\"} ${baseLine} ${statType}`,\n        currentOdds: odds,\n        predictedProbability,\n        valueEdge,\n        kellyFraction: calculateKellyFraction(predictedProbability, odds),\n        recommendedStake: calculateRecommendedStake(\n          valueEdge,\n          confidence,\n          config.investmentAmount,\n        ),\n        confidence,\n        riskLevel: getRiskLevel(confidence, valueEdge),\n        maxStake: config.investmentAmount * (config.maxExposure / 100),\n        expectedReturn:\n          (predictedProbability * (odds - 1) - (1 - predictedProbability)) *\n          100,\n        potentialPayout: 100 * odds,\n        timeToStart: Math.random() * 24 * 60 * 60 * 1000, // Random time until game\n        liquidityScore: 0.8 + Math.random() * 0.2,\n        marketEfficiency: 0.85 + Math.random() * 0.1,\n        historicalPerformance: 0.6 + Math.random() * 0.3,\n        mlFactors: {\n          momentum: player.recentForm\n            ? player.recentForm.slice(-3).reduce((a, b) => a + b, 0) / 3\n            : 0.5,\n          form: player.recentForm\n            ? player.recentForm.slice(-5).reduce((a, b) => a + b, 0) / 5\n            : 0.5,\n          headToHead: 0.5 + Math.random() * 0.3,\n          injuries: Math.random() < 0.1 ? 0.2 : 0.9, // 10% chance of injury impact\n          weather: [\"NFL\", \"MLB\"].includes(player.sport)\n            ? 0.8 + Math.random() * 0.2\n            : 1.0,\n          venue: 0.5 + Math.random() * 0.3,\n        },\n      };\n    } catch (error) {\n      console.error(\"Error generating player prop opportunity:\", error);\n      return null;\n    }\n  };\n\n  const generateGameOpportunities = (game: any): OpportunityCandidate[] => {\n    const opportunities: OpportunityCandidate[] = [];\n\n    // Generate total line opportunity\n    const totalLine = 220 + Math.random() * 40; // Example total\n    const totalPrediction = totalLine + (Math.random() - 0.5) * 15;\n    const totalConfidence = 70 + Math.random() * 25;\n    const totalOdds = 1.9 + Math.random() * 0.2;\n    const totalImpliedProb = oddsToImpliedProbability(totalOdds);\n    const totalPredictedProb =\n      (totalConfidence / 100) * (totalPrediction > totalLine ? 1 : -1) + 0.5;\n    const totalValueEdge =\n      ((totalPredictedProb - totalImpliedProb) / totalImpliedProb) * 100;\n\n    if (totalValueEdge > 2) {\n      opportunities.push({\n        id: `${game.id}_total_${Date.now()}`,\n        eventId: game.id,\n        sport: game.sport,\n        league: getLeagueForSport(game.sport),\n        game: `${game.awayTeam} @ ${game.homeTeam}`,\n        market: \"totals\",\n        description: `${totalPrediction > totalLine ? \"Over\" : \"Under\"} ${totalLine.toFixed(1)}`,\n        currentOdds: totalOdds,\n        predictedProbability: totalPredictedProb,\n        valueEdge: totalValueEdge,\n        kellyFraction: calculateKellyFraction(totalPredictedProb, totalOdds),\n        recommendedStake: calculateRecommendedStake(\n          totalValueEdge,\n          totalConfidence,\n          config.investmentAmount,\n        ),\n        confidence: totalConfidence,\n        riskLevel: getRiskLevel(totalConfidence, totalValueEdge),\n        maxStake: config.investmentAmount * (config.maxExposure / 100),\n        expectedReturn:\n          (totalPredictedProb * (totalOdds - 1) - (1 - totalPredictedProb)) *\n          100,\n        potentialPayout: 100 * totalOdds,\n        timeToStart: new Date(game.gameTime).getTime() - Date.now(),\n        liquidityScore: 0.9 + Math.random() * 0.1,\n        marketEfficiency: 0.88 + Math.random() * 0.08,\n        historicalPerformance: 0.65 + Math.random() * 0.25,\n        mlFactors: {\n          momentum: 0.5 + Math.random() * 0.4,\n          form: 0.5 + Math.random() * 0.4,\n          headToHead: 0.4 + Math.random() * 0.5,\n          injuries: 0.8 + Math.random() * 0.2,\n          weather: [\"NFL\", \"MLB\"].includes(game.sport)\n            ? 0.7 + Math.random() * 0.3\n            : 1.0,\n          venue: 0.5 + Math.random() * 0.4,\n        },\n      });\n    }\n\n    return opportunities;\n  };\n\n  const generatePortfolios = async (opps: OpportunityCandidate[]) => {\n    const newPortfolios: MoneyMakerPortfolio[] = [];\n\n    // Single bet portfolios (top opportunities)\n    opps.slice(0, 5).forEach((opp) => {\n      newPortfolios.push({\n        id: `single_${opp.id}`,\n        legs: [opp],\n        totalOdds: opp.currentOdds,\n        totalStake: opp.recommendedStake,\n        totalPayout: opp.recommendedStake * opp.currentOdds,\n        expectedValue: opp.expectedReturn,\n        riskScore: calculateRiskScore([opp]),\n        diversificationScore: 0, // Single bet = no diversification\n        kellyScore: opp.kellyFraction,\n        confidence: opp.confidence,\n        type: \"single\",\n      });\n    });\n\n    // Parlay portfolios\n    const parlayLegs = opps.filter((o) => o.confidence > 75).slice(0, 3);\n    if (parlayLegs.length >= 2) {\n      const parlayOdds = parlayLegs.reduce(\n        (acc, leg) => acc * leg.currentOdds,\n        1,\n      );\n      const parlayStake = config.investmentAmount * 0.05; // 5% for parlays\n\n      newPortfolios.push({\n        id: `parlay_${Date.now()}`,\n        legs: parlayLegs,\n        totalOdds: parlayOdds,\n        totalStake: parlayStake,\n        totalPayout: parlayStake * parlayOdds,\n        expectedValue: calculateParlayEV(parlayLegs),\n        riskScore: calculateRiskScore(parlayLegs),\n        diversificationScore: calculateDiversificationScore(parlayLegs),\n        kellyScore: calculateAverageKelly(parlayLegs),\n        confidence:\n          parlayLegs.reduce((sum, leg) => sum + leg.confidence, 0) /\n          parlayLegs.length,\n        type: \"parlay\",\n      });\n    }\n\n    // Round robin portfolio\n    if (opps.length >= 4) {\n      const rrLegs = opps.slice(0, 4);\n      newPortfolios.push({\n        id: `round_robin_${Date.now()}`,\n        legs: rrLegs,\n        totalOdds: calculateRoundRobinOdds(rrLegs),\n        totalStake: config.investmentAmount * 0.15,\n        totalPayout: calculateRoundRobinPayout(\n          rrLegs,\n          config.investmentAmount * 0.15,\n        ),\n        expectedValue: calculateRoundRobinEV(rrLegs),\n        riskScore: calculateRiskScore(rrLegs) * 0.7, // Lower risk due to multiple combinations\n        diversificationScore: calculateDiversificationScore(rrLegs),\n        kellyScore: calculateAverageKelly(rrLegs),\n        confidence:\n          rrLegs.reduce((sum, leg) => sum + leg.confidence, 0) / rrLegs.length,\n        type: \"round_robin\",\n      });\n    }\n\n    // Arbitrage opportunities\n    const arbOpps = findArbitrageOpportunities(opps);\n    arbOpps.forEach((arbOpp) => {\n      newPortfolios.push(arbOpp);\n    });\n\n    setPortfolios(\n      newPortfolios.sort((a, b) => b.expectedValue - a.expectedValue),\n    );\n  };\n\n  const scanForOpportunities = useCallback(async () => {\n    if (state.isScanning) return;\n\n    await refreshData();\n    await generateOpportunities();\n  }, [state.isScanning, refreshData, generateOpportunities]);\n\n  const toggleAutoMode = () => {\n    setState((prev) => ({\n      ...prev,\n      isAutoMode: !prev.isAutoMode,\n    }));\n  };\n\n  const filteredOpportunities = useMemo(() => {\n    return opportunities\n      .filter((opp) => {\n        if (\n          filterCriteria.sport !== \"all\" &&\n          opp.sport.toLowerCase() !== filterCriteria.sport.toLowerCase()\n        ) {\n          return false;\n        }\n        if (\n          filterCriteria.riskLevel !== \"all\" &&\n          opp.riskLevel !== filterCriteria.riskLevel\n        ) {\n          return false;\n        }\n        if (opp.confidence < filterCriteria.minConfidence) {\n          return false;\n        }\n        if (opp.valueEdge < filterCriteria.minEdge) {\n          return false;\n        }\n        return true;\n      })\n      .sort((a, b) => {\n        const multiplier = sortOrder === \"desc\" ? -1 : 1;\n        return (a[sortBy] - b[sortBy]) * multiplier;\n      });\n  }, [opportunities, filterCriteria, sortBy, sortOrder]);\n\n  const handleConfigChange = (key: keyof MoneyMakerConfig, value: any) => {\n    setConfig((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n  // Tab navigation\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case \"prizepicks\":\n        return <EnhancedPrizePicks />;\n      case \"scanner\":\n        return renderScannerTab();\n      case \"portfolio\":\n        return renderPortfolioTab();\n      case \"analytics\":\n        return renderAnalyticsTab();\n      default:\n        return <EnhancedPrizePicks />;\n    }\n  };\n\n  const renderScannerTab = () => (\n    <div className=\"space-y-6\">\n      {/* Control Panel */}\n      <MegaCard className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n              Opportunity Scanner\n            </h3>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              Real-time analysis of {connectedSourcesCount} live data sources\n            </p>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <div\n                className={`w-3 h-3 rounded-full ${state.systemHealth === \"excellent\" ? \"bg-green-400\" : \"bg-yellow-400\"} animate-pulse`}\n              />\n              <span className=\"text-sm font-medium\">{connectionStatus}</span>\n            </div>\n            <MegaButton\n              onClick={toggleAutoMode}\n              variant={state.isAutoMode ? \"primary\" : \"secondary\"}\n              size=\"sm\"\n              icon={\n                state.isAutoMode ? (\n                  <Pause className=\"w-4 h-4\" />\n                ) : (\n                  <Play className=\"w-4 h-4\" />\n                )\n              }\n            >\n              {state.isAutoMode ? \"Auto ON\" : \"Auto OFF\"}\n            </MegaButton>\n            <MegaButton\n              onClick={scanForOpportunities}\n              disabled={state.isScanning}\n              size=\"sm\"\n              icon={\n                <RefreshCw\n                  className={`w-4 h-4 ${state.isScanning ? \"animate-spin\" : \"\"}`}\n                />\n              }\n            >\n              {state.isScanning ? \"Scanning...\" : \"Scan Now\"}\n            </MegaButton>\n          </div>\n        </div>\n\n        {/* Progress Bar */}\n        {state.isScanning && (\n          <div className=\"mb-6\">\n            <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-2\">\n              <span>Scanning opportunities...</span>\n              <span>{state.scanProgress.toFixed(0)}%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n              <div\n                className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${state.scanProgress}%` }}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Stats Grid */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {opportunities.length}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Opportunities\n            </div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {state.alertsCount}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              High Value\n            </div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-2xl font-bold text-purple-600\">\n              {(dataQuality * 100).toFixed(1)}%\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Data Quality\n            </div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-2xl font-bold text-orange-600\">\n              {portfolios.length}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Portfolios\n            </div>\n          </div>\n        </div>\n      </MegaCard>\n\n      {/* Filters */}\n      <MegaCard className=\"p-6\">\n        <h4 className=\"text-lg font-semibold mb-4\">Filters & Sorting</h4>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Sport</label>\n            <select\n              value={filterCriteria.sport}\n              onChange={(e) =>\n                setFilterCriteria((prev) => ({\n                  ...prev,\n                  sport: e.target.value,\n                }))\n              }\n              className=\"w-full p-2 border rounded-lg dark:bg-gray-800 dark:border-gray-600\"\n            >\n              <option value=\"all\">All Sports</option>\n              <option value=\"nba\">NBA</option>\n              <option value=\"nfl\">NFL</option>\n              <option value=\"mlb\">MLB</option>\n              <option value=\"nhl\">NHL</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Risk Level</label>\n            <select\n              value={filterCriteria.riskLevel}\n              onChange={(e) =>\n                setFilterCriteria((prev) => ({\n                  ...prev,\n                  riskLevel: e.target.value,\n                }))\n              }\n              className=\"w-full p-2 border rounded-lg dark:bg-gray-800 dark:border-gray-600\"\n            >\n              <option value=\"all\">All Levels</option>\n              <option value=\"low\">Low Risk</option>\n              <option value=\"medium\">Medium Risk</option>\n              <option value=\"high\">High Risk</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              Min Confidence\n            </label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={filterCriteria.minConfidence}\n              onChange={(e) =>\n                setFilterCriteria((prev) => ({\n                  ...prev,\n                  minConfidence: Number(e.target.value),\n                }))\n              }\n              className=\"w-full\"\n            />\n            <div className=\"text-sm text-gray-600\">\n              {filterCriteria.minConfidence}%\n            </div>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Min Edge</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"20\"\n              value={filterCriteria.minEdge}\n              onChange={(e) =>\n                setFilterCriteria((prev) => ({\n                  ...prev,\n                  minEdge: Number(e.target.value),\n                }))\n              }\n              className=\"w-full\"\n            />\n            <div className=\"text-sm text-gray-600\">\n              {filterCriteria.minEdge}%\n            </div>\n          </div>\n        </div>\n      </MegaCard>\n\n      {/* Opportunities List */}\n      <MegaCard className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h4 className=\"text-lg font-semibold\">\n            Opportunities ({filteredOpportunities.length})\n          </h4>\n          <div className=\"flex items-center space-x-2\">\n            <select\n              value={sortBy}\n              onChange={(e) =>\n                setSortBy(e.target.value as keyof OpportunityCandidate)\n              }\n              className=\"p-2 border rounded-lg dark:bg-gray-800 dark:border-gray-600\"\n            >\n              <option value=\"valueEdge\">Value Edge</option>\n              <option value=\"confidence\">Confidence</option>\n              <option value=\"expectedReturn\">Expected Return</option>\n              <option value=\"timeToStart\">Time to Start</option>\n            </select>\n            <MegaButton\n              onClick={() =>\n                setSortOrder((prev) => (prev === \"desc\" ? \"asc\" : \"desc\"))\n              }\n              size=\"sm\"\n              icon={<SortDesc className=\"w-4 h-4\" />}\n            >\n              {sortOrder.toUpperCase()}\n            </MegaButton>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          {filteredOpportunities.slice(0, 10).map((opportunity) => (\n            <OpportunityCard\n              key={opportunity.id}\n              opportunity={opportunity}\n              onSelect={() => setSelectedOpportunity(opportunity)}\n              isSelected={selectedOpportunity?.id === opportunity.id}\n            />\n          ))}\n        </div>\n      </MegaCard>\n    </div>\n  );\n\n  const renderPortfolioTab = () => (\n    <div className=\"space-y-6\">\n      <MegaCard className=\"p-6\">\n        <h3 className=\"text-xl font-bold mb-6\">Generated Portfolios</h3>\n        <div className=\"grid gap-4\">\n          {portfolios.map((portfolio) => (\n            <PortfolioCard key={portfolio.id} portfolio={portfolio} />\n          ))}\n        </div>\n      </MegaCard>\n    </div>\n  );\n\n  const renderAnalyticsTab = () => (\n    <div className=\"space-y-6\">\n      <MegaCard className=\"p-6\">\n        <h3 className=\"text-xl font-bold mb-6\">Performance Analytics</h3>\n\n        {/* Key Metrics */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-8\">\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-green-600\">\n              ${formatters.currency(metrics.totalProfit)}\n            </div>\n            <div className=\"text-sm text-gray-600\">Total Profit</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-blue-600\">\n              {metrics.roi.toFixed(1)}%\n            </div>\n            <div className=\"text-sm text-gray-600\">ROI</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-purple-600\">\n              {metrics.winRate.toFixed(1)}%\n            </div>\n            <div className=\"text-sm text-gray-600\">Win Rate</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-orange-600\">\n              {metrics.sharpeRatio.toFixed(2)}\n            </div>\n            <div className=\"text-sm text-gray-600\">Sharpe Ratio</div>\n          </div>\n        </div>\n\n        {/* Additional Metrics */}\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-lg font-semibold\">{metrics.betsPlaced}</div>\n            <div className=\"text-sm text-gray-600\">Bets Placed</div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-lg font-semibold\">\n              {metrics.avgConfidence.toFixed(1)}%\n            </div>\n            <div className=\"text-sm text-gray-600\">Avg Confidence</div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-lg font-semibold\">\n              {metrics.avgValueEdge.toFixed(1)}%\n            </div>\n            <div className=\"text-sm text-gray-600\">Avg Value Edge</div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-lg font-semibold\">\n              {metrics.maxDrawdown.toFixed(1)}%\n            </div>\n            <div className=\"text-sm text-gray-600\">Max Drawdown</div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-lg font-semibold\">\n              {metrics.profitFactor.toFixed(2)}\n            </div>\n            <div className=\"text-sm text-gray-600\">Profit Factor</div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\n            <div className=\"text-lg font-semibold\">\n              {metrics.clv.toFixed(1)}%\n            </div>\n            <div className=\"text-sm text-gray-600\">CLV</div>\n          </div>\n        </div>\n      </MegaCard>\n    </div>\n  );\n\n  return (\n    <CyberContainer className=\"min-h-screen p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center space-x-4 mb-4\">\n            <div className=\"p-3 bg-gradient-to-r from-green-500 to-blue-500 rounded-xl\">\n              <DollarSign className=\"w-8 h-8 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold bg-gradient-to-r from-green-400 to-blue-500 bg-clip-text text-transparent\">\n                Universal Money Maker\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                AI-powered sports betting intelligence with real-time data\n                integration\n              </p>\n            </div>\n          </div>\n\n          {/* Tab Navigation */}\n          <div className=\"flex space-x-1 bg-gray-100 dark:bg-gray-800 p-1 rounded-lg\">\n            {[\n              { id: \"prizepicks\", label: \"PrizePicks\", icon: Target },\n              { id: \"scanner\", label: \"Scanner\", icon: Eye },\n              { id: \"portfolio\", label: \"Portfolio\", icon: BarChart3 },\n              { id: \"analytics\", label: \"Analytics\", icon: Activity },\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`flex items-center space-x-2 px-4 py-2 rounded-md font-medium transition-all ${\n                  activeTab === tab.id\n                    ? \"bg-white dark:bg-gray-700 text-blue-600 shadow-sm\"\n                    : \"text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200\"\n                }`}\n              >\n                <tab.icon className=\"w-4 h-4\" />\n                <span>{tab.label}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Tab Content */}\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={activeTab}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.2 }}\n          >\n            {renderTabContent()}\n          </motion.div>\n        </AnimatePresence>\n      </div>\n    </CyberContainer>\n  );\n};\n\n// Helper Components\nconst OpportunityCard: React.FC<{\n  opportunity: OpportunityCandidate;\n  onSelect: () => void;\n  isSelected: boolean;\n}> = ({ opportunity, onSelect, isSelected }) => (\n  <div\n    className={`p-4 border rounded-lg cursor-pointer transition-all ${\n      isSelected\n        ? \"border-blue-500 bg-blue-50 dark:bg-blue-900/20\"\n        : \"border-gray-200 dark:border-gray-700 hover:border-gray-300\"\n    }`}\n    onClick={onSelect}\n  >\n    <div className=\"flex justify-between items-start mb-2\">\n      <div>\n        <h5 className=\"font-semibold\">{opportunity.description}</h5>\n        <p className=\"text-sm text-gray-600\">{opportunity.game}</p>\n      </div>\n      <div className=\"text-right\">\n        <div className=\"text-lg font-bold text-green-600\">\n          +{opportunity.valueEdge.toFixed(1)}%\n        </div>\n        <div className=\"text-sm text-gray-600\">Edge</div>\n      </div>\n    </div>\n\n    <div className=\"flex justify-between items-center text-sm\">\n      <div className=\"flex space-x-4\">\n        <span>Confidence: {opportunity.confidence.toFixed(0)}%</span>\n        <span>Odds: {opportunity.currentOdds.toFixed(2)}</span>\n        <span\n          className={`px-2 py-1 rounded text-xs ${\n            opportunity.riskLevel === \"low\"\n              ? \"bg-green-100 text-green-800\"\n              : opportunity.riskLevel === \"medium\"\n                ? \"bg-yellow-100 text-yellow-800\"\n                : \"bg-red-100 text-red-800\"\n          }`}\n        >\n          {opportunity.riskLevel.toUpperCase()}\n        </span>\n      </div>\n      <div className=\"text-gray-600\">\n        ${opportunity.recommendedStake.toFixed(0)} → $\n        {opportunity.potentialPayout.toFixed(0)}\n      </div>\n    </div>\n  </div>\n);\n\nconst PortfolioCard: React.FC<{\n  portfolio: MoneyMakerPortfolio;\n}> = ({ portfolio }) => (\n  <div className=\"p-4 border rounded-lg\">\n    <div className=\"flex justify-between items-start mb-4\">\n      <div>\n        <h5 className=\"font-semibold capitalize\">{portfolio.type} Portfolio</h5>\n        <p className=\"text-sm text-gray-600\">{portfolio.legs.length} legs</p>\n      </div>\n      <div className=\"text-right\">\n        <div className=\"text-lg font-bold text-green-600\">\n          +{portfolio.expectedValue.toFixed(1)}%\n        </div>\n        <div className=\"text-sm text-gray-600\">Expected Value</div>\n      </div>\n    </div>\n\n    <div className=\"space-y-2 mb-4\">\n      {portfolio.legs.map((leg, index) => (\n        <div\n          key={index}\n          className=\"text-sm p-2 bg-gray-50 dark:bg-gray-800 rounded\"\n        >\n          {leg.description}\n        </div>\n      ))}\n    </div>\n\n    <div className=\"flex justify-between items-center text-sm border-t pt-2\">\n      <div className=\"flex space-x-4\">\n        <span>Stake: ${portfolio.totalStake.toFixed(0)}</span>\n        <span>Odds: {portfolio.totalOdds.toFixed(2)}</span>\n        <span>Confidence: {portfolio.confidence.toFixed(0)}%</span>\n      </div>\n      <div className=\"font-medium\">\n        Payout: ${portfolio.totalPayout.toFixed(0)}\n      </div>\n    </div>\n  </div>\n);\n\n// Helper Functions\nconst getStatTypesForSport = (sport: string): string[] => {\n  const statTypes = {\n    NBA: [\n      \"Points\",\n      \"Rebounds\",\n      \"Assists\",\n      \"3-Pointers Made\",\n      \"Steals\",\n      \"Blocks\",\n    ],\n    NFL: [\n      \"Passing Yards\",\n      \"Rushing Yards\",\n      \"Receptions\",\n      \"Receiving Yards\",\n      \"Touchdowns\",\n    ],\n    MLB: [\"Hits\", \"RBIs\", \"Runs\", \"Home Runs\", \"Strikeouts\"],\n    NHL: [\"Goals\", \"Assists\", \"Shots\", \"Points\"],\n  };\n  return statTypes[sport] || [\"Points\"];\n};\n\nconst getLeagueForSport = (sport: string): string => {\n  const leagues = {\n    NBA: \"NBA\",\n    NFL: \"NFL\",\n    MLB: \"MLB\",\n    NHL: \"NHL\",\n  };\n  return leagues[sport] || sport;\n};\n\nconst calculateBaseLine = (player: any, statType: string): number => {\n  const stats = player.stats || {};\n  const statKey = statType.toLowerCase().replace(/[^a-z]/g, \"\");\n  return stats[statKey] || 10 + Math.random() * 20;\n};\n\nconst calculatePrediction = (\n  player: any,\n  statType: string,\n  baseLine: number,\n): number => {\n  const recentForm = player.recentForm || [0.5, 0.5, 0.5, 0.5, 0.5];\n  const formFactor = recentForm.slice(-3).reduce((a, b) => a + b, 0) / 3;\n  const adjustment = (formFactor - 0.5) * 0.3; // ±30% based on form\n  return baseLine * (1 + adjustment);\n};\n\nconst calculateConfidence = (\n  player: any,\n  statType: string,\n  prediction: number,\n  baseLine: number,\n): number => {\n  const baseConfidence = 70;\n  const predictionDiff = Math.abs(prediction - baseLine) / baseLine;\n  const confidenceAdjustment = predictionDiff * 20; // Higher difference = higher confidence\n  return Math.min(\n    95,\n    Math.max(55, baseConfidence + confidenceAdjustment + Math.random() * 10),\n  );\n};\n\nconst generateOdds = (prediction: number, baseLine: number): number => {\n  const diff = Math.abs(prediction - baseLine) / baseLine;\n  const baseOdds = 1.9;\n  return baseOdds + diff * 0.3 + (Math.random() * 0.2 - 0.1);\n};\n\nconst oddsToImpliedProbability = (odds: number): number => {\n  return 1 / odds;\n};\n\nconst calculateKellyFraction = (probability: number, odds: number): number => {\n  const q = 1 - probability;\n  const b = odds - 1;\n  return Math.max(0, (b * probability - q) / b);\n};\n\nconst calculateRecommendedStake = (\n  valueEdge: number,\n  confidence: number,\n  bankroll: number,\n): number => {\n  const baseStake = bankroll * 0.02; // 2% base stake\n  const edgeMultiplier = valueEdge / 10; // Scale by edge\n  const confidenceMultiplier = confidence / 100;\n  return Math.min(\n    bankroll * 0.05,\n    baseStake * edgeMultiplier * confidenceMultiplier,\n  );\n};\n\nconst getRiskLevel = (\n  confidence: number,\n  valueEdge: number,\n): \"low\" | \"medium\" | \"high\" => {\n  if (confidence > 80 && valueEdge > 6) return \"low\";\n  if (confidence > 70 && valueEdge > 4) return \"medium\";\n  return \"high\";\n};\n\nconst calculateRiskScore = (opportunities: OpportunityCandidate[]): number => {\n  const avgConfidence =\n    opportunities.reduce((sum, opp) => sum + opp.confidence, 0) /\n    opportunities.length;\n  return (100 - avgConfidence) / 100;\n};\n\nconst calculateDiversificationScore = (\n  opportunities: OpportunityCandidate[],\n): number => {\n  const sports = new Set(opportunities.map((opp) => opp.sport));\n  const markets = new Set(opportunities.map((opp) => opp.market));\n  return (sports.size + markets.size) / (opportunities.length * 2);\n};\n\nconst calculateAverageKelly = (\n  opportunities: OpportunityCandidate[],\n): number => {\n  return (\n    opportunities.reduce((sum, opp) => sum + opp.kellyFraction, 0) /\n    opportunities.length\n  );\n};\n\nconst calculateParlayEV = (legs: OpportunityCandidate[]): number => {\n  const combinedProb = legs.reduce(\n    (acc, leg) => acc * (leg.confidence / 100),\n    1,\n  );\n  const combinedOdds = legs.reduce((acc, leg) => acc * leg.currentOdds, 1);\n  return (combinedProb * (combinedOdds - 1) - (1 - combinedProb)) * 100;\n};\n\nconst calculateRoundRobinOdds = (legs: OpportunityCandidate[]): number => {\n  // Simplified calculation - average of all possible 2-leg parlays\n  let totalOdds = 0;\n  let combinations = 0;\n\n  for (let i = 0; i < legs.length; i++) {\n    for (let j = i + 1; j < legs.length; j++) {\n      totalOdds += legs[i].currentOdds * legs[j].currentOdds;\n      combinations++;\n    }\n  }\n\n  return combinations > 0 ? totalOdds / combinations : 1;\n};\n\nconst calculateRoundRobinPayout = (\n  legs: OpportunityCandidate[],\n  totalStake: number,\n): number => {\n  const averageOdds = calculateRoundRobinOdds(legs);\n  return totalStake * averageOdds;\n};\n\nconst calculateRoundRobinEV = (legs: OpportunityCandidate[]): number => {\n  // Calculate EV for round robin as average of all 2-leg parlay EVs\n  let totalEV = 0;\n  let combinations = 0;\n\n  for (let i = 0; i < legs.length; i++) {\n    for (let j = i + 1; j < legs.length; j++) {\n      const ev = calculateParlayEV([legs[i], legs[j]]);\n      totalEV += ev;\n      combinations++;\n    }\n  }\n\n  return combinations > 0 ? totalEV / combinations : 0;\n};\n\nconst findArbitrageOpportunities = (\n  opportunities: OpportunityCandidate[],\n): MoneyMakerPortfolio[] => {\n  // Simplified arbitrage detection - look for complementary bets\n  const arbPortfolios: MoneyMakerPortfolio[] = [];\n\n  // Group by game\n  const gameGroups = opportunities.reduce(\n    (groups, opp) => {\n      if (!groups[opp.game]) groups[opp.game] = [];\n      groups[opp.game].push(opp);\n      return groups;\n    },\n    {} as Record<string, OpportunityCandidate[]>,\n  );\n\n  Object.values(gameGroups).forEach((gameOpps) => {\n    if (gameOpps.length >= 2) {\n      // Look for opposite sides with combined implied probability < 1\n      for (let i = 0; i < gameOpps.length; i++) {\n        for (let j = i + 1; j < gameOpps.length; j++) {\n          const opp1 = gameOpps[i];\n          const opp2 = gameOpps[j];\n\n          const prob1 = oddsToImpliedProbability(opp1.currentOdds);\n          const prob2 = oddsToImpliedProbability(opp2.currentOdds);\n\n          if (prob1 + prob2 < 0.95) {\n            // 5% arbitrage opportunity\n            const profit = (1 / prob1 + 1 / prob2 - 1) * 100;\n\n            arbPortfolios.push({\n              id: `arb_${opp1.id}_${opp2.id}`,\n              legs: [opp1, opp2],\n              totalOdds: (opp1.currentOdds + opp2.currentOdds) / 2,\n              totalStake: 1000, // Fixed stake for arbitrage\n              totalPayout: 1000 * (1 + profit / 100),\n              expectedValue: profit,\n              riskScore: 0, // Arbitrage is risk-free\n              diversificationScore: 0.5,\n              kellyScore: 1, // Max Kelly for arbitrage\n              confidence: 100, // Guaranteed profit\n              type: \"arbitrage\",\n            });\n          }\n        }\n      }\n    }\n  });\n\n  return arbPortfolios;\n};\n\nexport default UniversalMoneyMaker;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Navbar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Navbar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Navbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Navbar\\Navbar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Navbar\\Navbar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Navbar\\Navbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\NoResultsFallback.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\NoResultsFallback.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\NoResultsFallback.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\OllamaStatus.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'checkOllamaStatus'. Either include it or remove the dependency array.","line":46,"column":6,"nodeType":"ArrayExpression","endLine":46,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [checkOllamaStatus]","fix":{"range":[1006,1008],"text":"[checkOllamaStatus]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Ollama Status Component\n * Shows the status of local Ollama installation and available models\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport {\n  Brain,\n  CheckCircle,\n  XCircle,\n  Download,\n  ExternalLink,\n  RefreshCw,\n  Server,\n  Cpu,\n  AlertTriangle,\n  Info,\n} from \"lucide-react\";\nimport { ollamaLLMService } from \"../services/ollamaLLMService\";\n\ninterface OllamaStatusData {\n  connected: boolean;\n  endpoint: string;\n  models: Array<{\n    name: string;\n    size?: number;\n    modified_at?: string;\n  }>;\n  currentModel: string;\n  responseTime?: number;\n}\n\nexport const OllamaStatus: React.FC = () => {\n  const [status, setStatus] = useState<OllamaStatusData>({\n    connected: false,\n    endpoint: \"http://localhost:11434\",\n    models: [],\n    currentModel: \"none\",\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [testResponse, setTestResponse] = useState<string>(\"\");\n\n  useEffect(() => {\n    checkOllamaStatus();\n  }, []);\n\n  const checkOllamaStatus = async () => {\n    setIsLoading(true);\n\n    try {\n      const connectionStatus = ollamaLLMService.getConnectionStatus();\n      const availableModels = ollamaLLMService.getAvailableModels();\n      const currentModel = ollamaLLMService.getCurrentModel();\n\n      setStatus({\n        connected: connectionStatus.connected,\n        endpoint: connectionStatus.endpoint,\n        models: availableModels,\n        currentModel: currentModel,\n      });\n\n      // Test Ollama with a simple query if connected\n      if (connectionStatus.connected) {\n        await testOllamaResponse();\n      }\n    } catch (error) {\n      console.error(\"Error checking Ollama status:\", error);\n      setStatus((prev) => ({ ...prev, connected: false }));\n    }\n\n    setIsLoading(false);\n  };\n\n  const testOllamaResponse = async () => {\n    try {\n      const startTime = Date.now();\n      const testResult = await ollamaLLMService.generateResponse({\n        message: \"Give me a very brief test response (max 20 words)\",\n        analysisType: \"general\",\n      });\n\n      const responseTime = Date.now() - startTime;\n      setStatus((prev) => ({ ...prev, responseTime }));\n      setTestResponse(testResult.content.substring(0, 100) + \"...\");\n    } catch (error) {\n      setTestResponse(\"Test failed: \" + error);\n    }\n  };\n\n  const formatFileSize = (bytes: number): string => {\n    if (!bytes) return \"Unknown size\";\n    const gb = bytes / (1024 * 1024 * 1024);\n    return `${gb.toFixed(1)} GB`;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"p-6 bg-gray-900 rounded-lg shadow-2xl\">\n        <div className=\"flex items-center justify-center\">\n          <RefreshCw className=\"w-6 h-6 text-cyan-400 animate-spin mr-3\" />\n          <span className=\"text-white\">Checking Ollama Status...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 bg-gray-900 rounded-lg shadow-2xl\">\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-bold text-white mb-2 flex items-center\">\n          <Brain className=\"w-6 h-6 text-purple-400 mr-3\" />\n          PropOllama AI Engine Status\n        </h2>\n        <p className=\"text-gray-300\">\n          Local Ollama integration for AI-powered sports betting analysis\n        </p>\n      </div>\n\n      {/* Connection Status */}\n      <div\n        className={`p-4 rounded-lg border mb-6 ${\n          status.connected\n            ? \"bg-green-500/10 border-green-500/30\"\n            : \"bg-red-500/10 border-red-500/30\"\n        }`}\n      >\n        <div className=\"flex items-center justify-between mb-3\">\n          <h3 className=\"font-semibold text-white flex items-center\">\n            <Server className=\"w-5 h-5 mr-2\" />\n            Ollama Connection\n          </h3>\n          {status.connected ? (\n            <CheckCircle className=\"w-5 h-5 text-green-400\" />\n          ) : (\n            <XCircle className=\"w-5 h-5 text-red-400\" />\n          )}\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n          <div>\n            <span className=\"text-gray-400\">Endpoint: </span>\n            <span className=\"text-white\">{status.endpoint}</span>\n          </div>\n          <div>\n            <span className=\"text-gray-400\">Status: </span>\n            <span\n              className={status.connected ? \"text-green-400\" : \"text-red-400\"}\n            >\n              {status.connected ? \"Connected\" : \"Disconnected\"}\n            </span>\n          </div>\n          {status.responseTime && (\n            <div>\n              <span className=\"text-gray-400\">Response Time: </span>\n              <span className=\"text-white\">{status.responseTime}ms</span>\n            </div>\n          )}\n          <div>\n            <span className=\"text-gray-400\">Models: </span>\n            <span className=\"text-white\">{status.models.length}</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Models Status */}\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold text-white mb-3 flex items-center\">\n          <Cpu className=\"w-5 h-5 text-cyan-400 mr-2\" />\n          Available Models\n        </h3>\n\n        {status.models.length > 0 ? (\n          <div className=\"space-y-2\">\n            {status.models.map((model, index) => (\n              <motion.div\n                key={model.name}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: index * 0.1 }}\n                className={`p-3 rounded border ${\n                  model.name === status.currentModel\n                    ? \"bg-purple-500/20 border-purple-500/50\"\n                    : \"bg-gray-800/50 border-gray-700\"\n                }`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <span className=\"font-medium text-white\">{model.name}</span>\n                    {model.name === status.currentModel && (\n                      <span className=\"ml-2 px-2 py-1 bg-purple-500 text-white text-xs rounded\">\n                        ACTIVE\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"text-sm text-gray-400\">\n                    {model.size ? formatFileSize(model.size) : \"Unknown size\"}\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"p-4 bg-yellow-500/10 border border-yellow-500/30 rounded-lg\">\n            <div className=\"flex items-start\">\n              <AlertTriangle className=\"w-5 h-5 text-yellow-400 mr-3 mt-0.5\" />\n              <div>\n                <p className=\"text-yellow-300 font-medium\">No Models Found</p>\n                <p className=\"text-yellow-200 text-sm mt-1\">\n                  Install Ollama and download models to enable AI features\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Test Response */}\n      {testResponse && (\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-white mb-3\">\n            Test Response\n          </h3>\n          <div className=\"p-3 bg-gray-800/50 border border-gray-700 rounded\">\n            <p className=\"text-gray-300 text-sm\">{testResponse}</p>\n          </div>\n        </div>\n      )}\n\n      {/* Installation Guide */}\n      {!status.connected && (\n        <div className=\"mb-6 p-4 bg-blue-500/10 border border-blue-500/30 rounded-lg\">\n          <h3 className=\"text-lg font-semibold text-blue-300 mb-3 flex items-center\">\n            <Info className=\"w-5 h-5 mr-2\" />\n            Enable AI Features\n          </h3>\n\n          <div className=\"space-y-3 text-sm\">\n            <div className=\"flex items-start\">\n              <span className=\"inline-block w-6 h-6 bg-blue-500 text-white rounded-full text-center text-xs leading-6 mr-3 mt-0.5\">\n                1\n              </span>\n              <div>\n                <p className=\"text-blue-200 font-medium\">Install Ollama</p>\n                <p className=\"text-blue-100\">\n                  Download and install from ollama.ai\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex items-start\">\n              <span className=\"inline-block w-6 h-6 bg-blue-500 text-white rounded-full text-center text-xs leading-6 mr-3 mt-0.5\">\n                2\n              </span>\n              <div>\n                <p className=\"text-blue-200 font-medium\">Download a Model</p>\n                <p className=\"text-blue-100\">\n                  Run:{\" \"}\n                  <code className=\"bg-gray-800 px-1 rounded\">\n                    ollama pull llama3.2\n                  </code>\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex items-start\">\n              <span className=\"inline-block w-6 h-6 bg-blue-500 text-white rounded-full text-center text-xs leading-6 mr-3 mt-0.5\">\n                3\n              </span>\n              <div>\n                <p className=\"text-blue-200 font-medium\">\n                  Restart Development Server\n                </p>\n                <p className=\"text-blue-100\">\n                  PropOllama will automatically detect Ollama\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-3\">\n        <button\n          onClick={checkOllamaStatus}\n          disabled={isLoading}\n          className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700 transition-colors disabled:opacity-50 flex items-center\"\n        >\n          <RefreshCw\n            className={`w-4 h-4 mr-2 ${isLoading ? \"animate-spin\" : \"\"}`}\n          />\n          Refresh Status\n        </button>\n\n        <a\n          href=\"https://ollama.ai\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors flex items-center\"\n        >\n          <Download className=\"w-4 h-4 mr-2\" />\n          Download Ollama\n        </a>\n\n        <button\n          onClick={testOllamaResponse}\n          disabled={!status.connected || isLoading}\n          className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors disabled:opacity-50 flex items-center\"\n        >\n          <Brain className=\"w-4 h-4 mr-2\" />\n          Test AI Response\n        </button>\n      </div>\n\n      <div className=\"mt-4 p-3 bg-gray-800/30 rounded text-xs text-gray-400\">\n        <p>\n          💡 <strong>Tip:</strong> For best PropOllama performance, use models\n          like llama3.2, mistral, or phi3. Larger models provide better analysis\n          but require more system resources.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default OllamaStatus;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\OpportunitiesList.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\OpportunitiesList.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\OpportunitiesList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PatternRecognition.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PatternRecognition.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PatternRecognition.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PayoutPreview.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PayoutPreview.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PayoutPreview.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PayoutPreview.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PayoutPreview.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PayoutPreview.tsx","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":10,"column":58,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":10,"endColumn":60,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[531,533],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[531,533],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]},{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":16,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":16,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[849,851],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[849,851],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'previousValues'. Either include it or remove the dependency array.","line":118,"column":6,"nodeType":"ArrayExpression","endLine":118,"endColumn":21,"suggestions":[{"desc":"Update the dependencies array to be: [payoutPreview, previousValues]","fix":{"range":[4935,4950],"text":"[payoutPreview, previousValues]"}}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport { useWebSocket } from '../hooks/useWebSocket';\nimport { usePayoutStore } from '../stores/payoutStore';\nimport { useRiskProfileStore } from '../stores/riskProfileStore';\nimport { Box, Typography, Paper, Button } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { fadeIn, scale, flash, durations, timingFunctions } from '../utils/animations';\nimport { WebSocketMessage } from '../types/websocket';\n\nconst PreviewContainer: React.FC<React.PropsWithChildren<{}>> = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  boxShadow: theme.shadows[2],\n  animation: `${fadeIn} ${durations.normal} ${timingFunctions.easeInOut}`,\n})) as unknown as React.FC<React.PropsWithChildren<{}>>;\n\nconst ValueDisplay: React.FC<React.PropsWithChildren<{ changed?: boolean }>> = styled(Box)<{\n  changed?: boolean;\n}>(({ theme, changed }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: theme.spacing(1),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  '&:last-child': {\n    borderBottom: 'none',\n  },\n  backgroundColor: changed ? theme.palette.primary.light : 'transparent',\n  transition: `background-color ${durations.normal} ${timingFunctions.easeInOut}`,\n  animation: changed ? `${flash} ${durations.normal} ${timingFunctions.easeInOut}` : 'none',\n})) as unknown as React.FC<React.PropsWithChildren<{ changed?: boolean }>>;\n\nconst Value: React.FC<React.PropsWithChildren<{ changed?: boolean; variant?: any; color?: any }>> =\n  styled(Typography)<{ changed?: boolean }>(({ theme, changed }) => ({\n    fontWeight: changed ? 'bold' : 'normal',\n    transition: `all ${durations.normal} ${timingFunctions.easeInOut}`,\n    animation: changed ? `${scale} ${durations.normal} ${timingFunctions.easeInOut}` : 'none',\n  })) as unknown as React.FC<\n    React.PropsWithChildren<{ changed?: boolean; variant?: any; color?: any }>\n  >;\n\nconst PlaceBetButton: React.FC<\n  React.PropsWithChildren<{\n    changed?: boolean;\n    variant?: any;\n    color?: any;\n    fullWidth?: boolean;\n    onClick?: () => void;\n    disabled?: boolean;\n  }>\n> = styled(Button)<{ changed?: boolean }>(({ theme, changed }) => ({\n  marginTop: theme.spacing(2),\n  transition: `all ${durations.normal} ${timingFunctions.easeInOut}`,\n  animation: changed ? `${scale} ${durations.normal} ${timingFunctions.easeInOut}` : 'none',\n})) as unknown as React.FC<\n  React.PropsWithChildren<{\n    changed?: boolean;\n    variant?: any;\n    color?: any;\n    fullWidth?: boolean;\n    onClick?: () => void;\n    disabled?: boolean;\n  }>\n>;\n\ninterface PayoutPreviewProps {\n  eventId: string;\n}\n\nexport const PayoutPreview: React.FC<PayoutPreviewProps> = ({ eventId }) => {\n  const payoutPreview = usePayoutStore(state => state.getPayoutPreview(eventId));\n  const { currentProfile, bankroll } = useRiskProfileStore();\n  const [changedValues, setChangedValues] = useState<Set<string>>(new Set());\n  const [previousValues, setPreviousValues] = useState<Record<string, number>>({});\n\n  // WebSocket for real-time payout/odds updates\n  const wsUrl = `${process.env.NEXT_PUBLIC_WS_URL || 'ws://localhost:8000/ws'}?channel=payout-preview&eventId=${eventId}`;\n  useWebSocket(wsUrl, {\n    onMessage: (msg: WebSocketMessage) => {\n      if (msg.event === 'odds_update' && msg.data?.eventId === eventId) {\n        // Optionally handle odds update\n      }\n      if (msg.event === 'payout_update' && msg.data?.eventId === eventId) {\n        usePayoutStore.getState().updatePayoutPreview(eventId, msg.data);\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (payoutPreview) {\n      const newChangedValues = new Set<string>();\n      const newPreviousValues = { ...previousValues };\n      if (previousValues.potential_payout !== payoutPreview.potential_payout) {\n        newChangedValues.add('potential_payout');\n        newPreviousValues.potential_payout = payoutPreview.potential_payout;\n      }\n      if (previousValues.kelly_stake !== payoutPreview.kelly_stake) {\n        newChangedValues.add('kelly_stake');\n        newPreviousValues.kelly_stake = payoutPreview.kelly_stake;\n      }\n      if (previousValues.risk_adjusted_stake !== payoutPreview.risk_adjusted_stake) {\n        newChangedValues.add('risk_adjusted_stake');\n        newPreviousValues.risk_adjusted_stake = payoutPreview.risk_adjusted_stake;\n      }\n      if (previousValues.expected_value !== payoutPreview.expected_value) {\n        newChangedValues.add('expected_value');\n        newPreviousValues.expected_value = payoutPreview.expected_value;\n      }\n      setChangedValues(newChangedValues);\n      setPreviousValues(newPreviousValues);\n      const timeout = setTimeout(\n        () => setChangedValues(new Set()),\n        parseInt(durations.normal) * 1000 || 300\n      );\n      return () => clearTimeout(timeout);\n    }\n  }, [payoutPreview]);\n\n  if (!payoutPreview) {\n    return (\n      <PreviewContainer>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          Loading payout preview...\n        </Typography>\n      </PreviewContainer>\n    );\n  }\n\n  const handlePlaceBet = () => {\n    // TODO: Implement bet placement logic\n    console.log('Placing bet with stake:', payoutPreview.risk_adjusted_stake);\n  };\n\n  return (\n    <PreviewContainer>\n      <Typography gutterBottom variant=\"h6\">\n        Payout Preview\n      </Typography>\n\n      <ValueDisplay changed={changedValues.has('potential_payout')}>\n        <Typography variant=\"body2\">Potential Payout</Typography>\n        <Value changed={changedValues.has('potential_payout')} color=\"primary\" variant=\"body1\">\n          ${payoutPreview.potential_payout.toFixed(2)}\n        </Value>\n      </ValueDisplay>\n\n      <ValueDisplay changed={changedValues.has('kelly_stake')}>\n        <Typography variant=\"body2\">Kelly Criterion Stake</Typography>\n        <Value changed={changedValues.has('kelly_stake')} variant=\"body1\">\n          ${payoutPreview.kelly_stake.toFixed(2)}\n        </Value>\n      </ValueDisplay>\n\n      <ValueDisplay changed={changedValues.has('risk_adjusted_stake')}>\n        <Typography variant=\"body2\">Risk-Adjusted Stake</Typography>\n        <Value changed={changedValues.has('risk_adjusted_stake')} color=\"secondary\" variant=\"body1\">\n          ${payoutPreview.risk_adjusted_stake.toFixed(2)}\n        </Value>\n      </ValueDisplay>\n\n      <ValueDisplay changed={changedValues.has('expected_value')}>\n        <Typography variant=\"body2\">Expected Value</Typography>\n        <Value\n          changed={changedValues.has('expected_value')}\n          color={payoutPreview.expected_value > 0 ? 'success.main' : 'error.main'}\n          variant=\"body1\"\n        >\n          ${payoutPreview.expected_value.toFixed(2)}\n        </Value>\n      </ValueDisplay>\n\n      <PlaceBetButton\n        fullWidth\n        changed={changedValues.has('risk_adjusted_stake')}\n        color=\"primary\"\n        disabled={payoutPreview.expected_value <= 0}\n        variant=\"contained\"\n        onClick={handlePlaceBet}\n      >\n        Place Bet (${payoutPreview.risk_adjusted_stake.toFixed(2)})\n      </PlaceBetButton>\n\n      <Box mt={1}>\n        <Typography color=\"textSecondary\" variant=\"caption\">\n          Risk Profile: {currentProfile.profile_type}\n          <br />\n          Bankroll: ${bankroll.toFixed(2)}\n        </Typography>\n      </Box>\n    </PreviewContainer>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PerformanceAnalytics.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PerformanceAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PerformanceAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PerformanceMetrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PerformanceMetrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PerformanceMetrics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PerformanceMonitor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PerformanceMonitor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PerformanceMonitor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PredictionDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PredictionDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PredictionDisplay.tsx","messages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useMemo\" is called conditionally. React Hooks must be called in the exact same order in every component render. Did you accidentally call a React Hook after an early return?","line":118,"column":20,"nodeType":"Identifier","endLine":118,"endColumn":27}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState, useMemo } from 'react';\nimport { useUnifiedAnalytics } from '../hooks/useUnifiedAnalytics';\nimport {\n  Box,\n  Typography,\n  Paper,\n  LinearProgress,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip as RechartsTooltip,\n  ResponsiveContainer,\n  Cell,\n} from 'recharts';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport SortIcon from '@mui/icons-material/Sort';\nimport { NoResultsFallback } from './NoResultsFallback';\n\nconst PredictionContainer = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  boxShadow: theme.shadows[2],\n}));\n\nconst ConfidenceBar = styled(LinearProgress)(({ theme }) => ({\n  height: 8,\n  borderRadius: 4,\n  backgroundColor: theme.palette.grey[200],\n  '& .MuiLinearProgress-bar': {\n    borderRadius: 4,\n  },\n}));\n\nconst ShapContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  height: 300,\n  position: 'relative',\n}));\n\nconst ControlsContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(1),\n}));\n\nconst ValueDisplay = styled(Box)<{ changed?: boolean }>(({ theme, changed }) => ({\n  padding: theme.spacing(1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: changed ? theme.palette.primary.light : 'transparent',\n  transition: `background-color 0.3s`,\n}));\n\ninterface PredictionDisplayProps {\n  eventId: string;\n}\n\ntype SortOrder = 'asc' | 'desc';\ntype FilterType = 'all' | 'positive' | 'negative';\n\nexport const PredictionDisplay: React.FC<PredictionDisplayProps> = ({ eventId }) => {\n  // Unified analytics for prediction data\n  const { ml } = useUnifiedAnalytics({ ml: { autoUpdate: false } });\n  const [sortOrder, setSortOrder] = useState<SortOrder>('desc');\n  const [filterType, setFilterType] = useState<FilterType>('all');\n  const [filterAnchorEl, setFilterAnchorEl] = useState<null | HTMLElement>(null);\n  const [sortAnchorEl, setSortAnchorEl] = useState<null | HTMLElement>(null);\n  const [changedValues, setChangedValues] = useState<Set<string>>(new Set());\n\n  // Memoize prediction for performance\n  const prediction = useMemo(() => {\n    if (!ml || !ml.mlResult) return null;\n    // Find prediction for this eventId if available\n    // (Assume mlResult.predictions is an array of objects with eventId)\n    if (Array.isArray(ml.mlResult.predictions)) {\n      return ml.mlResult.predictions.find((p: { eventId: string }) => p.eventId === eventId) || null;\n    }\n    return null;\n  }, [ml, eventId]);\n\n  useEffect(() => {\n    if (prediction) {\n      const newChangedValues = new Set<string>();\n      if (prediction.confidence) newChangedValues.add('confidence');\n      if (prediction.recommended_stake) newChangedValues.add('stake');\n      setChangedValues(newChangedValues);\n      const timeout = setTimeout(() => setChangedValues(new Set()), 1000);\n      return () => clearTimeout(timeout);\n    }\n  }, [prediction]);\n\n  if (ml?.isLoading) {\n    return (\n      <PredictionContainer>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          Loading prediction...\n        </Typography>\n      </PredictionContainer>\n    );\n  }\n  if (ml?.error) {\n    return <NoResultsFallback />;\n  }\n  if (!prediction) {\n    return <NoResultsFallback />;\n  }\n\n  // Transform SHAP values for visualization\n  const shapData = useMemo(() => {\n    if (!prediction.shap_values) return [];\n    return Object.entries(prediction.shap_values)\n      .map(([feature, value]) => ({\n        feature,\n        value: value as number,\n        absValue: Math.abs(value as number),\n      }))\n      .filter(item => {\n        if (filterType === 'positive') return item.value > 0;\n        if (filterType === 'negative') return item.value < 0;\n        return true;\n      })\n      .sort((a, b) => {\n        const multiplier = sortOrder === 'desc' ? -1 : 1;\n        return multiplier * (b.absValue - a.absValue);\n      })\n      .slice(0, 10);\n  }, [prediction, filterType, sortOrder]);\n\n  const handleFilterClick = (event: React.MouseEvent<HTMLElement>) =>\n    setFilterAnchorEl(event.currentTarget);\n  const handleSortClick = (event: React.MouseEvent<HTMLElement>) =>\n    setSortAnchorEl(event.currentTarget);\n  const handleFilterClose = () => setFilterAnchorEl(null);\n  const handleSortClose = () => setSortAnchorEl(null);\n\n  return (\n    <PredictionContainer>\n      <Typography gutterBottom variant=\"h6\">\n        Prediction Analysis\n      </Typography>\n\n      <ValueDisplay changed={changedValues.has('confidence')}>\n        <Typography gutterBottom variant=\"subtitle2\">\n          Confidence Level\n        </Typography>\n        <ConfidenceBar\n          color={prediction.confidence > 0.7 ? 'success' : 'primary'}\n          value={prediction.confidence * 100}\n          variant=\"determinate\"\n        />\n        <Typography color=\"textSecondary\" mt={1} variant=\"body2\">\n          {prediction.confidence.toFixed(2)} ({prediction.risk_level})\n        </Typography>\n      </ValueDisplay>\n\n      <ValueDisplay changed={changedValues.has('stake')}>\n        <Typography gutterBottom variant=\"subtitle2\">\n          Recommended Stake\n        </Typography>\n        <Typography color=\"primary\" variant=\"h6\">\n          ${prediction.recommended_stake?.toFixed(2) ?? '0.00'}\n        </Typography>\n      </ValueDisplay>\n\n      <Box mt={2}>\n        <Box alignItems=\"center\" display=\"flex\" justifyContent=\"space-between\" mb={1}>\n          <Typography variant=\"subtitle2\">Feature Impact (SHAP Values)</Typography>\n          <ControlsContainer>\n            <Tooltip title=\"Filter\">\n              <IconButton aria-label=\"Filter SHAP values\" size=\"small\" onClick={handleFilterClick}>\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Sort\">\n              <IconButton aria-label=\"Sort SHAP values\" size=\"small\" onClick={handleSortClick}>\n                <SortIcon />\n              </IconButton>\n            </Tooltip>\n          </ControlsContainer>\n        </Box>\n\n        <Menu anchorEl={filterAnchorEl} open={Boolean(filterAnchorEl)} onClose={handleFilterClose}>\n          <MenuItem\n            onClick={() => {\n              setFilterType('all');\n              handleFilterClose();\n            }}\n          >\n            All Features\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setFilterType('positive');\n              handleFilterClose();\n            }}\n          >\n            Positive Impact\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setFilterType('negative');\n              handleFilterClose();\n            }}\n          >\n            Negative Impact\n          </MenuItem>\n        </Menu>\n\n        <Menu anchorEl={sortAnchorEl} open={Boolean(sortAnchorEl)} onClose={handleSortClose}>\n          <MenuItem\n            onClick={() => {\n              setSortOrder('desc');\n              handleSortClose();\n            }}\n          >\n            Highest Impact First\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setSortOrder('asc');\n              handleSortClose();\n            }}\n          >\n            Lowest Impact First\n          </MenuItem>\n        </Menu>\n\n        <ShapContainer>\n          <ResponsiveContainer height=\"100%\" width=\"100%\">\n            <BarChart aria-label=\"SHAP Feature Impact Bar Chart\" data={shapData} layout=\"vertical\">\n              <XAxis type=\"number\" />\n              <YAxis dataKey=\"feature\" tick={{ fontSize: 12 }} type=\"category\" width={150} />\n              <RechartsTooltip\n                formatter={(value: number, name: string, props: { payload: { index: number } }) => {\n                  const item = shapData[props.payload.index];\n                  return [\n                    `${item.value.toFixed(4)} (${item.value > 0 ? 'Positive' : 'Negative'} Impact)`,\n                    'SHAP Value',\n                  ];\n                }}\n                labelFormatter={(label: string) => `Feature: ${label}`}\n              />\n              <Bar animationDuration={500} dataKey=\"absValue\">\n                {shapData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={entry.value > 0 ? '#4caf50' : '#f44336'} />\n                ))}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </ShapContainer>\n      </Box>\n    </PredictionContainer>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PredictionEnhancement.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PredictionEnhancement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PredictionEnhancement.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Progress.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Progress.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Progress.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ProgressBar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ProgressBar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ProgressBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropAnalysis.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropAnalysis.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropAnalysis.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropCards.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropCards.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropCards.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropList.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropList.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\PropList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RealTimeUpdates.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RealTimeUpdates.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RealTimeUpdates.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RealtimePredictionDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RealtimePredictionDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RealtimePredictionDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RegisterForm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RegisterForm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RegisterForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskManagerPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskManagerPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskManagerPage.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskManagerPage.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskManagerPage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskManagerPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskProfileManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskProfileManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskProfileManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskProfileSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskProfileSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\RiskProfileSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Select.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Select.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Settings.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Settings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Settings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ShapBreakdownModal.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ShapBreakdownModal.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ShapBreakdownModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ShapValueDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ShapValueDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ShapValueDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ShapVisualization.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ShapVisualization.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ShapVisualization.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Sidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Sidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Sidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Sidebar\\Sidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Sidebar\\Sidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Sidebar\\Sidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\SimpleAdvancedIntegrationStatus.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Skeleton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Skeleton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Skeleton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\SmartAlerts.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\SmartAlerts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\SmartAlerts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\StrategyAutomationToggle.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\StrategyAutomationToggle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\StrategyAutomationToggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Switch.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Switch.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Switch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Table.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Table.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Table.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Tabs.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Tabs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Tabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeDemo.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeDemo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeProvider.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeToggle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeToggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeToggle\\ThemeToggle.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeToggle\\ThemeToggle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeToggle\\ThemeToggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeToggle\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ThemeToggle\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Toast.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Toast.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Toast.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ToastContext.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ToastContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ToastContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ToggleSidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ToggleSidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ToggleSidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Tooltip.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Tooltip.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\Tooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\TrendingProps.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\TrendingProps.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\TrendingProps.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UltimateMoneyMakerEnhanced.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UltimateMoneyMakerEnhanced.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UltimateMoneyMakerEnhanced.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UnifiedBettingInterface.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UnifiedBettingInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UnifiedBettingInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UnifiedInput.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UnifiedInput.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UnifiedInput.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UserConstraintsForm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UserConstraintsForm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\UserConstraintsForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ViteErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketAnalytics.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token :","line":63,"column":41}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport SafeChart from './ui/SafeChart';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const WebSocketAnalytics = ({ webSocketService }) => {\n    const [metrics, setMetrics] = useState([]);\n    const [selectedMetric, setSelectedMetric] = useState('latency');\n    useEffect(() => {\n        const updateMetrics = () => {\n            const connections = webSocketService.getConnections();\n            const currentMetrics = connections.map((conn) => conn.metrics);\n            setMetrics(currentMetrics);\n        };\n        const interval = setInterval(updateMetrics, 1000);\n        return () => clearInterval(interval);\n    }, [webSocketService]);\n    const chartData = {\n        labels: metrics.map((_, index) => `Time ${index}`),\n        datasets: [\n            {\n                label: 'Latency (ms)',\n                data: metrics.map(m => m.latency),\n                borderColor: 'rgb(75, 192, 192)',\n                tension: 0.1,\n            },\n            {\n                label: 'Message Size (bytes)',\n                data: metrics.map(m => m.messageSize),\n                borderColor: 'rgb(255, 99, 132)',\n                tension: 0.1,\n            },\n            {\n                label: 'Compression Ratio',\n                data: metrics.map(m => m.compressionRatio),\n                borderColor: 'rgb(54, 162, 235)',\n                tension: 0.1,\n            },\n        ],\n    };\n    const chartOptions = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n            title: {\n                display: true,\n                text: 'WebSocket Performance Metrics',\n            },\n        },\n        scales: {\n            y: {\n                beginAtZero: true,\n            },\n        },\n    };\n    return (_jsxs(\"div\", { className: \"p-4\", children: [_jsx(\"h2\", { className: \"text-2xl font-bold mb-4\", children: \"WebSocket Analytics\" }), _jsxs(\"div\", { className: \"grid grid-cols-3 gap-4 mb-4\", children: [_jsxs(\"div\", { className: \"bg-white p-4 rounded shadow\", children: [_jsx(\"h3\", { className: \"font-semibold\", children: \"Total Connections\" }), _jsx(\"p\", { className: \"text-2xl\", children: metrics.length })] }), _jsxs(\"div\", { className: \"bg-white p-4 rounded shadow\", children: [_jsx(\"h3\", { className: \"font-semibold\", children: \"Average Latency\" }), _jsxs(\"p\", { className: \"text-2xl\", children: [metrics.length > 0\n                                        ? Math.round(metrics.reduce((acc, m) => acc + m.latency, 0) / metrics.length)\n                                        : 0, ' ', \"ms\"] })] }), _jsxs(\"div\", { className: \"bg-white p-4 rounded shadow\", children: [_jsx(\"h3\", { className: \"font-semibold\", children: \"Message Rate\" }), _jsxs(\"p\", { className: \"text-2xl\", children: [metrics.length > 0\n                                        ? Math.round(metrics.reduce((acc, m) => acc + m.messageCount, 0) / metrics.length)\n                                        : 0, ' ', \"/s\"] })] })] }), _jsx(\"div\", { className: \"bg-white p-4 rounded shadow\", children: _jsx(SafeChart, { type: \"line\", data: chartData, options: chartOptions, loadingMessage: \"Loading WebSocket metrics...\" }) }),\n                                        : 0, ' ', \"/s\"] })] })] }), _jsx(\"div\", { className: \"bg-white p-4 rounded shadow\", children: _jsx(Line, { data: chartData, options: chartOptions }) }), _jsxs(\"div\", { className: \"mt-4\", children: [_jsx(\"h3\", { className: \"font-semibold mb-2\", children: \"Connection Status\" }), _jsx(\"div\", { className: \"grid grid-cols-2 gap-4\", children: metrics.map((metric, index) => (_jsxs(\"div\", { className: \"bg-white p-4 rounded shadow\", children: [_jsxs(\"h4\", { className: \"font-semibold\", children: [\"Connection \", index + 1] }), _jsxs(\"p\", { children: [\"Status: \", metric.isConnected ? 'Connected' : 'Disconnected'] }), _jsxs(\"p\", { children: [\"Messages: \", metric.messageCount] }), _jsxs(\"p\", { children: [\"Errors: \", metric.errorCount] }), _jsxs(\"p\", { children: [\"Last Error: \", metric.lastError || 'None'] })] }, index))) })] })] }));\n};","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketBatchingAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketBatchingAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketBatchingAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketLoadBalancerAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketLoadBalancerAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketLoadBalancerAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketSecurityDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketSecurityDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\WebSocketSecurityDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\AdminPanel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\AdminPanel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\AdminPanel.tsx","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: File appears to be binary.","line":1,"column":0}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"��/\u0000*\u0000*\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000A\u0000d\u0000m\u0000i\u0000n\u0000P\u0000a\u0000n\u0000e\u0000l\u0000 \u0000c\u0000o\u0000m\u0000p\u0000o\u0000n\u0000e\u0000n\u0000t\u0000 \u0000f\u0000o\u0000r\u0000 \u0000t\u0000h\u0000e\u0000 \u0000U\u0000l\u0000t\u0000i\u0000m\u0000a\u0000t\u0000e\u0000S\u0000p\u0000o\u0000r\u0000t\u0000s\u0000B\u0000e\u0000t\u0000t\u0000i\u0000n\u0000g\u0000A\u0000p\u0000p\u0000.\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000P\u0000r\u0000o\u0000v\u0000i\u0000d\u0000e\u0000s\u0000 \u0000a\u0000n\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000i\u0000s\u0000t\u0000r\u0000a\u0000t\u0000i\u0000v\u0000e\u0000 \u0000i\u0000n\u0000t\u0000e\u0000r\u0000f\u0000a\u0000c\u0000e\u0000 \u0000f\u0000o\u0000r\u0000 \u0000m\u0000a\u0000n\u0000a\u0000g\u0000i\u0000n\u0000g\u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000,\u0000 \u0000v\u0000i\u0000e\u0000w\u0000i\u0000n\u0000g\u0000 \u0000s\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000l\u0000o\u0000g\u0000s\u0000,\u0000 \u0000a\u0000n\u0000d\u0000 \u0000m\u0000o\u0000n\u0000i\u0000t\u0000o\u0000r\u0000i\u0000n\u0000g\u0000 \u0000s\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000s\u0000t\u0000a\u0000t\u0000i\u0000s\u0000t\u0000i\u0000c\u0000s\u0000.\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000A\u0000c\u0000c\u0000e\u0000s\u0000s\u0000i\u0000b\u0000l\u0000e\u0000 \u0000o\u0000n\u0000l\u0000y\u0000 \u0000t\u0000o\u0000 \u0000a\u0000u\u0000t\u0000h\u0000o\u0000r\u0000i\u0000z\u0000e\u0000d\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000.\u0000 \u0000U\u0000t\u0000i\u0000l\u0000i\u0000z\u0000e\u0000s\u0000 \u0000R\u0000e\u0000a\u0000c\u0000t\u0000 \u0000Q\u0000u\u0000e\u0000r\u0000y\u0000 \u0000f\u0000o\u0000r\u0000 \u0000d\u0000a\u0000t\u0000a\u0000 \u0000f\u0000e\u0000t\u0000c\u0000h\u0000i\u0000n\u0000g\u0000 \u0000a\u0000n\u0000d\u0000 \u0000F\u0000r\u0000a\u0000m\u0000e\u0000r\u0000 \u0000M\u0000o\u0000t\u0000i\u0000o\u0000n\u0000 \u0000f\u0000o\u0000r\u0000 \u0000a\u0000n\u0000i\u0000m\u0000a\u0000t\u0000i\u0000o\u0000n\u0000s\u0000.\u0000\r\u0000\n\u0000 \u0000*\u0000/\u0000\r\u0000\n\u0000\r\u0000\n\u0000i\u0000m\u0000p\u0000o\u0000r\u0000t\u0000 \u0000R\u0000e\u0000a\u0000c\u0000t\u0000,\u0000 \u0000{\u0000 \u0000u\u0000s\u0000e\u0000S\u0000t\u0000a\u0000t\u0000e\u0000,\u0000 \u0000u\u0000s\u0000e\u0000M\u0000e\u0000m\u0000o\u0000 \u0000}\u0000 \u0000f\u0000r\u0000o\u0000m\u0000 \u0000'\u0000r\u0000e\u0000a\u0000c\u0000t\u0000'\u0000;\u0000\r\u0000\n\u0000i\u0000m\u0000p\u0000o\u0000r\u0000t\u0000 \u0000{\u0000 \u0000u\u0000s\u0000e\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000,\u0000 \u0000u\u0000s\u0000e\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000C\u0000l\u0000i\u0000e\u0000n\u0000t\u0000 \u0000}\u0000 \u0000f\u0000r\u0000o\u0000m\u0000 \u0000'\u0000@\u0000t\u0000a\u0000n\u0000s\u0000t\u0000a\u0000c\u0000k\u0000/\u0000r\u0000e\u0000a\u0000c\u0000t\u0000-\u0000q\u0000u\u0000e\u0000r\u0000y\u0000'\u0000;\u0000\r\u0000\n\u0000i\u0000m\u0000p\u0000o\u0000r\u0000t\u0000 \u0000{\u0000 \u0000t\u0000o\u0000a\u0000s\u0000t\u0000 \u0000}\u0000 \u0000f\u0000r\u0000o\u0000m\u0000 \u0000'\u0000r\u0000e\u0000a\u0000c\u0000t\u0000-\u0000t\u0000o\u0000a\u0000s\u0000t\u0000i\u0000f\u0000y\u0000'\u0000;\u0000\r\u0000\n\u0000i\u0000m\u0000p\u0000o\u0000r\u0000t\u0000 \u0000{\u0000 \u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000D\u0000a\u0000t\u0000e\u0000 \u0000}\u0000 \u0000f\u0000r\u0000o\u0000m\u0000 \u0000'\u0000.\u0000.\u0000/\u0000.\u0000.\u0000/\u0000u\u0000t\u0000i\u0000l\u0000s\u0000/\u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000t\u0000e\u0000r\u0000s\u0000.\u0000j\u0000s\u0000'\u0000;\u0000\r\u0000\n\u0000i\u0000m\u0000p\u0000o\u0000r\u0000t\u0000 \u0000{\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000S\u0000e\u0000r\u0000v\u0000i\u0000c\u0000e\u0000,\u0000 \u0000U\u0000s\u0000e\u0000r\u0000,\u0000 \u0000S\u0000y\u0000s\u0000t\u0000e\u0000m\u0000L\u0000o\u0000g\u0000,\u0000 \u0000S\u0000y\u0000s\u0000t\u0000e\u0000m\u0000M\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000 \u0000}\u0000 \u0000f\u0000r\u0000o\u0000m\u0000 \u0000'\u0000.\u0000.\u0000/\u0000.\u0000.\u0000/\u0000s\u0000e\u0000r\u0000v\u0000i\u0000c\u0000e\u0000s\u0000/\u0000a\u0000d\u0000m\u0000i\u0000n\u0000S\u0000e\u0000r\u0000v\u0000i\u0000c\u0000e\u0000.\u0000j\u0000s\u0000'\u0000;\u0000\r\u0000\n\u0000i\u0000m\u0000p\u0000o\u0000r\u0000t\u0000 \u0000{\u0000 \u0000u\u0000s\u0000e\u0000A\u0000u\u0000t\u0000h\u0000 \u0000}\u0000 \u0000f\u0000r\u0000o\u0000m\u0000 \u0000'\u0000.\u0000.\u0000/\u0000.\u0000.\u0000/\u0000h\u0000o\u0000o\u0000k\u0000s\u0000/\u0000u\u0000s\u0000e\u0000A\u0000u\u0000t\u0000h\u0000.\u0000j\u0000s\u0000'\u0000;\u0000\r\u0000\n\u0000i\u0000m\u0000p\u0000o\u0000r\u0000t\u0000 \u0000{\u0000 \u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000 \u0000}\u0000 \u0000f\u0000r\u0000o\u0000m\u0000 \u0000'\u0000f\u0000r\u0000a\u0000m\u0000e\u0000r\u0000-\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000'\u0000;\u0000\r\u0000\n\u0000\r\u0000\n\u0000/\u0000/\u0000 \u0000T\u0000e\u0000m\u0000p\u0000o\u0000r\u0000a\u0000r\u0000y\u0000 \u0000f\u0000a\u0000l\u0000l\u0000b\u0000a\u0000c\u0000k\u0000 \u0000f\u0000o\u0000r\u0000 \u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000N\u0000u\u0000m\u0000b\u0000e\u0000r\u0000 \u0000i\u0000f\u0000 \u0000n\u0000o\u0000t\u0000 \u0000e\u0000x\u0000p\u0000o\u0000r\u0000t\u0000e\u0000d\u0000 \u0000f\u0000r\u0000o\u0000m\u0000 \u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000t\u0000e\u0000r\u0000s\u0000.\u0000j\u0000s\u0000\r\u0000\n\u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000N\u0000u\u0000m\u0000b\u0000e\u0000r\u0000 \u0000=\u0000 \u0000(\u0000v\u0000a\u0000l\u0000u\u0000e\u0000?\u0000:\u0000 \u0000n\u0000u\u0000m\u0000b\u0000e\u0000r\u0000)\u0000 \u0000=\u0000>\u0000 \u0000(\u0000t\u0000y\u0000p\u0000e\u0000o\u0000f\u0000 \u0000v\u0000a\u0000l\u0000u\u0000e\u0000 \u0000=\u0000=\u0000=\u0000 \u0000'\u0000n\u0000u\u0000m\u0000b\u0000e\u0000r\u0000'\u0000 \u0000?\u0000 \u0000v\u0000a\u0000l\u0000u\u0000e\u0000.\u0000t\u0000o\u0000L\u0000o\u0000c\u0000a\u0000l\u0000e\u0000S\u0000t\u0000r\u0000i\u0000n\u0000g\u0000(\u0000)\u0000 \u0000:\u0000 \u0000'\u0000'\u0000)\u0000;\u0000\r\u0000\n\u0000\r\u0000\n\u0000/\u0000*\u0000*\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000A\u0000d\u0000m\u0000i\u0000n\u0000P\u0000a\u0000n\u0000e\u0000l\u0000 \u0000c\u0000o\u0000m\u0000p\u0000o\u0000n\u0000e\u0000n\u0000t\u0000 \u0000p\u0000r\u0000o\u0000v\u0000i\u0000d\u0000e\u0000s\u0000 \u0000a\u0000n\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000i\u0000s\u0000t\u0000r\u0000a\u0000t\u0000i\u0000v\u0000e\u0000 \u0000i\u0000n\u0000t\u0000e\u0000r\u0000f\u0000a\u0000c\u0000e\u0000 \u0000f\u0000o\u0000r\u0000 \u0000m\u0000a\u0000n\u0000a\u0000g\u0000i\u0000n\u0000g\u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000,\u0000 \u0000v\u0000i\u0000e\u0000w\u0000i\u0000n\u0000g\u0000 \u0000s\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000l\u0000o\u0000g\u0000s\u0000,\u0000 \u0000a\u0000n\u0000d\u0000 \u0000m\u0000o\u0000n\u0000i\u0000t\u0000o\u0000r\u0000i\u0000n\u0000g\u0000 \u0000s\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000s\u0000t\u0000a\u0000t\u0000i\u0000s\u0000t\u0000i\u0000c\u0000s\u0000.\u0000\r\u0000\n\u0000 \u0000*\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000P\u0000r\u0000o\u0000p\u0000s\u0000:\u0000 \u0000N\u0000o\u0000n\u0000e\u0000\r\u0000\n\u0000 \u0000*\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000S\u0000t\u0000a\u0000t\u0000e\u0000:\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000-\u0000 \u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000T\u0000a\u0000b\u0000:\u0000 \u0000C\u0000o\u0000n\u0000t\u0000r\u0000o\u0000l\u0000s\u0000 \u0000w\u0000h\u0000i\u0000c\u0000h\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000 \u0000t\u0000a\u0000b\u0000 \u0000i\u0000s\u0000 \u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000 \u0000(\u0000'\u0000u\u0000s\u0000e\u0000r\u0000s\u0000'\u0000,\u0000 \u0000'\u0000l\u0000o\u0000g\u0000s\u0000'\u0000,\u0000 \u0000o\u0000r\u0000 \u0000'\u0000s\u0000t\u0000a\u0000t\u0000s\u0000'\u0000)\u0000.\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000-\u0000 \u0000s\u0000e\u0000a\u0000r\u0000c\u0000h\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000:\u0000 \u0000F\u0000i\u0000l\u0000t\u0000e\u0000r\u0000s\u0000 \u0000t\u0000h\u0000e\u0000 \u0000u\u0000s\u0000e\u0000r\u0000 \u0000l\u0000i\u0000s\u0000t\u0000 \u0000b\u0000y\u0000 \u0000n\u0000a\u0000m\u0000e\u0000 \u0000o\u0000r\u0000 \u0000e\u0000m\u0000a\u0000i\u0000l\u0000.\u0000\r\u0000\n\u0000 \u0000*\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000B\u0000e\u0000h\u0000a\u0000v\u0000i\u0000o\u0000r\u0000:\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000-\u0000 \u0000F\u0000e\u0000t\u0000c\u0000h\u0000e\u0000s\u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000,\u0000 \u0000l\u0000o\u0000g\u0000s\u0000,\u0000 \u0000a\u0000n\u0000d\u0000 \u0000s\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000 \u0000u\u0000s\u0000i\u0000n\u0000g\u0000 \u0000R\u0000e\u0000a\u0000c\u0000t\u0000 \u0000Q\u0000u\u0000e\u0000r\u0000y\u0000.\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000-\u0000 \u0000A\u0000l\u0000l\u0000o\u0000w\u0000s\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000 \u0000t\u0000o\u0000 \u0000u\u0000p\u0000d\u0000a\u0000t\u0000e\u0000 \u0000u\u0000s\u0000e\u0000r\u0000 \u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000 \u0000(\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000/\u0000s\u0000u\u0000s\u0000p\u0000e\u0000n\u0000d\u0000e\u0000d\u0000)\u0000.\u0000\r\u0000\n\u0000 \u0000*\u0000 \u0000-\u0000 \u0000D\u0000i\u0000s\u0000p\u0000l\u0000a\u0000y\u0000s\u0000 \u0000s\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000l\u0000o\u0000g\u0000s\u0000 \u0000a\u0000n\u0000d\u0000 \u0000k\u0000e\u0000y\u0000 \u0000s\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000.\u0000\r\u0000\n\u0000 \u0000*\u0000/\u0000\r\u0000\n\u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000A\u0000d\u0000m\u0000i\u0000n\u0000P\u0000a\u0000n\u0000e\u0000l\u0000:\u0000 \u0000R\u0000e\u0000a\u0000c\u0000t\u0000.\u0000F\u0000C\u0000 \u0000=\u0000 \u0000(\u0000)\u0000 \u0000=\u0000>\u0000 \u0000{\u0000\r\u0000\n\u0000 \u0000 \u0000u\u0000s\u0000e\u0000A\u0000u\u0000t\u0000h\u0000(\u0000)\u0000;\u0000\r\u0000\n\u0000 \u0000 \u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000C\u0000l\u0000i\u0000e\u0000n\u0000t\u0000 \u0000=\u0000 \u0000u\u0000s\u0000e\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000C\u0000l\u0000i\u0000e\u0000n\u0000t\u0000(\u0000)\u0000;\u0000\r\u0000\n\u0000 \u0000 \u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000[\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000T\u0000a\u0000b\u0000,\u0000 \u0000s\u0000e\u0000t\u0000A\u0000c\u0000t\u0000i\u0000v\u0000e\u0000T\u0000a\u0000b\u0000]\u0000 \u0000=\u0000 \u0000u\u0000s\u0000e\u0000S\u0000t\u0000a\u0000t\u0000e\u0000<\u0000'\u0000u\u0000s\u0000e\u0000r\u0000s\u0000'\u0000 \u0000|\u0000 \u0000'\u0000l\u0000o\u0000g\u0000s\u0000'\u0000 \u0000|\u0000 \u0000'\u0000s\u0000t\u0000a\u0000t\u0000s\u0000'\u0000>\u0000(\u0000'\u0000u\u0000s\u0000e\u0000r\u0000s\u0000'\u0000)\u0000;\u0000\r\u0000\n\u0000 \u0000 \u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000[\u0000s\u0000e\u0000a\u0000r\u0000c\u0000h\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000,\u0000 \u0000s\u0000e\u0000t\u0000S\u0000e\u0000a\u0000r\u0000c\u0000h\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000]\u0000 \u0000=\u0000 \u0000u\u0000s\u0000e\u0000S\u0000t\u0000a\u0000t\u0000e\u0000<\u0000s\u0000t\u0000r\u0000i\u0000n\u0000g\u0000>\u0000(\u0000'\u0000'\u0000)\u0000;\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000/\u0000/\u0000 \u0000F\u0000e\u0000t\u0000c\u0000h\u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000\r\u0000\n\u0000 \u0000 \u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000{\u0000 \u0000d\u0000a\u0000t\u0000a\u0000:\u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000,\u0000 \u0000i\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000:\u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000}\u0000 \u0000=\u0000 \u0000u\u0000s\u0000e\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000<\u0000U\u0000s\u0000e\u0000r\u0000[\u0000]\u0000>\u0000(\u0000{\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000K\u0000e\u0000y\u0000:\u0000 \u0000[\u0000'\u0000a\u0000d\u0000m\u0000i\u0000n\u0000-\u0000u\u0000s\u0000e\u0000r\u0000s\u0000'\u0000]\u0000,\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000F\u0000n\u0000:\u0000 \u0000(\u0000)\u0000 \u0000=\u0000>\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000S\u0000e\u0000r\u0000v\u0000i\u0000c\u0000e\u0000.\u0000g\u0000e\u0000t\u0000U\u0000s\u0000e\u0000r\u0000s\u0000(\u0000)\u0000,\u0000\r\u0000\n\u0000 \u0000 \u0000}\u0000)\u0000;\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000/\u0000/\u0000 \u0000F\u0000e\u0000t\u0000c\u0000h\u0000 \u0000l\u0000o\u0000g\u0000s\u0000\r\u0000\n\u0000 \u0000 \u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000{\u0000 \u0000d\u0000a\u0000t\u0000a\u0000:\u0000 \u0000l\u0000o\u0000g\u0000s\u0000,\u0000 \u0000i\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000:\u0000 \u0000l\u0000o\u0000g\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000}\u0000 \u0000=\u0000 \u0000u\u0000s\u0000e\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000<\u0000S\u0000y\u0000s\u0000t\u0000e\u0000m\u0000L\u0000o\u0000g\u0000[\u0000]\u0000>\u0000(\u0000{\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000K\u0000e\u0000y\u0000:\u0000 \u0000[\u0000'\u0000a\u0000d\u0000m\u0000i\u0000n\u0000-\u0000l\u0000o\u0000g\u0000s\u0000'\u0000]\u0000,\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000F\u0000n\u0000:\u0000 \u0000(\u0000)\u0000 \u0000=\u0000>\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000S\u0000e\u0000r\u0000v\u0000i\u0000c\u0000e\u0000.\u0000g\u0000e\u0000t\u0000L\u0000o\u0000g\u0000s\u0000(\u0000)\u0000,\u0000\r\u0000\n\u0000 \u0000 \u0000}\u0000)\u0000;\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000/\u0000/\u0000 \u0000F\u0000e\u0000t\u0000c\u0000h\u0000 \u0000s\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000\r\u0000\n\u0000 \u0000 \u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000{\u0000 \u0000d\u0000a\u0000t\u0000a\u0000:\u0000 \u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000,\u0000 \u0000i\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000:\u0000 \u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000}\u0000 \u0000=\u0000 \u0000u\u0000s\u0000e\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000<\u0000S\u0000y\u0000s\u0000t\u0000e\u0000m\u0000M\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000>\u0000(\u0000{\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000K\u0000e\u0000y\u0000:\u0000 \u0000[\u0000'\u0000a\u0000d\u0000m\u0000i\u0000n\u0000-\u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000'\u0000]\u0000,\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000F\u0000n\u0000:\u0000 \u0000(\u0000)\u0000 \u0000=\u0000>\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000S\u0000e\u0000r\u0000v\u0000i\u0000c\u0000e\u0000.\u0000g\u0000e\u0000t\u0000M\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000(\u0000)\u0000,\u0000\r\u0000\n\u0000 \u0000 \u0000}\u0000)\u0000;\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000/\u0000*\u0000*\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000*\u0000 \u0000U\u0000p\u0000d\u0000a\u0000t\u0000e\u0000s\u0000 \u0000t\u0000h\u0000e\u0000 \u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000 \u0000o\u0000f\u0000 \u0000a\u0000 \u0000u\u0000s\u0000e\u0000r\u0000 \u0000(\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000 \u0000o\u0000r\u0000 \u0000s\u0000u\u0000s\u0000p\u0000e\u0000n\u0000d\u0000e\u0000d\u0000)\u0000.\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000*\u0000 \u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000*\u0000 \u0000@\u0000p\u0000a\u0000r\u0000a\u0000m\u0000 \u0000u\u0000s\u0000e\u0000r\u0000I\u0000d\u0000 \u0000-\u0000 \u0000T\u0000h\u0000e\u0000 \u0000u\u0000n\u0000i\u0000q\u0000u\u0000e\u0000 \u0000i\u0000d\u0000e\u0000n\u0000t\u0000i\u0000f\u0000i\u0000e\u0000r\u0000 \u0000o\u0000f\u0000 \u0000t\u0000h\u0000e\u0000 \u0000u\u0000s\u0000e\u0000r\u0000 \u0000t\u0000o\u0000 \u0000u\u0000p\u0000d\u0000a\u0000t\u0000e\u0000.\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000*\u0000 \u0000@\u0000p\u0000a\u0000r\u0000a\u0000m\u0000 \u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000 \u0000-\u0000 \u0000T\u0000h\u0000e\u0000 \u0000n\u0000e\u0000w\u0000 \u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000 \u0000t\u0000o\u0000 \u0000s\u0000e\u0000t\u0000 \u0000f\u0000o\u0000r\u0000 \u0000t\u0000h\u0000e\u0000 \u0000u\u0000s\u0000e\u0000r\u0000 \u0000(\u0000'\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000'\u0000 \u0000o\u0000r\u0000 \u0000'\u0000s\u0000u\u0000s\u0000p\u0000e\u0000n\u0000d\u0000e\u0000d\u0000'\u0000)\u0000.\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000*\u0000 \u0000@\u0000s\u0000i\u0000d\u0000e\u0000E\u0000f\u0000f\u0000e\u0000c\u0000t\u0000 \u0000S\u0000h\u0000o\u0000w\u0000s\u0000 \u0000a\u0000 \u0000t\u0000o\u0000a\u0000s\u0000t\u0000 \u0000n\u0000o\u0000t\u0000i\u0000f\u0000i\u0000c\u0000a\u0000t\u0000i\u0000o\u0000n\u0000 \u0000o\u0000n\u0000 \u0000s\u0000u\u0000c\u0000c\u0000e\u0000s\u0000s\u0000 \u0000o\u0000r\u0000 \u0000f\u0000a\u0000i\u0000l\u0000u\u0000r\u0000e\u0000,\u0000 \u0000a\u0000n\u0000d\u0000 \u0000i\u0000n\u0000v\u0000a\u0000l\u0000i\u0000d\u0000a\u0000t\u0000e\u0000s\u0000 \u0000t\u0000h\u0000e\u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000 \u0000c\u0000a\u0000c\u0000h\u0000e\u0000.\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000*\u0000/\u0000\r\u0000\n\u0000 \u0000 \u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000h\u0000a\u0000n\u0000d\u0000l\u0000e\u0000U\u0000s\u0000e\u0000r\u0000S\u0000t\u0000a\u0000t\u0000u\u0000s\u0000U\u0000p\u0000d\u0000a\u0000t\u0000e\u0000 \u0000=\u0000 \u0000a\u0000s\u0000y\u0000n\u0000c\u0000 \u0000(\u0000u\u0000s\u0000e\u0000r\u0000I\u0000d\u0000:\u0000 \u0000s\u0000t\u0000r\u0000i\u0000n\u0000g\u0000,\u0000 \u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000:\u0000 \u0000'\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000'\u0000 \u0000|\u0000 \u0000'\u0000s\u0000u\u0000s\u0000p\u0000e\u0000n\u0000d\u0000e\u0000d\u0000'\u0000)\u0000 \u0000=\u0000>\u0000 \u0000{\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000t\u0000r\u0000y\u0000 \u0000{\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000a\u0000w\u0000a\u0000i\u0000t\u0000 \u0000a\u0000d\u0000m\u0000i\u0000n\u0000S\u0000e\u0000r\u0000v\u0000i\u0000c\u0000e\u0000.\u0000u\u0000p\u0000d\u0000a\u0000t\u0000e\u0000U\u0000s\u0000e\u0000r\u0000S\u0000t\u0000a\u0000t\u0000u\u0000s\u0000(\u0000u\u0000s\u0000e\u0000r\u0000I\u0000d\u0000,\u0000 \u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000)\u0000;\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000t\u0000o\u0000a\u0000s\u0000t\u0000.\u0000s\u0000u\u0000c\u0000c\u0000e\u0000s\u0000s\u0000(\u0000'\u0000U\u0000s\u0000e\u0000r\u0000 \u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000 \u0000u\u0000p\u0000d\u0000a\u0000t\u0000e\u0000d\u0000 \u0000s\u0000u\u0000c\u0000c\u0000e\u0000s\u0000s\u0000f\u0000u\u0000l\u0000l\u0000y\u0000'\u0000)\u0000;\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000C\u0000l\u0000i\u0000e\u0000n\u0000t\u0000.\u0000i\u0000n\u0000v\u0000a\u0000l\u0000i\u0000d\u0000a\u0000t\u0000e\u0000Q\u0000u\u0000e\u0000r\u0000i\u0000e\u0000s\u0000(\u0000{\u0000 \u0000q\u0000u\u0000e\u0000r\u0000y\u0000K\u0000e\u0000y\u0000:\u0000 \u0000[\u0000'\u0000a\u0000d\u0000m\u0000i\u0000n\u0000-\u0000u\u0000s\u0000e\u0000r\u0000s\u0000'\u0000]\u0000 \u0000}\u0000)\u0000;\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000}\u0000 \u0000c\u0000a\u0000t\u0000c\u0000h\u0000 \u0000{\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000t\u0000o\u0000a\u0000s\u0000t\u0000.\u0000e\u0000r\u0000r\u0000o\u0000r\u0000(\u0000'\u0000F\u0000a\u0000i\u0000l\u0000e\u0000d\u0000 \u0000t\u0000o\u0000 \u0000u\u0000p\u0000d\u0000a\u0000t\u0000e\u0000 \u0000u\u0000s\u0000e\u0000r\u0000 \u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000'\u0000)\u0000;\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000}\u0000;\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000c\u0000o\u0000n\u0000s\u0000t\u0000 \u0000f\u0000i\u0000l\u0000t\u0000e\u0000r\u0000e\u0000d\u0000U\u0000s\u0000e\u0000r\u0000s\u0000 \u0000=\u0000 \u0000u\u0000s\u0000e\u0000M\u0000e\u0000m\u0000o\u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000(\u0000)\u0000 \u0000=\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000?\u0000.\u0000f\u0000i\u0000l\u0000t\u0000e\u0000r\u0000(\u0000(\u0000u\u0000s\u0000e\u0000r\u0000:\u0000 \u0000U\u0000s\u0000e\u0000r\u0000)\u0000 \u0000=\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000u\u0000s\u0000e\u0000r\u0000.\u0000e\u0000m\u0000a\u0000i\u0000l\u0000.\u0000t\u0000o\u0000L\u0000o\u0000w\u0000e\u0000r\u0000C\u0000a\u0000s\u0000e\u0000(\u0000)\u0000.\u0000i\u0000n\u0000c\u0000l\u0000u\u0000d\u0000e\u0000s\u0000(\u0000s\u0000e\u0000a\u0000r\u0000c\u0000h\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000.\u0000t\u0000o\u0000L\u0000o\u0000w\u0000e\u0000r\u0000C\u0000a\u0000s\u0000e\u0000(\u0000)\u0000)\u0000 \u0000|\u0000|\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000u\u0000s\u0000e\u0000r\u0000.\u0000n\u0000a\u0000m\u0000e\u0000.\u0000t\u0000o\u0000L\u0000o\u0000w\u0000e\u0000r\u0000C\u0000a\u0000s\u0000e\u0000(\u0000)\u0000.\u0000i\u0000n\u0000c\u0000l\u0000u\u0000d\u0000e\u0000s\u0000(\u0000s\u0000e\u0000a\u0000r\u0000c\u0000h\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000.\u0000t\u0000o\u0000L\u0000o\u0000w\u0000e\u0000r\u0000C\u0000a\u0000s\u0000e\u0000(\u0000)\u0000)\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000,\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000[\u0000u\u0000s\u0000e\u0000r\u0000s\u0000,\u0000 \u0000s\u0000e\u0000a\u0000r\u0000c\u0000h\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000]\u0000\r\u0000\n\u0000 \u0000 \u0000)\u0000;\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000r\u0000e\u0000t\u0000u\u0000r\u0000n\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000<\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000i\u0000n\u0000i\u0000t\u0000i\u0000a\u0000l\u0000=\u0000{\u0000{\u0000 \u0000o\u0000p\u0000a\u0000c\u0000i\u0000t\u0000y\u0000:\u0000 \u00000\u0000 \u0000}\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000a\u0000n\u0000i\u0000m\u0000a\u0000t\u0000e\u0000=\u0000{\u0000{\u0000 \u0000o\u0000p\u0000a\u0000c\u0000i\u0000t\u0000y\u0000:\u0000 \u00001\u0000 \u0000}\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000e\u0000x\u0000i\u0000t\u0000=\u0000{\u0000{\u0000 \u0000o\u0000p\u0000a\u0000c\u0000i\u0000t\u0000y\u0000:\u0000 \u00000\u0000 \u0000}\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000-\u00006\u0000 \u0000s\u0000p\u0000a\u0000c\u0000e\u0000-\u0000y\u0000-\u00006\u0000\"\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000/\u0000*\u0000 \u0000H\u0000e\u0000a\u0000d\u0000e\u0000r\u0000 \u0000*\u0000/\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000f\u0000l\u0000e\u0000x\u0000 \u0000j\u0000u\u0000s\u0000t\u0000i\u0000f\u0000y\u0000-\u0000b\u0000e\u0000t\u0000w\u0000e\u0000e\u0000n\u0000 \u0000i\u0000t\u0000e\u0000m\u0000s\u0000-\u0000c\u0000e\u0000n\u0000t\u0000e\u0000r\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000h\u00001\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u00003\u0000x\u0000l\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000b\u0000o\u0000l\u0000d\u0000 \u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000d\u0000i\u0000e\u0000n\u0000t\u0000-\u0000t\u0000o\u0000-\u0000r\u0000 \u0000f\u0000r\u0000o\u0000m\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000t\u0000o\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00007\u00000\u00000\u0000 \u0000b\u0000g\u0000-\u0000c\u0000l\u0000i\u0000p\u0000-\u0000t\u0000e\u0000x\u0000t\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000t\u0000r\u0000a\u0000n\u0000s\u0000p\u0000a\u0000r\u0000e\u0000n\u0000t\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000A\u0000d\u0000m\u0000i\u0000n\u0000 \u0000P\u0000a\u0000n\u0000e\u0000l\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000h\u00001\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000f\u0000l\u0000e\u0000x\u0000 \u0000s\u0000p\u0000a\u0000c\u0000e\u0000-\u0000x\u0000-\u00004\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000i\u0000n\u0000p\u0000u\u0000t\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000t\u0000y\u0000p\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000\"\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000p\u0000l\u0000a\u0000c\u0000e\u0000h\u0000o\u0000l\u0000d\u0000e\u0000r\u0000=\u0000\"\u0000S\u0000e\u0000a\u0000r\u0000c\u0000h\u0000 \u0000u\u0000s\u0000e\u0000r\u0000s\u0000.\u0000.\u0000.\u0000\"\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000v\u0000a\u0000l\u0000u\u0000e\u0000=\u0000{\u0000s\u0000e\u0000a\u0000r\u0000c\u0000h\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000o\u0000n\u0000C\u0000h\u0000a\u0000n\u0000g\u0000e\u0000=\u0000{\u0000(\u0000e\u0000)\u0000 \u0000=\u0000>\u0000 \u0000s\u0000e\u0000t\u0000S\u0000e\u0000a\u0000r\u0000c\u0000h\u0000Q\u0000u\u0000e\u0000r\u0000y\u0000(\u0000e\u0000.\u0000t\u0000a\u0000r\u0000g\u0000e\u0000t\u0000.\u0000v\u0000a\u0000l\u0000u\u0000e\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000f\u0000o\u0000r\u0000m\u0000-\u0000i\u0000n\u0000p\u0000u\u0000t\u0000\"\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000/\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000/\u0000*\u0000 \u0000T\u0000a\u0000b\u0000s\u0000 \u0000*\u0000/\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000b\u0000 \u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00002\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00007\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000n\u0000a\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000f\u0000l\u0000e\u0000x\u0000 \u0000s\u0000p\u0000a\u0000c\u0000e\u0000-\u0000x\u0000-\u00008\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000(\u0000[\u0000'\u0000u\u0000s\u0000e\u0000r\u0000s\u0000'\u0000,\u0000 \u0000'\u0000l\u0000o\u0000g\u0000s\u0000'\u0000,\u0000 \u0000'\u0000s\u0000t\u0000a\u0000t\u0000s\u0000'\u0000]\u0000 \u0000a\u0000s\u0000 \u0000c\u0000o\u0000n\u0000s\u0000t\u0000)\u0000.\u0000m\u0000a\u0000p\u0000(\u0000(\u0000t\u0000a\u0000b\u0000)\u0000 \u0000=\u0000>\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000b\u0000u\u0000t\u0000t\u0000o\u0000n\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000k\u0000e\u0000y\u0000=\u0000{\u0000t\u0000a\u0000b\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000o\u0000n\u0000C\u0000l\u0000i\u0000c\u0000k\u0000=\u0000{\u0000(\u0000)\u0000 \u0000=\u0000>\u0000 \u0000s\u0000e\u0000t\u0000A\u0000c\u0000t\u0000i\u0000v\u0000e\u0000T\u0000a\u0000b\u0000(\u0000t\u0000a\u0000b\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000{\u0000`\u0000p\u0000y\u0000-\u00004\u0000 \u0000p\u0000x\u0000-\u00001\u0000 \u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000b\u0000-\u00002\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000s\u0000m\u0000 \u0000$\u0000{\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000T\u0000a\u0000b\u0000 \u0000=\u0000=\u0000=\u0000 \u0000t\u0000a\u0000b\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000?\u0000 \u0000'\u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00006\u00000\u00000\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000:\u0000 \u0000'\u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000t\u0000r\u0000a\u0000n\u0000s\u0000p\u0000a\u0000r\u0000e\u0000n\u0000t\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000h\u0000o\u0000v\u0000e\u0000r\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00007\u00000\u00000\u0000 \u0000h\u0000o\u0000v\u0000e\u0000r\u0000:\u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00003\u00000\u00000\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000}\u0000`\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000t\u0000a\u0000b\u0000.\u0000c\u0000h\u0000a\u0000r\u0000A\u0000t\u0000(\u00000\u0000)\u0000.\u0000t\u0000o\u0000U\u0000p\u0000p\u0000e\u0000r\u0000C\u0000a\u0000s\u0000e\u0000(\u0000)\u0000 \u0000+\u0000 \u0000t\u0000a\u0000b\u0000.\u0000s\u0000l\u0000i\u0000c\u0000e\u0000(\u00001\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000b\u0000u\u0000t\u0000t\u0000o\u0000n\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000n\u0000a\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000/\u0000*\u0000 \u0000C\u0000o\u0000n\u0000t\u0000e\u0000n\u0000t\u0000 \u0000*\u0000/\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000m\u0000t\u0000-\u00006\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000T\u0000a\u0000b\u0000 \u0000=\u0000=\u0000=\u0000 \u0000'\u0000u\u0000s\u0000e\u0000r\u0000s\u0000'\u0000 \u0000&\u0000&\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000g\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00008\u00000\u00000\u0000 \u0000s\u0000h\u0000a\u0000d\u0000o\u0000w\u0000 \u0000r\u0000o\u0000u\u0000n\u0000d\u0000e\u0000d\u0000-\u0000l\u0000g\u0000 \u0000o\u0000v\u0000e\u0000r\u0000f\u0000l\u0000o\u0000w\u0000-\u0000h\u0000i\u0000d\u0000d\u0000e\u0000n\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000a\u0000b\u0000l\u0000e\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000m\u0000i\u0000n\u0000-\u0000w\u0000-\u0000f\u0000u\u0000l\u0000l\u0000 \u0000d\u0000i\u0000v\u0000i\u0000d\u0000e\u0000-\u0000y\u0000 \u0000d\u0000i\u0000v\u0000i\u0000d\u0000e\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00002\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000d\u0000i\u0000v\u0000i\u0000d\u0000e\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00007\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000h\u0000e\u0000a\u0000d\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00007\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000r\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000h\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00003\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000l\u0000e\u0000f\u0000t\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000x\u0000s\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00003\u00000\u00000\u0000 \u0000u\u0000p\u0000p\u0000e\u0000r\u0000c\u0000a\u0000s\u0000e\u0000 \u0000t\u0000r\u0000a\u0000c\u0000k\u0000i\u0000n\u0000g\u0000-\u0000w\u0000i\u0000d\u0000e\u0000r\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000U\u0000s\u0000e\u0000r\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000h\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000h\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00003\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000l\u0000e\u0000f\u0000t\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000x\u0000s\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00003\u00000\u00000\u0000 \u0000u\u0000p\u0000p\u0000e\u0000r\u0000c\u0000a\u0000s\u0000e\u0000 \u0000t\u0000r\u0000a\u0000c\u0000k\u0000i\u0000n\u0000g\u0000-\u0000w\u0000i\u0000d\u0000e\u0000r\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000S\u0000t\u0000a\u0000t\u0000u\u0000s\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000h\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000h\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00003\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000l\u0000e\u0000f\u0000t\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000x\u0000s\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00003\u00000\u00000\u0000 \u0000u\u0000p\u0000p\u0000e\u0000r\u0000c\u0000a\u0000s\u0000e\u0000 \u0000t\u0000r\u0000a\u0000c\u0000k\u0000i\u0000n\u0000g\u0000-\u0000w\u0000i\u0000d\u0000e\u0000r\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000R\u0000o\u0000l\u0000e\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000h\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000h\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00003\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000l\u0000e\u0000f\u0000t\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000x\u0000s\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00003\u00000\u00000\u0000 \u0000u\u0000p\u0000p\u0000e\u0000r\u0000c\u0000a\u0000s\u0000e\u0000 \u0000t\u0000r\u0000a\u0000c\u0000k\u0000i\u0000n\u0000g\u0000-\u0000w\u0000i\u0000d\u0000e\u0000r\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000L\u0000a\u0000s\u0000t\u0000 \u0000L\u0000o\u0000g\u0000i\u0000n\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000h\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000h\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00003\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000r\u0000i\u0000g\u0000h\u0000t\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000x\u0000s\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00003\u00000\u00000\u0000 \u0000u\u0000p\u0000p\u0000e\u0000r\u0000c\u0000a\u0000s\u0000e\u0000 \u0000t\u0000r\u0000a\u0000c\u0000k\u0000i\u0000n\u0000g\u0000-\u0000w\u0000i\u0000d\u0000e\u0000r\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000A\u0000c\u0000t\u0000i\u0000o\u0000n\u0000s\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000h\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000r\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000h\u0000e\u0000a\u0000d\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000b\u0000o\u0000d\u0000y\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000g\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00008\u00000\u00000\u0000 \u0000d\u0000i\u0000v\u0000i\u0000d\u0000e\u0000-\u0000y\u0000 \u0000d\u0000i\u0000v\u0000i\u0000d\u0000e\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00002\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000d\u0000i\u0000v\u0000i\u0000d\u0000e\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00007\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000u\u0000s\u0000e\u0000r\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000?\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000r\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000d\u0000 \u0000c\u0000o\u0000l\u0000S\u0000p\u0000a\u0000n\u0000=\u0000{\u00005\u0000}\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00004\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000c\u0000e\u0000n\u0000t\u0000e\u0000r\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000.\u0000.\u0000.\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000d\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000r\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000 \u0000:\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000f\u0000i\u0000l\u0000t\u0000e\u0000r\u0000e\u0000d\u0000U\u0000s\u0000e\u0000r\u0000s\u0000?\u0000.\u0000m\u0000a\u0000p\u0000(\u0000(\u0000u\u0000s\u0000e\u0000r\u0000:\u0000 \u0000U\u0000s\u0000e\u0000r\u0000)\u0000 \u0000=\u0000>\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000r\u0000 \u0000k\u0000e\u0000y\u0000=\u0000{\u0000u\u0000s\u0000e\u0000r\u0000.\u0000i\u0000d\u0000}\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000d\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00004\u0000 \u0000w\u0000h\u0000i\u0000t\u0000e\u0000s\u0000p\u0000a\u0000c\u0000e\u0000-\u0000n\u0000o\u0000w\u0000r\u0000a\u0000p\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000f\u0000l\u0000e\u0000x\u0000 \u0000i\u0000t\u0000e\u0000m\u0000s\u0000-\u0000c\u0000e\u0000n\u0000t\u0000e\u0000r\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000s\u0000m\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00009\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000u\u0000s\u0000e\u0000r\u0000.\u0000n\u0000a\u0000m\u0000e\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000s\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00004\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000u\u0000s\u0000e\u0000r\u0000.\u0000e\u0000m\u0000a\u0000i\u0000l\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000d\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000d\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00004\u0000 \u0000w\u0000h\u0000i\u0000t\u0000e\u0000s\u0000p\u0000a\u0000c\u0000e\u0000-\u0000n\u0000o\u0000w\u0000r\u0000a\u0000p\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000s\u0000p\u0000a\u0000n\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000{\u0000`\u0000p\u0000x\u0000-\u00002\u0000 \u0000i\u0000n\u0000l\u0000i\u0000n\u0000e\u0000-\u0000f\u0000l\u0000e\u0000x\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000x\u0000s\u0000 \u0000l\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000-\u00005\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000s\u0000e\u0000m\u0000i\u0000b\u0000o\u0000l\u0000d\u0000 \u0000r\u0000o\u0000u\u0000n\u0000d\u0000e\u0000d\u0000-\u0000f\u0000u\u0000l\u0000l\u0000 \u0000$\u0000{\u0000u\u0000s\u0000e\u0000r\u0000.\u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000 \u0000=\u0000=\u0000=\u0000 \u0000'\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000?\u0000 \u0000'\u0000b\u0000g\u0000-\u0000g\u0000r\u0000e\u0000e\u0000n\u0000-\u00001\u00000\u00000\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000e\u0000e\u0000n\u0000-\u00008\u00000\u00000\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000:\u0000 \u0000'\u0000b\u0000g\u0000-\u0000r\u0000e\u0000d\u0000-\u00001\u00000\u00000\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000r\u0000e\u0000d\u0000-\u00008\u00000\u00000\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000}\u0000`\u0000}\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000u\u0000s\u0000e\u0000r\u0000.\u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000s\u0000p\u0000a\u0000n\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000d\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000d\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00004\u0000 \u0000w\u0000h\u0000i\u0000t\u0000e\u0000s\u0000p\u0000a\u0000c\u0000e\u0000-\u0000n\u0000o\u0000w\u0000r\u0000a\u0000p\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000s\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00004\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000u\u0000s\u0000e\u0000r\u0000.\u0000r\u0000o\u0000l\u0000e\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000d\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000d\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00004\u0000 \u0000w\u0000h\u0000i\u0000t\u0000e\u0000s\u0000p\u0000a\u0000c\u0000e\u0000-\u0000n\u0000o\u0000w\u0000r\u0000a\u0000p\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000s\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00004\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000D\u0000a\u0000t\u0000e\u0000(\u0000u\u0000s\u0000e\u0000r\u0000.\u0000l\u0000a\u0000s\u0000t\u0000L\u0000o\u0000g\u0000i\u0000n\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000d\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000t\u0000d\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00004\u0000 \u0000w\u0000h\u0000i\u0000t\u0000e\u0000s\u0000p\u0000a\u0000c\u0000e\u0000-\u0000n\u0000o\u0000w\u0000r\u0000a\u0000p\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000r\u0000i\u0000g\u0000h\u0000t\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000s\u0000m\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000b\u0000u\u0000t\u0000t\u0000o\u0000n\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000o\u0000n\u0000C\u0000l\u0000i\u0000c\u0000k\u0000=\u0000{\u0000(\u0000)\u0000 \u0000=\u0000>\u0000 \u0000h\u0000a\u0000n\u0000d\u0000l\u0000e\u0000U\u0000s\u0000e\u0000r\u0000S\u0000t\u0000a\u0000t\u0000u\u0000s\u0000U\u0000p\u0000d\u0000a\u0000t\u0000e\u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000u\u0000s\u0000e\u0000r\u0000.\u0000i\u0000d\u0000,\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000u\u0000s\u0000e\u0000r\u0000.\u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000 \u0000=\u0000=\u0000=\u0000 \u0000'\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000'\u0000 \u0000?\u0000 \u0000'\u0000s\u0000u\u0000s\u0000p\u0000e\u0000n\u0000d\u0000e\u0000d\u0000'\u0000 \u0000:\u0000 \u0000'\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00006\u00000\u00000\u0000 \u0000h\u0000o\u0000v\u0000e\u0000r\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00009\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000h\u0000o\u0000v\u0000e\u0000r\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00004\u00000\u00000\u0000\"\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000u\u0000s\u0000e\u0000r\u0000.\u0000s\u0000t\u0000a\u0000t\u0000u\u0000s\u0000 \u0000=\u0000=\u0000=\u0000 \u0000'\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000'\u0000 \u0000?\u0000 \u0000'\u0000S\u0000u\u0000s\u0000p\u0000e\u0000n\u0000d\u0000'\u0000 \u0000:\u0000 \u0000'\u0000A\u0000c\u0000t\u0000i\u0000v\u0000a\u0000t\u0000e\u0000'\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000b\u0000u\u0000t\u0000t\u0000o\u0000n\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000d\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000r\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000)\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000b\u0000o\u0000d\u0000y\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000t\u0000a\u0000b\u0000l\u0000e\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000}\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000T\u0000a\u0000b\u0000 \u0000=\u0000=\u0000=\u0000 \u0000'\u0000l\u0000o\u0000g\u0000s\u0000'\u0000 \u0000&\u0000&\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000g\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00008\u00000\u00000\u0000 \u0000s\u0000h\u0000a\u0000d\u0000o\u0000w\u0000 \u0000r\u0000o\u0000u\u0000n\u0000d\u0000e\u0000d\u0000-\u0000l\u0000g\u0000 \u0000o\u0000v\u0000e\u0000r\u0000f\u0000l\u0000o\u0000w\u0000-\u0000h\u0000i\u0000d\u0000d\u0000e\u0000n\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00004\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000h\u00003\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000l\u0000g\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00009\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000\"\u0000>\u0000S\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000L\u0000o\u0000g\u0000s\u0000<\u0000/\u0000h\u00003\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000t\u0000 \u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00002\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000o\u0000r\u0000d\u0000e\u0000r\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00007\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000l\u0000o\u0000g\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000?\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00004\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000c\u0000e\u0000n\u0000t\u0000e\u0000r\u0000\"\u0000>\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000.\u0000.\u0000.\u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000 \u0000:\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000d\u0000i\u0000v\u0000i\u0000d\u0000e\u0000-\u0000y\u0000 \u0000d\u0000i\u0000v\u0000i\u0000d\u0000e\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00002\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000d\u0000i\u0000v\u0000i\u0000d\u0000e\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00007\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000l\u0000o\u0000g\u0000s\u0000?\u0000.\u0000m\u0000a\u0000p\u0000(\u0000(\u0000l\u0000o\u0000g\u0000:\u0000 \u0000S\u0000y\u0000s\u0000t\u0000e\u0000m\u0000L\u0000o\u0000g\u0000)\u0000 \u0000=\u0000>\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000k\u0000e\u0000y\u0000=\u0000{\u0000l\u0000o\u0000g\u0000.\u0000i\u0000d\u0000}\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000p\u0000x\u0000-\u00006\u0000 \u0000p\u0000y\u0000-\u00004\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000f\u0000l\u0000e\u0000x\u0000 \u0000i\u0000t\u0000e\u0000m\u0000s\u0000-\u0000c\u0000e\u0000n\u0000t\u0000e\u0000r\u0000 \u0000j\u0000u\u0000s\u0000t\u0000i\u0000f\u0000y\u0000-\u0000b\u0000e\u0000t\u0000w\u0000e\u0000e\u0000n\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000p\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000s\u0000m\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00009\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000l\u0000o\u0000g\u0000.\u0000m\u0000e\u0000s\u0000s\u0000a\u0000g\u0000e\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000p\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000p\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000s\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00005\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00004\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000D\u0000a\u0000t\u0000e\u0000(\u0000l\u0000o\u0000g\u0000.\u0000t\u0000i\u0000m\u0000e\u0000s\u0000t\u0000a\u0000m\u0000p\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000p\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000s\u0000p\u0000a\u0000n\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000{\u0000`\u0000p\u0000x\u0000-\u00002\u0000 \u0000i\u0000n\u0000l\u0000i\u0000n\u0000e\u0000-\u0000f\u0000l\u0000e\u0000x\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000x\u0000s\u0000 \u0000l\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000-\u00005\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000s\u0000e\u0000m\u0000i\u0000b\u0000o\u0000l\u0000d\u0000 \u0000r\u0000o\u0000u\u0000n\u0000d\u0000e\u0000d\u0000-\u0000f\u0000u\u0000l\u0000l\u0000 \u0000$\u0000{\u0000l\u0000o\u0000g\u0000.\u0000l\u0000e\u0000v\u0000e\u0000l\u0000 \u0000=\u0000=\u0000=\u0000 \u0000'\u0000e\u0000r\u0000r\u0000o\u0000r\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000?\u0000 \u0000'\u0000b\u0000g\u0000-\u0000r\u0000e\u0000d\u0000-\u00001\u00000\u00000\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000r\u0000e\u0000d\u0000-\u00008\u00000\u00000\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000:\u0000 \u0000l\u0000o\u0000g\u0000.\u0000l\u0000e\u0000v\u0000e\u0000l\u0000 \u0000=\u0000=\u0000=\u0000 \u0000'\u0000w\u0000a\u0000r\u0000n\u0000i\u0000n\u0000g\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000?\u0000 \u0000'\u0000b\u0000g\u0000-\u0000y\u0000e\u0000l\u0000l\u0000o\u0000w\u0000-\u00001\u00000\u00000\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000y\u0000e\u0000l\u0000l\u0000o\u0000w\u0000-\u00008\u00000\u00000\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000:\u0000 \u0000'\u0000b\u0000g\u0000-\u0000g\u0000r\u0000e\u0000e\u0000n\u0000-\u00001\u00000\u00000\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000e\u0000e\u0000n\u0000-\u00008\u00000\u00000\u0000'\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000}\u0000`\u0000}\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000l\u0000o\u0000g\u0000.\u0000l\u0000e\u0000v\u0000e\u0000l\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000s\u0000p\u0000a\u0000n\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000}\u0000\r\u0000\n\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000T\u0000a\u0000b\u0000 \u0000=\u0000=\u0000=\u0000 \u0000'\u0000s\u0000t\u0000a\u0000t\u0000s\u0000'\u0000 \u0000&\u0000&\u0000 \u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000d\u0000i\u0000v\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000g\u0000r\u0000i\u0000d\u0000 \u0000g\u0000r\u0000i\u0000d\u0000-\u0000c\u0000o\u0000l\u0000s\u0000-\u00001\u0000 \u0000m\u0000d\u0000:\u0000g\u0000r\u0000i\u0000d\u0000-\u0000c\u0000o\u0000l\u0000s\u0000-\u00002\u0000 \u0000l\u0000g\u0000:\u0000g\u0000r\u0000i\u0000d\u0000-\u0000c\u0000o\u0000l\u0000s\u0000-\u00004\u0000 \u0000g\u0000a\u0000p\u0000-\u00006\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000w\u0000h\u0000i\u0000l\u0000e\u0000H\u0000o\u0000v\u0000e\u0000r\u0000=\u0000{\u0000{\u0000 \u0000s\u0000c\u0000a\u0000l\u0000e\u0000:\u0000 \u00001\u0000.\u00000\u00002\u0000 \u0000}\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000g\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00008\u00000\u00000\u0000 \u0000p\u0000-\u00006\u0000 \u0000r\u0000o\u0000u\u0000n\u0000d\u0000e\u0000d\u0000-\u0000l\u0000g\u0000 \u0000s\u0000h\u0000a\u0000d\u0000o\u0000w\u0000\"\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000h\u00003\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000l\u0000g\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00009\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000\"\u0000>\u0000T\u0000o\u0000t\u0000a\u0000l\u0000 \u0000U\u0000s\u0000e\u0000r\u0000s\u0000<\u0000/\u0000h\u00003\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000p\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000m\u0000t\u0000-\u00002\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u00003\u0000x\u0000l\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000b\u0000o\u0000l\u0000d\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00006\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000?\u0000 \u0000'\u0000.\u0000.\u0000.\u0000'\u0000 \u0000:\u0000 \u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000N\u0000u\u0000m\u0000b\u0000e\u0000r\u0000(\u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000?\u0000.\u0000t\u0000o\u0000t\u0000a\u0000l\u0000U\u0000s\u0000e\u0000r\u0000s\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000p\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000w\u0000h\u0000i\u0000l\u0000e\u0000H\u0000o\u0000v\u0000e\u0000r\u0000=\u0000{\u0000{\u0000 \u0000s\u0000c\u0000a\u0000l\u0000e\u0000:\u0000 \u00001\u0000.\u00000\u00002\u0000 \u0000}\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000g\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00008\u00000\u00000\u0000 \u0000p\u0000-\u00006\u0000 \u0000r\u0000o\u0000u\u0000n\u0000d\u0000e\u0000d\u0000-\u0000l\u0000g\u0000 \u0000s\u0000h\u0000a\u0000d\u0000o\u0000w\u0000\"\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000h\u00003\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000l\u0000g\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00009\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000\"\u0000>\u0000A\u0000c\u0000t\u0000i\u0000v\u0000e\u0000 \u0000S\u0000e\u0000s\u0000s\u0000i\u0000o\u0000n\u0000s\u0000<\u0000/\u0000h\u00003\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000p\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000m\u0000t\u0000-\u00002\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u00003\u0000x\u0000l\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000b\u0000o\u0000l\u0000d\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00006\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000?\u0000 \u0000'\u0000.\u0000.\u0000.\u0000'\u0000 \u0000:\u0000 \u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000N\u0000u\u0000m\u0000b\u0000e\u0000r\u0000(\u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000?\u0000.\u0000a\u0000c\u0000t\u0000i\u0000v\u0000e\u0000S\u0000e\u0000s\u0000s\u0000i\u0000o\u0000n\u0000s\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000p\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000w\u0000h\u0000i\u0000l\u0000e\u0000H\u0000o\u0000v\u0000e\u0000r\u0000=\u0000{\u0000{\u0000 \u0000s\u0000c\u0000a\u0000l\u0000e\u0000:\u0000 \u00001\u0000.\u00000\u00002\u0000 \u0000}\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000g\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00008\u00000\u00000\u0000 \u0000p\u0000-\u00006\u0000 \u0000r\u0000o\u0000u\u0000n\u0000d\u0000e\u0000d\u0000-\u0000l\u0000g\u0000 \u0000s\u0000h\u0000a\u0000d\u0000o\u0000w\u0000\"\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000h\u00003\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000l\u0000g\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00009\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000\"\u0000>\u0000T\u0000o\u0000t\u0000a\u0000l\u0000 \u0000P\u0000r\u0000e\u0000d\u0000i\u0000c\u0000t\u0000i\u0000o\u0000n\u0000s\u0000<\u0000/\u0000h\u00003\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000p\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000m\u0000t\u0000-\u00002\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u00003\u0000x\u0000l\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000b\u0000o\u0000l\u0000d\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00006\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000?\u0000 \u0000'\u0000.\u0000.\u0000.\u0000'\u0000 \u0000:\u0000 \u0000f\u0000o\u0000r\u0000m\u0000a\u0000t\u0000N\u0000u\u0000m\u0000b\u0000e\u0000r\u0000(\u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000?\u0000.\u0000t\u0000o\u0000t\u0000a\u0000l\u0000P\u0000r\u0000e\u0000d\u0000i\u0000c\u0000t\u0000i\u0000o\u0000n\u0000s\u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000p\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000w\u0000h\u0000i\u0000l\u0000e\u0000H\u0000o\u0000v\u0000e\u0000r\u0000=\u0000{\u0000{\u0000 \u0000s\u0000c\u0000a\u0000l\u0000e\u0000:\u0000 \u00001\u0000.\u00000\u00002\u0000 \u0000}\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000b\u0000g\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000b\u0000g\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00008\u00000\u00000\u0000 \u0000p\u0000-\u00006\u0000 \u0000r\u0000o\u0000u\u0000n\u0000d\u0000e\u0000d\u0000-\u0000l\u0000g\u0000 \u0000s\u0000h\u0000a\u0000d\u0000o\u0000w\u0000\"\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000h\u00003\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000t\u0000e\u0000x\u0000t\u0000-\u0000l\u0000g\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000m\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000g\u0000r\u0000a\u0000y\u0000-\u00009\u00000\u00000\u0000 \u0000d\u0000a\u0000r\u0000k\u0000:\u0000t\u0000e\u0000x\u0000t\u0000-\u0000w\u0000h\u0000i\u0000t\u0000e\u0000\"\u0000>\u0000S\u0000y\u0000s\u0000t\u0000e\u0000m\u0000 \u0000U\u0000p\u0000t\u0000i\u0000m\u0000e\u0000<\u0000/\u0000h\u00003\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000p\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000N\u0000a\u0000m\u0000e\u0000=\u0000\"\u0000m\u0000t\u0000-\u00002\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u00003\u0000x\u0000l\u0000 \u0000f\u0000o\u0000n\u0000t\u0000-\u0000b\u0000o\u0000l\u0000d\u0000 \u0000t\u0000e\u0000x\u0000t\u0000-\u0000p\u0000r\u0000i\u0000m\u0000a\u0000r\u0000y\u0000-\u00006\u00000\u00000\u0000\"\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000{\u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000?\u0000 \u0000'\u0000.\u0000.\u0000.\u0000'\u0000 \u0000:\u0000 \u0000m\u0000e\u0000t\u0000r\u0000i\u0000c\u0000s\u0000?\u0000.\u0000u\u0000p\u0000t\u0000i\u0000m\u0000e\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000p\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000)\u0000}\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000<\u0000/\u0000m\u0000o\u0000t\u0000i\u0000o\u0000n\u0000.\u0000d\u0000i\u0000v\u0000>\u0000\r\u0000\n\u0000 \u0000 \u0000)\u0000;\u0000\r\u0000\n\u0000}\u0000;\u0000\r\u0000\n\u0000\r\u0000\n\u0000e\u0000x\u0000p\u0000o\u0000r\u0000t\u0000 \u0000d\u0000e\u0000f\u0000a\u0000u\u0000l\u0000t\u0000 \u0000A\u0000d\u0000m\u0000i\u0000n\u0000P\u0000a\u0000n\u0000e\u0000l\u0000;\u0000\r\u0000\n\u0000","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\AdminSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\ErrorLogs.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\ErrorLogs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\ErrorLogs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\ModelSettings.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\ModelSettings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\admin\\ModelSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\advanced\\WhatIfSimulator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\advanced\\WhatIfSimulator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\advanced\\WhatIfSimulator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\AdvancedAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\AdvancedAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\AdvancedAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\AdvancedAnalyticsHub.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\AdvancedAnalyticsHub.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\AdvancedAnalyticsHub.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\AnalyticsDashboard.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\AnalyticsDashboard.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\AnalyticsDashboard.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\CleanAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\CleanAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ClusteringInsights.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ClusteringInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ClusteringInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ConsolidatedUniversalAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ConsolidatedUniversalAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\EnsembleInsights.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\EnsembleInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\EnsembleInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\EvolutionaryInsights.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\EvolutionaryInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\EvolutionaryInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\FeatureInsights.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\FeatureInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\FeatureInsights.tsx","messages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useShapData\" is called conditionally. React Hooks must be called in the exact same order in every component render.","line":101,"column":17,"nodeType":"Identifier","endLine":101,"endColumn":28}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport {\n  LineChart,\n  Line,\n  BarChart,\n  Bar,\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  RadarChart,\n  Radar,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from 'recharts';\nimport ShapVisualization from '../ShapVisualization';\nimport { useShapData } from '../../hooks/useShapData';\n\ninterface FeatureInsightsProps {\n  features: {\n    name: string;\n    importance: number;\n    correlation: number;\n    entropy: number;\n    uniqueness: number;\n    missing: number;\n    stats: {\n      mean: number;\n      std: number;\n      min: number;\n      max: number;\n      q25: number;\n      q50: number;\n      q75: number;\n    };\n  }[];\n  interactions: {\n    feature1: string;\n    feature2: string;\n    strength: number;\n    type: 'linear' | 'nonlinear' | 'categorical';\n  }[];\n  embeddings: {\n    feature: string;\n    vector: number[];\n  }[];\n  signals: {\n    source: string;\n    features: {\n      name: string;\n      value: number;\n      impact: number;\n    }[];\n  }[];\n  eventId?: string; // Optional, for SHAP\n  modelType?: string;\n}\n\nconst FeatureInsights: React.FC<FeatureInsightsProps> = ({\n  features,\n  interactions,\n  embeddings,\n  signals,\n  eventId,\n  modelType,\n}) => {\n  // Sort features by importance\n  const sortedFeatures = [...features].sort((a, b) => b.importance - a.importance);\n\n  // Prepare data for visualizations\n  const featureMetrics = sortedFeatures.map(feature => ({\n    name: feature.name,\n    importance: feature.importance,\n    correlation: Math.abs(feature.correlation),\n    entropy: feature.entropy,\n    uniqueness: feature.uniqueness,\n    missing: feature.missing,\n  }));\n\n  const featureStats = sortedFeatures.map(feature => ({\n    name: feature.name,\n    ...feature.stats,\n  }));\n\n  const interactionData = interactions.map(interaction => ({\n    name: `${interaction.feature1} × ${interaction.feature2}`,\n    strength: interaction.strength,\n    type: interaction.type,\n  }));\n\n  // SHAP integration\n  const {\n    features: shapFeatures,\n    loading: shapLoading,\n    error: shapError,\n  } = eventId ? useShapData({ eventId, modelType }) : { features: [], loading: false, error: null };\n\n  return (\n    <div className=\"space-y-8\">\n      {/* SHAP Feature Importance Section */}\n      {eventId && (\n        <section className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-2xl font-bold mb-4\">Model Feature Importance (SHAP)</h2>\n          {shapLoading ? (\n            <div className=\"text-gray-500\">Loading SHAP values...</div>\n          ) : shapError ? (\n            <div className=\"text-red-500\">{shapError}</div>\n          ) : shapFeatures.length > 0 ? (\n            <ShapVisualization\n              features={shapFeatures.map(f => ({\n                name: f.feature,\n                value: f.value,\n                impact: f.impact,\n              }))}\n              maxFeatures={10}\n              title=\"SHAP Feature Impact\"\n            />\n          ) : (\n            <div className=\"text-gray-400\">No SHAP data available for this event/model.</div>\n          )}\n        </section>\n      )}\n\n      {/* Feature Importance Section */}\n      <section className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-2xl font-bold mb-4\">Feature Importance</h2>\n        <div className=\"h-96\">\n          <ResponsiveContainer height=\"100%\" width=\"100%\">\n            <BarChart data={featureMetrics}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis angle={-45} dataKey=\"name\" height={100} textAnchor=\"end\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"importance\" fill=\"#3B82F6\" name=\"Importance Score\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </section>\n\n      {/* Feature Metrics Section */}\n      <section className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-2xl font-bold mb-4\">Feature Metrics</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h3 className=\"text-lg font-semibold mb-2\">Correlation Analysis</h3>\n            <ResponsiveContainer height={300} width=\"100%\">\n              <RadarChart data={featureMetrics}>\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"name\" />\n                <PolarRadiusAxis />\n                <Radar\n                  dataKey=\"correlation\"\n                  fill=\"#93C5FD\"\n                  fillOpacity={0.6}\n                  name=\"Correlation\"\n                  stroke=\"#3B82F6\"\n                />\n              </RadarChart>\n            </ResponsiveContainer>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold mb-2\">Feature Quality</h3>\n            <ResponsiveContainer height={300} width=\"100%\">\n              <BarChart data={featureMetrics}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"entropy\" fill=\"#10B981\" name=\"Entropy\" />\n                <Bar dataKey=\"uniqueness\" fill=\"#6366F1\" name=\"Uniqueness\" />\n                <Bar dataKey=\"missing\" fill=\"#EF4444\" name=\"Missing Values\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </section>\n\n      {/* Feature Statistics Section */}\n      <section className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-2xl font-bold mb-4\">Feature Statistics</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Feature\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Mean\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Std Dev\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Min\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Q25\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Median\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Q75\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Max\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {featureStats.map(stat => (\n                <tr key={stat.name}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {stat.name}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {stat.mean.toFixed(4)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {stat.std.toFixed(4)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {stat.min.toFixed(4)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {stat.q25.toFixed(4)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {stat.q50.toFixed(4)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {stat.q75.toFixed(4)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {stat.max.toFixed(4)}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      {/* Feature Interactions Section */}\n      <section className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-2xl font-bold mb-4\">Feature Interactions</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h3 className=\"text-lg font-semibold mb-2\">Interaction Strength</h3>\n            <ResponsiveContainer height={300} width=\"100%\">\n              <BarChart data={interactionData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis angle={-45} dataKey=\"name\" height={100} textAnchor=\"end\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"strength\" fill=\"#3B82F6\" name=\"Interaction Strength\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold mb-2\">Interaction Types</h3>\n            <div className=\"space-y-2\">\n              {interactionData.map((interaction, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center justify-between p-2 bg-gray-50 rounded\"\n                >\n                  <span className=\"text-gray-600\">{interaction.name}</span>\n                  <span\n                    className={`px-2 py-1 rounded text-white ${\n                      interaction.type === 'linear'\n                        ? 'bg-blue-500'\n                        : interaction.type === 'nonlinear'\n                          ? 'bg-purple-500'\n                          : 'bg-green-500'\n                    }`}\n                  >\n                    {interaction.type}\n                  </span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* External Signals Section */}\n      <section className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-2xl font-bold mb-4\">External Signals</h2>\n        <div className=\"space-y-6\">\n          {signals.map((signal, index) => (\n            <div key={index}>\n              <h3 className=\"text-lg font-semibold mb-2\">{signal.source} Features</h3>\n              <ResponsiveContainer height={200} width=\"100%\">\n                <BarChart data={signal.features}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"value\" fill=\"#3B82F6\" name=\"Value\" />\n                  <Bar dataKey=\"impact\" fill=\"#10B981\" name=\"Impact\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(FeatureInsights);\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\HyperMLInsights.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\HyperMLInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\HyperMLInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\MLInsights.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\MLInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\MLInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ModelComparison.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ModelComparison.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ModelComparison.tsx","messages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useModelPerformance\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.","line":59,"column":47,"nodeType":"Identifier","endLine":59,"endColumn":66}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material';\nimport {\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Radar,\n  Legend,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\nimport { useModelPerformance } from '../../hooks/useModelPerformance';\n\ninterface ModelComparisonProps {\n  modelNames: string[];\n}\n\ntype MetricType =\n  | 'roi'\n  | 'winRate'\n  | 'profitFactor'\n  | 'sharpeRatio'\n  | 'maxDrawdown'\n  | 'kellyCriterion'\n  | 'expectedValue'\n  | 'calibrationScore';\n\nexport const ModelComparison: React.FC<ModelComparisonProps> = ({ modelNames }) => {\n  const [selectedMetric, setSelectedMetric] = useState<MetricType>('roi');\n  const [timeframe, setTimeframe] = useState<'day' | 'week' | 'month' | 'all'>('week');\n  const [viewMode, setViewMode] = useState<'table' | 'radar' | 'bar'>('table');\n\n  const modelPerformances = modelNames.map(modelName => {\n    const { performance, isLoading, error } = useModelPerformance(modelName, timeframe);\n    return { modelName, performance, isLoading, error };\n  });\n\n  const formatMetric = (value: number, type: 'percentage' | 'currency' | 'number' = 'number') => {\n    if (type === 'percentage') {\n      return `${(value * 100).toFixed(1)}%`;\n    }\n    if (type === 'currency') {\n      return `$${value.toFixed(2)}`;\n    }\n    return value.toFixed(2);\n  };\n\n  const getMetricType = (metric: MetricType): 'percentage' | 'currency' | 'number' => {\n    switch (metric) {\n      case 'roi':\n      case 'winRate':\n      case 'maxDrawdown':\n      case 'kellyCriterion':\n        return 'percentage';\n      case 'expectedValue':\n        return 'currency';\n      default:\n        return 'number';\n    }\n  };\n\n  const getMetricColor = (value: number, metric: MetricType) => {\n    if (metric === 'maxDrawdown') {\n      return value > 0.2 ? 'error.main' : value > 0.1 ? 'warning.main' : 'success.main';\n    }\n    if (metric === 'calibrationScore') {\n      return value > 0.8 ? 'success.main' : value > 0.6 ? 'warning.main' : 'error.main';\n    }\n    if (metric === 'kellyCriterion') {\n      return value > 0.1 ? 'success.main' : value > 0.05 ? 'warning.main' : 'error.main';\n    }\n    if (value > 0) return 'success.main';\n    if (value < 0) return 'error.main';\n    return 'text.primary';\n  };\n\n  const metrics: { value: MetricType; label: string }[] = [\n    { value: 'roi', label: 'ROI' },\n    { value: 'winRate', label: 'Win Rate' },\n    { value: 'profitFactor', label: 'Profit Factor' },\n    { value: 'sharpeRatio', label: 'Sharpe Ratio' },\n    { value: 'maxDrawdown', label: 'Max Drawdown' },\n    { value: 'kellyCriterion', label: 'Kelly Criterion' },\n    { value: 'expectedValue', label: 'Expected Value' },\n    { value: 'calibrationScore', label: 'Calibration Score' },\n  ];\n\n  const radarData = modelPerformances\n    .map(({ modelName, performance }) => {\n      if (!performance) return null;\n      return {\n        model: modelName,\n        ROI: performance.roi * 100,\n        'Win Rate': performance.winRate * 100,\n        'Profit Factor': performance.profitFactor,\n        'Sharpe Ratio': performance.sharpeRatio,\n        Calibration: performance.calibrationScore * 100,\n      };\n    })\n    .filter((data): data is NonNullable<typeof data> => data !== null);\n\n  const barData = modelPerformances\n    .map(({ modelName, performance }) => {\n      if (!performance) return null;\n      return {\n        model: modelName,\n        value: performance[selectedMetric],\n        formattedValue: formatMetric(performance[selectedMetric], getMetricType(selectedMetric)),\n      };\n    })\n    .filter(Boolean);\n\n  return (\n    <Card>\n      <CardContent>\n        <Box alignItems=\"center\" display=\"flex\" justifyContent=\"space-between\" mb={3}>\n          <Typography variant=\"h6\">Model Comparison</Typography>\n          <Box display=\"flex\" gap={2}>\n            <ToggleButtonGroup\n              exclusive\n              size=\"small\"\n              value={viewMode}\n              onChange={(_, newMode) => newMode && setViewMode(newMode)}\n            >\n              <ToggleButton value=\"table\">Table</ToggleButton>\n              <ToggleButton value=\"radar\">Radar</ToggleButton>\n              <ToggleButton value=\"bar\">Bar</ToggleButton>\n            </ToggleButtonGroup>\n            <FormControl sx={{ minWidth: 120 }}>\n              <InputLabel>Metric</InputLabel>\n              <Select\n                label=\"Metric\"\n                value={selectedMetric}\n                onChange={e => setSelectedMetric(e.target.value as MetricType)}\n              >\n                {metrics.map(metric => (\n                  <MenuItem key={metric.value} value={metric.value}>\n                    {metric.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl sx={{ minWidth: 120 }}>\n              <InputLabel>Timeframe</InputLabel>\n              <Select\n                label=\"Timeframe\"\n                value={timeframe}\n                onChange={e => setTimeframe(e.target.value as 'day' | 'week' | 'month' | 'all')}\n              >\n                <MenuItem value=\"day\">Last 24 Hours</MenuItem>\n                <MenuItem value=\"week\">Last Week</MenuItem>\n                <MenuItem value=\"month\">Last Month</MenuItem>\n                <MenuItem value=\"all\">All Time</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </Box>\n\n        {viewMode === 'table' ? (\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Model</TableCell>\n                  {metrics.map(metric => (\n                    <TableCell\n                      key={metric.value}\n                      sx={{\n                        backgroundColor:\n                          selectedMetric === metric.value ? 'action.selected' : 'inherit',\n                      }}\n                    >\n                      {metric.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {modelPerformances.map(({ modelName, performance, isLoading, error }) => (\n                  <TableRow key={modelName}>\n                    <TableCell>{modelName}</TableCell>\n                    {metrics.map(metric => (\n                      <TableCell\n                        key={metric.value}\n                        sx={{\n                          color: performance\n                            ? getMetricColor(performance[metric.value], metric.value)\n                            : 'inherit',\n                        }}\n                      >\n                        {isLoading\n                          ? 'Loading...'\n                          : error\n                            ? 'Error'\n                            : performance\n                              ? formatMetric(performance[metric.value], getMetricType(metric.value))\n                              : 'N/A'}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        ) : viewMode === 'radar' ? (\n          <Box height={500}>\n            <ResponsiveContainer height=\"100%\" width=\"100%\">\n              <RadarChart data={radarData}>\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"model\" />\n                <PolarRadiusAxis angle={30} domain={[0, 100]} />\n                {radarData.map((data, index) => (\n                  <Radar\n                    key={data.model}\n                    dataKey={Object.keys(data).filter(key => key !== 'model')[0]}\n                    fill={`hsla(${(index * 360) / radarData.length}, 70%, 50%, 0.2)`}\n                    name={data.model}\n                    stroke={`hsl(${(index * 360) / radarData.length}, 70%, 50%)`}\n                  />\n                ))}\n                <Legend />\n              </RadarChart>\n            </ResponsiveContainer>\n          </Box>\n        ) : (\n          <Box height={500}>\n            <ResponsiveContainer height=\"100%\" width=\"100%\">\n              <BarChart data={barData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"model\" />\n                <YAxis />\n                <Tooltip\n                  formatter={(value: number) => formatMetric(value, getMetricType(selectedMetric))}\n                  labelFormatter={label =>\n                    `${label} - ${metrics.find(m => m.value === selectedMetric)?.label}`\n                  }\n                />\n                <Bar\n                  dataKey=\"value\"\n                  fill={`hsl(${Math.random() * 360}, 70%, 50%)`}\n                  name={metrics.find(m => m.value === selectedMetric)?.label}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ModelComparisonChart.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ModelComparisonChart.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ModelComparisonChart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ModelPerformanceDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ModelPerformanceDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ModelPerformanceDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PerformanceAlerts.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PerformanceAlerts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PerformanceAlerts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PerformanceAnalyticsDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PerformanceAnalyticsDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PerformanceAnalyticsDashboard.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has an unnecessary dependency: 'userId'. Either exclude it or remove the dependency array.","line":339,"column":6,"nodeType":"ArrayExpression","endLine":339,"endColumn":33,"suggestions":[{"desc":"Update the dependencies array to be: [selectedTimeRange]","fix":{"range":[8110,8137],"text":"[selectedTimeRange]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Analytics,\n  Assessment,\n  Download,\n  EmojiEvents,\n  Insights,\n  PieChart,\n  PrecisionManufacturing,\n  Psychology,\n  Refresh,\n  ShowChart,\n  Timeline,\n  TrendingDown,\n  TrendingUp,\n  Warning\n} from \"@mui/icons-material\";\nimport {\n  Alert,\n  Avatar,\n  Badge,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Chip,\n  CircularProgress,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputLabel,\n  LinearProgress,\n  MenuItem,\n  Paper,\n  Select,\n  Stack,\n  Switch,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tabs,\n  Tooltip,\n  Typography\n} from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  Area,\n  AreaChart,\n  Bar,\n  CartesianGrid,\n  Cell,\n  ComposedChart,\n  Legend,\n  Line,\n  Pie,\n  PolarAngleAxis,\n  PolarGrid,\n  PolarRadiusAxis,\n  Radar,\n  RadarChart,\n  BarChart as RechartsBarChart,\n  PieChart as RechartsPieChart,\n  Tooltip as RechartsTooltip,\n  ResponsiveContainer,\n  XAxis,\n  YAxis\n} from \"recharts\";\nimport { useUnifiedAnalytics } from \"../../hooks/useUnifiedAnalytics\";\nimport {\n  formatCurrency,\n  formatPercentage\n} from \"../../utils/formatters\";\n\ninterface PerformanceMetrics {\n  totalBets: number;\n  winRate: number;\n  roi: number;\n  profitLoss: number;\n  avgOdds: number;\n  avgStake: number;\n  sharpeRatio: number;\n  maxDrawdown: number;\n  winStreak: number;\n  lossStreak: number;\n  profitFactor: number;\n  kellyOptimal: number;\n  consistencyScore: number;\n  riskAdjustedReturn: number;\n  confidenceAccuracy: number;\n  modelAccuracy: number;\n}\n\ninterface PredictionPerformance {\n  modelName: string;\n  accuracy: number;\n  precision: number;\n  recall: number;\n  f1Score: number;\n  calibration: number;\n  coverage: number;\n  totalPredictions: number;\n  profitContribution: number;\n  avgConfidence: number;\n  riskAdjustedScore: number;\n}\n\ninterface TimeSeriesData {\n  timestamp: string;\n  cumulativeProfit: number;\n  winRate: number;\n  roi: number;\n  confidence: number;\n  volume: number;\n  drawdown: number;\n}\n\ninterface CategoryPerformance {\n  category: string;\n  bets: number;\n  winRate: number;\n  roi: number;\n  profit: number;\n  avgOdds: number;\n  riskLevel: \"low\" | \"medium\" | \"high\";\n}\n\ninterface PerformanceAnalyticsDashboardProps {\n  userId?: string;\n  timeRange?: \"7d\" | \"30d\" | \"90d\" | \"1y\" | \"all\";\n  showAdvancedMetrics?: boolean;\n}\n\nconst COLORS = {\n  primary: \"#1976d2\",\n  secondary: \"#dc004e\",\n  success: \"#2e7d32\",\n  warning: \"#ed6c02\",\n  error: \"#d32f2f\",\n  info: \"#0288d1\",\n};\n\nconst PIE_COLORS = [\n  \"#0088FE\",\n  \"#00C49F\",\n  \"#FFBB28\",\n  \"#FF8042\",\n  \"#8884D8\",\n  \"#82ca9d\",\n];\n\nexport const PerformanceAnalyticsDashboard: React.FC<\n  PerformanceAnalyticsDashboardProps\n> = ({ userId = \"default\", timeRange = \"30d\", showAdvancedMetrics = true }) => {\n  // State Management\n  const [activeTab, setActiveTab] = useState(0);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(timeRange);\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\");\n  const [showComparison, setShowComparison] = useState(false);\n  const [benchmarkData, setBenchmarkData] = useState<any>(null);\n\n  // Performance Data State\n  const [metrics, setMetrics] = useState<PerformanceMetrics | null>(null);\n  const [predictions, setPredictions] = useState<PredictionPerformance[]>([]);\n  const [timeSeriesData, setTimeSeriesData] = useState<TimeSeriesData[]>([]);\n  const [categoryPerformance, setCategoryPerformance] = useState<\n    CategoryPerformance[]\n  >([]);\n\n  // UI State\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\n\n  // Analytics Hook\n  const { performance, ml, betting } = useUnifiedAnalytics({\n    performance: true,\n    ml: {\n      autoUpdate: true,\n      updateInterval: 60000\n    },\n    betting: true,\n  });\n\n  // Load Performance Data\n  const loadPerformanceData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Simulate loading performance data\n      const mockMetrics: PerformanceMetrics = {\n        totalBets: 1247,\n        winRate: 0.624,\n        roi: 0.142,\n        profitLoss: 8432.5,\n        avgOdds: 2.15,\n        avgStake: 125.0,\n        sharpeRatio: 1.73,\n        maxDrawdown: -0.085,\n        winStreak: 12,\n        lossStreak: 5,\n        profitFactor: 1.89,\n        kellyOptimal: 0.08,\n        consistencyScore: 0.78,\n        riskAdjustedReturn: 0.196,\n        confidenceAccuracy: 0.856,\n        modelAccuracy: 0.681,\n      };\n\n      const mockPredictions: PredictionPerformance[] = [\n        {\n          modelName: \"Ensemble ML\",\n          accuracy: 0.725,\n          precision: 0.698,\n          recall: 0.742,\n          f1Score: 0.719,\n          calibration: 0.891,\n          coverage: 0.856,\n          totalPredictions: 456,\n          profitContribution: 3247.8,\n          avgConfidence: 0.724,\n          riskAdjustedScore: 0.832,\n        },\n        {\n          modelName: \"Deep Learning\",\n          accuracy: 0.689,\n          precision: 0.672,\n          recall: 0.698,\n          f1Score: 0.685,\n          calibration: 0.823,\n          coverage: 0.779,\n          totalPredictions: 389,\n          profitContribution: 2156.4,\n          avgConfidence: 0.689,\n          riskAdjustedScore: 0.756,\n        },\n        {\n          modelName: \"Random Forest\",\n          accuracy: 0.651,\n          precision: 0.634,\n          recall: 0.669,\n          f1Score: 0.651,\n          calibration: 0.778,\n          coverage: 0.712,\n          totalPredictions: 402,\n          profitContribution: 1843.3,\n          avgConfidence: 0.651,\n          riskAdjustedScore: 0.698,\n        },\n      ];\n\n      // Generate time series data\n      const mockTimeSeriesData: TimeSeriesData[] = [];\n      const startDate = new Date();\n      startDate.setDate(\n        startDate.getDate() - parseInt(selectedTimeRange.replace(/\\D/g, \"\")) ||\n        30,\n      );\n\n      let cumulativeProfit = 0;\n      for (let i = 0; i < 30; i++) {\n        const date = new Date(startDate);\n        date.setDate(date.getDate() + i);\n\n        const dailyReturn = (Math.random() - 0.45) * 200; // Slight positive bias\n        cumulativeProfit += dailyReturn;\n\n        mockTimeSeriesData.push({\n          timestamp: date.toISOString().split(\"T\")[0],\n          cumulativeProfit,\n          winRate: 0.55 + (Math.random() - 0.5) * 0.2,\n          roi: 0.12 + (Math.random() - 0.5) * 0.1,\n          confidence: 0.7 + (Math.random() - 0.5) * 0.3,\n          volume: Math.floor(Math.random() * 50) + 20,\n          drawdown: Math.min(\n            0,\n            cumulativeProfit -\n            Math.max(...mockTimeSeriesData.map((d) => d.cumulativeProfit), 0),\n          ),\n        });\n      }\n\n      const mockCategoryPerformance: CategoryPerformance[] = [\n        {\n          category: \"NBA Points\",\n          bets: 234,\n          winRate: 0.647,\n          roi: 0.178,\n          profit: 2341.5,\n          avgOdds: 1.95,\n          riskLevel: \"medium\",\n        },\n        {\n          category: \"NFL Spreads\",\n          bets: 187,\n          winRate: 0.598,\n          roi: 0.142,\n          profit: 1876.2,\n          avgOdds: 1.91,\n          riskLevel: \"high\",\n        },\n        {\n          category: \"MLB Over/Under\",\n          bets: 156,\n          winRate: 0.673,\n          roi: 0.203,\n          profit: 1987.4,\n          avgOdds: 2.08,\n          riskLevel: \"low\",\n        },\n        {\n          category: \"Soccer Goals\",\n          bets: 98,\n          winRate: 0.612,\n          roi: 0.089,\n          profit: 789.6,\n          avgOdds: 2.45,\n          riskLevel: \"high\",\n        },\n      ];\n\n      setMetrics(mockMetrics);\n      setPredictions(mockPredictions);\n      setTimeSeriesData(mockTimeSeriesData);\n      setCategoryPerformance(mockCategoryPerformance);\n      setLastUpdate(new Date());\n    } catch (err) {\n      setError(\"Failed to load performance data\");\n      console.error(\"Performance data loading error:\", err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedTimeRange, userId]);\n\n  // Load data on mount and when dependencies change\n  useEffect(() => {\n    loadPerformanceData();\n  }, [loadPerformanceData]);\n\n  // Computed Values\n  const filteredCategoryData = useMemo(() => {\n    if (selectedCategory === \"all\") return categoryPerformance;\n    return categoryPerformance.filter(\n      (cat) => cat.category === selectedCategory,\n    );\n  }, [categoryPerformance, selectedCategory]);\n\n  const performanceGrade = useMemo(() => {\n    if (!metrics) return \"N/A\";\n\n    const score =\n      (metrics.winRate > 0.6 ? 20 : metrics.winRate * 33.33) +\n      (metrics.roi > 0.15 ? 20 : metrics.roi * 133.33) +\n      (metrics.sharpeRatio > 1.5 ? 20 : metrics.sharpeRatio * 13.33) +\n      metrics.consistencyScore * 20 +\n      (metrics.riskAdjustedReturn > 0.15\n        ? 20\n        : metrics.riskAdjustedReturn * 133.33);\n\n    if (score >= 85) return \"A+\";\n    if (score >= 80) return \"A\";\n    if (score >= 75) return \"B+\";\n    if (score >= 70) return \"B\";\n    if (score >= 65) return \"C+\";\n    if (score >= 60) return \"C\";\n    return \"D\";\n  }, [metrics]);\n\n  const radarChartData = useMemo(() => {\n    if (!metrics) return [];\n\n    return [\n      {\n        metric: \"Win Rate\",\n        value: metrics.winRate * 100,\n        fullMark: 100,\n      },\n      {\n        metric: \"ROI\",\n        value: Math.min(metrics.roi * 500, 100), // Scale to 100\n        fullMark: 100,\n      },\n      {\n        metric: \"Sharpe Ratio\",\n        value: Math.min(metrics.sharpeRatio * 33.33, 100),\n        fullMark: 100,\n      },\n      {\n        metric: \"Consistency\",\n        value: metrics.consistencyScore * 100,\n        fullMark: 100,\n      },\n      {\n        metric: \"Confidence Accuracy\",\n        value: metrics.confidenceAccuracy * 100,\n        fullMark: 100,\n      },\n      {\n        metric: \"Model Accuracy\",\n        value: metrics.modelAccuracy * 100,\n        fullMark: 100,\n      },\n    ];\n  }, [metrics]);\n\n  // Export Function\n  const exportPerformanceReport = useCallback(() => {\n    const exportData = {\n      timestamp: new Date().toISOString(),\n      userId,\n      timeRange: selectedTimeRange,\n      performanceGrade,\n      metrics,\n      predictions,\n      categoryPerformance,\n      summary: {\n        totalProfit: metrics?.profitLoss || 0,\n        winRate: metrics?.winRate || 0,\n        roi: metrics?.roi || 0,\n        sharpeRatio: metrics?.sharpeRatio || 0,\n        bestCategory:\n          categoryPerformance.length > 0\n            ? categoryPerformance.reduce(\n              (best, cat) => (cat.roi > best.roi ? cat : best),\n              categoryPerformance[0]\n            ).category\n            : \"N/A\",\n        topModel:\n          predictions.length > 0\n            ? predictions.reduce(\n              (top, pred) => (pred.accuracy > top.accuracy ? pred : top),\n              predictions[0]\n            ).modelName\n            : \"N/A\",\n      },\n    };\n\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: \"application/json\",\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `performance-report-${userId}-${Date.now()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }, [\n    userId,\n    selectedTimeRange,\n    performanceGrade,\n    metrics,\n    predictions,\n    categoryPerformance,\n  ]);\n\n  if (isLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height={400}\n      >\n        <CircularProgress size={60} />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert\n        severity=\"error\"\n        action={\n          <Button color=\"inherit\" size=\"small\" onClick={loadPerformanceData}>\n            Retry\n          </Button>\n        }\n      >\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"w-full\"\n    >\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            mb={2}\n          >\n            <Typography\n              variant=\"h5\"\n              component=\"h2\"\n              sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}\n            >\n              <Analytics />\n              Performance Analytics Dashboard\n              <Badge\n                badgeContent={performanceGrade}\n                color={\n                  performanceGrade.startsWith(\"A\")\n                    ? \"success\"\n                    : performanceGrade.startsWith(\"B\")\n                      ? \"warning\"\n                      : \"error\"\n                }\n                sx={{ ml: 1 }}\n              >\n                <EmojiEvents />\n              </Badge>\n            </Typography>\n            <Box display=\"flex\" gap={1} alignItems=\"center\">\n              <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n                <InputLabel>Time Range</InputLabel>\n                <Select\n                  value={selectedTimeRange}\n                  onChange={(e) => setSelectedTimeRange(e.target.value as any)}\n                >\n                  <MenuItem value=\"7d\">7 Days</MenuItem>\n                  <MenuItem value=\"30d\">30 Days</MenuItem>\n                  <MenuItem value=\"90d\">90 Days</MenuItem>\n                  <MenuItem value=\"1y\">1 Year</MenuItem>\n                  <MenuItem value=\"all\">All Time</MenuItem>\n                </Select>\n              </FormControl>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={showComparison}\n                    onChange={(e) => setShowComparison(e.target.checked)}\n                  />\n                }\n                label=\"Benchmark\"\n              />\n              <Tooltip title=\"Last updated\">\n                <Chip\n                  label={lastUpdate.toLocaleTimeString()}\n                  size=\"small\"\n                  icon={<Timeline />}\n                />\n              </Tooltip>\n              <IconButton onClick={loadPerformanceData}>\n                <Refresh />\n              </IconButton>\n              <IconButton onClick={exportPerformanceReport}>\n                <Download />\n              </IconButton>\n            </Box>\n          </Box>\n\n          {/* Performance Overview Cards */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-6 gap-4 mb-6\">\n            <div>\n              <Paper sx={{ p: 2, textAlign: \"center\" }}>\n                <Typography variant=\"h4\" color=\"primary.main\">\n                  {formatCurrency(metrics?.profitLoss || 0)}\n                </Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  Total P&L\n                </Typography>\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  mt={1}\n                >\n                  {(metrics?.profitLoss || 0) > 0 ? (\n                    <TrendingUp color=\"success\" fontSize=\"small\" />\n                  ) : (\n                    <TrendingDown color=\"error\" fontSize=\"small\" />\n                  )}\n                </Box>\n              </Paper>\n            </div>\n\n            <div>\n              <Paper sx={{ p: 2, textAlign: \"center\" }}>\n                <Typography variant=\"h4\" color=\"secondary.main\">\n                  {formatPercentage(metrics?.winRate || 0)}\n                </Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  Win Rate\n                </Typography>\n                <Box mt={1}>\n                  <Chip\n                    label={\n                      (metrics?.winRate || 0) > 0.6\n                        ? \"Excellent\"\n                        : (metrics?.winRate || 0) > 0.55\n                          ? \"Good\"\n                          : \"Needs Improvement\"\n                    }\n                    color={\n                      (metrics?.winRate || 0) > 0.6\n                        ? \"success\"\n                        : (metrics?.winRate || 0) > 0.55\n                          ? \"warning\"\n                          : \"error\"\n                    }\n                    size=\"small\"\n                  />\n                </Box>\n              </Paper>\n            </div>\n\n            <div>\n              <Paper sx={{ p: 2, textAlign: \"center\" }}>\n                <Typography variant=\"h4\" color=\"success.main\">\n                  {formatPercentage(metrics?.roi || 0)}\n                </Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  ROI\n                </Typography>\n                <Box mt={1}>\n                  <LinearProgress\n                    variant=\"determinate\"\n                    value={Math.min((metrics?.roi || 0) * 500, 100)}\n                    color={\n                      (metrics?.roi || 0) > 0.15\n                        ? \"success\"\n                        : (metrics?.roi || 0) > 0.05\n                          ? \"warning\"\n                          : \"error\"\n                    }\n                  />\n                </Box>\n              </Paper>\n            </div>\n\n            <div>\n              <Paper sx={{ p: 2, textAlign: \"center\" }}>\n                <Typography variant=\"h4\" color=\"info.main\">\n                  {(metrics?.sharpeRatio || 0).toFixed(2)}\n                </Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  Sharpe Ratio\n                </Typography>\n                <Box mt={1}>\n                  <Chip\n                    label={\n                      (metrics?.sharpeRatio || 0) > 1.5\n                        ? \"Excellent\"\n                        : (metrics?.sharpeRatio || 0) > 1.0\n                          ? \"Good\"\n                          : \"Fair\"\n                    }\n                    color={\n                      (metrics?.sharpeRatio || 0) > 1.5\n                        ? \"success\"\n                        : (metrics?.sharpeRatio || 0) > 1.0\n                          ? \"warning\"\n                          : \"default\"\n                    }\n                    size=\"small\"\n                  />\n                </Box>\n              </Paper>\n            </div>\n\n            <div>\n              <Paper sx={{ p: 2, textAlign: \"center\" }}>\n                <Typography variant=\"h4\" color=\"warning.main\">\n                  {formatPercentage(Math.abs(metrics?.maxDrawdown || 0))}\n                </Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  Max Drawdown\n                </Typography>\n                <Box mt={1}>\n                  <Warning\n                    color={\n                      Math.abs(metrics?.maxDrawdown || 0) > 0.15\n                        ? \"error\"\n                        : Math.abs(metrics?.maxDrawdown || 0) > 0.1\n                          ? \"warning\"\n                          : \"disabled\"\n                    }\n                    fontSize=\"small\"\n                  />\n                </Box>\n              </Paper>\n            </div>\n\n            <div>\n              <Paper sx={{ p: 2, textAlign: \"center\" }}>\n                <Typography variant=\"h4\">{metrics?.totalBets || 0}</Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  Total Bets\n                </Typography>\n                <Typography\n                  variant=\"caption\"\n                  display=\"block\"\n                  color=\"textSecondary\"\n                >\n                  {metrics?.winStreak || 0}W / {metrics?.lossStreak || 0}L\n                  streak\n                </Typography>\n              </Paper>\n            </div>\n          </div>\n\n          {/* Tab Navigation */}\n          <Tabs\n            value={activeTab}\n            onChange={(_, newValue) => setActiveTab(newValue)}\n            sx={{ borderBottom: 1, borderColor: \"divider\", mb: 2 }}\n          >\n            <Tab label=\"Performance Trends\" icon={<ShowChart />} />\n            <Tab label=\"Model Analysis\" icon={<PrecisionManufacturing />} />\n            <Tab label=\"Category Breakdown\" icon={<PieChart />} />\n            <Tab label=\"Risk Analysis\" icon={<Assessment />} />\n            <Tab label=\"Insights\" icon={<Insights />} />\n          </Tabs>\n\n          {/* Performance Trends Tab */}\n          {activeTab === 0 && (\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Cumulative Performance\n                  </Typography>\n                  <ResponsiveContainer width=\"100%\" height={400}>\n                    <ComposedChart data={timeSeriesData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"timestamp\" />\n                      <YAxis yAxisId=\"left\" />\n                      <YAxis yAxisId=\"right\" orientation=\"right\" />\n                      <RechartsTooltip />\n                      <Legend />\n                      <Area\n                        yAxisId=\"left\"\n                        type=\"monotone\"\n                        dataKey=\"cumulativeProfit\"\n                        fill={COLORS.primary}\n                        fillOpacity={0.3}\n                        stroke={COLORS.primary}\n                        name=\"Cumulative Profit\"\n                      />\n                      <Line\n                        yAxisId=\"right\"\n                        type=\"monotone\"\n                        dataKey=\"winRate\"\n                        stroke={COLORS.success}\n                        strokeWidth={2}\n                        name=\"Win Rate\"\n                      />\n                      <Bar\n                        yAxisId=\"right\"\n                        dataKey=\"volume\"\n                        fill={COLORS.secondary}\n                        opacity={0.6}\n                        name=\"Daily Volume\"\n                      />\n                    </ComposedChart>\n                  </ResponsiveContainer>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper sx={{ p: 2, height: 450 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Performance Radar\n                  </Typography>\n                  <ResponsiveContainer width=\"100%\" height={350}>\n                    <RadarChart data={radarChartData}>\n                      <PolarGrid />\n                      <PolarAngleAxis dataKey=\"metric\" />\n                      <PolarRadiusAxis\n                        angle={90}\n                        domain={[0, 100]}\n                        tick={false}\n                      />\n                      <Radar\n                        name=\"Performance\"\n                        dataKey=\"value\"\n                        stroke={COLORS.primary}\n                        fill={COLORS.primary}\n                        fillOpacity={0.3}\n                        strokeWidth={2}\n                      />\n                    </RadarChart>\n                  </ResponsiveContainer>\n                </Paper>\n              </Grid>\n            </Grid>\n          )}\n\n          {/* Model Analysis Tab */}\n          {activeTab === 1 && (\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Model Performance Comparison\n                  </Typography>\n                  <TableContainer>\n                    <Table>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Model</TableCell>\n                          <TableCell>Accuracy</TableCell>\n                          <TableCell>Precision</TableCell>\n                          <TableCell>Recall</TableCell>\n                          <TableCell>F1 Score</TableCell>\n                          <TableCell>Calibration</TableCell>\n                          <TableCell>Profit Contribution</TableCell>\n                          <TableCell>Risk Score</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {predictions.map((model) => (\n                          <TableRow key={model.modelName}>\n                            <TableCell>\n                              <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                                <Avatar\n                                  sx={{ width: 32, height: 32, fontSize: 12 }}\n                                >\n                                  {model.modelName\n                                    .split(\" \")\n                                    .map((n) => n[0])\n                                    .join(\"\")}\n                                </Avatar>\n                                <Typography variant=\"body2\">\n                                  {model.modelName}\n                                </Typography>\n                              </Box>\n                            </TableCell>\n                            <TableCell>\n                              <Chip\n                                label={formatPercentage(model.accuracy)}\n                                color={\n                                  model.accuracy > 0.7\n                                    ? \"success\"\n                                    : model.accuracy > 0.6\n                                      ? \"warning\"\n                                      : \"error\"\n                                }\n                                size=\"small\"\n                              />\n                            </TableCell>\n                            <TableCell>\n                              {formatPercentage(model.precision)}\n                            </TableCell>\n                            <TableCell>\n                              {formatPercentage(model.recall)}\n                            </TableCell>\n                            <TableCell>{model.f1Score.toFixed(3)}</TableCell>\n                            <TableCell>\n                              <LinearProgress\n                                variant=\"determinate\"\n                                value={model.calibration * 100}\n                                sx={{ width: 60 }}\n                              />\n                            </TableCell>\n                            <TableCell>\n                              <Typography\n                                color={\n                                  model.profitContribution > 0\n                                    ? \"success.main\"\n                                    : \"error.main\"\n                                }\n                              >\n                                {formatCurrency(model.profitContribution)}\n                              </Typography>\n                            </TableCell>\n                            <TableCell>\n                              <Chip\n                                label={model.riskAdjustedScore.toFixed(2)}\n                                color={\n                                  model.riskAdjustedScore > 0.8\n                                    ? \"success\"\n                                    : model.riskAdjustedScore > 0.7\n                                      ? \"warning\"\n                                      : \"error\"\n                                }\n                                size=\"small\"\n                              />\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Model Contributions\n                  </Typography>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <RechartsPieChart>\n                      <Pie\n                        data={predictions.map((p) => ({\n                          name: p.modelName,\n                          value: p.profitContribution,\n                          color:\n                            PIE_COLORS[\n                            predictions.indexOf(p) % PIE_COLORS.length\n                            ],\n                        }))}\n                        dataKey=\"value\"\n                        nameKey=\"name\"\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={80}\n                        label={({ name, percent }) =>\n                          `${name.split(\" \")[0]} ${(percent * 100).toFixed(0)}%`\n                        }\n                      >\n                        {predictions.map((_, index) => (\n                          <Cell\n                            key={`cell-${index}`}\n                            fill={PIE_COLORS[index % PIE_COLORS.length]}\n                          />\n                        ))}\n                      </Pie>\n                      <RechartsTooltip\n                        formatter={(value) => formatCurrency(value as number)}\n                      />\n                    </RechartsPieChart>\n                  </ResponsiveContainer>\n                </Paper>\n              </Grid>\n            </Grid>\n          )}\n\n          {/* Category Breakdown Tab */}\n          {activeTab === 2 && (\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8}>\n                <Paper sx={{ p: 2 }}>\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"between\"\n                    alignItems=\"center\"\n                    mb={2}\n                  >\n                    <Typography variant=\"h6\">Category Performance</Typography>\n                    <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n                      <InputLabel>Category</InputLabel>\n                      <Select\n                        value={selectedCategory}\n                        onChange={(e) => setSelectedCategory(e.target.value)}\n                      >\n                        <MenuItem value=\"all\">All Categories</MenuItem>\n                        {categoryPerformance.map((cat) => (\n                          <MenuItem key={cat.category} value={cat.category}>\n                            {cat.category}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Box>\n\n                  <ResponsiveContainer width=\"100%\" height={400}>\n                    <RechartsBarChart data={filteredCategoryData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"category\" />\n                      <YAxis yAxisId=\"left\" />\n                      <YAxis yAxisId=\"right\" orientation=\"right\" />\n                      <RechartsTooltip />\n                      <Legend />\n                      <Bar\n                        yAxisId=\"left\"\n                        dataKey=\"profit\"\n                        fill={COLORS.success}\n                        name=\"Profit\"\n                      />\n                      <Bar\n                        yAxisId=\"right\"\n                        dataKey=\"winRate\"\n                        fill={COLORS.primary}\n                        name=\"Win Rate\"\n                      />\n                    </RechartsBarChart>\n                  </ResponsiveContainer>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Category Summary\n                  </Typography>\n                  <Stack spacing={2}>\n                    {categoryPerformance.map((category) => (\n                      <Box\n                        key={category.category}\n                        sx={{\n                          p: 2,\n                          border: 1,\n                          borderColor: \"divider\",\n                          borderRadius: 1,\n                          backgroundColor:\n                            selectedCategory === category.category\n                              ? \"action.selected\"\n                              : \"inherit\",\n                        }}\n                      >\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"space-between\"\n                          alignItems=\"center\"\n                          mb={1}\n                        >\n                          <Typography variant=\"subtitle2\">\n                            {category.category}\n                          </Typography>\n                          <Chip\n                            label={category.riskLevel}\n                            color={\n                              category.riskLevel === \"low\"\n                                ? \"success\"\n                                : category.riskLevel === \"medium\"\n                                  ? \"warning\"\n                                  : \"error\"\n                            }\n                            size=\"small\"\n                          />\n                        </Box>\n                        <Grid container spacing={1}>\n                          <Grid item xs={6}>\n                            <Typography variant=\"caption\">Bets</Typography>\n                            <Typography variant=\"body2\">\n                              {category.bets}\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <Typography variant=\"caption\">Win Rate</Typography>\n                            <Typography variant=\"body2\">\n                              {formatPercentage(category.winRate)}\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <Typography variant=\"caption\">ROI</Typography>\n                            <Typography\n                              variant=\"body2\"\n                              color={\n                                category.roi >= 0\n                                  ? \"success.main\"\n                                  : \"error.main\"\n                              }\n                            >\n                              {formatPercentage(category.roi)}\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <Typography variant=\"caption\">Profit</Typography>\n                            <Typography\n                              variant=\"body2\"\n                              color={\n                                category.profit >= 0\n                                  ? \"success.main\"\n                                  : \"error.main\"\n                              }\n                            >\n                              {formatCurrency(category.profit)}\n                            </Typography>\n                          </Grid>\n                        </Grid>\n                      </Box>\n                    ))}\n                  </Stack>\n                </Paper>\n              </Grid>\n            </Grid>\n          )}\n\n          {/* Risk Analysis Tab */}\n          {activeTab === 3 && (\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Risk Metrics\n                  </Typography>\n                  <Stack spacing={3}>\n                    <Box>\n                      <Typography variant=\"subtitle2\" gutterBottom>\n                        Value at Risk (VaR)\n                      </Typography>\n                      <Box\n                        display=\"flex\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                      >\n                        <Typography variant=\"h5\" color=\"error.main\">\n                          {formatCurrency((metrics?.profitLoss || 0) * 0.05)}\n                        </Typography>\n                        <Typography variant=\"caption\">\n                          95% Confidence\n                        </Typography>\n                      </Box>\n                    </Box>\n\n                    <Box>\n                      <Typography variant=\"subtitle2\" gutterBottom>\n                        Expected Shortfall\n                      </Typography>\n                      <Box\n                        display=\"flex\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                      >\n                        <Typography variant=\"h5\" color=\"warning.main\">\n                          {formatCurrency((metrics?.profitLoss || 0) * 0.08)}\n                        </Typography>\n                        <Typography variant=\"caption\">\n                          Conditional VaR\n                        </Typography>\n                      </Box>\n                    </Box>\n\n                    <Box>\n                      <Typography variant=\"subtitle2\" gutterBottom>\n                        Kelly Optimal Fraction\n                      </Typography>\n                      <Box\n                        display=\"flex\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                      >\n                        <Typography variant=\"h5\" color=\"info.main\">\n                          {formatPercentage(metrics?.kellyOptimal || 0)}\n                        </Typography>\n                        <Typography variant=\"caption\">\n                          Recommended Size\n                        </Typography>\n                      </Box>\n                    </Box>\n\n                    <Box>\n                      <Typography variant=\"subtitle2\" gutterBottom>\n                        Risk-Adjusted Return\n                      </Typography>\n                      <Box\n                        display=\"flex\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                      >\n                        <Typography variant=\"h5\" color=\"success.main\">\n                          {formatPercentage(metrics?.riskAdjustedReturn || 0)}\n                        </Typography>\n                        <Typography variant=\"caption\">\n                          Return per Unit Risk\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </Stack>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Drawdown Analysis\n                  </Typography>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={timeSeriesData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"timestamp\" />\n                      <YAxis />\n                      <RechartsTooltip />\n                      <Area\n                        type=\"monotone\"\n                        dataKey=\"drawdown\"\n                        stroke={COLORS.error}\n                        fill={COLORS.error}\n                        fillOpacity={0.3}\n                        name=\"Drawdown\"\n                      />\n                    </AreaChart>\n                  </ResponsiveContainer>\n\n                  <Divider sx={{ my: 2 }} />\n\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      <Typography variant=\"caption\">\n                        Max Drawdown Duration\n                      </Typography>\n                      <Typography variant=\"h6\">14 days</Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"caption\">Recovery Time</Typography>\n                      <Typography variant=\"h6\">8 days</Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"caption\">Calmar Ratio</Typography>\n                      <Typography variant=\"h6\">\n                        {(\n                          (metrics?.roi || 0) /\n                          Math.abs(metrics?.maxDrawdown || 0.01)\n                        ).toFixed(2)}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"caption\">Sterling Ratio</Typography>\n                      <Typography variant=\"h6\">\n                        {(\n                          (metrics?.roi || 0) /\n                          (Math.abs(metrics?.maxDrawdown || 0.01) + 0.1)\n                        ).toFixed(2)}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n            </Grid>\n          )}\n\n          {/* Insights Tab */}\n          {activeTab === 4 && (\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Performance Insights\n                  </Typography>\n                  <Stack spacing={2}>\n                    <Alert severity=\"success\" icon={<TrendingUp />}>\n                      <Typography variant=\"subtitle2\">\n                        Strong Performance Detected\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Your {formatPercentage(metrics?.winRate || 0)} win rate\n                        is above the 75th percentile. Consider increasing\n                        position sizes within Kelly criteria.\n                      </Typography>\n                    </Alert>\n\n                    <Alert severity=\"info\" icon={<Assessment />}>\n                      <Typography variant=\"subtitle2\">\n                        Model Optimization Opportunity\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Ensemble ML model shows{\" \"}\n                        {formatPercentage(predictions[0]?.accuracy || 0)}{\" \"}\n                        accuracy. Consider ensemble weighting adjustments for\n                        improved performance.\n                      </Typography>\n                    </Alert>\n\n                    <Alert severity=\"warning\" icon={<Warning />}>\n                      <Typography variant=\"subtitle2\">\n                        Risk Management Note\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Maximum drawdown of{\" \"}\n                        {formatPercentage(Math.abs(metrics?.maxDrawdown || 0))}{\" \"}\n                        suggests implementing stricter position sizing during\n                        losing streaks.\n                      </Typography>\n                    </Alert>\n\n                    <Alert severity=\"info\" icon={<Psychology />}>\n                      <Typography variant=\"subtitle2\">\n                        Category Performance Insight\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        NBA Points category shows highest ROI at{\" \"}\n                        {formatPercentage(categoryPerformance[0]?.roi || 0)}.\n                        Consider increasing allocation to this market segment.\n                      </Typography>\n                    </Alert>\n                  </Stack>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={4}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Recommendations\n                  </Typography>\n                  <Stack spacing={2}>\n                    <Box>\n                      <Typography\n                        variant=\"subtitle2\"\n                        color=\"success.main\"\n                        gutterBottom\n                      >\n                        ✓ Optimal Kelly Sizing\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Current {formatPercentage(metrics?.kellyOptimal || 0)}{\" \"}\n                        allocation is appropriate.\n                      </Typography>\n                    </Box>\n\n                    <Box>\n                      <Typography\n                        variant=\"subtitle2\"\n                        color=\"warning.main\"\n                        gutterBottom\n                      >\n                        ⚠ Model Diversification\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Consider adding momentum-based models to ensemble.\n                      </Typography>\n                    </Box>\n\n                    <Box>\n                      <Typography\n                        variant=\"subtitle2\"\n                        color=\"info.main\"\n                        gutterBottom\n                      >\n                        ℹ Market Expansion\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Explore tennis and esports markets for diversification.\n                      </Typography>\n                    </Box>\n\n                    <Box>\n                      <Typography\n                        variant=\"subtitle2\"\n                        color=\"error.main\"\n                        gutterBottom\n                      >\n                        ⛔ Risk Control\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        Implement dynamic position sizing based on recent\n                        performance.\n                      </Typography>\n                    </Box>\n                  </Stack>\n                </Paper>\n              </Grid>\n            </Grid>\n          )}\n        </CardContent>\n      </Card>\n    </motion.div>\n  );\n};\n\nexport default PerformanceAnalyticsDashboard;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PerformanceExport.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PerformanceExport.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PerformanceExport.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PredictionConfidenceGraph.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PredictionConfidenceGraph.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\PredictionConfidenceGraph.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RealTimeAccuracyDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RealTimeAccuracyDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RealTimeAccuracyDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RealTimeMetrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RealTimeMetrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RealTimeMetrics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RiskAssessmentMatrix.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RiskAssessmentMatrix.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RiskAssessmentMatrix.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RiskInsights.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RiskInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\RiskInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\SHAPInsight.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\SHAPInsight.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\SHAPInsight.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ShapExplanation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ShapExplanation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\ShapExplanation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\TimeSeriesInsights.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\TimeSeriesInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\TimeSeriesInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\TrendAnalysisChart.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\TrendAnalysisChart.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\TrendAnalysisChart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UltraMLInsights.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UltraMLInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UltraMLInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UniversalAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UniversalAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UserStats.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UserStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UserStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UserStatsSafe.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\UserStatsSafe.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\AnalyticsLogging.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\AnalyticsLogging.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\AnalyticsLogging.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\PatternRecognitionService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\PatternRecognitionService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\PatternRecognitionService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\RiskAssessmentMatrix.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\RiskAssessmentMatrix.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\RiskAssessmentMatrix.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\RiskMatrixClassification.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\RiskMatrixClassification.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\RiskMatrixClassification.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\ShapExplainerService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\ShapExplainerService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\ShapExplainerService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\ShapExplanation.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\ShapExplanation.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\analytics\\__tests__\\ShapExplanation.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\api\\RealTimeAPIIntegrationDashboard.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'initializeDashboard' and 'updateAPIStatuses'. Either include them or remove the dependency array.","line":33,"column":6,"nodeType":"ArrayExpression","endLine":33,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [initializeDashboard, updateAPIStatuses]","fix":{"range":[1126,1128],"text":"[initializeDashboard, updateAPIStatuses]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Real-Time API Integration Dashboard Component\n * Shows live status of your actual API integrations\n */\n\nimport React, { useState, useEffect } from 'react';\nimport LiveAPIIntegrationService from '../services/LiveAPIIntegrationService';\nimport APITestSuite from '../utils/APITestSuite';\nimport './RealTimeAPIIntegrationDashboard.css';\n\ninterface APIStatus {\n  service: string;\n  status: 'operational' | 'degraded' | 'down';\n  responseTime: number;\n  lastCheck: number;\n  rateLimitRemaining?: number;\n  dataPoints?: number;\n}\n\nexport const RealTimeAPIIntegrationDashboard: React.FC = () => {\n  const [apiStatuses, setApiStatuses] = useState<APIStatus[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdate, setLastUpdate] = useState<number>(Date.now());\n  const [testResults, setTestResults] = useState<any>(null);\n\n  const liveAPI = LiveAPIIntegrationService.getInstance();\n  const testSuite = new APITestSuite();\n\n  useEffect(() => {\n    initializeDashboard();\n    const interval = setInterval(updateAPIStatuses, 30000); // Update every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const initializeDashboard = async () => {\n    setIsLoading(true);\n    await updateAPIStatuses();\n    setIsLoading(false);\n  };\n\n  const updateAPIStatuses = async () => {\n    try {\n      const health = await liveAPI.checkAPIHealth();\n      const rateLimits = liveAPI.getRateLimitStatus();\n      \n      const statuses: APIStatus[] = Object.entries(health).map(([service, info]) => ({\n        service,\n        status: (info as any).status || 'unknown',\n        responseTime: (info as any).responseTime || 0,\n        lastCheck: Date.now(),\n        rateLimitRemaining: rateLimits[service]?.requestsRemaining\n      }));\n\n      setApiStatuses(statuses);\n      setLastUpdate(Date.now());\n    } catch (error) {\n      console.error('Failed to update API statuses:', error);\n    }\n  };\n\n  const runFullTest = async () => {\n    setIsLoading(true);\n    try {\n      const results = await testSuite.runFullAPITest();\n      setTestResults(results);\n    } catch (error) {\n      console.error('Test failed:', error);\n    }\n    setIsLoading(false);\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'operational': return '✅';\n      case 'degraded': return '⚠️';\n      case 'down': return '❌';\n      default: return '🔄';\n    }\n  };\n\n  const getStatusClass = (status: string) => {\n    switch (status) {\n      case 'operational': return 'border-operational';\n      case 'degraded': return 'border-degraded';\n      case 'down': return 'border-down';\n      default: return 'border-unknown';\n    }\n  };\n\n  const getStatusTextClass = (status: string) => {\n    switch (status) {\n      case 'operational': return 'status-operational';\n      case 'degraded': return 'status-degraded';\n      case 'down': return 'status-down';\n      default: return 'status-unknown';\n    }\n  };\n\n  const formatResponseTime = (time: number) => {\n    return `${time}ms`;\n  };\n\n  const formatLastUpdate = (timestamp: number) => {\n    const seconds = Math.floor((Date.now() - timestamp) / 1000);\n    if (seconds < 60) return `${seconds}s ago`;\n    const minutes = Math.floor(seconds / 60);\n    if (minutes < 60) return `${minutes}m ago`;\n    const hours = Math.floor(minutes / 60);\n    return `${hours}h ago`;\n  };\n\n  if (isLoading && !apiStatuses.length) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-title\">🔄 Initializing API Dashboard...</div>\n        <div className=\"loading-subtitle\">Testing your API integrations...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"api-dashboard-container\">\n      {/* Header */}\n      <div className=\"dashboard-header\">\n        <div>\n          <h2 className=\"dashboard-title\">🚀 Live API Integration Dashboard</h2>\n          <p className=\"dashboard-subtitle\">\n            Real-time status of your betting platform APIs\n          </p>\n        </div>\n        <div className=\"header-buttons\">\n          <button \n            onClick={updateAPIStatuses}\n            disabled={isLoading}\n            className=\"refresh-button\"\n          >\n            🔄 Refresh\n          </button>\n          <button \n            onClick={runFullTest}\n            disabled={isLoading}\n            className=\"test-button\"\n          >\n            🧪 Run Full Test\n          </button>\n        </div>\n      </div>\n\n      {/* API Status Cards */}\n      <div className=\"api-status-grid\">\n        {apiStatuses.map((api) => (\n          <div key={api.service} className={`api-status-card ${getStatusClass(api.status)}`}>\n            <div className=\"api-card-header\">\n              <h3 className=\"api-card-title\">\n                {api.service === 'theodds' && '🎲 TheOdds API'}\n                {api.service === 'sportradar' && '📊 SportsRadar API'}\n                {api.service === 'prizepicks' && '🎯 PrizePicks API'}\n                {api.service === 'espn' && '🏈 ESPN API'}\n              </h3>\n              <div className=\"api-status-icon\">\n                {getStatusIcon(api.status)}\n              </div>\n            </div>\n            \n            <div className=\"api-card-details\">\n              <div className=\"api-detail-row\">\n                <strong>Status:</strong> \n                <span className={`api-status-text ${getStatusTextClass(api.status)}`}>\n                  {api.status.toUpperCase()}\n                </span>\n              </div>\n              <div className=\"api-detail-row\">\n                <strong>Response Time:</strong> {formatResponseTime(api.responseTime)}\n              </div>\n              {api.rateLimitRemaining !== undefined && (\n                <div className=\"api-detail-row\">\n                  <strong>Quota Remaining:</strong> {api.rateLimitRemaining.toLocaleString()}\n                </div>\n              )}\n              <div className=\"api-detail-row\">\n                <strong>Last Check:</strong> {formatLastUpdate(api.lastCheck)}\n              </div>\n            </div>\n\n            {/* Service-specific info */}\n            <div className=\"api-service-description\">\n              {api.service === 'theodds' && 'Live odds, line movements, bookmaker data'}\n              {api.service === 'sportradar' && 'Detailed stats, player analytics, historical data'}\n              {api.service === 'prizepicks' && 'Player projections, prop lines, daily fantasy'}\n              {api.service === 'espn' && 'Live scores, schedules, basic team info'}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* API Keys Status */}\n      <div className=\"api-config-section\">\n        <h3 className=\"config-section-title\">🔑 API Configuration Status</h3>\n        <div className=\"config-grid\">\n          <div className=\"config-item config-item-sportradar\">\n            <strong>SportsRadar:</strong> R10yQ...7s ✅\n          </div>\n          <div className=\"config-item config-item-theodds\">\n            <strong>TheOdds:</strong> 8684b...0ee ✅\n          </div>\n          <div className=\"config-item config-item-prizepicks\">\n            <strong>PrizePicks:</strong> Public API ✅\n          </div>\n          <div className=\"config-item config-item-espn\">\n            <strong>ESPN:</strong> Public API ✅\n          </div>\n        </div>\n      </div>\n\n      {/* Test Results */}\n      {testResults && (\n        <div className=\"test-results-section\">\n          <h3 className=\"test-results-title\">\n            🧪 Latest Test Results \n            {testResults.success ? '✅' : '⚠️'}\n          </h3>\n          \n          <div className={`test-summary ${testResults.success ? 'test-summary-success' : 'test-summary-error'}`}>\n            <strong>{testResults.summary}</strong>\n          </div>\n\n          {testResults.recommendations && (\n            <div>\n              <h4 className=\"recommendations-title\">💡 Recommendations:</h4>\n              <ul className=\"recommendations-list\">\n                {testResults.recommendations.map((rec: string, index: number) => (\n                  <li key={index} className=\"recommendation-item\">{rec}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Footer */}\n      <div className=\"dashboard-footer\">\n        Last updated: {new Date(lastUpdate).toLocaleTimeString()} | \n        Auto-refresh every 30 seconds\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeAPIIntegrationDashboard;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\LoginForm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\LoginForm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\LoginForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\ProtectedRoute.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\ProtectedRoute.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\ProtectedRoute.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\RegisterForm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\RegisterForm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\RegisterForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\UnifiedAuth.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\UnifiedAuth.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\auth\\UnifiedAuth.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'checkSession'. Either include it or remove the dependency array.","line":56,"column":6,"nodeType":"ArrayExpression","endLine":56,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [checkSession]","fix":{"range":[2127,2129],"text":"[checkSession]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { UnifiedServiceRegistry } from '../../services/unified/UnifiedServiceRegistry';\nimport { UnifiedStateService } from '../../services/unified/UnifiedStateService';\nimport { UnifiedNotificationService } from '../../services/unified/UnifiedNotificationService';\nimport { UnifiedErrorService } from '../../services/unified/UnifiedErrorService';\nimport { UnifiedSettingsService } from '../../services/unified/UnifiedSettingsService';\nimport { Card, Button, Input, Spinner, Toast, Modal } from '../ui/UnifiedUI';\n\ninterface AuthForm {\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  rememberMe?: boolean;\n}\n\ninterface ValidationError {\n  field: string;\n  message: string;\n}\n\nexport const UnifiedAuth: React.FC = () => {\n  // Initialize services\n  const serviceRegistry = UnifiedServiceRegistry.getInstance();\n  const stateService = serviceRegistry.getService<UnifiedStateService>('state');\n  const notificationService =\n    serviceRegistry.getService<UnifiedNotificationService>('notification');\n  const errorService = serviceRegistry.getService<UnifiedErrorService>('error');\n  const settingsService = serviceRegistry.getService<UnifiedSettingsService>('settings');\n\n  // Router hooks\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // State\n  const [isLogin, setIsLogin] = useState(true);\n  const [form, setForm] = useState<AuthForm>({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    rememberMe: false,\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [validationErrors, setValidationErrors] = useState<ValidationError[]>([]);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n  } | null>(null);\n  const [showPasswordReset, setShowPasswordReset] = useState(false);\n  const [showVerificationModal, setShowVerificationModal] = useState(false);\n\n  // Check for existing session\n  useEffect(() => {\n    checkSession();\n  }, []);\n\n  const checkSession = async () => {\n    try {\n      const session = await stateService.getState('session');\n      if (session?.isValid) {\n        navigate('/dashboard');\n      }\n    } catch (error) {\n      handleError('Failed to check session', error);\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const errors: ValidationError[] = [];\n\n    // Email validation\n    if (!form.email) {\n      errors.push({ field: 'email', message: 'Email is required' });\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(form.email)) {\n      errors.push({ field: 'email', message: 'Invalid email format' });\n    }\n\n    // Password validation\n    if (!form.password) {\n      errors.push({ field: 'password', message: 'Password is required' });\n    } else if (form.password.length < 8) {\n      errors.push({ field: 'password', message: 'Password must be at least 8 characters' });\n    }\n\n    // Confirm password validation for registration\n    if (!isLogin && form.password !== form.confirmPassword) {\n      errors.push({ field: 'confirmPassword', message: 'Passwords do not match' });\n    }\n\n    setValidationErrors(errors);\n    return errors.length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      if (isLogin) {\n        await handleLogin();\n      } else {\n        await handleRegister();\n      }\n    } catch (error) {\n      handleError('Authentication failed', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLogin = async () => {\n    const response = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: form.email,\n        password: form.password,\n        rememberMe: form.rememberMe,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Login failed');\n    }\n\n    const data = await response.json();\n    await stateService.setState('session', {\n      token: data.token,\n      user: data.user,\n      isValid: true,\n      expiresAt: data.expiresAt,\n    });\n\n    setToast({\n      message: 'Login successful',\n      type: 'success',\n    });\n\n    navigate('/dashboard');\n  };\n\n  const handleRegister = async () => {\n    const response = await fetch('/api/auth/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: form.email,\n        password: form.password,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Registration failed');\n    }\n\n    setShowVerificationModal(true);\n    setToast({\n      message: 'Registration successful. Please verify your email.',\n      type: 'success',\n    });\n  };\n\n  const handlePasswordReset = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/auth/reset-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email: form.email }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Password reset request failed');\n      }\n\n      setShowPasswordReset(false);\n      setToast({\n        message: 'Password reset instructions sent to your email',\n        type: 'success',\n      });\n    } catch (error) {\n      handleError('Failed to request password reset', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleError = (message: string, error: any) => {\n    setError(message);\n    setToast({ message, type: 'error' });\n    errorService.handleError(error, {\n      code: 'AUTH_ERROR',\n      source: 'UnifiedAuth',\n      details: { message },\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <Card className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <h2 className=\"text-3xl font-bold\">\n            {isLogin ? 'Sign in to your account' : 'Create a new account'}\n          </h2>\n          <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\n            {isLogin\n              ? 'Welcome back! Please enter your details.'\n              : 'Join us today and start betting smarter.'}\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"space-y-4\">\n            <div>\n              <label\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                htmlFor=\"email\"\n              >\n                Email address\n              </label>\n              <Input\n                required\n                error={validationErrors.find(e => e.field === 'email')?.message}\n                id=\"email\"\n                type=\"email\"\n                value={form.email}\n                onChange={e => setForm({ ...form, email: e.target.value })}\n              />\n            </div>\n\n            <div>\n              <label\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                htmlFor=\"password\"\n              >\n                Password\n              </label>\n              <Input\n                required\n                error={validationErrors.find(e => e.field === 'password')?.message}\n                id=\"password\"\n                type=\"password\"\n                value={form.password}\n                onChange={e => setForm({ ...form, password: e.target.value })}\n              />\n            </div>\n\n            {!isLogin && (\n              <div>\n                <label\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                  htmlFor=\"confirmPassword\"\n                >\n                  Confirm Password\n                </label>\n                <Input\n                  required\n                  error={validationErrors.find(e => e.field === 'confirmPassword')?.message}\n                  id=\"confirmPassword\"\n                  type=\"password\"\n                  value={form.confirmPassword}\n                  onChange={e => setForm({ ...form, confirmPassword: e.target.value })}\n                />\n              </div>\n            )}\n\n            {isLogin && (\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <input\n                    checked={form.rememberMe}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                    id=\"remember-me\"\n                    type=\"checkbox\"\n                    onChange={e => setForm({ ...form, rememberMe: e.target.checked })}\n                  />\n                  <label\n                    className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\"\n                    htmlFor=\"remember-me\"\n                  >\n                    Remember me\n                  </label>\n                </div>\n                <button\n                  className=\"text-sm font-medium text-primary-600 hover:text-primary-500\"\n                  type=\"button\"\n                  onClick={() => setShowPasswordReset(true)}\n                >\n                  Forgot password?\n                </button>\n              </div>\n            )}\n          </div>\n\n          <div>\n            <Button className=\"w-full\" disabled={loading} type=\"submit\" variant=\"primary\">\n              {loading ? <Spinner size=\"small\" /> : isLogin ? 'Sign in' : 'Create account'}\n            </Button>\n          </div>\n\n          <div className=\"text-center\">\n            <button\n              className=\"text-sm font-medium text-primary-600 hover:text-primary-500\"\n              type=\"button\"\n              onClick={() => setIsLogin(!isLogin)}\n            >\n              {isLogin ? \"Don't have an account? Sign up\" : 'Already have an account? Sign in'}\n            </button>\n          </div>\n        </form>\n      </Card>\n\n      {/* Password Reset Modal */}\n      <Modal\n        isOpen={showPasswordReset}\n        title=\"Reset Password\"\n        onClose={() => setShowPasswordReset(false)}\n      >\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-600\">\n            Enter your email address and we'll send you instructions to reset your password.\n          </p>\n          <Input\n            placeholder=\"Enter your email\"\n            type=\"email\"\n            value={form.email}\n            onChange={e => setForm({ ...form, email: e.target.value })}\n          />\n          <div className=\"flex justify-end space-x-4\">\n            <Button variant=\"secondary\" onClick={() => setShowPasswordReset(false)}>\n              Cancel\n            </Button>\n            <Button disabled={loading} variant=\"primary\" onClick={handlePasswordReset}>\n              {loading ? <Spinner size=\"small\" /> : 'Send Instructions'}\n            </Button>\n          </div>\n        </div>\n      </Modal>\n\n      {/* Email Verification Modal */}\n      <Modal\n        isOpen={showVerificationModal}\n        title=\"Verify Your Email\"\n        onClose={() => setShowVerificationModal(false)}\n      >\n        <div className=\"text-center\">\n          <p className=\"text-gray-600 mb-6\">\n            We've sent a verification link to your email address. Please check your inbox and click\n            the link to verify your account.\n          </p>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              setShowVerificationModal(false);\n              setIsLogin(true);\n            }}\n          >\n            Return to Login\n          </Button>\n        </div>\n      </Modal>\n\n      {/* Toast Notifications */}\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Accordion.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Accordion.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Accordion.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Alert.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Alert.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Alert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Avatar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Avatar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Avatar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Badge.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Badge.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Breadcrumb.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Breadcrumb.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Breadcrumb.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Button.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Button.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Card.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Card.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Dialog.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Dialog.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Dropdown.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Dropdown.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Dropdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Modal.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Modal.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Progress.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Progress.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Progress.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Select.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Select.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Skeleton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Skeleton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Skeleton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\SkeletonLoader.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\SkeletonLoader.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\SkeletonLoader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Switch.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Switch.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Switch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Table.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Table.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Table.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Tabs.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Tabs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Tabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Toast.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Toast.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Toast.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Toaster.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Toaster.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Toaster.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Tooltip.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Tooltip.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\Tooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\UnifiedInput.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\UnifiedInput.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\base\\UnifiedInput.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BestBetSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BestBetSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BestBetSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BetForm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BetForm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BetForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BetHistory.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BetHistory.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BetHistory.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BetSlip.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BetSlip.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BetSlip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingAnalytics.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":62,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":64,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[110,112],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[110,112],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare const BettingAnalytics: React.FC;\ndeclare const _default: import(\"react\").NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingHistory.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingHistory.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingHistory.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingInterface.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingModal.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingModal.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingModal.tsx","messages":[{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":78,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":78,"endColumn":48,"suggestions":[{"messageId":"addBrackets","fix":{"range":[2227,2341],"text":"{ const fib = [1, 1, 2, 3, 5, 8, 13, 21];\n        return fib[Math.min(fib.length - 1, Math.floor(stake / 10))] * 10; }"},"desc":"Add {} brackets around the case block."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useRiskProfile } from '@/hooks/useRiskProfile';\nimport React, { useState } from 'react';\nimport { BettingStrategy, RiskProfile } from '../../types/betting';\nimport { Event, Market, Odds, Selection } from '../../types/sports';\nimport { RiskReasoningDisplay } from '../shared/RiskReasoningDisplay';\nimport { Badge, Button, Card, Icon, Spinner } from '../ui/UnifiedUI';\n\ninterface BettingModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  event: Event;\n  market: Market;\n  selection: Selection;\n  odds: Odds;\n  confidenceScore: number;\n  expectedValue: number;\n  kellyFraction: number;\n  riskProfile: RiskProfile;\n  selectedStrategy: BettingStrategy;\n  onStrategyChange: (strategy: BettingStrategy) => void;\n  stake: number;\n  onStakeChange: (stake: number) => void;\n  onPlaceBet: () => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const BettingModal: React.FC<BettingModalProps> = ({\n  isOpen,\n  onClose,\n  event,\n  market,\n  selection,\n  odds,\n  confidenceScore,\n  expectedValue,\n  kellyFraction,\n  riskProfile,\n  selectedStrategy,\n  onStrategyChange,\n  stake,\n  onStakeChange,\n  onPlaceBet,\n  isLoading,\n  error: externalError,\n}) => {\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { validateBet } = useRiskProfile();\n\n  if (!isOpen) return null;\n\n  const getStrategyDescription = (strategy: BettingStrategy): string => {\n    switch (strategy) {\n      case 'kelly':\n        return 'Kelly Criterion: Optimal bet sizing based on edge and odds';\n      case 'fixed':\n        return 'Fixed Stake: Consistent bet size regardless of edge';\n      case 'martingale':\n        return 'Martingale: Double stake after losses';\n      case 'fibonacci':\n        return 'Fibonacci: Progressive stake based on Fibonacci sequence';\n      default:\n        return '';\n    }\n  };\n\n  const getRecommendedStake = (): number => {\n    switch (selectedStrategy) {\n      case 'kelly':\n        return kellyFraction * 100;\n      case 'fixed':\n        return 10; // Default fixed stake\n      case 'martingale':\n        return stake * 2; // Double previous stake\n      case 'fibonacci':\n        // Simple Fibonacci sequence implementation\n        const fib = [1, 1, 2, 3, 5, 8, 13, 21];\n        return fib[Math.min(fib.length - 1, Math.floor(stake / 10))] * 10;\n      default:\n        return stake;\n    }\n  };\n\n  const handlePlaceBet = () => {\n    const betData = {\n      stake,\n      confidence: confidenceScore,\n      kellyFraction,\n      sport: event.sport || '',\n      market: market.name || '',\n      eventId: event.id || '',\n    };\n    const validation = validateBet(betData);\n    if (!validation.isValid) {\n      setError('Bet does not meet risk profile: ' + validation.errors.join(', '));\n      return;\n    }\n    setError(null);\n    onPlaceBet();\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <Card className=\"w-full max-w-2xl p-6\" variant=\"bordered\">\n        <div className=\"flex justify-between items-start mb-6\">\n          <div>\n            <h3 className=\"text-xl font-semibold\">Place Bet</h3>\n            <p className=\"text-gray-600\">\n              {event.name} - {market.name}\n            </p>\n          </div>\n          <Button size=\"small\" variant=\"ghost\" onClick={onClose}>\n            <Icon className=\"w-5 h-5\" name=\"x-mark\" />\n          </Button>\n        </div>\n\n        <div className=\"space-y-6\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Selection</p>\n              <p className=\"font-medium\">{selection.name}</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Odds</p>\n              <p className=\"font-medium\">{odds.value.toFixed(2)}</p>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Confidence</p>\n              <div className=\"flex items-center space-x-2\">\n                <p className=\"font-medium\">{(confidenceScore * 100).toFixed(1)}%</p>\n                <Badge\n                  variant={\n                    confidenceScore >= 0.7\n                      ? 'success'\n                      : confidenceScore >= 0.5\n                        ? 'warning'\n                        : 'danger'\n                  }\n                >\n                  {confidenceScore >= 0.7 ? 'High' : confidenceScore >= 0.5 ? 'Medium' : 'Low'}\n                </Badge>\n              </div>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Expected Value</p>\n              <p\n                className={`font-medium ${expectedValue >= 0 ? 'text-green-500' : 'text-red-500'}`}\n              >\n                {(expectedValue * 100).toFixed(1)}%\n              </p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Kelly Fraction</p>\n              <p className=\"font-medium\">{(kellyFraction * 100).toFixed(1)}%</p>\n            </div>\n          </div>\n\n          <div>\n            <p className=\"text-sm text-gray-600 mb-2\">Betting Strategy</p>\n            <div className=\"grid grid-cols-2 gap-2\">\n              {(['kelly', 'fixed', 'martingale', 'fibonacci'] as BettingStrategy[]).map(\n                strategy => (\n                  <Button\n                    key={strategy}\n                    className=\"justify-start\"\n                    size=\"small\"\n                    variant={selectedStrategy === strategy ? 'primary' : 'secondary'}\n                    onClick={() => onStrategyChange(strategy)}\n                  >\n                    <Icon\n                      className=\"w-4 h-4 mr-2\"\n                      name={selectedStrategy === strategy ? 'check-circle' : 'circle'}\n                    />\n                    {strategy.charAt(0).toUpperCase() + strategy.slice(1)}\n                  </Button>\n                )\n              )}\n            </div>\n            <p className=\"text-sm text-gray-600 mt-2\">{getStrategyDescription(selectedStrategy)}</p>\n          </div>\n\n          <div>\n            <p className=\"text-sm text-gray-600 mb-2\">Stake</p>\n            <div className=\"flex items-center space-x-4\">\n              <input\n                className=\"w-32 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                min=\"0\"\n                step=\"0.01\"\n                type=\"number\"\n                value={stake}\n                onChange={e => onStakeChange(Number(e.target.value))}\n              />\n              <Button\n                size=\"small\"\n                variant=\"secondary\"\n                onClick={() => onStakeChange(getRecommendedStake())}\n              >\n                Use Recommended\n              </Button>\n            </div>\n          </div>\n\n          <div>\n            <Button\n              className=\"flex items-center\"\n              size=\"small\"\n              variant=\"ghost\"\n              onClick={() => setShowAdvanced(!showAdvanced)}\n            >\n              <Icon className=\"w-4 h-4 mr-2\" name={showAdvanced ? 'chevron-up' : 'chevron-down'} />\n              Advanced Options\n            </Button>\n\n            {showAdvanced && (\n              <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n                <div className=\"space-y-4\">\n                  <div>\n                    <p className=\"text-sm font-medium mb-2\">Risk Profile</p>\n                    <div className=\"flex items-center space-x-2\">\n                      <Badge variant={riskProfile.riskLevel.toLowerCase() as any}>\n                        {riskProfile.riskLevel}\n                      </Badge>\n                      <p className=\"text-sm text-gray-600\">{riskProfile.recommendation}</p>\n                    </div>\n                  </div>\n\n                  <div>\n                    <p className=\"text-sm font-medium mb-2\">Top Risk Factors</p>\n                    <div className=\"space-y-2\">\n                      {riskProfile.factors.map((factor, index) => (\n                        <div key={index} className=\"flex items-center justify-between\">\n                          <p className=\"text-sm\">{factor.name}</p>\n                          <Badge variant={factor.severity.toLowerCase() as any}>\n                            {factor.severity}\n                          </Badge>\n                        </div>\n                      ))}\n                    </div>\n                    {/* Risk Reasoning Display (if present) */}\n                    {Array.isArray((riskProfile as any).risk_reasoning) && (riskProfile as any).risk_reasoning.length > 0 && (\n                      <RiskReasoningDisplay riskReasoning={(riskProfile as any).risk_reasoning} className=\"mt-3\" />\n                    )}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"text-red-500 text-center\">\n              <Icon className=\"w-5 h-5 mx-auto mb-2\" name=\"exclamation-circle\" />\n              <p>{error}</p>\n            </div>\n          )}\n          {externalError && !error && (\n            <div className=\"text-red-500 text-center\">\n              <Icon className=\"w-5 h-5 mx-auto mb-2\" name=\"exclamation-circle\" />\n              <p>{externalError}</p>\n            </div>\n          )}\n\n          <div className=\"flex justify-end space-x-4\">\n            <Button disabled={isLoading} variant=\"secondary\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button disabled={isLoading || stake <= 0} variant=\"primary\" onClick={handlePlaceBet}>\n              {isLoading ? (\n                <>\n                  <Spinner className=\"mr-2\" size=\"small\" />\n                  Placing Bet...\n                </>\n              ) : (\n                'Place Bet'\n              )}\n            </Button>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingOpportunities.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingOpportunities.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingOpportunities.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingSettingsContainer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingSettingsContainer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingSettingsContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingSettingsPanel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingSettingsPanel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingSettingsPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingSettingsSummary.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingSettingsSummary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingSettingsSummary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingStats.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\BettingStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\ConfigurationMatrix.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\ConfigurationMatrix.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\ConfigurationMatrix.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\EnsembleResults.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\EnsembleResults.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\EnsembleResults.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\EventList.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\EventList.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\EventList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\KellyCalculator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\KellyCalculator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\KellyCalculator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\LiveOddsTicker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\LiveOddsTicker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\LiveOddsTicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\ModelSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\ModelSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\ModelSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\OddsDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\OddsDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\OddsDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PerformanceMetrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PerformanceMetrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PerformanceMetrics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PrizePicksEdgeDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PrizePicksEdgeDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PrizePicksEdgeDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PrizePicksInterface.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PrizePicksInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PrizePicksInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PrizePicksMLEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PrizePicksMLEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\PrizePicksMLEngine.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\RiskProfileSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\RiskProfileSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\RiskProfileSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\SHAPVisualization.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\SHAPVisualization.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\SHAPVisualization.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\SportSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\SportSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\SportSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\StakeSizingControl.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\StakeSizingControl.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\StakeSizingControl.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\UltimateMoneyMaker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\UltimateMoneyMaker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\UltimateMoneyMaker.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'scanForOpportunities'. Either include it or remove the dependency array.","line":158,"column":6,"nodeType":"ArrayExpression","endLine":158,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [scanForOpportunities]","fix":{"range":[4616,4618],"text":"[scanForOpportunities]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'scanForOpportunities'. Either include it or remove the dependency array.","line":169,"column":6,"nodeType":"ArrayExpression","endLine":169,"endColumn":16,"suggestions":[{"desc":"Update the dependencies array to be: [autoMode, scanForOpportunities]","fix":{"range":[4849,4859],"text":"[autoMode, scanForOpportunities]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport {\n  DollarSign,\n  TrendingUp,\n  Target,\n  Zap,\n  Brain,\n  AlertCircle,\n} from \"lucide-react\";\nimport { useBetting, useUser } from \"../../store/unified/UnifiedStoreManager\";\nimport { mlEngine } from \"../../services/ml/UnifiedMLEngine\";\nimport type { EnsemblePrediction } from \"../../services/ml/UnifiedMLEngine\";\n\ninterface OpportunityCandidate {\n  id: string;\n  eventId: string;\n  market: string;\n  description: string;\n  currentOdds: number;\n  predictedProbability: number;\n  valueEdge: number;\n  kellyFraction: number;\n  recommendedStake: number;\n  confidence: number;\n  riskLevel: \"low\" | \"medium\" | \"high\";\n  maxStake: number;\n  expectedReturn: number;\n}\n\nconst UltimateMoneyMaker: React.FC = () => {\n  const [opportunities, setOpportunities] = useState<OpportunityCandidate[]>(\n    [],\n  );\n  const [isScanning, setIsScanning] = useState(false);\n  const [autoMode, setAutoMode] = useState(false);\n  const [selectedOpportunity, setSelectedOpportunity] =\n    useState<OpportunityCandidate | null>(null);\n  const [stakeAmount, setStakeAmount] = useState(0);\n\n  const { bankroll, addBet, addOpportunity } = useBetting();\n  const { preferences } = useUser();\n\n  // Scan for opportunities\n  const scanForOpportunities = async () => {\n    setIsScanning(true);\n    try {\n      // Simulate scanning process\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n\n      const mockOpportunities: OpportunityCandidate[] = [\n        {\n          id: \"opp-1\",\n          eventId: \"game-lakers-warriors\",\n          market: \"moneyline\",\n          description: \"Lakers vs Warriors - Lakers ML\",\n          currentOdds: 2.1,\n          predictedProbability: 0.52,\n          valueEdge: 0.092,\n          kellyFraction: 0.047,\n          recommendedStake: Math.min(bankroll * 0.02, bankroll * 0.047 * 0.25),\n          confidence: 0.78,\n          riskLevel: \"medium\",\n          maxStake: bankroll * 0.05,\n          expectedReturn: 0,\n        },\n        {\n          id: \"opp-2\",\n          eventId: \"game-celtics-heat\",\n          market: \"total_points\",\n          description: \"Celtics vs Heat - Over 215.5\",\n          currentOdds: 1.91,\n          predictedProbability: 0.58,\n          valueEdge: 0.108,\n          kellyFraction: 0.062,\n          recommendedStake: Math.min(bankroll * 0.03, bankroll * 0.062 * 0.25),\n          confidence: 0.82,\n          riskLevel: \"low\",\n          maxStake: bankroll * 0.05,\n          expectedReturn: 0,\n        },\n        {\n          id: \"opp-3\",\n          eventId: \"game-mavs-suns\",\n          market: \"player_props\",\n          description: \"Luka Dončić Over 29.5 Points\",\n          currentOdds: 1.85,\n          predictedProbability: 0.61,\n          valueEdge: 0.129,\n          kellyFraction: 0.071,\n          recommendedStake: Math.min(bankroll * 0.025, bankroll * 0.071 * 0.25),\n          confidence: 0.85,\n          riskLevel: \"low\",\n          maxStake: bankroll * 0.04,\n          expectedReturn: 0,\n        },\n      ];\n\n      // Calculate expected returns\n      mockOpportunities.forEach((opp) => {\n        opp.expectedReturn =\n          opp.recommendedStake *\n          (opp.currentOdds - 1) *\n          opp.predictedProbability;\n      });\n\n      setOpportunities(mockOpportunities);\n\n      // Add to betting store\n      mockOpportunities.forEach((opp) => {\n        addOpportunity({\n          id: opp.id,\n          eventId: opp.eventId,\n          market: opp.market,\n          odds: opp.currentOdds,\n          prediction: {\n            id: opp.id,\n            confidence: opp.confidence,\n            predictedValue: opp.predictedProbability,\n            factors: [],\n            timestamp: Date.now(),\n          },\n          valueEdge: opp.valueEdge,\n          kellyFraction: opp.kellyFraction,\n          recommendedStake: opp.recommendedStake,\n          timestamp: Date.now(),\n        });\n      });\n    } catch (error) {\n      console.error(\"Failed to scan for opportunities:\", error);\n    } finally {\n      setIsScanning(false);\n    }\n  };\n\n  // Place bet\n  const placeBet = (opportunity: OpportunityCandidate, amount: number) => {\n    addBet({\n      eventId: opportunity.eventId,\n      amount,\n      odds: opportunity.currentOdds,\n      status: \"active\",\n      prediction: {\n        id: opportunity.id,\n        confidence: opportunity.confidence,\n        predictedValue: opportunity.predictedProbability,\n        factors: [],\n        timestamp: Date.now(),\n      },\n    });\n\n    setSelectedOpportunity(null);\n    setStakeAmount(0);\n  };\n\n  // Auto-scan when component mounts\n  useEffect(() => {\n    scanForOpportunities();\n  }, []);\n\n  // Auto-mode scanning\n  useEffect(() => {\n    if (!autoMode) return;\n\n    const interval = setInterval(() => {\n      scanForOpportunities();\n    }, 60000); // Scan every minute\n\n    return () => clearInterval(interval);\n  }, [autoMode]);\n\n  const getRiskColor = (risk: string) => {\n    switch (risk) {\n      case \"low\":\n        return \"text-green-600 bg-green-100\";\n      case \"medium\":\n        return \"text-yellow-600 bg-yellow-100\";\n      case \"high\":\n        return \"text-red-600 bg-red-100\";\n      default:\n        return \"text-gray-600 bg-gray-100\";\n    }\n  };\n\n  const totalPotentialReturn = opportunities.reduce(\n    (sum, opp) => sum + opp.expectedReturn,\n    0,\n  );\n  const averageConfidence =\n    opportunities.length > 0\n      ? opportunities.reduce((sum, opp) => sum + opp.confidence, 0) /\n        opportunities.length\n      : 0;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-green-500 to-blue-600 rounded-lg p-6 text-white\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold mb-2\">Ultimate Money Maker</h1>\n            <p className=\"opacity-90\">AI-powered value betting opportunities</p>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-3xl font-bold\">\n              ${totalPotentialReturn.toFixed(2)}\n            </div>\n            <div className=\"opacity-90\">Potential Return</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Controls */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n            Opportunity Scanner\n          </h2>\n          <div className=\"flex items-center space-x-3\">\n            <label className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                checked={autoMode}\n                onChange={(e) => setAutoMode(e.target.checked)}\n                className=\"rounded\"\n              />\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Auto Mode\n              </span>\n            </label>\n            <button\n              onClick={scanForOpportunities}\n              disabled={isScanning}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\n            >\n              {isScanning ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\" />\n                  <span>Scanning...</span>\n                </>\n              ) : (\n                <>\n                  <Zap className=\"w-4 h-4\" />\n                  <span>Scan Now</span>\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n          <div className=\"text-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {opportunities.length}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Opportunities\n            </div>\n          </div>\n          <div className=\"text-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {(averageConfidence * 100).toFixed(0)}%\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Avg Confidence\n            </div>\n          </div>\n          <div className=\"text-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              ${bankroll.toLocaleString()}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Bankroll\n            </div>\n          </div>\n          <div className=\"text-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n            <div className=\"text-2xl font-bold text-purple-600\">\n              {opportunities.filter((o) => o.riskLevel === \"low\").length}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Low Risk\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Opportunities */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n          Current Opportunities\n        </h2>\n\n        {opportunities.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <Brain className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <p className=\"text-gray-500 dark:text-gray-400\">\n              {isScanning\n                ? \"Scanning for opportunities...\"\n                : \"No opportunities found. Click scan to search for value bets.\"}\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {opportunities.map((opportunity) => (\n              <div\n                key={opportunity.id}\n                className=\"border border-gray-200 dark:border-gray-600 rounded-lg p-4 hover:shadow-md transition-shadow\"\n              >\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white\">\n                      {opportunity.description}\n                    </h3>\n                    <div className=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400\">\n                      <span>Odds: {opportunity.currentOdds}</span>\n                      <span>•</span>\n                      <span>\n                        Edge: {(opportunity.valueEdge * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span\n                      className={`px-2 py-1 rounded text-xs font-medium ${getRiskColor(opportunity.riskLevel)}`}\n                    >\n                      {opportunity.riskLevel.toUpperCase()}\n                    </span>\n                    <span className=\"text-lg font-bold text-green-600\">\n                      ${opportunity.expectedReturn.toFixed(2)}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-3\">\n                  <div className=\"text-center\">\n                    <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Confidence\n                    </div>\n                    <div className=\"font-semibold text-gray-900 dark:text-white\">\n                      {(opportunity.confidence * 100).toFixed(0)}%\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Probability\n                    </div>\n                    <div className=\"font-semibold text-gray-900 dark:text-white\">\n                      {(opportunity.predictedProbability * 100).toFixed(1)}%\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Kelly %\n                    </div>\n                    <div className=\"font-semibold text-gray-900 dark:text-white\">\n                      {(opportunity.kellyFraction * 100).toFixed(1)}%\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Recommended\n                    </div>\n                    <div className=\"font-semibold text-green-600\">\n                      ${opportunity.recommendedStake.toFixed(2)}\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Max Stake\n                    </div>\n                    <div className=\"font-semibold text-gray-900 dark:text-white\">\n                      ${opportunity.maxStake.toFixed(2)}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400\">\n                    <Target className=\"w-4 h-4\" />\n                    <span>\n                      Expected Return: ${opportunity.expectedReturn.toFixed(2)}\n                    </span>\n                  </div>\n                  <button\n                    onClick={() => {\n                      setSelectedOpportunity(opportunity);\n                      setStakeAmount(opportunity.recommendedStake);\n                    }}\n                    className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center space-x-2\"\n                  >\n                    <DollarSign className=\"w-4 h-4\" />\n                    <span>Place Bet</span>\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Bet Placement Modal */}\n      {selectedOpportunity && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n              Place Bet\n            </h3>\n\n            <div className=\"mb-4\">\n              <p className=\"text-gray-600 dark:text-gray-400 mb-2\">\n                {selectedOpportunity.description}\n              </p>\n              <div className=\"text-sm text-gray-500 dark:text-gray-500\">\n                Odds: {selectedOpportunity.currentOdds} • Confidence:{\" \"}\n                {(selectedOpportunity.confidence * 100).toFixed(0)}%\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Stake Amount\n              </label>\n              <input\n                type=\"number\"\n                value={stakeAmount}\n                onChange={(e) =>\n                  setStakeAmount(parseFloat(e.target.value) || 0)\n                }\n                min=\"1\"\n                max={selectedOpportunity.maxStake}\n                step=\"0.01\"\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n              />\n              <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-500 mt-1\">\n                <span>\n                  Recommended: $\n                  {selectedOpportunity.recommendedStake.toFixed(2)}\n                </span>\n                <span>Max: ${selectedOpportunity.maxStake.toFixed(2)}</span>\n              </div>\n            </div>\n\n            {stakeAmount > 0 && (\n              <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                <div className=\"flex justify-between text-sm\">\n                  <span>Potential Win:</span>\n                  <span className=\"font-semibold text-green-600\">\n                    $\n                    {(\n                      (selectedOpportunity.currentOdds - 1) *\n                      stakeAmount\n                    ).toFixed(2)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between text-sm\">\n                  <span>Total Return:</span>\n                  <span className=\"font-semibold\">\n                    $\n                    {(selectedOpportunity.currentOdds * stakeAmount).toFixed(2)}\n                  </span>\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => {\n                  setSelectedOpportunity(null);\n                  setStakeAmount(0);\n                }}\n                className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => placeBet(selectedOpportunity, stakeAmount)}\n                disabled={\n                  stakeAmount <= 0 ||\n                  stakeAmount > selectedOpportunity.maxStake ||\n                  stakeAmount > bankroll\n                }\n                className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Confirm Bet\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UltimateMoneyMaker;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\UnifiedBettingHistory.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\UnifiedBettingHistory.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\UnifiedBettingHistory.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadBettingHistory'. Either include it or remove the dependency array.","line":90,"column":6,"nodeType":"ArrayExpression","endLine":90,"endColumn":15,"suggestions":[{"desc":"Update the dependencies array to be: [filters, loadBettingHistory]","fix":{"range":[2856,2865],"text":"[filters, loadBettingHistory]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { UnifiedServiceRegistry } from '../../services/unified/UnifiedServiceRegistry';\nimport { UnifiedAnalyticsService } from '../../services/unified/UnifiedAnalyticsService';\nimport { UnifiedStateService } from '../../services/unified/UnifiedStateService';\nimport { UnifiedNotificationService } from '../../services/unified/UnifiedNotificationService';\nimport { UnifiedErrorService } from '../../services/unified/UnifiedErrorService';\nimport { Card, Button, Input, Select, Spinner, Toast, Badge, Modal } from '../ui/UnifiedUI';\n\ninterface Bet {\n  id: string;\n  eventId: string;\n  eventName: string;\n  marketType: string;\n  selection: string;\n  odds: number;\n  stake: number;\n  potentialReturn: number;\n  status: 'pending' | 'won' | 'lost' | 'cancelled';\n  placedAt: string;\n  settledAt?: string;\n  result?: {\n    outcome: string;\n    profit: number;\n    roi: number;\n  };\n}\n\ninterface BettingStats {\n  totalBets: number;\n  wonBets: number;\n  lostBets: number;\n  pendingBets: number;\n  totalStake: number;\n  totalProfit: number;\n  averageOdds: number;\n  winRate: number;\n  roi: number;\n  bestWin: number;\n  worstLoss: number;\n  currentStreak: number;\n  bestStreak: number;\n}\n\ninterface FilterOptions {\n  dateRange: 'day' | 'week' | 'month' | 'year' | 'all';\n  status: 'all' | 'pending' | 'won' | 'lost' | 'cancelled';\n  marketType: string;\n  minOdds: number;\n  maxOdds: number;\n  minStake: number;\n  maxStake: number;\n  searchQuery: string;\n}\n\nexport const UnifiedBettingHistory: React.FC = () => {\n  // Initialize services\n  const serviceRegistry = UnifiedServiceRegistry.getInstance();\n  const analyticsService = serviceRegistry.getService<UnifiedAnalyticsService>('analytics');\n  const stateService = serviceRegistry.getService<UnifiedStateService>('state');\n  const notificationService =\n    serviceRegistry.getService<UnifiedNotificationService>('notification');\n  const errorService = serviceRegistry.getService<UnifiedErrorService>('error');\n\n  // State\n  const [bets, setBets] = useState<Bet[]>([]);\n  const [stats, setStats] = useState<BettingStats | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n  } | null>(null);\n  const [filters, setFilters] = useState<FilterOptions>({\n    dateRange: 'month',\n    status: 'all',\n    marketType: 'all',\n    minOdds: 0,\n    maxOdds: 100,\n    minStake: 0,\n    maxStake: 1000000,\n    searchQuery: '',\n  });\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedBet, setSelectedBet] = useState<Bet | null>(null);\n  const [showBetDetails, setShowBetDetails] = useState(false);\n\n  // Load betting history\n  useEffect(() => {\n    loadBettingHistory();\n  }, [filters]);\n\n  const loadBettingHistory = async () => {\n    try {\n      setLoading(true);\n      const [betsData, statsData] = await Promise.all([\n        analyticsService.getBettingHistory(filters),\n        analyticsService.getBettingStats(filters),\n      ]);\n      setBets(betsData);\n      setStats(statsData);\n    } catch (error) {\n      handleError('Failed to load betting history', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFilterChange = (key: keyof FilterOptions, value: any) => {\n    setFilters(prev => ({ ...prev, [key]: value }));\n  };\n\n  const resetFilters = () => {\n    setFilters({\n      dateRange: 'month',\n      status: 'all',\n      marketType: 'all',\n      minOdds: 0,\n      maxOdds: 100,\n      minStake: 0,\n      maxStake: 1000000,\n      searchQuery: '',\n    });\n  };\n\n  const handleError = (message: string, error: any) => {\n    setError(message);\n    setToast({ message, type: 'error' });\n    errorService.handleError(error, {\n      code: 'BETTING_HISTORY_ERROR',\n      source: 'UnifiedBettingHistory',\n      details: { message },\n    });\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount);\n  };\n\n  const formatPercentage = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'percent',\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1,\n    }).format(value / 100);\n  };\n\n  const getStatusBadge = (status: Bet['status']) => {\n    const variants = {\n      pending: 'warning',\n      won: 'success',\n      lost: 'danger',\n      cancelled: 'secondary',\n    };\n    return <Badge variant={variants[status]}>{status.toUpperCase()}</Badge>;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Spinner size=\"large\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-3xl font-bold\">Betting History</h1>\n          <Button variant=\"secondary\" onClick={() => setShowFilters(!showFilters)}>\n            {showFilters ? 'Hide Filters' : 'Show Filters'}\n          </Button>\n        </div>\n\n        {/* Stats Overview */}\n        {stats && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\n            <Card>\n              <h3 className=\"text-lg font-medium mb-2\">Performance</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Win Rate</span>\n                  <span className=\"font-medium\">{formatPercentage(stats.winRate)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>ROI</span>\n                  <span\n                    className={`font-medium ${stats.roi >= 0 ? 'text-green-600' : 'text-red-600'}`}\n                  >\n                    {formatPercentage(stats.roi)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Current Streak</span>\n                  <span className=\"font-medium\">{stats.currentStreak}</span>\n                </div>\n              </div>\n            </Card>\n\n            <Card>\n              <h3 className=\"text-lg font-medium mb-2\">Bets</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Total Bets</span>\n                  <span className=\"font-medium\">{stats.totalBets}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Won</span>\n                  <span className=\"font-medium text-green-600\">{stats.wonBets}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Lost</span>\n                  <span className=\"font-medium text-red-600\">{stats.lostBets}</span>\n                </div>\n              </div>\n            </Card>\n\n            <Card>\n              <h3 className=\"text-lg font-medium mb-2\">Stakes & Returns</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Total Stake</span>\n                  <span className=\"font-medium\">{formatCurrency(stats.totalStake)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Total Profit</span>\n                  <span\n                    className={`font-medium ${stats.totalProfit >= 0 ? 'text-green-600' : 'text-red-600'}`}\n                  >\n                    {formatCurrency(stats.totalProfit)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Average Odds</span>\n                  <span className=\"font-medium\">{stats.averageOdds.toFixed(2)}</span>\n                </div>\n              </div>\n            </Card>\n\n            <Card>\n              <h3 className=\"text-lg font-medium mb-2\">Best & Worst</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Best Win</span>\n                  <span className=\"font-medium text-green-600\">\n                    {formatCurrency(stats.bestWin)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Worst Loss</span>\n                  <span className=\"font-medium text-red-600\">\n                    {formatCurrency(stats.worstLoss)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Best Streak</span>\n                  <span className=\"font-medium\">{stats.bestStreak}</span>\n                </div>\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Filters */}\n        {showFilters && (\n          <Card className=\"mb-8\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Date Range\n                </label>\n                <Select\n                  options={[\n                    { value: 'day', label: 'Today' },\n                    { value: 'week', label: 'This Week' },\n                    { value: 'month', label: 'This Month' },\n                    { value: 'year', label: 'This Year' },\n                    { value: 'all', label: 'All Time' },\n                  ]}\n                  value={filters.dateRange}\n                  onChange={e => handleFilterChange('dateRange', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Status\n                </label>\n                <Select\n                  options={[\n                    { value: 'all', label: 'All' },\n                    { value: 'pending', label: 'Pending' },\n                    { value: 'won', label: 'Won' },\n                    { value: 'lost', label: 'Lost' },\n                    { value: 'cancelled', label: 'Cancelled' },\n                  ]}\n                  value={filters.status}\n                  onChange={e => handleFilterChange('status', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Market Type\n                </label>\n                <Select\n                  options={[\n                    { value: 'all', label: 'All Markets' },\n                    { value: 'match_winner', label: 'Match Winner' },\n                    { value: 'over_under', label: 'Over/Under' },\n                    { value: 'both_teams_to_score', label: 'Both Teams to Score' },\n                    // Add more market types\n                  ]}\n                  value={filters.marketType}\n                  onChange={e => handleFilterChange('marketType', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Search\n                </label>\n                <Input\n                  placeholder=\"Search bets...\"\n                  type=\"text\"\n                  value={filters.searchQuery}\n                  onChange={e => handleFilterChange('searchQuery', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Min Odds\n                </label>\n                <Input\n                  min=\"0\"\n                  step=\"0.01\"\n                  type=\"number\"\n                  value={filters.minOdds}\n                  onChange={e => handleFilterChange('minOdds', parseFloat(e.target.value))}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Max Odds\n                </label>\n                <Input\n                  min=\"0\"\n                  step=\"0.01\"\n                  type=\"number\"\n                  value={filters.maxOdds}\n                  onChange={e => handleFilterChange('maxOdds', parseFloat(e.target.value))}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Min Stake\n                </label>\n                <Input\n                  min=\"0\"\n                  step=\"0.01\"\n                  type=\"number\"\n                  value={filters.minStake}\n                  onChange={e => handleFilterChange('minStake', parseFloat(e.target.value))}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Max Stake\n                </label>\n                <Input\n                  min=\"0\"\n                  step=\"0.01\"\n                  type=\"number\"\n                  value={filters.maxStake}\n                  onChange={e => handleFilterChange('maxStake', parseFloat(e.target.value))}\n                />\n              </div>\n            </div>\n\n            <div className=\"flex justify-end mt-4\">\n              <Button className=\"mr-4\" variant=\"secondary\" onClick={resetFilters}>\n                Reset Filters\n              </Button>\n              <Button variant=\"primary\" onClick={loadBettingHistory}>\n                Apply Filters\n              </Button>\n            </div>\n          </Card>\n        )}\n\n        {/* Betting History Table */}\n        <Card>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-gray-800\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Event\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Market\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Selection\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Odds\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Stake\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Potential Return\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Placed\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n                {bets.map(bet => (\n                  <tr key={bet.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {bet.eventName}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {bet.marketType}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900 dark:text-white\">{bet.selection}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900 dark:text-white\">\n                        {bet.odds.toFixed(2)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900 dark:text-white\">\n                        {formatCurrency(bet.stake)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900 dark:text-white\">\n                        {formatCurrency(bet.potentialReturn)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{getStatusBadge(bet.status)}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {new Date(bet.placedAt).toLocaleString()}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <Button\n                        size=\"small\"\n                        variant=\"secondary\"\n                        onClick={() => {\n                          setSelectedBet(bet);\n                          setShowBetDetails(true);\n                        }}\n                      >\n                        Details\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card>\n      </div>\n\n      {/* Bet Details Modal */}\n      <Modal isOpen={showBetDetails} title=\"Bet Details\" onClose={() => setShowBetDetails(false)}>\n        {selectedBet && (\n          <div className=\"space-y-4\">\n            <div>\n              <h3 className=\"text-lg font-medium mb-2\">Event Details</h3>\n              <p className=\"text-gray-600 dark:text-gray-400\">{selectedBet.eventName}</p>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-medium mb-2\">Bet Details</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Market Type</span>\n                  <span>{selectedBet.marketType}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Selection</span>\n                  <span>{selectedBet.selection}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Odds</span>\n                  <span>{selectedBet.odds.toFixed(2)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Stake</span>\n                  <span>{formatCurrency(selectedBet.stake)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Potential Return</span>\n                  <span>{formatCurrency(selectedBet.potentialReturn)}</span>\n                </div>\n              </div>\n            </div>\n\n            {selectedBet.result && (\n              <div>\n                <h3 className=\"text-lg font-medium mb-2\">Result</h3>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span>Outcome</span>\n                    <span>{selectedBet.result.outcome}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Profit/Loss</span>\n                    <span\n                      className={selectedBet.result.profit >= 0 ? 'text-green-600' : 'text-red-600'}\n                    >\n                      {formatCurrency(selectedBet.result.profit)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>ROI</span>\n                    <span\n                      className={selectedBet.result.roi >= 0 ? 'text-green-600' : 'text-red-600'}\n                    >\n                      {formatPercentage(selectedBet.result.roi)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div>\n              <h3 className=\"text-lg font-medium mb-2\">Timeline</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Placed At</span>\n                  <span>{new Date(selectedBet.placedAt).toLocaleString()}</span>\n                </div>\n                {selectedBet.settledAt && (\n                  <div className=\"flex justify-between\">\n                    <span>Settled At</span>\n                    <span>{new Date(selectedBet.settledAt).toLocaleString()}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </Modal>\n\n      {/* Toast Notifications */}\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\UnifiedBettingInterface.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\UnifiedBettingInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\betting\\UnifiedBettingInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\BettingCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\BettingCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\BettingCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\BuilderIntegrationTest.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\BuilderIntegrationTest.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\BuilderPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\BuilderPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\BuilderPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\builder\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\charts\\PerformanceChart.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\charts\\PerformanceChart.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\charts\\PerformanceChart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ConfidenceIndicator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ConfidenceIndicator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ConfidenceIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ErrorBoundary.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ErrorBoundary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ErrorBoundary\\withErrorBoundary.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ErrorBoundary\\withErrorBoundary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ErrorBoundary\\withErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ErrorMessage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ErrorMessage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ErrorMessage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\FilterBar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\FilterBar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\FilterBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\LoadingSkeleton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\LoadingSkeleton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\LoadingSkeleton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\RiskLevelIndicator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\RiskLevelIndicator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\RiskLevelIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\SafeButton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\SafeButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\SportSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\SportSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\SportSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ThemeToggle.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ThemeToggle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ThemeToggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ToastProvider.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ToastProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ToastProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ValidationStatus.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ValidationStatus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\ValidationStatus.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\BettingButton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\BettingButton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\BettingButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\BettingButtonGroup.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\BettingButtonGroup.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\BettingButtonGroup.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\Button.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\Button.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\Button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\QuickBetButton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\QuickBetButton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\QuickBetButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\buttons\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\Layout.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\Layout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\Layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\MainLayout.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\MainLayout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\MainLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\Navbar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\Navbar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\Navbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\Sidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\Sidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\layout\\Sidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\loading\\SkeletonLoader.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\loading\\SkeletonLoader.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\loading\\SkeletonLoader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\modals\\Modals.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\modals\\Modals.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\modals\\Modals.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\notifications\\Toaster.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\notifications\\Toaster.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\notifications\\Toaster.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\theme\\ThemeProvider.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\theme\\ThemeProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\common\\theme\\ThemeProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\controls\\SmartControlsBar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\controls\\SmartControlsBar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\controls\\SmartControlsBar.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\controls\\SmartControlsBar.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\controls\\SmartControlsBar.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\controls\\SmartControlsBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\AppInitializer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\AppInitializer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\AppInitializer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\ErrorBoundary.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\ErrorBoundary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\ErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\ErrorState.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\ErrorState.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\ErrorState.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Layout.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Layout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Layout\\Layout.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Layout\\Layout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Layout\\Layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Layout\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Layout\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Layout\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\LoadingScreen.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\LoadingScreen.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\LoadingScreen.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\LoadingSpinner.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\LoadingSpinner.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\LoadingSpinner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\LoadingState.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\LoadingState.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\LoadingState.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Navbar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Navbar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Navbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Navbar\\Navbar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Navbar\\Navbar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Navbar\\Navbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Navbar\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Navbar\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Navbar\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Sidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Sidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Sidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Sidebar\\Sidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Sidebar\\Sidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Sidebar\\Sidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Sidebar\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Sidebar\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Sidebar\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Skeleton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Skeleton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Skeleton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Toast.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Toast.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\core\\Toast.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\cyber\\CyberAnalyticsHub.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\cyber\\CyberAnalyticsHub.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\cyber\\CyberMLDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\cyber\\CyberMLDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\cyber\\CyberUltimateMoneyMaker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\cyber\\CyberUltimateMoneyMaker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\CleanDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\CleanDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\ConsolidatedUniversalDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\ConsolidatedUniversalDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\CyberDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\CyberDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\Dashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\Dashboard.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Identifier 'Dashboard' has already been declared","line":69,"column":7}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useQuery } from '@tanstack/react-query';\nimport { Line } from 'react-chartjs-2';\nimport { predictionService } from '../../services/predictionService';\nimport useStore from '../../store/useStore';\nimport { UnifiedStrategyConfig } from '../strategy/UnifiedStrategyConfig';\nimport EnhancedPropCard from '../ui/EnhancedPropCard';\nimport GlassCard from '../ui/GlassCard';\nimport GlowButton from '../ui/GlowButton';\nimport { NotificationCenter } from '../ui/NotificationCenter';\nimport Tooltip from '../ui/Tooltip';\nconst Dashboard = () => {\n    const { darkMode } = useStore();\n    // Fetch recent predictions\n    const { data: predictions, isLoading: predictionsLoading } = useQuery({\n        queryKey: ['predictions'],\n        queryFn: () => predictionService.getRecentPredictions(),\n        staleTime: 30000,\n    });\n    // Fetch engine metrics\n    const { data: metrics, isLoading: metricsLoading } = useQuery({\n        queryKey: ['metrics'],\n        queryFn: () => predictionService.getEngineMetrics(),\n        staleTime: 30000,\n    });\n    // Performance chart data\n    const chartData = {\n        labels: predictions?.map(p => new Date(p.timestamp).toLocaleTimeString()) || [],\n        datasets: [\n            {\n                label: 'Prediction Accuracy',\n                data: predictions?.map(p => p.prediction) || [],\n                borderColor: '#5D5CDE',\n                backgroundColor: 'rgba(93, 92, 222, 0.1)',\n                tension: 0.4,\n            },\n            {\n                label: 'Confidence',\n                data: predictions?.map(p => p.confidence) || [],\n                borderColor: '#FFD700',\n                backgroundColor: 'rgba(255, 215, 0, 0.1)',\n                tension: 0.4,\n            },\n        ],\n    };\n    const chartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n            tooltip: {\n                enabled: true,\n            },\n        },\n        scales: {\n            y: {\n                beginAtZero: true,\n                max: 1,\n            },\n        },\n    };\n    return (_jsxs(\"div\", { className: \"space-y-8\", children: [_jsx(\"div\", { className: \"flex justify-end mb-2\", children: _jsx(NotificationCenter, {}) }), _jsxs(\"div\", { className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\", children: [_jsx(GlassCard, { children: _jsxs(\"div\", { className: \"flex items-center justify-between\", children: [_jsx(Tooltip, { content: \"Total number of predictions made by the engine.\", children: _jsx(\"span\", { className: \"text-sm text-gray-500 cursor-help\", children: \"Total Predictions\" }) }), _jsx(\"span\", { className: \"text-3xl font-bold text-primary-500\", children: metricsLoading ? '...' : metrics?.total_predictions || 0 })] }) }), _jsx(GlassCard, { children: _jsxs(\"div\", { className: \"flex items-center justify-between\", children: [_jsx(Tooltip, { content: \"Average accuracy of all predictions.\", children: _jsx(\"span\", { className: \"text-sm text-gray-500 cursor-help\", children: \"Avg Accuracy\" }) }), _jsx(\"span\", { className: \"text-3xl font-bold text-primary-500\", children: metricsLoading ? '...' : metrics?.average_accuracy ? `${(metrics.average_accuracy * 100).toFixed(1)}%` : '0%' })] }) }), _jsx(GlassCard, { children: _jsxs(\"div\", { className: \"flex items-center justify-between\", children: [_jsx(Tooltip, { content: \"Success rate of predictions (win %).\", children: _jsx(\"span\", { className: \"text-sm text-gray-500 cursor-help\", children: \"Success Rate\" }) }), _jsx(\"span\", { className: \"text-3xl font-bold text-primary-500\", children: metricsLoading ? '...' : metrics?.success_rate ? `${(metrics.success_rate * 100).toFixed(1)}%` : '0%' })] }) }), _jsx(GlassCard, { children: _jsxs(\"div\", { className: \"flex items-center justify-between\", children: [_jsx(Tooltip, { content: \"Return on investment from all predictions.\", children: _jsx(\"span\", { className: \"text-sm text-gray-500 cursor-help\", children: \"ROI\" }) }), _jsx(\"span\", { className: \"text-3xl font-bold text-primary-500\", children: metricsLoading ? '...' : metrics?.roi ? `${metrics.roi.toFixed(2)}%` : '0%' })] }) })] }), _jsxs(GlassCard, { className: \"p-6\", children: [_jsxs(\"div\", { className: \"flex justify-between items-center mb-4\", children: [_jsx(\"h2\", { className: \"text-xl font-semibold\", children: \"Performance Overview\" }), _jsx(Tooltip, { content: \"Refresh chart data\", children: _jsx(GlowButton, { onClick: () => window.location.reload(), children: \"Refresh\" }) })] }), _jsx(\"div\", { className: \"h-80\", children: _jsx(Line, { data: chartData, options: chartOptions }) })] }), _jsxs(GlassCard, { children: [_jsx(\"h2\", { className: \"text-xl font-semibold mb-4\", children: \"Recent Predictions\" }), _jsx(\"div\", { className: \"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4\", children: predictionsLoading\n                            ? Array.from({ length: 3 }).map((_, i) => (_jsx(\"div\", { className: \"animate-pulse h-32 bg-gray-200 dark:bg-gray-700 rounded-2xl\" }, i)))\n                            : predictions?.slice(0, 6).map(prediction => (_jsx(EnhancedPropCard, { playerName: prediction.playerName, statType: prediction.statType, line: prediction.line, overOdds: prediction.overOdds, underOdds: prediction.underOdds, sentiment: prediction.sentiment, aiBoost: prediction.aiBoost, patternStrength: prediction.patternStrength, bonusPercent: prediction.bonusPercent, enhancementPercent: prediction.enhancementPercent, onSelect: () => { }, onViewDetails: () => { } }, prediction.id))) })] }), _jsxs(GlassCard, { children: [_jsx(\"h2\", { className: \"text-xl font-semibold mb-4\", children: \"Strategy Compositor\" }), _jsx(UnifiedStrategyConfig, {})] })] }));\n};\n// DEPRECATED: Use UnifiedDashboard.tsx instead. This file is no longer used.\nconst Dashboard = () => null;\nexport default Dashboard;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\DataSourcesPanel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\DataSourcesPanel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\DataSourcesPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\EliteFeaturesOverview.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\EliteFeaturesOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\HeroSection.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\HeroSection.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\HeroSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\LiveGamesDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\LiveGamesDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\LiveGamesDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\LiveOpportunities.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\LiveOpportunities.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\MetricsOverview.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\MetricsOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\ModernDashboardEnhancement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\ModernDashboardEnhancement.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\PremiumDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\PremiumDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\PremiumDashboard.tsx","messages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useCallback\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.","line":335,"column":29,"nodeType":"Identifier","endLine":335,"endColumn":40},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has an unnecessary dependency: 'activeTab'. Either exclude it or remove the dependency array. Outer scope values like 'activeTab' aren't valid dependencies because mutating them doesn't re-render the component.","line":351,"column":8,"nodeType":"ArrayExpression","endLine":351,"endColumn":19,"suggestions":[{"desc":"Update the dependencies array to be: []","fix":{"range":[9407,9418],"text":"[]"}}]},{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useMemo\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.","line":453,"column":18,"nodeType":"Identifier","endLine":453,"endColumn":25},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has missing dependencies: 'MetricCard' and 'QuickAction'. Either include them or remove the dependency array.","line":591,"column":6,"nodeType":"ArrayExpression","endLine":591,"endColumn":17,"suggestions":[{"desc":"Update the dependencies array to be: [MetricCard, QuickAction, activeTab]","fix":{"range":[17666,17677],"text":"[MetricCard, QuickAction, activeTab]"}}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, {\n  useState,\n  useEffect,\n  Suspense,\n  lazy,\n  useMemo,\n  useCallback,\n} from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  Home,\n  TrendingUp,\n  Brain,\n  Target,\n  BarChart3,\n  Users,\n  Settings,\n  Zap,\n  Trophy,\n  DollarSign,\n  Activity,\n  Eye,\n  Shield,\n  Smartphone,\n  Globe,\n  Clock,\n  Bell,\n  Star,\n  ArrowUpRight,\n  ArrowDownRight,\n  Plus,\n  Minus,\n  RefreshCw,\n  Play,\n  Pause,\n  ChevronRight,\n  Filter,\n  Search,\n  Download,\n  Share,\n  Bookmark,\n  MoreHorizontal,\n  LucideIcon,\n} from \"lucide-react\";\n\n// TypeScript interfaces for better type safety\ninterface DashboardTab {\n  id: string;\n  name: string;\n  icon: LucideIcon;\n  color: ColorTheme;\n  description: string;\n}\n\ninterface DashboardMetrics {\n  totalProfit: number;\n  profitChange: number;\n  winRate: number;\n  winRateChange: number;\n  totalBets: number;\n  betsChange: number;\n  avgOdds: number;\n  oddsChange: number;\n  activeModels: number;\n  modelsChange: number;\n  confidenceScore: number;\n  confidenceChange: number;\n}\n\ninterface MetricCardProps {\n  title: string;\n  value: number | string;\n  change?: number;\n  prefix?: string;\n  suffix?: string;\n  icon?: LucideIcon;\n  color?: ColorTheme;\n}\n\ninterface QuickActionProps {\n  title: string;\n  description: string;\n  icon: LucideIcon;\n  color: ColorTheme;\n  onClick: () => void;\n}\n\ninterface ActivityItem {\n  type: \"bet\" | \"model\" | \"arb\";\n  desc: string;\n  amount: string;\n  time: string;\n  status: \"won\" | \"lost\" | \"info\" | \"pending\";\n}\n\ntype ColorTheme = \"brand\" | \"success\" | \"warning\" | \"error\" | \"info\" | \"purple\";\n\n// Lazy load components for better performance\nconst AdvancedAnalyticsHub = lazy(\n  () => import(\"../analytics/AdvancedAnalyticsHub\"),\n);\nconst MLModelCenter = lazy(() => import(\"../ml/MLModelCenter\"));\nconst UnifiedBettingInterface = lazy(\n  () => import(\"../betting/UnifiedBettingInterface\"),\n);\nconst ArbitrageOpportunities = lazy(() => import(\"../ArbitrageOpportunities\"));\nconst PerformanceAnalyticsDashboard = lazy(\n  () => import(\"../analytics/PerformanceAnalyticsDashboard\"),\n);\nconst RealTimeDataStream = lazy(() => import(\"../realtime/RealTimeDataStream\"));\nconst MobileOptimizedInterface = lazy(\n  () => import(\"../mobile/MobileOptimizedInterface\"),\n);\n\n// Dashboard tab configuration with proper typing\nconst dashboardTabs: DashboardTab[] = [\n  {\n    id: \"overview\",\n    name: \"Overview\",\n    icon: Home,\n    color: \"brand\",\n    description: \"Complete performance overview\",\n  },\n  {\n    id: \"trading\",\n    name: \"Trading\",\n    icon: TrendingUp,\n    color: \"success\",\n    description: \"Advanced betting interface\",\n  },\n  {\n    id: \"ml-center\",\n    name: \"ML Center\",\n    icon: Brain,\n    color: \"purple\",\n    description: \"AI model management\",\n  },\n  {\n    id: \"arbitrage\",\n    name: \"Arbitrage\",\n    icon: Target,\n    color: \"warning\",\n    description: \"Risk-free opportunities\",\n  },\n  {\n    id: \"analytics\",\n    name: \"Analytics\",\n    icon: BarChart3,\n    color: \"info\",\n    description: \"Deep insights & charts\",\n  },\n  {\n    id: \"performance\",\n    name: \"Performance\",\n    icon: Activity,\n    color: \"success\",\n    description: \"Track your results\",\n  },\n  {\n    id: \"live\",\n    name: \"Live Data\",\n    icon: Eye,\n    color: \"error\",\n    description: \"Real-time monitoring\",\n  },\n  {\n    id: \"mobile\",\n    name: \"Mobile\",\n    icon: Smartphone,\n    color: \"purple\",\n    description: \"Mobile experience\",\n  },\n];\n\n// Mock dashboard metrics with proper typing\nconst mockMetrics: DashboardMetrics = {\n  totalProfit: 12450.8,\n  profitChange: 8.2,\n  winRate: 73.5,\n  winRateChange: 2.1,\n  totalBets: 127,\n  betsChange: 5,\n  avgOdds: 1.92,\n  oddsChange: -0.03,\n  activeModels: 8,\n  modelsChange: 2,\n  confidenceScore: 87.3,\n  confidenceChange: 3.2,\n};\n\nconst PremiumDashboard: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [isLive, setIsLive] = useState(true);\n  const [notifications, setNotifications] = useState(3);\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  // Update time every minute\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 60000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Memoized color mapping for better performance\n  const colorClasses = useMemo(\n    () =>\n      ({\n        brand: {\n          gradient: \"from-brand-500 to-brand-600\",\n          text: \"text-brand-600\",\n          background: \"bg-brand-50\",\n          border: \"border-brand-200\",\n          full: \"from-brand-500 to-brand-600 text-brand-600 bg-brand-50 border-brand-200\",\n        },\n        success: {\n          gradient: \"from-success-500 to-success-600\",\n          text: \"text-success-600\",\n          background: \"bg-success-50\",\n          border: \"border-success-200\",\n          full: \"from-success-500 to-success-600 text-success-600 bg-success-50 border-success-200\",\n        },\n        warning: {\n          gradient: \"from-warning-500 to-warning-600\",\n          text: \"text-warning-600\",\n          background: \"bg-warning-50\",\n          border: \"border-warning-200\",\n          full: \"from-warning-500 to-warning-600 text-warning-600 bg-warning-50 border-warning-200\",\n        },\n        error: {\n          gradient: \"from-error-500 to-error-600\",\n          text: \"text-error-600\",\n          background: \"bg-error-50\",\n          border: \"border-error-200\",\n          full: \"from-error-500 to-error-600 text-error-600 bg-error-50 border-error-200\",\n        },\n        info: {\n          gradient: \"from-blue-500 to-blue-600\",\n          text: \"text-blue-600\",\n          background: \"bg-blue-50\",\n          border: \"border-blue-200\",\n          full: \"from-blue-500 to-blue-600 text-blue-600 bg-blue-50 border-blue-200\",\n        },\n        purple: {\n          gradient: \"from-purple-500 to-purple-600\",\n          text: \"text-purple-600\",\n          background: \"bg-purple-50\",\n          border: \"border-purple-200\",\n          full: \"from-purple-500 to-purple-600 text-purple-600 bg-purple-50 border-purple-200\",\n        },\n      }) as const,\n    [],\n  );\n\n  const getColorClasses = useCallback(\n    (color: ColorTheme) => {\n      return colorClasses[color] || colorClasses.brand;\n    },\n    [colorClasses],\n  );\n\n  const MetricCard = React.memo<MetricCardProps>(\n    ({\n      title,\n      value,\n      change,\n      prefix = \"\",\n      suffix = \"\",\n      icon: Icon,\n      color = \"brand\",\n    }) => (\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"premium-card p-6 hover:scale-105 transition-transform duration-300\"\n      >\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <p className=\"text-sm font-medium text-gray-600 mb-1\">{title}</p>\n            <p className=\"text-3xl font-bold text-gray-900 mb-2\">\n              {prefix}\n              {typeof value === \"number\" ? value.toLocaleString() : value}\n              {suffix}\n            </p>\n            {change !== undefined && (\n              <div\n                className={`flex items-center text-sm ${\n                  change >= 0 ? \"text-success-600\" : \"text-error-600\"\n                }`}\n              >\n                {change >= 0 ? (\n                  <ArrowUpRight className=\"w-4 h-4 mr-1\" />\n                ) : (\n                  <ArrowDownRight className=\"w-4 h-4 mr-1\" />\n                )}\n                {Math.abs(change)}% from last period\n              </div>\n            )}\n          </div>\n          {Icon && (\n            <div\n              className={`p-3 rounded-xl ${getColorClasses(color).background} ${getColorClasses(color).border}`}\n            >\n              <Icon className={`w-6 h-6 ${getColorClasses(color).text}`} />\n            </div>\n          )}\n        </div>\n      </motion.div>\n    ),\n  );\n\n  const QuickAction = React.memo<QuickActionProps>(\n    ({ title, description, icon: Icon, color, onClick }) => (\n      <motion.button\n        whileHover={{ scale: 1.02 }}\n        whileTap={{ scale: 0.98 }}\n        onClick={onClick}\n        className=\"premium-card p-4 text-left w-full hover:shadow-lg transition-all duration-300\"\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div\n            className={`p-2 rounded-lg ${getColorClasses(color).background} ${getColorClasses(color).border}`}\n          >\n            <Icon className={`w-5 h-5 ${getColorClasses(color).text}`} />\n          </div>\n          <div className=\"flex-1\">\n            <h4 className=\"font-semibold text-gray-900\">{title}</h4>\n            <p className=\"text-sm text-gray-600\">{description}</p>\n          </div>\n          <ChevronRight className=\"w-5 h-5 text-gray-400\" />\n        </div>\n      </motion.button>\n    ),\n  );\n\n  const renderTabContent = useCallback(() => {\n    const LoadingFallback = useCallback(() => {\n      const tabName =\n        dashboardTabs.find((t) => t.id === activeTab)?.name || \"content\";\n      return (\n        <div\n          className=\"flex items-center justify-center h-96\"\n          role=\"status\"\n          aria-live=\"polite\"\n          aria-label={`Loading ${tabName}`}\n        >\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-brand-500 border-t-transparent mx-auto mb-4\"></div>\n            <p className=\"text-gray-600 font-medium\">Loading {tabName}...</p>\n          </div>\n        </div>\n      );\n    }, [activeTab]);\n\n    switch (activeTab) {\n      case \"overview\":\n        return (\n          <div className=\"space-y-8\">\n            {/* Key Metrics */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n              <MetricCard\n                title=\"Total Profit\"\n                value={mockMetrics.totalProfit}\n                change={mockMetrics.profitChange}\n                prefix=\"$\"\n                icon={DollarSign}\n                color=\"success\"\n              />\n              <MetricCard\n                title=\"Win Rate\"\n                value={mockMetrics.winRate}\n                change={mockMetrics.winRateChange}\n                suffix=\"%\"\n                icon={Trophy}\n                color=\"brand\"\n              />\n              <MetricCard\n                title=\"Total Bets\"\n                value={mockMetrics.totalBets}\n                change={mockMetrics.betsChange}\n                icon={Target}\n                color=\"info\"\n              />\n              <MetricCard\n                title=\"Avg Odds\"\n                value={mockMetrics.avgOdds}\n                change={mockMetrics.oddsChange}\n                icon={TrendingUp}\n                color=\"warning\"\n              />\n            </div>\n\n            {/* Quick Actions */}\n            <div className=\"premium-card p-6\">\n              <h3 className=\"text-xl font-bold text-gray-900 mb-6\">\n                Quick Actions\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                <QuickAction\n                  title=\"Place New Bet\"\n                  description=\"Start a new betting session\"\n                  icon={Plus}\n                  color=\"success\"\n                  onClick={() => setActiveTab(\"trading\")}\n                />\n                <QuickAction\n                  title=\"View Analytics\"\n                  description=\"Explore performance insights\"\n                  icon={BarChart3}\n                  color=\"brand\"\n                  onClick={() => setActiveTab(\"analytics\")}\n                />\n                <QuickAction\n                  title=\"ML Models\"\n                  description=\"Manage AI predictions\"\n                  icon={Brain}\n                  color=\"purple\"\n                  onClick={() => setActiveTab(\"ml-center\")}\n                />\n                <QuickAction\n                  title=\"Find Arbitrage\"\n                  description=\"Risk-free opportunities\"\n                  icon={Target}\n                  color=\"warning\"\n                  onClick={() => setActiveTab(\"arbitrage\")}\n                />\n                <QuickAction\n                  title=\"Live Data\"\n                  description=\"Real-time monitoring\"\n                  icon={Eye}\n                  color=\"error\"\n                  onClick={() => setActiveTab(\"live\")}\n                />\n                <QuickAction\n                  title=\"Performance\"\n                  description=\"Track your results\"\n                  icon={Activity}\n                  color=\"success\"\n                  onClick={() => setActiveTab(\"performance\")}\n                />\n              </div>\n            </div>\n\n            {/* Recent Activity */}\n            <div className=\"premium-card p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-xl font-bold text-gray-900\">\n                  Recent Activity\n                </h3>\n                <button className=\"btn-outline px-3 py-2 text-sm\">\n                  View All\n                </button>\n              </div>\n              <div className=\"space-y-4\">\n                {useMemo(() => {\n                  const activities: ActivityItem[] = [\n                    {\n                      type: \"bet\",\n                      desc: \"NBA: Lakers vs Warriors OVER 220.5\",\n                      amount: \"+$250\",\n                      time: \"2 hours ago\",\n                      status: \"won\",\n                    },\n                    {\n                      type: \"model\",\n                      desc: \"ML Model updated: NBA Points Predictor\",\n                      amount: \"v2.1.3\",\n                      time: \"4 hours ago\",\n                      status: \"info\",\n                    },\n                    {\n                      type: \"arb\",\n                      desc: \"Arbitrage opportunity detected\",\n                      amount: \"2.3% ROI\",\n                      time: \"6 hours ago\",\n                      status: \"pending\",\n                    },\n                    {\n                      type: \"bet\",\n                      desc: \"NFL: Chiefs vs Bills UNDER 48.5\",\n                      amount: \"-$100\",\n                      time: \"1 day ago\",\n                      status: \"lost\",\n                    },\n                  ];\n                  return activities;\n                }, []).map((activity, idx) => (\n                  <div\n                    key={idx}\n                    className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      <div\n                        className={`p-2 rounded-lg ${\n                          activity.status === \"won\"\n                            ? \"bg-success-100 text-success-600\"\n                            : activity.status === \"lost\"\n                              ? \"bg-error-100 text-error-600\"\n                              : activity.status === \"info\"\n                                ? \"bg-blue-100 text-blue-600\"\n                                : \"bg-warning-100 text-warning-600\"\n                        }`}\n                      >\n                        {activity.type === \"bet\" ? (\n                          <Target className=\"w-4 h-4\" />\n                        ) : activity.type === \"model\" ? (\n                          <Brain className=\"w-4 h-4\" />\n                        ) : (\n                          <TrendingUp className=\"w-4 h-4\" />\n                        )}\n                      </div>\n                      <div>\n                        <p className=\"font-medium text-gray-900\">\n                          {activity.desc}\n                        </p>\n                        <p className=\"text-sm text-gray-600\">{activity.time}</p>\n                      </div>\n                    </div>\n                    <span\n                      className={`font-semibold ${\n                        activity.status === \"won\"\n                          ? \"text-success-600\"\n                          : activity.status === \"lost\"\n                            ? \"text-error-600\"\n                            : \"text-gray-900\"\n                      }`}\n                    >\n                      {activity.amount}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        );\n\n      case \"trading\":\n        return (\n          <Suspense fallback={<LoadingFallback />}>\n            <UnifiedBettingInterface />\n          </Suspense>\n        );\n\n      case \"ml-center\":\n        return (\n          <Suspense fallback={<LoadingFallback />}>\n            <MLModelCenter />\n          </Suspense>\n        );\n\n      case \"arbitrage\":\n        return (\n          <Suspense fallback={<LoadingFallback />}>\n            <ArbitrageOpportunities />\n          </Suspense>\n        );\n\n      case \"analytics\":\n        return (\n          <Suspense fallback={<LoadingFallback />}>\n            <AdvancedAnalyticsHub />\n          </Suspense>\n        );\n\n      case \"performance\":\n        return (\n          <Suspense fallback={<LoadingFallback />}>\n            <PerformanceAnalyticsDashboard />\n          </Suspense>\n        );\n\n      case \"live\":\n        return (\n          <Suspense fallback={<LoadingFallback />}>\n            <RealTimeDataStream />\n          </Suspense>\n        );\n\n      case \"mobile\":\n        return (\n          <Suspense fallback={<LoadingFallback />}>\n            <MobileOptimizedInterface />\n          </Suspense>\n        );\n\n      default:\n        return (\n          <div className=\"text-center py-12\">\n            <p className=\"text-gray-500\">Select a tab to view content</p>\n          </div>\n        );\n    }\n  }, [activeTab]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100\">\n      {/* Header */}\n      <div className=\"nav-premium sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            {/* Left side */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"p-2 bg-gradient-to-br from-brand-500 to-brand-600 rounded-xl\">\n                  <Zap className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h1 className=\"text-xl font-bold text-gradient\">\n                    A1 Betting Pro\n                  </h1>\n                  <p className=\"text-sm text-gray-600\">\n                    {currentTime.toLocaleDateString()} •{\" \"}\n                    {currentTime.toLocaleTimeString([], {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\",\n                    })}\n                  </p>\n                </div>\n              </div>\n\n              {/* Live indicator */}\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => setIsLive(!isLive)}\n                  className={`flex items-center space-x-2 px-3 py-1.5 rounded-full transition-all duration-300 ${\n                    isLive\n                      ? \"bg-success-100 text-success-700 hover:bg-success-200\"\n                      : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n                  }`}\n                >\n                  {isLive ? (\n                    <Play className=\"w-3 h-3\" />\n                  ) : (\n                    <Pause className=\"w-3 h-3\" />\n                  )}\n                  <span className=\"text-sm font-medium\">\n                    {isLive ? \"LIVE\" : \"PAUSED\"}\n                  </span>\n                  {isLive && (\n                    <div className=\"w-2 h-2 bg-success-500 rounded-full animate-pulse\" />\n                  )}\n                </button>\n              </div>\n            </div>\n\n            {/* Right side */}\n            <div className=\"flex items-center space-x-3\">\n              <button className=\"btn-glass px-3 py-2 relative\">\n                <Bell className=\"w-5 h-5\" />\n                {notifications > 0 && (\n                  <span className=\"absolute -top-1 -right-1 w-5 h-5 bg-error-500 text-white text-xs rounded-full flex items-center justify-center\">\n                    {notifications}\n                  </span>\n                )}\n              </button>\n\n              <button className=\"btn-glass px-3 py-2\">\n                <Search className=\"w-5 h-5\" />\n              </button>\n\n              <button className=\"btn-glass px-3 py-2\">\n                <Filter className=\"w-5 h-5\" />\n              </button>\n\n              <button className=\"btn-glass px-3 py-2\">\n                <Download className=\"w-5 h-5\" />\n              </button>\n\n              <button className=\"btn-glass px-3 py-2\">\n                <Share className=\"w-5 h-5\" />\n              </button>\n\n              <button className=\"btn-glass px-3 py-2\">\n                <Settings className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div\n        className=\"border-b border-gray-200 bg-white/80 backdrop-blur-lg\"\n        role=\"tablist\"\n        aria-label=\"Dashboard navigation tabs\"\n      >\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex space-x-1 overflow-x-auto py-2 scrollbar-hide\">\n            {dashboardTabs.map((tab) => {\n              const isActive = activeTab === tab.id;\n              const Icon = tab.icon;\n              const colors = getColorClasses(tab.color);\n\n              return (\n                <motion.button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`flex items-center space-x-2 px-4 py-3 rounded-xl font-medium transition-all duration-300 whitespace-nowrap relative ${\n                    isActive\n                      ? `${colors.background} ${colors.text} ${colors.border} shadow-sm`\n                      : \"text-gray-600 hover:text-gray-900 hover:bg-gray-100\"\n                  }`}\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  role=\"tab\"\n                  aria-selected={isActive}\n                  aria-controls={`tabpanel-${tab.id}`}\n                  aria-label={`${tab.name} - ${tab.description}`}\n                  tabIndex={isActive ? 0 : -1}\n                >\n                  <Icon\n                    className={`w-4 h-4 ${isActive ? colors.text : \"text-gray-500\"}`}\n                    aria-hidden=\"true\"\n                  />\n                  <span className=\"hidden sm:inline\">{tab.name}</span>\n                  {isActive && (\n                    <motion.div\n                      layoutId=\"activeTab\"\n                      className={`absolute bottom-0 left-0 right-0 h-0.5 bg-gradient-to-r ${colors.gradient}`}\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </motion.button>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={activeTab}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3 }}\n            role=\"tabpanel\"\n            id={`tabpanel-${activeTab}`}\n            aria-labelledby={`tab-${activeTab}`}\n          >\n            {renderTabContent()}\n          </motion.div>\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default PremiumDashboard;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\RealTimePredictions.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\RealTimePredictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\RealTimePredictions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\UnifiedDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\UnifiedDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\UnifiedDashboard.tsx","messages":[{"ruleId":"no-empty-pattern","severity":2,"message":"Unexpected empty object pattern.","line":239,"column":17,"nodeType":"ObjectPattern","messageId":"unexpected","endLine":239,"endColumn":19},{"ruleId":"no-empty-pattern","severity":2,"message":"Unexpected empty object pattern.","line":280,"column":17,"nodeType":"ObjectPattern","messageId":"unexpected","endLine":280,"endColumn":19}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { AnimatePresence, motion } from \"framer-motion\";\nimport { Menu, X } from \"lucide-react\";\nimport * as React from \"react\";\nimport { useState, useCallback, Suspense } from \"react\";\nimport { useAnimatedValue } from \"../../hooks/useAnimatedValue\";\nimport { usePrizePicksLiveData } from \"../../hooks/usePrizePicksLiveData\";\nimport { useStrategyEngineData } from \"../../hooks/useStrategyEngineData\";\nimport { PerformanceAnalyticsDashboard } from \"../analytics/PerformanceAnalyticsDashboard\";\nimport { MarketAnalysisDashboard } from \"../MarketAnalysisDashboard\";\nimport { ArbitrageOpportunities } from \"../ArbitrageOpportunities\";\nimport { PrizePicksEdgeDisplay } from \"../betting/PrizePicksEdgeDisplay\";\nimport { SmartLineupBuilder } from \"../lineup/SmartLineupBuilder\";\nimport MLFactorViz from \"../MLFactorViz\";\nimport { UnifiedMoneyMaker } from \"../money-maker/UnifiedMoneyMaker\";\nimport { QuantumPredictionsInterface } from \"../prediction/QuantumPredictionsInterface\";\nimport { UnifiedProfile } from \"../profile/UnifiedProfile\";\nimport { UnifiedSettingsInterface } from \"../settings/UnifiedSettingsInterface\";\nimport UnifiedStrategyEngineDisplay from \"../strategy/UnifiedStrategyEngineDisplay\";\nimport { Badge } from \"../ui/badge\";\nimport { BetSimulationTool } from \"../ui/BetSimulationTool\";\nimport { Card } from \"../ui/card\";\nimport { FeatureFlagIndicators } from \"../ui/FeatureFlagIndicators\";\nimport { ServiceStatusIndicators } from \"../ui/ServiceStatusIndicators\";\nimport { Skeleton } from \"../ui/Skeleton\";\nimport { Toast } from \"../ui/UnifiedUI\";\nimport { HeroSection } from \"./HeroSection\";\nimport { LiveGamesDisplay } from \"./LiveGamesDisplay\";\nimport { RealTimePredictions } from \"./RealTimePredictions\";\nimport { DataSourcesPanel } from \"./DataSourcesPanel\";\n\n// ============================================================================\n// TYPES & INTERFACES\n// ============================================================================\n\ninterface TabConfig {\n  key: string;\n  label: string;\n  icon: React.ReactNode;\n  component: React.ComponentType<any>;\n  props?: Record<string, any>;\n  requiresAuth?: boolean;\n  isPremium?: boolean;\n}\n\ninterface ActivityItem {\n  id: string;\n  type: \"bet\" | \"prediction\" | \"analysis\";\n  description: string;\n  amount?: number;\n  odds?: number;\n  timestamp: number;\n  status: \"success\" | \"pending\" | \"error\";\n}\n\ninterface DashboardMetrics {\n  winRate: number;\n  roi: number;\n  profitLoss: number;\n  totalBets: number;\n  activePredictions: number;\n}\n\n// ============================================================================\n// TAB COMPONENTS & CONFIGURATION\n// ============================================================================\n\n// Overview tab content\nconst OverviewTab: React.FC<{\n  metrics: DashboardMetrics;\n  recentActivity: ActivityItem[];\n  winRate: any;\n  roi: any;\n  profitLoss: any;\n  dataQuality: number;\n}> = ({ metrics, recentActivity, winRate, roi, profitLoss, dataQuality }) => (\n  <>\n    <HeroSection\n      connectedSources={50}\n      totalSources={60}\n      gamesCount={20}\n      playersCount={100}\n      dataQuality={0.85}\n      dataReliability={0.9}\n    />\n\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mt-8\">\n      <Card className=\"glass-card bg-gradient-to-br from-blue-500/20 to-purple-500/10 border-0 shadow-xl hover:shadow-2xl transition-all duration-300\">\n        <div className=\"p-6\">\n          <div className=\"text-lg font-semibold text-blue-800 dark:text-blue-200 mb-2\">\n            Win Rate\n          </div>\n          <div className=\"text-3xl font-extrabold text-blue-600 dark:text-blue-300\">\n            {winRate.value.toFixed(1)}%\n          </div>\n          <div className=\"text-sm text-blue-500/70 mt-1\">+2.3% this week</div>\n        </div>\n      </Card>\n\n      <Card className=\"glass-card bg-gradient-to-br from-green-500/20 to-teal-500/10 border-0 shadow-xl hover:shadow-2xl transition-all duration-300\">\n        <div className=\"p-6\">\n          <div className=\"text-lg font-semibold text-green-800 dark:text-green-200 mb-2\">\n            ROI\n          </div>\n          <div className=\"text-3xl font-extrabold text-green-600 dark:text-green-300\">\n            {roi.value.toFixed(1)}%\n          </div>\n          <div className=\"text-sm text-green-500/70 mt-1\">+5.1% this month</div>\n        </div>\n      </Card>\n\n      <Card className=\"glass-card bg-gradient-to-br from-yellow-500/20 to-orange-500/10 border-0 shadow-xl hover:shadow-2xl transition-all duration-300\">\n        <div className=\"p-6\">\n          <div className=\"text-lg font-semibold text-yellow-800 dark:text-yellow-200 mb-2\">\n            Profit/Loss\n          </div>\n          <div\n            className={`text-3xl font-extrabold ${profitLoss.value >= 0 ? \"text-green-500\" : \"text-red-500\"}`}\n          >\n            ${profitLoss.value.toFixed(2)}\n          </div>\n          <div className=\"text-sm text-yellow-600/70 mt-1\">Last 30 days</div>\n        </div>\n      </Card>\n\n      <Card className=\"glass-card bg-gradient-to-br from-purple-500/20 to-pink-500/10 border-0 shadow-xl hover:shadow-2xl transition-all duration-300\">\n        <div className=\"p-6\">\n          <div className=\"text-lg font-semibold text-purple-800 dark:text-purple-200 mb-2\">\n            Active Bets\n          </div>\n          <div className=\"text-3xl font-extrabold text-purple-600 dark:text-purple-300\">\n            {metrics.activePredictions}\n          </div>\n          <div className=\"text-sm text-purple-500/70 mt-1\">\n            Currently tracking\n          </div>\n        </div>\n      </Card>\n    </div>\n\n    <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-8 mt-8\">\n      <DataSourcesPanel\n        connectedSources={metrics.activePredictions}\n        totalSources={15}\n      />\n      <div className=\"space-y-6\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg\">\n          <h3 className=\"text-lg font-bold mb-4 dark:text-white\">\n            Real-Time System Status\n          </h3>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600 dark:text-gray-400\">\n                Connection Status:\n              </span>\n              <span className=\"font-medium dark:text-white\">Connected</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600 dark:text-gray-400\">\n                Data Quality:\n              </span>\n              <span className=\"font-medium text-green-600\">\n                {(dataQuality * 100).toFixed(1)}%\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600 dark:text-gray-400\">\n                Active Predictions:\n              </span>\n              <span className=\"font-medium text-purple-600\">\n                {metrics.activePredictions}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mt-8\">\n      <LiveGamesDisplay games={[]} />\n      <RealTimePredictions predictions={[]} loading={false} />\n    </div>\n  </>\n);\n\n// PrizePicks tab with loading states\nconst PrizePicksTab: React.FC<{\n  livePrizePicksData: any[];\n  showDebug: boolean;\n}> = ({ livePrizePicksData, showDebug }) => (\n  <div className=\"space-y-6\">\n    <div className=\"text-center mb-8\">\n      <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\n        🎯 PrizePicks Intelligence Hub\n      </h2>\n      <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\n        Real-time prop analysis with advanced ML predictions\n      </p>\n    </div>\n\n    {livePrizePicksData.length === 0 ? (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {[...Array(6)].map((_, i) => (\n          <Skeleton key={i} height={200} className=\"w-full rounded-xl\" />\n        ))}\n      </div>\n    ) : (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {livePrizePicksData.map((pick, idx) => (\n          <PrizePicksEdgeDisplay\n            key={pick.id || idx}\n            {...pick}\n            showDebug={showDebug}\n          />\n        ))}\n      </div>\n    )}\n  </div>\n);\n\n// Create icon component helper\nconst createIcon = (emoji: string, label: string) => (\n  <span role=\"img\" aria-label={label} className=\"text-xl\">\n    {emoji}\n  </span>\n);\n\n// Main tab configuration\nconst TAB_CONFIGS: TabConfig[] = [\n  {\n    key: \"overview\",\n    label: \"Overview\",\n    icon: createIcon(\"📊\", \"overview\"),\n    component: OverviewTab,\n  },\n  {\n    key: \"analytics\",\n    label: \"Analytics\",\n    icon: createIcon(\"📈\", \"analytics\"),\n    component: ({}) => (\n      <div className=\"space-y-8\">\n        <PerformanceAnalyticsDashboard />\n        <MarketAnalysisDashboard />\n      </div>\n    ),\n  },\n  {\n    key: \"prizepicks\",\n    label: \"PrizePicks\",\n    icon: createIcon(\"🎯\", \"prizepicks\"),\n    component: PrizePicksTab,\n  },\n  {\n    key: \"strategyEngine\",\n    label: \"Strategy Engine\",\n    icon: createIcon(\"🧠\", \"strategy\"),\n    component: ({ recommendations, showDebug }: any) => (\n      <UnifiedStrategyEngineDisplay\n        recommendations={recommendations}\n        showDebug={showDebug}\n      />\n    ),\n  },\n  {\n    key: \"moneyMaker\",\n    label: \"Money Maker\",\n    icon: createIcon(\"💰\", \"money\"),\n    component: UnifiedMoneyMaker,\n    isPremium: true,\n  },\n  {\n    key: \"arbitrage\",\n    label: \"Arbitrage\",\n    icon: createIcon(\"🔀\", \"arbitrage\"),\n    component: ArbitrageOpportunities,\n  },\n  {\n    key: \"ml\",\n    label: \"ML Models\",\n    icon: createIcon(\"🤖\", \"ml\"),\n    component: ({}) => <MLFactorViz playerId={null} metric={null} />,\n  },\n  {\n    key: \"quantum\",\n    label: \"Quantum\",\n    icon: createIcon(\"🧬\", \"quantum\"),\n    component: QuantumPredictionsInterface,\n    isPremium: true,\n  },\n  {\n    key: \"simulator\",\n    label: \"Simulator\",\n    icon: createIcon(\"🧪\", \"simulator\"),\n    component: BetSimulationTool,\n  },\n  {\n    key: \"lineup\",\n    label: \"Smart Lineup\",\n    icon: createIcon(\"📋\", \"lineup\"),\n    component: SmartLineupBuilder,\n  },\n  {\n    key: \"profile\",\n    label: \"Profile\",\n    icon: createIcon(\"👤\", \"profile\"),\n    component: UnifiedProfile,\n  },\n  {\n    key: \"settings\",\n    label: \"Settings\",\n    icon: createIcon(\"⚙️\", \"settings\"),\n    component: UnifiedSettingsInterface,\n  },\n];\n\n// ============================================================================\n// MAIN COMPONENT\n// ============================================================================\n\nconst UnifiedDashboard: React.FC = () => {\n  // ========== STATE ==========\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: \"success\" | \"error\" | \"warning\" | \"info\";\n  } | null>(null);\n\n  // Demo data - replace with real data sources\n  const [recentActivity] = useState<ActivityItem[]>([\n    {\n      id: \"1\",\n      type: \"bet\",\n      description: \"Lakers vs Warriors Over 220.5\",\n      amount: 100,\n      odds: 2.1,\n      timestamp: Date.now() - 3600000,\n      status: \"success\",\n    },\n    {\n      id: \"2\",\n      type: \"prediction\",\n      description: \"Patriots ML Prediction\",\n      amount: 50,\n      odds: 1.8,\n      timestamp: Date.now() - 7200000,\n      status: \"pending\",\n    },\n  ]);\n\n  const [metrics] = useState<DashboardMetrics>({\n    winRate: 72.4,\n    roi: 18.2,\n    profitLoss: 1240.55,\n    totalBets: 156,\n    activePredictions: 8,\n  });\n\n  // ========== HOOKS ==========\n  const winRate = useAnimatedValue(metrics.winRate, { duration: 1200 });\n  const roi = useAnimatedValue(metrics.roi, { duration: 1400 });\n  const profitLoss = useAnimatedValue(metrics.profitLoss, { duration: 1600 });\n\n  const showDebug = import.meta.env.MODE === \"development\";\n  const livePrizePicksData = usePrizePicksLiveData();\n  const strategyRecommendations = useStrategyEngineData();\n\n  // ========== HANDLERS ==========\n  const handleTabChange = useCallback((tabKey: string) => {\n    setActiveTab(tabKey);\n    setIsMobileMenuOpen(false);\n  }, []);\n\n  const closeMobileMenu = useCallback(() => {\n    setIsMobileMenuOpen(false);\n  }, []);\n\n  const showToast = useCallback(\n    (\n      message: string,\n      type: \"success\" | \"error\" | \"warning\" | \"info\" = \"info\",\n    ) => {\n      setToast({ message, type });\n    },\n    [],\n  );\n\n  // ========== COMPUTED VALUES ==========\n  const currentTabConfig = TAB_CONFIGS.find((tab) => tab.key === activeTab);\n  const CurrentTabComponent = currentTabConfig?.component;\n\n  // Get props for current tab\n  const getTabProps = () => {\n    switch (activeTab) {\n      case \"overview\":\n        return {\n          metrics,\n          recentActivity,\n          winRate,\n          roi,\n          profitLoss,\n          dataQuality: 0.87,\n        };\n      case \"prizepicks\":\n        return { livePrizePicksData, showDebug };\n      case \"strategyEngine\":\n        return { recommendations: strategyRecommendations, showDebug };\n      default:\n        return {};\n    }\n  };\n\n  // ========== ANIMATION VARIANTS ==========\n  const sidebarVariants = {\n    open: { x: 0, opacity: 1 },\n    closed: { x: \"-100%\", opacity: 0 },\n  };\n\n  const contentVariants = {\n    initial: { opacity: 0, y: 20 },\n    animate: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: -20 },\n  };\n\n  const overlayVariants = {\n    open: { opacity: 1 },\n    closed: { opacity: 0 },\n  };\n\n  // ========== RENDER COMPONENTS ==========\n\n  // Mobile Header\n  const MobileHeader = () => (\n    <div className=\"lg:hidden flex items-center justify-between p-4 bg-white/80 dark:bg-gray-900/80 backdrop-blur-lg border-b border-gray-200/20 sticky top-0 z-40\">\n      <div className=\"flex items-center gap-2\">\n        <span className=\"text-2xl animate-pulse\">⚡</span>\n        <span className=\"text-xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\n          A1Betting\n        </span>\n      </div>\n      <button\n        onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        className=\"p-2 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-colors\"\n        aria-label=\"Toggle menu\"\n      >\n        {isMobileMenuOpen ? <X size={20} /> : <Menu size={20} />}\n      </button>\n    </div>\n  );\n\n  // Sidebar component\n  const Sidebar = () => (\n    <>\n      {/* Mobile overlay */}\n      <AnimatePresence>\n        {isMobileMenuOpen && (\n          <motion.div\n            initial=\"closed\"\n            animate=\"open\"\n            exit=\"closed\"\n            variants={overlayVariants}\n            className=\"lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\n            onClick={closeMobileMenu}\n          />\n        )}\n      </AnimatePresence>\n\n      {/* Sidebar */}\n      <motion.aside\n        initial={false}\n        animate={isMobileMenuOpen ? \"open\" : \"closed\"}\n        variants={sidebarVariants}\n        transition={{ type: \"spring\", damping: 25, stiffness: 200 }}\n        className={`\n          fixed lg:static top-0 left-0 h-full w-72 z-50\n          lg:translate-x-0 lg:opacity-100\n          bg-gradient-to-b from-blue-600/95 to-purple-700/95\n          backdrop-blur-xl shadow-2xl rounded-none lg:rounded-2xl\n          flex flex-col gap-4 text-white overflow-y-auto\n        `}\n      >\n        {/* Sidebar Header */}\n        <div className=\"p-6 border-b border-white/10\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <span className=\"text-3xl animate-pulse\">⚡</span>\n              <div>\n                <div className=\"text-2xl font-extrabold tracking-tight\">\n                  A1Betting\n                </div>\n                <div className=\"text-xs text-blue-200 opacity-75\">\n                  AI Sports Intelligence\n                </div>\n              </div>\n            </div>\n            <button\n              onClick={closeMobileMenu}\n              className=\"lg:hidden p-1 rounded text-white/70 hover:text-white\"\n              aria-label=\"Close menu\"\n            >\n              <X size={20} />\n            </button>\n          </div>\n        </div>\n\n        {/* Navigation */}\n        <nav className=\"flex-1 px-4 pb-6 space-y-2\">\n          {TAB_CONFIGS.map((tab) => (\n            <button\n              key={tab.key}\n              className={`\n                w-full flex items-center gap-4 px-4 py-3 rounded-xl\n                transition-all duration-200 font-semibold text-left\n                ${\n                  activeTab === tab.key\n                    ? \"bg-white/20 shadow-lg ring-2 ring-yellow-400/50 text-white\"\n                    : \"hover:bg-white/10 text-white/90 hover:text-white\"\n                }\n                ${tab.isPremium ? \"border border-yellow-400/30\" : \"\"}\n              `}\n              onClick={() => handleTabChange(tab.key)}\n            >\n              <span className=\"text-xl\">{tab.icon}</span>\n              <span className=\"flex-1\">{tab.label}</span>\n              {tab.isPremium && (\n                <Badge\n                  variant=\"warning\"\n                  className=\"text-xs bg-yellow-500/20 text-yellow-300 border-yellow-400/30\"\n                >\n                  PRO\n                </Badge>\n              )}\n            </button>\n          ))}\n        </nav>\n\n        {/* Footer */}\n        <div className=\"p-4 border-t border-white/10\">\n          <div className=\"text-xs text-white/60 text-center\">\n            Version 2.1.0 • Real-time AI\n          </div>\n        </div>\n      </motion.aside>\n    </>\n  );\n\n  // Main content\n  const MainContent = () => (\n    <main className=\"flex-1 min-h-screen p-4 lg:p-8 bg-gradient-to-br from-blue-50/50 via-purple-50/30 to-yellow-50/50 dark:from-gray-900 dark:via-gray-950 dark:to-gray-900\">\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n          key={activeTab}\n          initial=\"initial\"\n          animate=\"animate\"\n          exit=\"exit\"\n          variants={contentVariants}\n          transition={{ duration: 0.3, ease: \"easeInOut\" }}\n          className=\"space-y-8 min-h-[60vh]\"\n        >\n          <Suspense\n            fallback={\n              <div className=\"space-y-6\">\n                <Skeleton height={120} className=\"w-full\" />\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  {[...Array(3)].map((_, i) => (\n                    <Skeleton key={i} height={200} className=\"w-full\" />\n                  ))}\n                </div>\n              </div>\n            }\n          >\n            {CurrentTabComponent ? (\n              <CurrentTabComponent {...getTabProps()} />\n            ) : (\n              <div className=\"text-center py-12\">\n                <div className=\"text-4xl mb-4\">🚧</div>\n                <h3 className=\"text-xl font-semibold text-gray-700 dark:text-gray-300 mb-2\">\n                  Tab Under Development\n                </h3>\n                <p className=\"text-gray-500 dark:text-gray-400\">\n                  This feature is coming soon!\n                </p>\n              </div>\n            )}\n          </Suspense>\n\n          {/* Footer Info Cards */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mt-12\">\n            <Card className=\"glass-card bg-white/70 dark:bg-gray-900/70 shadow-lg\">\n              <div className=\"p-6\">\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                  <span>📊</span>\n                  Recent Activity\n                </h3>\n                <div className=\"space-y-3\">\n                  {recentActivity.length === 0 ? (\n                    <div className=\"text-gray-400 text-center py-4\">\n                      No recent activity.\n                    </div>\n                  ) : (\n                    recentActivity.map((activity) => (\n                      <div\n                        key={activity.id}\n                        className=\"flex items-center justify-between p-3 bg-gray-50/50 dark:bg-gray-800/50 rounded-lg\"\n                      >\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-sm\">\n                            {activity.description}\n                          </div>\n                          <div className=\"text-xs text-gray-500 mt-1\">\n                            {new Date(activity.timestamp).toLocaleString()}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-3\">\n                          {activity.amount && (\n                            <span className=\"text-sm font-medium\">\n                              ${activity.amount}\n                            </span>\n                          )}\n                          <Badge\n                            variant={\n                              activity.status === \"success\"\n                                ? \"success\"\n                                : activity.status === \"pending\"\n                                  ? \"warning\"\n                                  : \"danger\"\n                            }\n                          >\n                            {activity.status}\n                          </Badge>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            </Card>\n\n            <Card className=\"glass-card bg-white/70 dark:bg-gray-900/70 shadow-lg\">\n              <div className=\"p-6\">\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                  <span>🔧</span>\n                  System Status\n                </h3>\n                <ServiceStatusIndicators />\n                <div className=\"mt-4\">\n                  <FeatureFlagIndicators />\n                </div>\n              </div>\n            </Card>\n          </div>\n        </motion.div>\n      </AnimatePresence>\n\n      {/* Toast Notifications */}\n      <AnimatePresence>\n        {toast && (\n          <Toast\n            message={toast.message}\n            type={toast.type}\n            onClose={() => setToast(null)}\n          />\n        )}\n      </AnimatePresence>\n    </main>\n  );\n\n  // ========== MAIN RENDER ==========\n  return (\n    <div className=\"flex h-screen bg-gradient-to-br from-blue-50 to-purple-100 dark:from-gray-900 dark:to-gray-800\">\n      <MobileHeader />\n\n      <div className=\"flex-1 flex overflow-hidden\">\n        <Sidebar />\n        <MainContent />\n      </div>\n    </div>\n  );\n};\n\nexport default UnifiedDashboard;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\UniversalDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\dashboard\\UniversalDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\elite\\AIEdgeML.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\elite\\BusinessAnalysis.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\elite\\index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\enhanced\\EnhancedAPITestDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\enhanced\\EnhancedPrizePicks.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\enhanced\\EnhancedPrizePicks.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadPlayerProps'. Either include it or remove the dependency array.","line":45,"column":6,"nodeType":"ArrayExpression","endLine":45,"endColumn":30,"suggestions":[{"desc":"Update the dependencies array to be: [selectedSport, players, loadPlayerProps]","fix":{"range":[1483,1507],"text":"[selectedSport, players, loadPlayerProps]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport {\n  Award,\n  RefreshCw,\n  Target\n} from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  SPORT_OPTIONS,\n  getSportDisplayName,\n  getSportEmoji,\n} from \"../../constants/sports\";\nimport { useApp } from \"../../contexts/AppContext\";\nimport { useEnhancedRealDataSources } from \"../../hooks/useEnhancedRealDataSources\";\nimport { useRealDataValidation } from \"../../hooks/useRealDataValidation\";\nimport { useToasts } from \"../../hooks/useToasts\";\nimport { PlayerProp } from \"../../types\";\nimport { DataGenerator } from \"../../utils/dataGenerator\";\nimport { validateLineup } from \"../../utils/lineupValidation\";\nimport { SportSelector } from \"../common/SportSelector\";\nimport { LineupBuilder } from \"../LineupBuilder\";\nimport { PropCard } from \"../modern/PropCard\";\n\nexport function EnhancedPrizePicks() {\n  const { state, addSelectedProp } = useApp();\n  const { addToast } = useToasts();\n  const [currentProps, setCurrentProps] = useState<PlayerProp[]>([]);\n  const [selectedSport, setSelectedSport] = useState(\"All\");\n  const [loading, setLoading] = useState(false);\n  const [displayedPropsCount, setDisplayedPropsCount] = useState(9);\n  const [entryAmount, setEntryAmount] = useState(25);\n\n  const {\n    dataSources,\n    players,\n    loading: dataLoading,\n    refreshData,\n    getSourcesByCategory,\n  } = useEnhancedRealDataSources();\n\n  const validation = useRealDataValidation();\n\n  useEffect(() => {\n    loadPlayerProps();\n  }, [selectedSport, players]);\n\n  const loadPlayerProps = async () => {\n    setLoading(true);\n    try {\n      // Get PrizePicks data from enhanced data sources\n      const prizePicksSources = getSourcesByCategory(\"prizepicks\");\n      const propsData = prizePicksSources.find(\n        (s) => s.id === \"prizepicks_props\",\n      );\n\n      if (propsData?.connected && propsData.data?.projections) {\n        if (process.env.NODE_ENV === \"development\") {\n          console.log(\n            \"📊 Loading real PrizePicks data:\",\n            propsData.data.projections.length,\n            \"projections\",\n          );\n        }\n\n        const playerProps = propsData.data.projections.map((projection: any) =>\n          convertToPlayerProp(projection),\n        );\n        setCurrentProps(playerProps);\n      } else {\n        console.warn(\n          \"⚠️ No real PrizePicks data available, generating from player data\",\n        );\n        // Generate props from real player data\n        const generatedProps = generatePropsFromPlayers();\n        setCurrentProps(generatedProps);\n      }\n    } catch (error) {\n      console.error(\"❌ Error loading player props:\", error);\n      // Fallback to generated props\n      const fallbackProps = generatePropsFromPlayers();\n      setCurrentProps(fallbackProps);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const convertToPlayerProp = (projection: any): PlayerProp => {\n    return {\n      id: projection.id,\n      playerName: projection.player_name,\n      team: projection.team || \"TBD\",\n      position: projection.position || \"Unknown\",\n      statType: projection.stat_type,\n      line: projection.line,\n      sport: projection.sport,\n      realDataQuality: 0.95, // High quality for real PrizePicks data\n      overConfidence: calculateConfidence(projection, \"over\"),\n      underConfidence: calculateConfidence(projection, \"under\"),\n      expectedValue: projection.expected_value || 0,\n      source: \"PRIZEPICKS_REAL_DATA\",\n      aiEnhancement: {\n        valueRating: projection.value_rating,\n        kellyOptimal: projection.kelly_optimal,\n        marketEdge: projection.expected_value / 100,\n        riskScore: 1 - projection.confidence_score,\n        weatherImpact: projection.weather_impact,\n        injuryImpact: projection.injury_status === \"Healthy\" ? 0 : 0.1,\n        formTrend: calculateFormTrend(projection.recent_form),\n        sharpMoney: projection.sharp_money,\n        publicBetting: projection.public_betting,\n        lineMovement: projection.line_movement,\n        steamMove: projection.steam_move,\n        reverseLineMovement: projection.reverse_line_movement,\n      },\n      patternAnalysis: {\n        overallStrength: projection.confidence_score || 0.8,\n        seasonalTrends: calculateSeasonalTrends(projection),\n        matchupAdvantage: calculateMatchupAdvantage(projection),\n        recentPerformance: projection.recent_form || [0.5, 0.6, 0.7, 0.8, 0.9],\n        homeAwayFactor: projection.home_away === \"Home\" ? 1.05 : 0.95,\n        restAdvantage: projection.rest_days > 1 ? 1.02 : 0.98,\n        backToBackPenalty: projection.back_to_back ? 0.95 : 1.0,\n      },\n    };\n  };\n\n  const generatePropsFromPlayers = (): PlayerProp[] => {\n    const props: PlayerProp[] = [];\n\n    // Filter players by sport\n    const filteredPlayers =\n      selectedSport === \"All\"\n        ? players\n        : players.filter((p) => p.sport === selectedSport);\n\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(\n        `🎯 Generating props from ${filteredPlayers.length} real players`,\n      );\n    }\n    filteredPlayers.slice(0, 20).forEach((player) => {\n      const statTypes = getStatTypesForSport(player.sport);\n\n      statTypes.forEach((statType) => {\n        const line = calculateRealLine(player, statType);\n\n        props.push({\n          id: `${player.sport}_${player.name}_${statType}`\n            .replace(/\\s+/g, \"_\")\n            .toLowerCase(),\n          playerName: player.name,\n          team: player.team,\n          position: player.position,\n          statType: statType,\n          line: line,\n          sport: player.sport,\n          realDataQuality: 0.85, // Good quality from real player data\n          overConfidence: DataGenerator.generateConfidence({\n            ...player,\n            statType,\n            choice: \"over\",\n          }),\n          underConfidence: DataGenerator.generateConfidence({\n            ...player,\n            statType,\n            choice: \"under\",\n          }),\n          expectedValue: DataGenerator.generateExpectedValue({\n            ...player,\n            statType,\n          }),\n          source: \"REAL_PLAYER_DATA_ENHANCED\",\n          aiEnhancement: {\n            valueRating: [\"A+\", \"A\", \"B+\", \"B\", \"C+\"][\n              Math.floor(DataGenerator.generateConfidence(player) / 20)\n            ],\n            kellyOptimal:\n              Math.abs(DataGenerator.generateExpectedValue(player)) / 100,\n            marketEdge: DataGenerator.generateExpectedValue(player) / 100,\n            riskScore: (100 - DataGenerator.generateConfidence(player)) / 100,\n            weatherImpact: isOutdoorSport(player.sport)\n              ? Math.abs(DataGenerator.generateExpectedValue(player)) / 200\n              : 0,\n            injuryImpact: 0.02, // Low injury impact for active players\n            formTrend: DataGenerator.generateExpectedValue(player) / 500,\n          },\n          patternAnalysis: {\n            overallStrength:\n              DataGenerator.generateConfidence({ ...player, statType }) / 100,\n          },\n        });\n      });\n    });\n\n    return props;\n  };\n\n  const calculateRealLine = (player: any, statType: string): number => {\n    // Use realistic stat line generation\n    return DataGenerator.generateStatLine(player.sport, statType, player.name);\n  };\n\n  const calculateConfidence = (\n    projection: any,\n    type: \"over\" | \"under\",\n  ): number => {\n    const baseConfidence = projection.confidence_score || 0.8;\n    const formTrend = calculateFormTrend(projection.recent_form);\n    const seasonAvg = projection.season_average || projection.line;\n    const vsOpponentAvg = projection.vs_opponent_average || projection.line;\n\n    let confidence = baseConfidence;\n\n    // Adjust based on recent form\n    if (type === \"over\") {\n      confidence += formTrend * 0.1;\n      if (seasonAvg > projection.line) confidence += 0.05;\n      if (vsOpponentAvg > projection.line) confidence += 0.03;\n    } else {\n      confidence -= formTrend * 0.1;\n      if (seasonAvg < projection.line) confidence += 0.05;\n      if (vsOpponentAvg < projection.line) confidence += 0.03;\n    }\n\n    return Math.min(Math.max(confidence, 0.5), 0.98) * 100;\n  };\n\n  const calculateFormTrend = (recentForm: number[]): number => {\n    if (!recentForm || recentForm.length < 2) return 0;\n\n    const recent = recentForm.slice(-5);\n    const weights = [0.1, 0.15, 0.2, 0.25, 0.3];\n\n    let weightedSum = 0;\n    let totalWeight = 0;\n\n    recent.forEach((form, index) => {\n      const weight = weights[index] || 0.1;\n      weightedSum += form * weight;\n      totalWeight += weight;\n    });\n\n    return weightedSum / totalWeight - 0.5;\n  };\n\n  const calculateSeasonalTrends = (projection: any): number => {\n    const month = new Date().getMonth();\n    const sport = projection.sport;\n\n    let trend = 0.5;\n\n    if (sport === \"NBA\") {\n      trend = 0.4 + (month / 12) * 0.4;\n    } else if (sport === \"NFL\") {\n      trend = 0.6 - (month / 12) * 0.2;\n    } else if (sport === \"MLB\") {\n      trend = 0.5 + Math.sin(month / 2) * 0.1;\n    }\n\n    return trend;\n  };\n\n  const calculateMatchupAdvantage = (projection: any): number => {\n    const vsOpponentAvg = projection.vs_opponent_average || projection.line;\n    const seasonAvg = projection.season_average || projection.line;\n\n    if (seasonAvg === 0) return 0.5;\n\n    return Math.min(Math.max(vsOpponentAvg / seasonAvg, 0.7), 1.3) - 1;\n  };\n\n  const getStatTypesForSport = (sport: string): string[] => {\n    const statTypes = {\n      NBA: [\n        \"Points\",\n        \"Rebounds\",\n        \"Assists\",\n        \"3-Pointers Made\",\n        \"Steals\",\n        \"Blocks\",\n      ],\n      NFL: [\n        \"Passing Yards\",\n        \"Rushing Yards\",\n        \"Receptions\",\n        \"Receiving Yards\",\n        \"Touchdowns\",\n      ],\n      MLB: [\"Hits\", \"RBIs\", \"Runs\", \"Home Runs\", \"Strikeouts\"],\n      NHL: [\"Goals\", \"Assists\", \"Shots\", \"Points\"],\n      Soccer: [\"Goals\", \"Assists\", \"Shots\", \"Passes\"],\n      WNBA: [\"Points\", \"Rebounds\", \"Assists\", \"3-Pointers Made\"],\n      MMA: [\"Significant Strikes\", \"Takedowns\", \"Submission Attempts\"],\n      PGA: [\"Birdies\", \"Eagles\", \"Fairways Hit\", \"Greens in Regulation\"],\n    };\n\n    return statTypes[sport] || [\"Points\"];\n  };\n\n  const getBaseStatValue = (sport: string, statType: string): number => {\n    const baseValues = {\n      NBA: {\n        Points: 20,\n        Rebounds: 8,\n        Assists: 5,\n        \"3-Pointers Made\": 2.5,\n        Steals: 1.2,\n        Blocks: 0.8,\n      },\n      NFL: {\n        \"Passing Yards\": 250,\n        \"Rushing Yards\": 80,\n        Receptions: 5,\n        \"Receiving Yards\": 60,\n        Touchdowns: 1.5,\n      },\n      MLB: {\n        Hits: 1.2,\n        RBIs: 1,\n        Runs: 0.8,\n        \"Home Runs\": 0.3,\n        Strikeouts: 1.5,\n      },\n      NHL: {\n        Goals: 0.8,\n        Assists: 1.2,\n        Shots: 3.5,\n        Points: 2,\n      },\n    };\n\n    const sportValues = baseValues[sport] || { Points: 10 };\n    return sportValues[statType] || 10;\n  };\n\n  const isOutdoorSport = (sport: string): boolean => {\n    return [\"NFL\", \"MLB\", \"Soccer\", \"PGA\"].includes(sport);\n  };\n\n  const handleSelectProp = (propId: string, choice: \"over\" | \"under\") => {\n    if (state.selectedProps.size >= 6) {\n      return;\n    }\n\n    const key = `${propId}_${choice}`;\n    const prop = currentProps.find((p) => p.id === propId);\n\n    if (prop) {\n      addSelectedProp(key, {\n        propId,\n        choice,\n        enhanced: true,\n        prop: prop,\n        confidence:\n          choice === \"over\" ? prop.overConfidence : prop.underConfidence,\n        expectedValue: prop.expectedValue,\n        source: prop.source,\n      });\n    }\n  };\n\n  const handleSubmitLineup = () => {\n    // Validate lineup using PrizePicks rules\n    const validation = validateLineup(state.selectedProps);\n\n    if (!validation.canSubmit) {\n      if (validation.errors.length > 0) {\n        validation.errors.forEach((error) => {\n          addToast(error, \"error\");\n        });\n      } else {\n        addToast(\"Please select 2-6 props to submit your lineup\", \"warning\");\n      }\n      return;\n    }\n\n    const selectedPropsArray = Array.from(state.selectedProps.values());\n    const avgConfidence =\n      selectedPropsArray.reduce(\n        (sum, prop) => sum + (prop.confidence || 80),\n        0,\n      ) / selectedPropsArray.length;\n    const totalEV = selectedPropsArray.reduce(\n      (sum, prop) => sum + (prop.expectedValue || 0),\n      0,\n    );\n\n    // Get unique teams and players for display\n    const teams = new Set(selectedPropsArray.map((p) => p.prop.team));\n    const sports = new Set(selectedPropsArray.map((p) => p.prop.sport));\n\n    // Show success toast\n    addToast(\n      `🎯 Lineup submitted successfully! Entry: $${entryAmount}, Expected payout: $${(entryAmount * 3.5).toFixed(2)}`,\n      \"success\",\n    );\n\n    // Show warnings if any\n    if (validation.warnings.length > 0) {\n      validation.warnings.forEach((warning) => {\n        addToast(warning, \"warning\");\n      });\n    }\n\n    // Log detailed information for debugging\n    console.log(\"✅ Lineup Submission Details:\", {\n      props: state.selectedProps.size,\n      teams: Array.from(teams),\n      sports: Array.from(sports),\n      entry: entryAmount,\n      avgConfidence: avgConfidence.toFixed(1),\n      totalEV: totalEV.toFixed(1),\n      dataSource: selectedPropsArray[0]?.source || \"Real Player Data\",\n    });\n  };\n\n  const refreshProps = async () => {\n    await refreshData();\n    await loadPlayerProps();\n  };\n\n  const sports = SPORT_OPTIONS;\n  const prizePicksConnected = getSourcesByCategory(\"prizepicks\").some(\n    (s) => s.connected,\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Enhanced Header */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-3xl font-bold flex items-center space-x-3\">\n              <Target className=\"w-8 h-8 text-primary-600\" />\n              <span className=\"dark:text-white\">\n                PrizePicks Intelligence Engine\n              </span>\n            </h2>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\n              Real-time player props with advanced AI analysis, live data\n              integration, and multi-sport coverage\n            </p>\n            <div className=\"flex items-center space-x-6 mt-3 text-sm\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n                <span className=\"text-green-600 font-medium\">\n                  {prizePicksConnected\n                    ? \"PrizePicks Data Active\"\n                    : \"Real Player Data Mode\"}\n                </span>\n              </div>\n              <div className=\"text-gray-500\">•</div>\n              <span className=\"text-blue-600 font-medium\">\n                {currentProps.length} Available Props\n              </span>\n              <div className=\"text-gray-500\">•</div>\n              <span className=\"text-purple-600 font-medium\">\n                {players.length} Real Players\n              </span>\n              <div className=\"text-gray-500\">•</div>\n              <span className=\"text-yellow-600 font-medium\">\n                {sports.length - 1} Sports\n              </span>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <RulesButton />\n            <SportSelector\n              selectedSport={selectedSport}\n              onSportChange={setSelectedSport}\n              className=\"\"\n              label=\"\"\n            />\n            <button\n              onClick={refreshProps}\n              disabled={loading || dataLoading}\n              className=\"px-4 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 flex items-center space-x-2 disabled:opacity-50\"\n            >\n              <RefreshCw\n                className={`w-4 h-4 ${loading || dataLoading ? \"animate-spin\" : \"\"}`}\n              />\n              <span>Refresh Props</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Data Status */}\n      <div className=\"bg-gradient-to-r from-green-50 to-blue-50 dark:from-green-900/20 dark:to-blue-900/20 rounded-2xl p-6 border border-green-200 dark:border-green-800\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-12 h-12 bg-gradient-to-r from-green-500 to-blue-500 rounded-xl flex items-center justify-center\">\n              <Award className=\"w-6 h-6 text-white\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-bold text-green-800 dark:text-green-300\">\n                {prizePicksConnected\n                  ? \"PrizePicks Data Connected\"\n                  : \"Real Player Data Active\"}\n              </h3>\n              <p className=\"text-sm text-green-600 dark:text-green-400\">\n                {prizePicksConnected\n                  ? `Live props from PrizePicks with ${currentProps.length} projections`\n                  : `Generated from ${players.length} real players across ${sports.length - 1} sports`}\n              </p>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {currentProps.length}\n            </div>\n            <div className=\"text-xs text-green-500\">Available Props</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Validation Warning */}\n      {!validation.isValid && (\n        <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-2xl p-4\">\n          <h4 className=\"font-semibold text-yellow-800 dark:text-yellow-200 mb-2\">\n            ⚠️ Limited Functionality\n          </h4>\n          <p className=\"text-sm text-yellow-700 dark:text-yellow-300\">\n            Some API keys are missing. Props are generated from available real\n            player data. Add missing API keys for full PrizePicks integration.\n          </p>\n        </div>\n      )}\n\n      <div className=\"flex flex-col xl:flex-row gap-6 max-w-full\">\n        {/* Props Grid */}\n        <div className=\"flex-1 min-w-0 overflow-hidden\">\n          {loading || dataLoading ? (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n              {Array.from({ length: 9 }).map((_, i) => (\n                <div\n                  key={i}\n                  className=\"bg-gray-200 dark:bg-gray-700 rounded-2xl p-6 animate-pulse\"\n                >\n                  <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded mb-4\"></div>\n                  <div className=\"h-8 bg-gray-300 dark:bg-gray-600 rounded mb-4\"></div>\n                  <div className=\"h-20 bg-gray-300 dark:bg-gray-600 rounded\"></div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n              {currentProps.slice(0, displayedPropsCount).map((prop) => (\n                <PropCard\n                  key={prop.id}\n                  prop={prop}\n                  onSelect={handleSelectProp}\n                  isPrizePicksData={prizePicksConnected}\n                />\n              ))}\n            </div>\n          )}\n\n          {/* View More Button */}\n          {!loading &&\n            !dataLoading &&\n            currentProps.length > displayedPropsCount && (\n              <div className=\"text-center mt-6\">\n                <button\n                  onClick={() => {\n                    const newCount = Math.min(\n                      displayedPropsCount + 9,\n                      currentProps.length,\n                    );\n                    setDisplayedPropsCount(newCount);\n                  }}\n                  className=\"bg-gray-800 hover:bg-gray-700 dark:bg-gray-700 dark:hover:bg-gray-600 text-white px-8 py-3 rounded-xl font-medium transition-colors flex items-center space-x-2 mx-auto\"\n                >\n                  <span>View More</span>\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M6 9L12 15L18 9\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                </button>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n                  Showing {displayedPropsCount} of {currentProps.length}{\" \"}\n                  available props\n                </p>\n              </div>\n            )}\n\n          {/* View Less Button */}\n          {!loading &&\n            !dataLoading &&\n            displayedPropsCount > 9 &&\n            displayedPropsCount >= currentProps.length && (\n              <div className=\"text-center mt-4\">\n                <button\n                  onClick={() => {\n                    setDisplayedPropsCount(9);\n                    // Scroll back to top of props grid\n                    const propsGrid =\n                      document.querySelector(\".xl\\\\:col-span-3\");\n                    propsGrid?.scrollIntoView({ behavior: \"smooth\" });\n                  }}\n                  className=\"bg-gray-600 hover:bg-gray-500 dark:bg-gray-600 dark:hover:bg-gray-500 text-white px-6 py-2 rounded-lg font-medium transition-colors flex items-center space-x-2 mx-auto\"\n                >\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M18 15L12 9L6 15\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                  <span>View Less</span>\n                </button>\n              </div>\n            )}\n\n          {!loading && !dataLoading && currentProps.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Target className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-gray-600 dark:text-gray-400 mb-2\">\n                No Props Available\n              </h3>\n              <p className=\"text-gray-500 dark:text-gray-500\">\n                Try selecting a different sport or refreshing the data\n              </p>\n            </div>\n          )}\n        </div>\n\n        {/* Enhanced Lineup Builder */}\n        <LineupBuilder\n          entryAmount={entryAmount}\n          onEntryAmountChange={setEntryAmount}\n          onSubmitLineup={handleSubmitLineup}\n          prizePicksConnected={prizePicksConnected}\n        />\n      </div>\n\n      {/* Data Debug Panel */}\n      <DataDebug />\n    </div>\n  );\n}\n\n// Mock implementations for missing imports\nconst SPORT_OPTIONS = [\"All\", \"NBA\", \"NFL\", \"MLB\", \"NHL\", \"Soccer\"];\nconst getSportDisplayName = (sport: string) => sport;\nconst getSportEmoji = (sport: string) => \"🏀\";\n\nconst PropCard = ({ prop, onSelect, isPrizePicksData }: any) => (\n  <div className=\"bg-white p-4 rounded-lg shadow\">\n    <h3>{prop.playerName}</h3>\n    <p>\n      {prop.statType}: {prop.line}\n    </p>\n    <div className=\"flex gap-2 mt-2\">\n      <button\n        onClick={() => onSelect(prop.id, \"over\")}\n        className=\"px-3 py-1 bg-green-500 text-white rounded\"\n      >\n        Over\n      </button>\n      <button\n        onClick={() => onSelect(prop.id, \"under\")}\n        className=\"px-3 py-1 bg-red-500 text-white rounded\"\n      >\n        Under\n      </button>\n    </div>\n  </div>\n);\n\nconst LineupBuilder = ({\n  entryAmount,\n  onEntryAmountChange,\n  onSubmitLineup,\n  prizePicksConnected,\n}: any) => (\n  <div className=\"bg-white p-4 rounded-lg shadow min-w-[300px]\">\n    <h3 className=\"font-bold mb-4\">Lineup Builder</h3>\n    <input\n      type=\"number\"\n      value={entryAmount}\n      onChange={(e) => onEntryAmountChange(Number(e.target.value))}\n      className=\"w-full p-2 border rounded mb-4\"\n      placeholder=\"Entry Amount\"\n    />\n    <button\n      onClick={onSubmitLineup}\n      className=\"w-full bg-blue-500 text-white py-2 rounded\"\n    >\n      Submit Lineup\n    </button>\n  </div>\n);\n\nconst SportSelector = ({\n  selectedSport,\n  onSportChange,\n  className,\n  label,\n}: any) => (\n  <select\n    value={selectedSport}\n    onChange={(e) => onSportChange(e.target.value)}\n    className=\"p-2 border rounded\"\n  >\n    {SPORT_OPTIONS.map((sport) => (\n      <option key={sport} value={sport}>\n        {sport}\n      </option>\n    ))}\n  </select>\n);\n\nconst RulesButton = () => (\n  <button className=\"px-3 py-1 bg-gray-500 text-white rounded text-sm\">\n    Rules\n  </button>\n);\n\nconst DataDebug = () => (\n  <div className=\"bg-gray-100 p-4 rounded-lg\">\n    <h4 className=\"font-bold\">Data Debug Panel</h4>\n    <p className=\"text-sm text-gray-600\">Debug information displayed here...</p>\n  </div>\n);\n\n// Mock implementations for missing hooks and utils\nconst useApp = () => ({\n  state: { selectedProps: new Map() },\n  addSelectedProp: (key: string, prop: any) =>\n    console.log(\"Added prop:\", key, prop),\n});\n\nconst useToasts = () => ({\n  addToast: (message: string, type: string) =>\n    console.log(`Toast: ${type} - ${message}`),\n});\n\nconst useRealDataValidation = () => ({\n  isValid: true,\n  errors: [],\n  warnings: [],\n  missingKeys: [],\n});\n\nconst validateLineup = (props: Map<string, any>) => ({\n  canSubmit: true,\n  errors: [],\n  warnings: [],\n});\n\nconst DataGenerator = {\n  generateConfidence: (player: any) => Math.floor(Math.random() * 100),\n  generateExpectedValue: (player: any) => Math.random() * 10 - 5,\n  generateStatLine: (sport: string, statType: string, playerName: string) =>\n    Math.random() * 20 + 10,\n};\n\nexport interface PlayerProp {\n  id: string;\n  playerName: string;\n  team: string;\n  position: string;\n  statType: string;\n  line: number;\n  sport: string;\n  realDataQuality: number;\n  overConfidence: number;\n  underConfidence: number;\n  expectedValue: number;\n  source: string;\n  aiEnhancement?: any;\n  patternAnalysis?: any;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\events\\UnifiedEventDetails.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\events\\UnifiedEventDetails.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\events\\UnifiedEventDetails.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadEventData'. Either include it or remove the dependency array.","line":169,"column":6,"nodeType":"ArrayExpression","endLine":169,"endColumn":15,"suggestions":[{"desc":"Update the dependencies array to be: [eventId, loadEventData]","fix":{"range":[4355,4364],"text":"[eventId, loadEventData]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { UnifiedServiceRegistry } from '../../services/unified/UnifiedServiceRegistry';\nimport { UnifiedPredictionService } from '../../services/unified/UnifiedPredictionService';\nimport { UnifiedAnalyticsService } from '../../services/unified/UnifiedAnalyticsService';\nimport { UnifiedStateService } from '../../services/unified/UnifiedStateService';\nimport { UnifiedNotificationService } from '../../services/unified/UnifiedNotificationService';\nimport { UnifiedErrorService } from '../../services/unified/UnifiedErrorService';\nimport { Card, Button, Spinner, Toast, Badge, Modal, Tabs, Tab } from '../ui/UnifiedUI';\n\ninterface Event {\n  id: string;\n  name: string;\n  sport: string;\n  competition: string;\n  startTime: string;\n  status: 'upcoming' | 'live' | 'ended' | 'cancelled';\n  homeTeam: {\n    id: string;\n    name: string;\n    logo: string;\n    stats: TeamStats;\n  };\n  awayTeam: {\n    id: string;\n    name: string;\n    logo: string;\n    stats: TeamStats;\n  };\n  venue: {\n    name: string;\n    city: string;\n    country: string;\n  };\n  weather?: {\n    condition: string;\n    temperature: number;\n    windSpeed: number;\n    precipitation: number;\n  };\n  markets: Market[];\n  predictions: Prediction[];\n  statistics: EventStatistics;\n}\n\ninterface TeamStats {\n  form: string[];\n  goalsScored: number;\n  goalsConceded: number;\n  cleanSheets: number;\n  winRate: number;\n  averageGoals: number;\n  homeAdvantage?: number;\n  awayDisadvantage?: number;\n}\n\ninterface Market {\n  id: string;\n  type: string;\n  name: string;\n  selections: Selection[];\n  status: 'open' | 'suspended' | 'closed';\n  lastUpdated: string;\n}\n\ninterface Selection {\n  id: string;\n  name: string;\n  odds: number;\n  probability: number;\n  prediction?: {\n    confidence: number;\n    expectedValue: number;\n    kellyFraction: number;\n  };\n}\n\ninterface Prediction {\n  marketType: string;\n  selection: string;\n  confidence: number;\n  expectedValue: number;\n  kellyFraction: number;\n  factors: {\n    name: string;\n    impact: number;\n    description: string;\n  }[];\n}\n\ninterface EventStatistics {\n  headToHead: {\n    total: number;\n    homeWins: number;\n    awayWins: number;\n    draws: number;\n    lastFive: Array<{\n      date: string;\n      homeTeam: string;\n      awayTeam: string;\n      score: string;\n      winner: string;\n    }>;\n  };\n  form: {\n    home: {\n      lastFive: string[];\n      goalsScored: number;\n      goalsConceded: number;\n    };\n    away: {\n      lastFive: string[];\n      goalsScored: number;\n      goalsConceded: number;\n    };\n  };\n  trends: {\n    overUnder: {\n      over2_5: number;\n      under2_5: number;\n      averageGoals: number;\n    };\n    bothTeamsToScore: {\n      yes: number;\n      no: number;\n      percentage: number;\n    };\n    firstHalf: {\n      homeWins: number;\n      awayWins: number;\n      draws: number;\n    };\n  };\n}\n\nexport const UnifiedEventDetails: React.FC = () => {\n  // Initialize services\n  const serviceRegistry = UnifiedServiceRegistry.getInstance();\n  const predictionService = serviceRegistry.getService<UnifiedPredictionService>('prediction');\n  const analyticsService = serviceRegistry.getService<UnifiedAnalyticsService>('analytics');\n  const stateService = serviceRegistry.getService<UnifiedStateService>('state');\n  const notificationService =\n    serviceRegistry.getService<UnifiedNotificationService>('notification');\n  const errorService = serviceRegistry.getService<UnifiedErrorService>('error');\n\n  // Router hooks\n  const { eventId } = useParams<{ eventId: string }>();\n\n  // State\n  const [event, setEvent] = useState<Event | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n  } | null>(null);\n  const [selectedMarket, setSelectedMarket] = useState<Market | null>(null);\n  const [showBetModal, setShowBetModal] = useState(false);\n  const [selectedSelection, setSelectedSelection] = useState<Selection | null>(null);\n  const [activeTab, setActiveTab] = useState<'overview' | 'markets' | 'statistics' | 'predictions'>(\n    'overview'\n  );\n\n  // Load event data\n  useEffect(() => {\n    if (eventId) {\n      loadEventData(eventId);\n    }\n  }, [eventId]);\n\n  const loadEventData = async (id: string) => {\n    try {\n      setLoading(true);\n      const [eventData, predictions] = await Promise.all([\n        analyticsService.getEventDetails(id),\n        predictionService.getEventPredictions(id),\n      ]);\n      setEvent({ ...eventData, predictions });\n    } catch (error) {\n      handleError('Failed to load event data', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleError = (message: string, error: any) => {\n    setError(message);\n    setToast({ message, type: 'error' });\n    errorService.handleError(error, {\n      code: 'EVENT_DETAILS_ERROR',\n      source: 'UnifiedEventDetails',\n      details: { message },\n    });\n  };\n\n  const formatOdds = (odds: number) => {\n    return odds.toFixed(2);\n  };\n\n  const formatPercentage = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'percent',\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1,\n    }).format(value / 100);\n  };\n\n  const getStatusBadge = (status: Event['status']) => {\n    const variants = {\n      upcoming: 'info',\n      live: 'success',\n      ended: 'secondary',\n      cancelled: 'danger',\n    };\n    return <Badge variant={variants[status]}>{status.toUpperCase()}</Badge>;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Spinner size=\"large\" />\n      </div>\n    );\n  }\n\n  if (!event) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <Card>\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-red-600\">Event Not Found</h2>\n            <p className=\"mt-2 text-gray-600\">The requested event could not be found.</p>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Event Header */}\n        <Card className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <img\n                alt={event.homeTeam.name}\n                className=\"w-16 h-16 object-contain\"\n                src={event.homeTeam.logo}\n              />\n              <div>\n                <h1 className=\"text-2xl font-bold\">{event.name}</h1>\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  {event.competition} • {event.sport}\n                </p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              {getStatusBadge(event.status)}\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                {new Date(event.startTime).toLocaleString()}\n              </p>\n            </div>\n          </div>\n        </Card>\n\n        {/* Navigation Tabs */}\n        <Tabs className=\"mb-8\" value={activeTab} onChange={setActiveTab}>\n          <Tab label=\"Overview\" value=\"overview\" />\n          <Tab label=\"Markets\" value=\"markets\" />\n          <Tab label=\"Statistics\" value=\"statistics\" />\n          <Tab label=\"Predictions\" value=\"predictions\" />\n        </Tabs>\n\n        {/* Overview Tab */}\n        {activeTab === 'overview' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {/* Teams */}\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Teams</h2>\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <img\n                      alt={event.homeTeam.name}\n                      className=\"w-12 h-12 object-contain\"\n                      src={event.homeTeam.logo}\n                    />\n                    <div>\n                      <h3 className=\"font-medium\">{event.homeTeam.name}</h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Win Rate: {formatPercentage(event.homeTeam.stats.winRate)}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"font-medium\">{event.homeTeam.stats.goalsScored} Goals</p>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {event.homeTeam.stats.cleanSheets} Clean Sheets\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <img\n                      alt={event.awayTeam.name}\n                      className=\"w-12 h-12 object-contain\"\n                      src={event.awayTeam.logo}\n                    />\n                    <div>\n                      <h3 className=\"font-medium\">{event.awayTeam.name}</h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Win Rate: {formatPercentage(event.awayTeam.stats.winRate)}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"font-medium\">{event.awayTeam.stats.goalsScored} Goals</p>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {event.awayTeam.stats.cleanSheets} Clean Sheets\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </Card>\n\n            {/* Venue & Weather */}\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Venue & Weather</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"font-medium\">Venue</h3>\n                  <p className=\"text-gray-600 dark:text-gray-400\">\n                    {event.venue.name}, {event.venue.city}, {event.venue.country}\n                  </p>\n                </div>\n                {event.weather && (\n                  <div>\n                    <h3 className=\"font-medium\">Weather</h3>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">Condition</p>\n                        <p>{event.weather.condition}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">Temperature</p>\n                        <p>{event.weather.temperature}°C</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">Wind Speed</p>\n                        <p>{event.weather.windSpeed} km/h</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">Precipitation</p>\n                        <p>{event.weather.precipitation}%</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </Card>\n\n            {/* Head to Head */}\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Head to Head</h2>\n              <div className=\"space-y-4\">\n                <div className=\"grid grid-cols-3 gap-4 text-center\">\n                  <div>\n                    <p className=\"text-2xl font-bold\">{event.statistics.headToHead.homeWins}</p>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Home Wins</p>\n                  </div>\n                  <div>\n                    <p className=\"text-2xl font-bold\">{event.statistics.headToHead.draws}</p>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Draws</p>\n                  </div>\n                  <div>\n                    <p className=\"text-2xl font-bold\">{event.statistics.headToHead.awayWins}</p>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Away Wins</p>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-medium mb-2\">Last 5 Meetings</h3>\n                  <div className=\"space-y-2\">\n                    {event.statistics.headToHead.lastFive.map((match, index) => (\n                      <div\n                        key={index}\n                        className=\"flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-800 rounded\"\n                      >\n                        <div className=\"flex-1\">{match.homeTeam}</div>\n                        <div className=\"px-4 font-medium\">{match.score}</div>\n                        <div className=\"flex-1 text-right\">{match.awayTeam}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </Card>\n\n            {/* Form & Trends */}\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Form & Trends</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"font-medium mb-2\">Recent Form</h3>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-1\">\n                        {event.homeTeam.name}\n                      </p>\n                      <div className=\"flex space-x-1\">\n                        {event.statistics.form.home.lastFive.map((result, index) => (\n                          <Badge\n                            key={index}\n                            variant={\n                              result === 'W' ? 'success' : result === 'D' ? 'warning' : 'danger'\n                            }\n                          >\n                            {result}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-1\">\n                        {event.awayTeam.name}\n                      </p>\n                      <div className=\"flex space-x-1\">\n                        {event.statistics.form.away.lastFive.map((result, index) => (\n                          <Badge\n                            key={index}\n                            variant={\n                              result === 'W' ? 'success' : result === 'D' ? 'warning' : 'danger'\n                            }\n                          >\n                            {result}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-medium mb-2\">Trends</h3>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Over/Under 2.5</p>\n                      <p className=\"font-medium\">\n                        Over: {formatPercentage(event.statistics.trends.overUnder.over2_5)} • Under:{' '}\n                        {formatPercentage(event.statistics.trends.overUnder.under2_5)}\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Both Teams to Score\n                      </p>\n                      <p className=\"font-medium\">\n                        Yes: {formatPercentage(event.statistics.trends.bothTeamsToScore.yes)} • No:{' '}\n                        {formatPercentage(event.statistics.trends.bothTeamsToScore.no)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Markets Tab */}\n        {activeTab === 'markets' && (\n          <div className=\"space-y-8\">\n            {event.markets.map(market => (\n              <Card key={market.id}>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h2 className=\"text-xl font-bold\">{market.name}</h2>\n                  <Badge\n                    variant={\n                      market.status === 'open'\n                        ? 'success'\n                        : market.status === 'suspended'\n                          ? 'warning'\n                          : 'secondary'\n                    }\n                  >\n                    {market.status.toUpperCase()}\n                  </Badge>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {market.selections.map(selection => (\n                    <div key={selection.id} className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <span className=\"font-medium\">{selection.name}</span>\n                        <span className=\"text-lg font-bold\">{formatOdds(selection.odds)}</span>\n                      </div>\n                      {selection.prediction && (\n                        <div className=\"space-y-1 text-sm\">\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-600 dark:text-gray-400\">Confidence</span>\n                            <span>{formatPercentage(selection.prediction.confidence)}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-600 dark:text-gray-400\">Value</span>\n                            <span\n                              className={\n                                selection.prediction.expectedValue > 0\n                                  ? 'text-green-600'\n                                  : 'text-red-600'\n                              }\n                            >\n                              {formatPercentage(selection.prediction.expectedValue)}\n                            </span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-600 dark:text-gray-400\">Kelly</span>\n                            <span>{formatPercentage(selection.prediction.kellyFraction)}</span>\n                          </div>\n                        </div>\n                      )}\n                      <Button\n                        className=\"w-full mt-4\"\n                        disabled={market.status !== 'open'}\n                        variant=\"primary\"\n                        onClick={() => {\n                          setSelectedMarket(market);\n                          setSelectedSelection(selection);\n                          setShowBetModal(true);\n                        }}\n                      >\n                        Place Bet\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              </Card>\n            ))}\n          </div>\n        )}\n\n        {/* Statistics Tab */}\n        {activeTab === 'statistics' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {/* Team Statistics */}\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Team Statistics</h2>\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-medium mb-2\">{event.homeTeam.name}</h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span>Goals Scored</span>\n                      <span>{event.statistics.form.home.goalsScored}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Goals Conceded</span>\n                      <span>{event.statistics.form.home.goalsConceded}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Clean Sheets</span>\n                      <span>{event.homeTeam.stats.cleanSheets}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Win Rate</span>\n                      <span>{formatPercentage(event.homeTeam.stats.winRate)}</span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-medium mb-2\">{event.awayTeam.name}</h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span>Goals Scored</span>\n                      <span>{event.statistics.form.away.goalsScored}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Goals Conceded</span>\n                      <span>{event.statistics.form.away.goalsConceded}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Clean Sheets</span>\n                      <span>{event.awayTeam.stats.cleanSheets}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Win Rate</span>\n                      <span>{formatPercentage(event.awayTeam.stats.winRate)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Card>\n\n            {/* Match Statistics */}\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Match Statistics</h2>\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-medium mb-2\">Goals</h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span>Average Goals per Game</span>\n                      <span>{event.statistics.trends.overUnder.averageGoals.toFixed(2)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Over 2.5 Goals</span>\n                      <span>{formatPercentage(event.statistics.trends.overUnder.over2_5)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Under 2.5 Goals</span>\n                      <span>{formatPercentage(event.statistics.trends.overUnder.under2_5)}</span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-medium mb-2\">Both Teams to Score</h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span>Yes</span>\n                      <span>{formatPercentage(event.statistics.trends.bothTeamsToScore.yes)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>No</span>\n                      <span>{formatPercentage(event.statistics.trends.bothTeamsToScore.no)}</span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"font-medium mb-2\">First Half</h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span>Home Wins</span>\n                      <span>{formatPercentage(event.statistics.trends.firstHalf.homeWins)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Away Wins</span>\n                      <span>{formatPercentage(event.statistics.trends.firstHalf.awayWins)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Draws</span>\n                      <span>{formatPercentage(event.statistics.trends.firstHalf.draws)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Predictions Tab */}\n        {activeTab === 'predictions' && (\n          <div className=\"space-y-8\">\n            {event.predictions.map((prediction, index) => (\n              <Card key={index}>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h2 className=\"text-xl font-bold\">\n                    {prediction.marketType} - {prediction.selection}\n                  </h2>\n                  <Badge\n                    variant={\n                      prediction.expectedValue > 0\n                        ? 'success'\n                        : prediction.expectedValue < 0\n                          ? 'danger'\n                          : 'warning'\n                    }\n                  >\n                    {formatPercentage(prediction.expectedValue)} Expected Value\n                  </Badge>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h3 className=\"font-medium mb-2\">Prediction Details</h3>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between\">\n                        <span>Confidence</span>\n                        <span>{formatPercentage(prediction.confidence)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Expected Value</span>\n                        <span\n                          className={\n                            prediction.expectedValue > 0 ? 'text-green-600' : 'text-red-600'\n                          }\n                        >\n                          {formatPercentage(prediction.expectedValue)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Kelly Fraction</span>\n                        <span>{formatPercentage(prediction.kellyFraction)}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium mb-2\">Factors</h3>\n                    <div className=\"space-y-2\">\n                      {prediction.factors.map((factor, factorIndex) => (\n                        <div key={factorIndex} className=\"p-2 bg-gray-50 dark:bg-gray-800 rounded\">\n                          <div className=\"flex justify-between mb-1\">\n                            <span className=\"font-medium\">{factor.name}</span>\n                            <span className={factor.impact > 0 ? 'text-green-600' : 'text-red-600'}>\n                              {formatPercentage(factor.impact)}\n                            </span>\n                          </div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                            {factor.description}\n                          </p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Bet Modal */}\n      <Modal isOpen={showBetModal} title=\"Place Bet\" onClose={() => setShowBetModal(false)}>\n        {selectedMarket && selectedSelection && (\n          <div className=\"space-y-4\">\n            <div>\n              <h3 className=\"font-medium mb-2\">Bet Details</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span>Market</span>\n                  <span>{selectedMarket.name}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Selection</span>\n                  <span>{selectedSelection.name}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Odds</span>\n                  <span>{formatOdds(selectedSelection.odds)}</span>\n                </div>\n              </div>\n            </div>\n            {selectedSelection.prediction && (\n              <div>\n                <h3 className=\"font-medium mb-2\">Prediction</h3>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span>Confidence</span>\n                    <span>{formatPercentage(selectedSelection.prediction.confidence)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Expected Value</span>\n                    <span\n                      className={\n                        selectedSelection.prediction.expectedValue > 0\n                          ? 'text-green-600'\n                          : 'text-red-600'\n                      }\n                    >\n                      {formatPercentage(selectedSelection.prediction.expectedValue)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Recommended Stake</span>\n                    <span>{formatPercentage(selectedSelection.prediction.kellyFraction)}</span>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div>\n              <h3 className=\"font-medium mb-2\">Stake</h3>\n              <Input min=\"0\" placeholder=\"Enter stake amount\" step=\"0.01\" type=\"number\" />\n            </div>\n            <div className=\"flex justify-end space-x-4\">\n              <Button variant=\"secondary\" onClick={() => setShowBetModal(false)}>\n                Cancel\n              </Button>\n              <Button\n                variant=\"primary\"\n                onClick={() => {\n                  // Handle bet placement\n                  setShowBetModal(false);\n                }}\n              >\n                Place Bet\n              </Button>\n            </div>\n          </div>\n        )}\n      </Modal>\n\n      {/* Toast Notifications */}\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\featureCoverage.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\featureCoverage.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\featureCoverage.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\MLFactorViz.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\MLFactorViz.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\MLFactorViz.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\MLInsights.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\MLInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\MLInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ModelPerformance.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ModelPerformance.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ModelPerformance.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceChart.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceChart.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceChart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceMetrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceMetrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceMetrics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceMonitor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceMonitor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\PerformanceMonitor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ShapBreakdownModal.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ShapBreakdownModal.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ShapBreakdownModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ShapValueDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ShapValueDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ShapValueDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ShapVisualization.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ShapVisualization.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\analytics\\ShapVisualization.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\Arbitrage.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\Arbitrage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\Arbitrage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\ArbitrageDetector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\ArbitrageDetector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\ArbitrageDetector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\ArbitrageOpportunities.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\ArbitrageOpportunities.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\ArbitrageOpportunities.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BetBuilder.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BetBuilder.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BetBuilder.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BetBuilder.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BetBuilder.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BetBuilder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BetSlipSidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BetSlipSidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BetSlipSidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingHistory.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingHistory.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingHistory.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingOpportunities.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingOpportunities.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingOpportunities.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingOpportunity.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingOpportunity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingOpportunity.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingRecommendations.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingRecommendations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingRecommendations.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingStats.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\BettingStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\PropCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\PropCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\PropCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\PropCards.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\PropCards.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\betting\\PropCards.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\dashboard\\Dashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\dashboard\\Dashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\dashboard\\Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\news\\ESPNHeadlinesTicker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\news\\ESPNHeadlinesTicker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\news\\ESPNHeadlinesTicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\ConfidenceIndicator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\ConfidenceIndicator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\ConfidenceIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\PatternRecognition.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\PatternRecognition.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\PatternRecognition.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\PredictionDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\PredictionDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\PredictionDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\PredictionEnhancement.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\PredictionEnhancement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\PredictionEnhancement.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\RealtimePredictionDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\RealtimePredictionDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\predictions\\RealtimePredictionDisplay.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'errorHandler', 'eventBus', 'getPredictions', and 'performanceMonitor'. Either include them or remove the dependency array.","line":119,"column":6,"nodeType":"ArrayExpression","endLine":119,"endColumn":33,"suggestions":[{"desc":"Update the dependencies array to be: [predictionId, filterStore, eventBus, getPredictions, performanceMonitor, errorHandler]","fix":{"range":[4361,4388],"text":"[predictionId, filterStore, eventBus, getPredictions, performanceMonitor, errorHandler]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from '@mui/material/Alert';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { usePredictionService } from '../../../hooks/usePredictionService';\nimport { useRiskProfile } from '../../../hooks/useRiskProfile';\nimport { EventBus } from '../../../unified/EventBus';\nimport { ErrorHandler } from '../../../unified/ErrorHandler';\nimport { PerformanceMonitor } from '../../../unified/PerformanceMonitor';\nimport { ModelVersioning } from '../../../unified/ModelVersioning';\nimport { Prediction, RiskProfile, ErrorCategory, ErrorSeverity } from '../../../types/core';\nimport { BettingOpportunity } from '../../../types/betting';\nimport { ShapExplanation } from '../../prediction/ShapExplanation';\nimport { ConfidenceIndicator } from '../../common/ConfidenceIndicator';\nimport { RiskLevelIndicator } from '../../common/RiskLevelIndicator';\nimport { ValidationStatus } from '../../common/ValidationStatus';\nimport { useFilterStore } from '../../../stores/filterStore';\n\ninterface RealtimePredictionDisplayProps {\n  predictionId: string;\n}\n\nconst getConfidenceColor = (confidence: number): string => {\n  if (confidence >= 0.8) return 'success';\n  if (confidence >= 0.6) return 'warning';\n  return 'error';\n};\n\nconst getRiskLevelColor = (riskLevel: string): string => {\n  switch (riskLevel) {\n    case 'low':\n      return 'success';\n    case 'medium':\n      return 'warning';\n    case 'high':\n      return 'error';\n    default:\n      return 'default';\n  }\n};\n\nexport const RealtimePredictionDisplay: React.FC<RealtimePredictionDisplayProps> = ({\n  predictionId,\n}) => {\n  const [prediction, setPrediction] = useState<Prediction | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { getPredictions } = usePredictionService();\n  const { currentProfile } = useRiskProfile();\n  const eventBus = EventBus.getInstance();\n  const errorHandler = ErrorHandler.getInstance();\n  const performanceMonitor = PerformanceMonitor.getInstance();\n  const modelVersioning = ModelVersioning.getInstance();\n  const filterStore = useFilterStore();\n\n  useEffect(() => {\n    const fetchPrediction = async () => {\n      try {\n        setIsLoading(true);\n        const results = await getPredictions({\n          riskProfile: filterStore.riskProfile,\n          sport: filterStore.sport,\n          minOdds: filterStore.minOdds,\n          maxOdds: filterStore.maxOdds,\n          minConfidence: filterStore.minConfidence,\n          maxConfidence: filterStore.maxConfidence,\n          projectedReturn: filterStore.projectedReturn,\n          // add any other filters as needed\n        });\n        const result = results.find(p => p.id === predictionId);\n        setPrediction(result || null);\n        setError(null);\n\n        // Track performance\n        performanceMonitor.recordOperation('fetchPrediction', performance.now());\n\n        // Emit event for analytics\n        if (result) {\n          eventBus.emit('prediction:fetched', {\n            predictionId,\n            confidence: result.confidence,\n            riskLevel: result.riskLevel,\n          });\n        }\n      } catch (err) {\n        const error = err instanceof Error ? err : new Error('Failed to fetch prediction');\n        errorHandler.handleError(error, 'RealtimePredictionDisplay', 'fetchPrediction', {\n          category: ErrorCategory.NETWORK,\n          severity: ErrorSeverity.MEDIUM,\n        });\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPrediction();\n\n    // Subscribe to real-time updates\n    const unsubscribe = eventBus.subscribe(`prediction:${predictionId}`, (data: any) => {\n      setPrediction(prev => ({\n        ...prev,\n        ...data,\n      }));\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [predictionId, filterStore]);\n\n  if (isLoading) {\n    return (\n      <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\" minHeight={200}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!prediction) {\n    return (\n      <Alert severity=\"info\" sx={{ mb: 2 }}>\n        No prediction data available\n      </Alert>\n    );\n  }\n\n  const validationStatus = validatePrediction(prediction, currentProfile);\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Box alignItems=\"center\" display=\"flex\" justifyContent=\"space-between\" mb={2}>\n        <Typography variant=\"h6\">Prediction Details</Typography>\n        <Box alignItems=\"center\" display=\"flex\" gap={1}>\n          <ConfidenceIndicator value={prediction.confidence} />\n          <RiskLevelIndicator level={prediction.riskLevel} />\n          <ValidationStatus\n            message={validationStatus.reason || 'Validated'}\n            status={validationStatus.isValid ? 'valid' : 'invalid'}\n          />\n        </Box>\n      </Box>\n\n      <Box mb={3}>\n        <Typography gutterBottom color=\"textSecondary\" variant=\"subtitle2\">\n          Model Information\n        </Typography>\n        <Stack direction=\"row\" spacing={1}>\n          <Chip label={`Version: ${modelVersioning.getCurrentVersion()}`} size=\"small\" />\n          <Chip\n            label={`Last Updated: ${new Date(prediction.timestamp).toLocaleString()}`}\n            size=\"small\"\n          />\n        </Stack>\n      </Box>\n\n      <Box mb={3}>\n        <Typography gutterBottom color=\"textSecondary\" variant=\"subtitle2\">\n          SHAP Values\n        </Typography>\n        <ShapExplanation explanation={prediction.explanation} />\n      </Box>\n\n      <Box>\n        <Typography gutterBottom color=\"textSecondary\" variant=\"subtitle2\">\n          Risk Profile Validation\n        </Typography>\n        <Stack direction=\"row\" spacing={1}>\n          <Chip\n            color={prediction.stake <= currentProfile.max_stake_percentage ? 'success' : 'error'}\n            label={`Max Stake: ${(currentProfile.max_stake_percentage * 100).toFixed(1)}%`}\n            size=\"small\"\n          />\n          <Chip\n            color={\n              prediction.confidence >= currentProfile.min_confidence_threshold ? 'success' : 'error'\n            }\n            label={`Min Confidence: ${(currentProfile.min_confidence_threshold * 100).toFixed(1)}%`}\n            size=\"small\"\n          />\n          <Chip\n            color={\n              prediction.volatility <= currentProfile.volatility_tolerance ? 'success' : 'error'\n            }\n            label={`Volatility: ${(prediction.volatility * 100).toFixed(1)}%`}\n            size=\"small\"\n          />\n        </Stack>\n      </Box>\n    </Paper>\n  );\n};\n\nconst validatePrediction = (\n  prediction: Prediction,\n  riskProfile: RiskProfile\n): { isValid: boolean; reason?: string } => {\n  if (prediction.confidence < riskProfile.min_confidence_threshold) {\n    return {\n      isValid: false,\n      reason: `Confidence below threshold (${(riskProfile.min_confidence_threshold * 100).toFixed(1)}%)`,\n    };\n  }\n\n  if (prediction.volatility > riskProfile.volatility_tolerance) {\n    return {\n      isValid: false,\n      reason: `Volatility exceeds tolerance (${(riskProfile.volatility_tolerance * 100).toFixed(1)}%)`,\n    };\n  }\n\n  if (prediction.riskScore > riskProfile.max_risk_score) {\n    return {\n      isValid: false,\n      reason: `Risk score exceeds maximum (${(riskProfile.max_risk_score * 100).toFixed(1)}%)`,\n    };\n  }\n\n  return { isValid: true };\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\settings\\Settings.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\settings\\Settings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\settings\\Settings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\tracking\\EntryTracking.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\tracking\\EntryTracking.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\tracking\\EntryTracking.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\BankrollManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\BankrollManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\BankrollManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\BankrollMetrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\BankrollMetrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\BankrollMetrics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\BankrollStats.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\BankrollStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\BankrollStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\RiskProfileManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\RiskProfileManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\RiskProfileManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\RiskProfileSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\RiskProfileSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\RiskProfileSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\UserConstraintsForm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\UserConstraintsForm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\UserConstraintsForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\UserProfile.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\UserProfile.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\UserProfile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\UserStats.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\UserStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\features\\user\\UserStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\insights\\MLInsights.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\insights\\MLInsights.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\insights\\MLInsights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\AdvancedIntelligenceHub.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\AdvancedIntelligenceHub_fixed.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\BrainMonitoringHub.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'brainConfig.enableAutoPredictionDelivery', 'brainConfig.enableContinuousOptimization', 'startAutomatedDelivery', and 'startBrainOptimization'. Either include them or remove the dependency array.","line":219,"column":6,"nodeType":"ArrayExpression","endLine":219,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [brainConfig.enableAutoPredictionDelivery, brainConfig.enableContinuousOptimization, startAutomatedDelivery, startBrainOptimization]","fix":{"range":[6455,6457],"text":"[brainConfig.enableAutoPredictionDelivery, brainConfig.enableContinuousOptimization, startAutomatedDelivery, startBrainOptimization]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'performAutoHealing'. Either include it or remove the dependency array.","line":269,"column":6,"nodeType":"ArrayExpression","endLine":269,"endColumn":33,"suggestions":[{"desc":"Update the dependencies array to be: [brainConfig.autoHealingEnabled, brainConfig.deliveryThreshold, brainConfig.optimizationInterval, brainMetrics, performAutoHealing]","fix":{"range":[8258,8285],"text":"[brainConfig.autoHealingEnabled, brainConfig.deliveryThreshold, brainConfig.optimizationInterval, brainMetrics, performAutoHealing]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'deliverPredictionsToUserInterface'. Either include it or remove the dependency array.","line":303,"column":6,"nodeType":"ArrayExpression","endLine":303,"endColumn":41,"suggestions":[{"desc":"Update the dependencies array to be: [optimizedPredictions, deliverPredictionsToUserInterface]","fix":{"range":[9436,9471],"text":"[optimizedPredictions, deliverPredictionsToUserInterface]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  Brain,\n  Activity,\n  TrendingUp,\n  Zap,\n  Target,\n  Settings,\n  BarChart3,\n  Monitor,\n  Cpu,\n  Database,\n  Workflow,\n  CheckCircle,\n  AlertCircle,\n  RefreshCw,\n  Play,\n  Pause,\n  Power,\n  Gauge,\n  Waves,\n  Network,\n  Eye,\n  Shield,\n  Sparkles,\n  Clock,\n  Send,\n  Layers,\n} from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { api } from \"../../services/api\";\nimport OfflineIndicator from \"../ui/OfflineIndicator\";\nimport toast from \"react-hot-toast\";\n\n// Import brain monitoring modules\nimport {\n  intelligenceOrchestrator,\n  type EnsemblePrediction,\n  type AutomationSettings,\n} from \"../../services/IntelligenceOrchestrator\";\nimport { PropOllama } from \"../user-friendly/PropOllama\";\n\n// ============================================================================\n// BRAIN MONITORING INTERFACES\n// ============================================================================\n\ninterface BrainMetrics {\n  overallHealth: number;\n  ensembleAccuracy: number;\n  predictionLatency: number;\n  activeModels: number;\n  dataQuality: number;\n  systemLoad: number;\n  automationLevel: number;\n  confidenceScore: number;\n  brainCoherence: number;\n  neuralSyncLevel: number;\n  predictionOptimization: number;\n  userInterfaceReadiness: number;\n}\n\ninterface BrainMonitoringState {\n  isMonitoring: boolean;\n  lastOptimization: number;\n  predictionsDelivered: number;\n  userInterfaceConnected: boolean;\n  brainEfficiency: number;\n  automatedDeliveryActive: boolean;\n  lastDeliveryTime: number;\n  optimizationCount: number;\n}\n\ninterface AutomatedBrainConfig {\n  enableContinuousOptimization: boolean;\n  enableAutoPredictionDelivery: boolean;\n  optimizationInterval: number; // milliseconds\n  deliveryThreshold: number; // confidence threshold\n  userInterfaceEndpoint: string;\n  brainHealthThreshold: number;\n  autoHealingEnabled: boolean;\n}\n\ninterface OptimizedPrediction extends EnsemblePrediction {\n  optimizationScore: number;\n  deliveryReady: boolean;\n  userInterfaceFormatted: any;\n  brainConfidence: number;\n}\n\n// ============================================================================\n// BRAIN MONITORING HUB COMPONENT\n// ============================================================================\n\nexport const BrainMonitoringHub: React.FC = () => {\n  // ========== BRAIN STATE MANAGEMENT ==========\n  const [selectedView, setSelectedView] = useState(\"brain-monitor\");\n  const [brainState, setBrainState] = useState<BrainMonitoringState>({\n    isMonitoring: true,\n    lastOptimization: Date.now(),\n    predictionsDelivered: 0,\n    userInterfaceConnected: true,\n    brainEfficiency: 96.5,\n    automatedDeliveryActive: true,\n    lastDeliveryTime: Date.now(),\n    optimizationCount: 0,\n  });\n\n  const [brainConfig, setBrainConfig] = useState<AutomatedBrainConfig>({\n    enableContinuousOptimization: true,\n    enableAutoPredictionDelivery: true,\n    optimizationInterval: 30000, // 30 seconds\n    deliveryThreshold: 0.85, // 85% confidence\n    userInterfaceEndpoint: \"/api/predictions/deliver\",\n    brainHealthThreshold: 0.9,\n    autoHealingEnabled: true,\n  });\n\n  const [optimizedPredictions, setOptimizedPredictions] = useState<\n    OptimizedPrediction[]\n  >([]);\n  const [showPropOllama, setShowPropOllama] = useState(false);\n\n  const queryClient = useQueryClient();\n  const brainOptimizationRef = useRef<NodeJS.Timeout | null>(null);\n  const deliverySystemRef = useRef<NodeJS.Timeout | null>(null);\n\n  // ========== BRAIN METRICS MONITORING ==========\n  const { data: brainMetrics, isLoading: metricsLoading } = useQuery({\n    queryKey: [\"brainMetrics\"],\n    queryFn: async () => {\n      const [health, accuracy, models, system] = await Promise.allSettled([\n        api.getHealthStatus(),\n        api.getAccuracyMetrics(),\n        api.getModelMetrics(),\n        api.getSystemResources(),\n      ]);\n\n      return {\n        overallHealth:\n          health.status === \"fulfilled\"\n            ? health.value?.overallHealth * 100 || 95\n            : 95,\n        ensembleAccuracy:\n          accuracy.status === \"fulfilled\"\n            ? accuracy.value?.overall_accuracy * 100 || 96.8\n            : 96.8,\n        predictionLatency:\n          accuracy.status === \"fulfilled\"\n            ? accuracy.value?.prediction_latency || 125\n            : 125,\n        activeModels:\n          models.status === \"fulfilled\"\n            ? models.value?.active_models || 15\n            : 15,\n        dataQuality:\n          health.status === \"fulfilled\"\n            ? health.value?.dataQuality * 100 || 97.2\n            : 97.2,\n        systemLoad:\n          system.status === \"fulfilled\" ? system.value?.cpu_usage || 58 : 58,\n        automationLevel: 99.2,\n        confidenceScore: 97.8,\n        brainCoherence: 98.1,\n        neuralSyncLevel: 96.7,\n        predictionOptimization: 94.3,\n        userInterfaceReadiness: brainState.userInterfaceConnected ? 100 : 0,\n      } as BrainMetrics;\n    },\n    refetchInterval: 5000,\n    retry: 2,\n  });\n\n  // ========== AUTOMATED BRAIN ORCHESTRATION ==========\n  useEffect(() => {\n    const initializeBrain = async () => {\n      try {\n        await intelligenceOrchestrator.initialize();\n        toast.success(\"🧠 Brain monitoring system initialized\");\n\n        // Start continuous brain optimization\n        if (brainConfig.enableContinuousOptimization) {\n          startBrainOptimization();\n        }\n\n        // Start automated prediction delivery\n        if (brainConfig.enableAutoPredictionDelivery) {\n          startAutomatedDelivery();\n        }\n      } catch (error) {\n        console.error(\"Brain initialization failed:\", error);\n        toast.error(\n          \"⚠️ Brain monitoring system error - engaging fallback mode\",\n        );\n      }\n    };\n\n    initializeBrain();\n\n    return () => {\n      if (brainOptimizationRef.current) {\n        clearInterval(brainOptimizationRef.current);\n      }\n      if (deliverySystemRef.current) {\n        clearInterval(deliverySystemRef.current);\n      }\n    };\n  }, []);\n\n  // ========== BRAIN OPTIMIZATION SYSTEM ==========\n  const startBrainOptimization = useCallback(() => {\n    if (brainOptimizationRef.current) {\n      clearInterval(brainOptimizationRef.current);\n    }\n\n    brainOptimizationRef.current = setInterval(async () => {\n      try {\n        // Generate and optimize ensemble predictions\n        const rawPredictions =\n          await intelligenceOrchestrator.generateEnsemblePredictions();\n\n        // Apply brain optimization algorithms\n        const optimized = rawPredictions.map((prediction) => ({\n          ...prediction,\n          optimizationScore: calculateOptimizationScore(prediction),\n          deliveryReady:\n            prediction.confidence >= brainConfig.deliveryThreshold * 100,\n          userInterfaceFormatted: formatForUserInterface(prediction),\n          brainConfidence: enhanceBrainConfidence(prediction),\n        }));\n\n        // Filter for delivery-ready predictions\n        const deliveryReady = optimized.filter((p) => p.deliveryReady);\n\n        setOptimizedPredictions(optimized);\n\n        // Update brain state\n        setBrainState((prev) => ({\n          ...prev,\n          lastOptimization: Date.now(),\n          optimizationCount: prev.optimizationCount + 1,\n          brainEfficiency: calculateBrainEfficiency(optimized),\n        }));\n\n        // Auto-healing check\n        if (brainConfig.autoHealingEnabled && brainMetrics) {\n          performAutoHealing(brainMetrics);\n        }\n\n        console.log(\n          `🧠 Brain optimization completed: ${deliveryReady.length} predictions ready for delivery`,\n        );\n      } catch (error) {\n        console.error(\"Brain optimization failed:\", error);\n        toast.error(\"🧠 Brain optimization error - retrying...\");\n      }\n    }, brainConfig.optimizationInterval);\n  }, [brainConfig, brainMetrics]);\n\n  // ========== AUTOMATED PREDICTION DELIVERY ==========\n  const startAutomatedDelivery = useCallback(() => {\n    if (deliverySystemRef.current) {\n      clearInterval(deliverySystemRef.current);\n    }\n\n    deliverySystemRef.current = setInterval(async () => {\n      try {\n        const deliveryReadyPredictions = optimizedPredictions.filter(\n          (p) => p.deliveryReady,\n        );\n\n        if (deliveryReadyPredictions.length > 0) {\n          // Deliver to user interface\n          await deliverPredictionsToUserInterface(deliveryReadyPredictions);\n\n          setBrainState((prev) => ({\n            ...prev,\n            predictionsDelivered:\n              prev.predictionsDelivered + deliveryReadyPredictions.length,\n            lastDeliveryTime: Date.now(),\n          }));\n\n          console.log(\n            `📤 Delivered ${deliveryReadyPredictions.length} optimized predictions to user interface`,\n          );\n        }\n      } catch (error) {\n        console.error(\"Automated delivery failed:\", error);\n        setBrainState((prev) => ({ ...prev, userInterfaceConnected: false }));\n      }\n    }, 10000); // Check every 10 seconds\n  }, [optimizedPredictions, brainConfig]);\n\n  // ========== BRAIN OPTIMIZATION ALGORITHMS ==========\n  const calculateOptimizationScore = (\n    prediction: EnsemblePrediction,\n  ): number => {\n    const confidenceWeight = prediction.confidence * 0.4;\n    const diversityWeight = prediction.metadata.diversityScore * 100 * 0.3;\n    const consensusWeight = prediction.metadata.consensusLevel * 100 * 0.2;\n    const modelCountWeight =\n      (prediction.contributingModels.length / 10) * 100 * 0.1;\n\n    return Math.min(\n      100,\n      confidenceWeight + diversityWeight + consensusWeight + modelCountWeight,\n    );\n  };\n\n  const enhanceBrainConfidence = (prediction: EnsemblePrediction): number => {\n    // Apply brain-specific confidence enhancement\n    const baseConfidence = prediction.confidence;\n    const diversityBonus = prediction.metadata.diversityScore * 5;\n    const consensusBonus = prediction.metadata.consensusLevel * 3;\n    const modelCountBonus = Math.min(\n      10,\n      prediction.contributingModels.length * 2,\n    );\n\n    return Math.min(\n      100,\n      baseConfidence + diversityBonus + consensusBonus + modelCountBonus,\n    );\n  };\n\n  const formatForUserInterface = (prediction: EnsemblePrediction) => {\n    return {\n      id: prediction.id,\n      title: prediction.prediction,\n      sport: prediction.sport,\n      confidence: Math.round(prediction.confidence),\n      expectedValue: `+${(prediction.expectedValue * 100).toFixed(1)}%`,\n      recommendation:\n        prediction.confidence > 90\n          ? \"Strong Buy\"\n          : prediction.confidence > 80\n            ? \"Buy\"\n            : \"Consider\",\n      reasoning: prediction.reasoning.slice(0, 3), // Top 3 reasons\n      timestamp: prediction.timestamp,\n      brainOptimized: true,\n    };\n  };\n\n  const calculateBrainEfficiency = (\n    predictions: OptimizedPrediction[],\n  ): number => {\n    if (predictions.length === 0) return 95;\n\n    const avgOptimizationScore =\n      predictions.reduce((sum, p) => sum + p.optimizationScore, 0) /\n      predictions.length;\n    const deliveryReadyRatio =\n      predictions.filter((p) => p.deliveryReady).length / predictions.length;\n\n    return avgOptimizationScore * 0.7 + deliveryReadyRatio * 100 * 0.3;\n  };\n\n  const performAutoHealing = (metrics: BrainMetrics) => {\n    const issues = [];\n\n    if (metrics.overallHealth < brainConfig.brainHealthThreshold * 100) {\n      issues.push(\"Low brain health detected\");\n    }\n    if (metrics.predictionLatency > 200) {\n      issues.push(\"High prediction latency\");\n    }\n    if (metrics.dataQuality < 90) {\n      issues.push(\"Data quality degradation\");\n    }\n\n    if (issues.length > 0) {\n      console.log(\"🔧 Auto-healing triggered:\", issues);\n      toast.warning(`🔧 Brain auto-healing: ${issues.length} issues detected`);\n\n      // Trigger system optimization\n      queryClient.invalidateQueries();\n    }\n  };\n\n  const deliverPredictionsToUserInterface = async (\n    predictions: OptimizedPrediction[],\n  ) => {\n    try {\n      // Send optimized predictions to the simple user interface\n      const response = await fetch(brainConfig.userInterfaceEndpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          predictions: predictions.map((p) => p.userInterfaceFormatted),\n          timestamp: Date.now(),\n          brainOptimized: true,\n          deliveryId: `brain-${Date.now()}`,\n        }),\n      });\n\n      if (response.ok) {\n        setBrainState((prev) => ({ ...prev, userInterfaceConnected: true }));\n      } else {\n        throw new Error(\"Delivery failed\");\n      }\n    } catch (error) {\n      console.error(\"User interface delivery failed:\", error);\n      setBrainState((prev) => ({ ...prev, userInterfaceConnected: false }));\n    }\n  };\n\n  // ========== BRAIN MONITORING VIEW ==========\n  const BrainMonitorView = () => (\n    <div className=\"space-y-6\">\n      {/* Brain Status Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card className=\"bg-gradient-to-br from-green-500/20 to-emerald-500/20 border-green-500/30 relative overflow-hidden\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-green-300\">Brain Health</p>\n                <p className=\"text-2xl font-bold text-green-400\">\n                  {brainMetrics?.overallHealth.toFixed(1) || \"95.0\"}%\n                </p>\n              </div>\n              <Brain className=\"w-8 h-8 text-green-400\" />\n            </div>\n            <div className=\"absolute inset-0 bg-gradient-to-r from-green-500/10 to-transparent animate-pulse\" />\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-br from-blue-500/20 to-cyan-500/20 border-blue-500/30 relative overflow-hidden\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-blue-300\">Brain Efficiency</p>\n                <p className=\"text-2xl font-bold text-blue-400\">\n                  {brainState.brainEfficiency.toFixed(1)}%\n                </p>\n              </div>\n              <Cpu className=\"w-8 h-8 text-blue-400\" />\n            </div>\n            <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500/10 to-transparent animate-pulse\" />\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-br from-purple-500/20 to-violet-500/20 border-purple-500/30 relative overflow-hidden\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-purple-300\">Predictions Delivered</p>\n                <p className=\"text-2xl font-bold text-purple-400\">\n                  {brainState.predictionsDelivered}\n                </p>\n              </div>\n              <Send className=\"w-8 h-8 text-purple-400\" />\n            </div>\n            <div className=\"absolute inset-0 bg-gradient-to-r from-purple-500/10 to-transparent animate-pulse\" />\n          </CardContent>\n        </Card>\n\n        <Card\n          className={`relative overflow-hidden transition-all duration-1000 ${\n            brainState.userInterfaceConnected\n              ? \"bg-gradient-to-br from-green-500/20 to-emerald-500/20 border-green-500/30\"\n              : \"bg-gradient-to-br from-red-500/20 to-orange-500/20 border-red-500/30\"\n          }`}\n        >\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-orange-300\">User Interface</p>\n                <p className=\"text-2xl font-bold text-orange-400\">\n                  {brainState.userInterfaceConnected ? \"Connected\" : \"Offline\"}\n                </p>\n              </div>\n              {brainState.userInterfaceConnected ? (\n                <CheckCircle className=\"w-8 h-8 text-green-400\" />\n              ) : (\n                <AlertCircle className=\"w-8 h-8 text-red-400\" />\n              )}\n            </div>\n            <div\n              className={`absolute inset-0 bg-gradient-to-r ${\n                brainState.userInterfaceConnected\n                  ? \"from-green-500/10\"\n                  : \"from-red-500/10\"\n              } to-transparent animate-pulse`}\n            />\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Brain Optimization Status */}\n      <Card className=\"bg-slate-800/50 backdrop-blur-sm border border-slate-700/50\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Sparkles className=\"w-5 h-5 text-yellow-400\" />\n            Automated Brain Optimization System\n            <Badge variant=\"outline\" className=\"ml-auto\">\n              {brainState.isMonitoring ? \"Active\" : \"Inactive\"}\n            </Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {/* Optimization Metrics */}\n            <div className=\"space-y-4\">\n              <h3 className=\"font-semibold text-cyan-400\">\n                Optimization Metrics\n              </h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-slate-300\">\n                    Neural Sync Level\n                  </span>\n                  <span className=\"text-cyan-400 font-semibold\">\n                    {brainMetrics?.neuralSyncLevel.toFixed(1) || \"96.7\"}%\n                  </span>\n                </div>\n                <Progress\n                  value={brainMetrics?.neuralSyncLevel || 96.7}\n                  className=\"h-2\"\n                />\n\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-slate-300\">\n                    Brain Coherence\n                  </span>\n                  <span className=\"text-green-400 font-semibold\">\n                    {brainMetrics?.brainCoherence.toFixed(1) || \"98.1\"}%\n                  </span>\n                </div>\n                <Progress\n                  value={brainMetrics?.brainCoherence || 98.1}\n                  className=\"h-2\"\n                />\n\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-slate-300\">\n                    Prediction Optimization\n                  </span>\n                  <span className=\"text-purple-400 font-semibold\">\n                    {brainMetrics?.predictionOptimization.toFixed(1) || \"94.3\"}%\n                  </span>\n                </div>\n                <Progress\n                  value={brainMetrics?.predictionOptimization || 94.3}\n                  className=\"h-2\"\n                />\n              </div>\n            </div>\n\n            {/* Delivery System Status */}\n            <div className=\"space-y-4\">\n              <h3 className=\"font-semibold text-green-400\">\n                Automated Delivery\n              </h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-slate-300\">\n                    Delivery Status\n                  </span>\n                  <Badge\n                    variant={\n                      brainState.automatedDeliveryActive\n                        ? \"default\"\n                        : \"secondary\"\n                    }\n                  >\n                    {brainState.automatedDeliveryActive ? \"Active\" : \"Inactive\"}\n                  </Badge>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-slate-300\">Last Delivery</span>\n                  <span className=\"text-blue-400 text-sm\">\n                    {new Date(brainState.lastDeliveryTime).toLocaleTimeString()}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-slate-300\">\n                    Ready Predictions\n                  </span>\n                  <span className=\"text-yellow-400 font-semibold\">\n                    {optimizedPredictions.filter((p) => p.deliveryReady).length}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Brain Controls */}\n            <div className=\"space-y-4\">\n              <h3 className=\"font-semibold text-orange-400\">Brain Controls</h3>\n              <div className=\"space-y-2\">\n                <Button\n                  onClick={() => {\n                    if (brainState.isMonitoring) {\n                      if (brainOptimizationRef.current)\n                        clearInterval(brainOptimizationRef.current);\n                      if (deliverySystemRef.current)\n                        clearInterval(deliverySystemRef.current);\n                      setBrainState((prev) => ({\n                        ...prev,\n                        isMonitoring: false,\n                        automatedDeliveryActive: false,\n                      }));\n                      toast.success(\"🧠 Brain monitoring paused\");\n                    } else {\n                      startBrainOptimization();\n                      startAutomatedDelivery();\n                      setBrainState((prev) => ({\n                        ...prev,\n                        isMonitoring: true,\n                        automatedDeliveryActive: true,\n                      }));\n                      toast.success(\"🧠 Brain monitoring resumed\");\n                    }\n                  }}\n                  className={`w-full ${brainState.isMonitoring ? \"bg-red-600 hover:bg-red-700\" : \"bg-green-600 hover:bg-green-700\"}`}\n                >\n                  {brainState.isMonitoring ? (\n                    <>\n                      <Pause className=\"w-4 h-4 mr-2\" />\n                      Pause Brain\n                    </>\n                  ) : (\n                    <>\n                      <Play className=\"w-4 h-4 mr-2\" />\n                      Resume Brain\n                    </>\n                  )}\n                </Button>\n\n                <Button\n                  variant=\"outline\"\n                  onClick={() => {\n                    queryClient.invalidateQueries();\n                    toast.success(\"🔄 Brain systems refreshed\");\n                  }}\n                  className=\"w-full\"\n                >\n                  <RefreshCw className=\"w-4 h-4 mr-2\" />\n                  Refresh Brain\n                </Button>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Optimized Predictions for User Interface */}\n      <Card className=\"bg-slate-800/50 backdrop-blur-sm border border-slate-700/50\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Target className=\"w-5 h-5 text-green-400\" />\n            Brain-Optimized Predictions Ready for User Interface\n            <Badge variant=\"outline\" className=\"ml-auto\">\n              {optimizedPredictions.filter((p) => p.deliveryReady).length} Ready\n            </Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {optimizedPredictions\n              .filter((p) => p.deliveryReady)\n              .slice(0, 3)\n              .map((prediction, index) => (\n                <motion.div\n                  key={prediction.id}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: index * 0.1 }}\n                  className=\"p-4 bg-gradient-to-r from-green-500/10 to-blue-500/10 rounded-lg border border-green-500/30\"\n                >\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <div>\n                      <h4 className=\"font-semibold text-white\">\n                        {prediction.prediction}\n                      </h4>\n                      <p className=\"text-sm text-slate-300\">\n                        {prediction.sport} • Brain Optimized\n                      </p>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-lg font-bold text-green-400\">\n                        {prediction.brainConfidence.toFixed(1)}%\n                      </div>\n                      <div className=\"text-sm text-slate-400\">\n                        Brain Confidence\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-3 gap-4 mb-3\">\n                    <div>\n                      <span className=\"text-sm text-slate-400\">\n                        Optimization Score:\n                      </span>\n                      <span className=\"ml-2 text-blue-400 font-semibold\">\n                        {prediction.optimizationScore.toFixed(1)}\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"text-sm text-slate-400\">\n                        Expected Value:\n                      </span>\n                      <span className=\"ml-2 text-green-400 font-semibold\">\n                        +{(prediction.expectedValue * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"text-sm text-slate-400\">Status:</span>\n                      <Badge variant=\"default\" className=\"ml-2 bg-green-600\">\n                        Ready for UI\n                      </Badge>\n                    </div>\n                  </div>\n\n                  <div className=\"text-xs text-slate-500\">\n                    Formatted for user interface • Auto-delivery active\n                  </div>\n                </motion.div>\n              ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n\n  // ========== MAIN RENDER ==========\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white p-6\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 bg-gradient-to-r from-purple-400 to-green-400 rounded-xl blur-xl opacity-60\" />\n              <div className=\"relative w-12 h-12 bg-gradient-to-br from-purple-400 to-green-400 rounded-xl flex items-center justify-center\">\n                <Brain className=\"w-7 h-7 text-white\" />\n              </div>\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold bg-gradient-to-r from-purple-400 to-green-400 bg-clip-text text-transparent\">\n                Brain Monitoring Hub\n              </h1>\n              <p className=\"text-slate-400\">\n                Automated AI Brain • Continuous Optimization • Auto-Delivery to\n                User Interface\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-3\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowPropOllama(true)}\n              className=\"gap-2\"\n            >\n              <Eye className=\"w-4 h-4\" />\n              Brain Analysis\n            </Button>\n            <Badge variant=\"outline\" className=\"px-3 py-1\">\n              {brainState.brainEfficiency.toFixed(1)}% Brain Efficiency\n            </Badge>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <Tabs\n        value={selectedView}\n        onValueChange={setSelectedView}\n        className=\"space-y-6\"\n      >\n        <TabsList className=\"grid w-full grid-cols-3 bg-slate-800/50 backdrop-blur-sm\">\n          <TabsTrigger\n            value=\"brain-monitor\"\n            className=\"flex items-center gap-2\"\n          >\n            <Brain className=\"w-4 h-4\" />\n            Brain Monitor\n          </TabsTrigger>\n          <TabsTrigger value=\"optimization\" className=\"flex items-center gap-2\">\n            <Zap className=\"w-4 h-4\" />\n            Optimization\n          </TabsTrigger>\n          <TabsTrigger value=\"delivery\" className=\"flex items-center gap-2\">\n            <Send className=\"w-4 h-4\" />\n            Auto-Delivery\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"brain-monitor\">\n          <BrainMonitorView />\n        </TabsContent>\n\n        <TabsContent value=\"optimization\">\n          <div className=\"space-y-6\">\n            <Card className=\"bg-slate-800/50 backdrop-blur-sm border border-slate-700/50\">\n              <CardHeader>\n                <CardTitle>Brain Optimization Configuration</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between p-4 bg-slate-700/30 rounded-lg\">\n                    <div>\n                      <h4 className=\"font-medium text-white\">\n                        Continuous Optimization\n                      </h4>\n                      <p className=\"text-sm text-slate-400\">\n                        Automatically optimize prediction models\n                      </p>\n                    </div>\n                    <Button\n                      variant={\n                        brainConfig.enableContinuousOptimization\n                          ? \"default\"\n                          : \"outline\"\n                      }\n                      size=\"sm\"\n                      onClick={() =>\n                        setBrainConfig((prev) => ({\n                          ...prev,\n                          enableContinuousOptimization:\n                            !prev.enableContinuousOptimization,\n                        }))\n                      }\n                    >\n                      {brainConfig.enableContinuousOptimization\n                        ? \"Enabled\"\n                        : \"Disabled\"}\n                    </Button>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-4 bg-slate-700/30 rounded-lg\">\n                    <div>\n                      <h4 className=\"font-medium text-white\">\n                        Auto-Healing Brain\n                      </h4>\n                      <p className=\"text-sm text-slate-400\">\n                        Automatically fix performance issues\n                      </p>\n                    </div>\n                    <Button\n                      variant={\n                        brainConfig.autoHealingEnabled ? \"default\" : \"outline\"\n                      }\n                      size=\"sm\"\n                      onClick={() =>\n                        setBrainConfig((prev) => ({\n                          ...prev,\n                          autoHealingEnabled: !prev.autoHealingEnabled,\n                        }))\n                      }\n                    >\n                      {brainConfig.autoHealingEnabled ? \"Enabled\" : \"Disabled\"}\n                    </Button>\n                  </div>\n\n                  <div className=\"p-4 bg-slate-700/30 rounded-lg\">\n                    <h4 className=\"font-medium text-white mb-2\">\n                      Optimization Interval\n                    </h4>\n                    <p className=\"text-sm text-slate-400 mb-3\">\n                      How often the brain optimizes (seconds)\n                    </p>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-blue-400 font-semibold\">\n                        {brainConfig.optimizationInterval / 1000}s\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"delivery\">\n          <div className=\"space-y-6\">\n            <Card className=\"bg-slate-800/50 backdrop-blur-sm border border-slate-700/50\">\n              <CardHeader>\n                <CardTitle>Automated Delivery to User Interface</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between p-4 bg-slate-700/30 rounded-lg\">\n                    <div>\n                      <h4 className=\"font-medium text-white\">\n                        Auto-Delivery System\n                      </h4>\n                      <p className=\"text-sm text-slate-400\">\n                        Automatically deliver optimized predictions\n                      </p>\n                    </div>\n                    <Button\n                      variant={\n                        brainConfig.enableAutoPredictionDelivery\n                          ? \"default\"\n                          : \"outline\"\n                      }\n                      size=\"sm\"\n                      onClick={() =>\n                        setBrainConfig((prev) => ({\n                          ...prev,\n                          enableAutoPredictionDelivery:\n                            !prev.enableAutoPredictionDelivery,\n                        }))\n                      }\n                    >\n                      {brainConfig.enableAutoPredictionDelivery\n                        ? \"Enabled\"\n                        : \"Disabled\"}\n                    </Button>\n                  </div>\n\n                  <div className=\"p-4 bg-slate-700/30 rounded-lg\">\n                    <h4 className=\"font-medium text-white mb-2\">\n                      Delivery Threshold\n                    </h4>\n                    <p className=\"text-sm text-slate-400 mb-3\">\n                      Minimum confidence for delivery\n                    </p>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-green-400 font-semibold\">\n                        {(brainConfig.deliveryThreshold * 100).toFixed(0)}%\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"p-4 bg-slate-700/30 rounded-lg\">\n                    <h4 className=\"font-medium text-white mb-2\">\n                      User Interface Endpoint\n                    </h4>\n                    <p className=\"text-sm text-slate-400 mb-3\">\n                      Where optimized predictions are sent\n                    </p>\n                    <code className=\"text-xs text-cyan-400 bg-slate-800 px-2 py-1 rounded\">\n                      {brainConfig.userInterfaceEndpoint}\n                    </code>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      {/* PropOllama Modal */}\n      <AnimatePresence>\n        {showPropOllama && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm p-4\"\n            onClick={() => setShowPropOllama(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              className=\"w-full max-w-4xl max-h-[80vh] bg-slate-900 rounded-xl border border-slate-700 overflow-hidden\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"p-4 border-b border-slate-700 flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold\">\n                  Brain Analysis - PropOllama\n                </h3>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowPropOllama(false)}\n                >\n                  ×\n                </Button>\n              </div>\n              <div className=\"h-96 overflow-hidden\">\n                <PropOllama />\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default BrainMonitoringHub;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\CleanAdvancedIntelligenceHub.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\EnhancedIntelligenceHub.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\EnhancedIntelligenceViews.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\EnhancedModuleManagement.tsx","messages":[{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":576,"column":9,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":578,"endColumn":29,"suggestions":[{"messageId":"addBrackets","fix":{"range":[18574,18804],"text":"{ const criticalModules = modules\n          .filter((m) => m.priority === \"critical\")\n          .map((m) => m.id);\n        onBatchActivate(criticalModules);\n        toast.success(\"⚡ Activated critical modules only!\");\n        break; }"},"desc":"Add {} brackets around the case block."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useMemo, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Grid,\n  List,\n  Layers2,\n  DollarSign,\n  Target,\n  Brain,\n  ToggleRight,\n  ToggleLeft,\n  Zap,\n  Power,\n  Minimize,\n  TrendingUp,\n  AlertCircle,\n  CheckCircle,\n  Sparkles,\n  Star,\n  Award,\n  Flame,\n  Crown,\n  Gem,\n  ArrowUp,\n  ArrowDown,\n} from \"lucide-react\";\nimport { toast } from \"react-hot-toast\";\n\n// Enhanced module scoring system for money-making potential\nconst MODULE_SCORES = {\n  \"advanced-analytics\": {\n    money: 95,\n    accuracy: 12,\n    profit: 25000,\n    roi: 245,\n    reliability: 98,\n    description: \"Core analytics driving 95% of profitable opportunities\",\n  },\n  \"ultra-accuracy\": {\n    money: 92,\n    accuracy: 18,\n    profit: 22000,\n    roi: 220,\n    reliability: 96,\n    description: \"Ultra-precise predictions with highest accuracy boost\",\n  },\n  \"ultra-ml\": {\n    money: 88,\n    accuracy: 15,\n    profit: 20000,\n    roi: 200,\n    reliability: 94,\n    description: \"Advanced ML models for superior prediction power\",\n  },\n  \"realtime-accuracy\": {\n    money: 85,\n    accuracy: 10,\n    profit: 18000,\n    roi: 180,\n    reliability: 92,\n    description: \"Real-time analysis for instant profit opportunities\",\n  },\n  \"strategy-engine\": {\n    money: 82,\n    accuracy: 6,\n    profit: 15000,\n    roi: 150,\n    reliability: 90,\n    description: \"Strategic betting optimization for consistent wins\",\n  },\n  \"performance-analytics\": {\n    money: 78,\n    accuracy: 5,\n    profit: 10000,\n    roi: 100,\n    reliability: 88,\n    description: \"Performance tracking for continuous improvement\",\n  },\n  \"ml-model-center\": {\n    money: 75,\n    accuracy: 8,\n    profit: 12000,\n    roi: 120,\n    reliability: 86,\n    description: \"Centralized ML management for optimal results\",\n  },\n  \"mega-analytics\": {\n    money: 90,\n    accuracy: 20,\n    profit: 30000,\n    roi: 300,\n    reliability: 95,\n    description: \"Mega-powered analytics for maximum profit generation\",\n  },\n  \"ensemble-insights\": {\n    money: 68,\n    accuracy: 14,\n    profit: 8000,\n    roi: 80,\n    reliability: 84,\n    description: \"Ensemble learning for robust predictions\",\n  },\n  \"cyber-analytics\": {\n    money: 70,\n    accuracy: 7,\n    profit: 9000,\n    roi: 90,\n    reliability: 82,\n    description: \"Cyber-enhanced analytics for edge detection\",\n  },\n};\n\ninterface ModuleConfig {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  category: string;\n  priority: \"critical\" | \"high\" | \"medium\" | \"low\";\n  dependencies: string[];\n  computationLevel: \"light\" | \"medium\" | \"heavy\" | \"extreme\";\n  isActive: boolean;\n}\n\ninterface EnhancedModuleManagementProps {\n  modules: ModuleConfig[];\n  activeModules: Set<string>;\n  onToggleModule: (moduleId: string) => void;\n  onBatchActivate?: (moduleIds: string[]) => void;\n}\n\nconst EnhancedModuleCard: React.FC<{\n  module: ModuleConfig;\n  isActive: boolean;\n  onToggle: () => void;\n  rank: number;\n}> = ({ module, isActive, onToggle, rank }) => {\n  const scores = MODULE_SCORES[module.id as keyof typeof MODULE_SCORES] || {\n    money: 50,\n    accuracy: 3,\n    profit: 5000,\n    roi: 50,\n    reliability: 75,\n    description: \"Standard module functionality\",\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"critical\":\n        return \"from-red-500 to-pink-500\";\n      case \"high\":\n        return \"from-orange-500 to-yellow-500\";\n      case \"medium\":\n        return \"from-blue-500 to-cyan-500\";\n      default:\n        return \"from-green-500 to-emerald-500\";\n    }\n  };\n\n  const getMoneyScoreColor = (score: number) => {\n    if (score >= 90) return \"from-yellow-400 to-orange-500\";\n    if (score >= 80) return \"from-green-500 to-emerald-400\";\n    if (score >= 70) return \"from-blue-500 to-cyan-400\";\n    return \"from-gray-500 to-slate-400\";\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ delay: rank * 0.1 }}\n      whileHover={{\n        scale: 1.03,\n        rotateY: 2,\n        boxShadow: isActive\n          ? \"0 25px 50px -12px rgba(34, 197, 94, 0.4)\"\n          : \"0 20px 40px -12px rgba(0, 0, 0, 0.3)\",\n      }}\n      whileTap={{ scale: 0.98 }}\n      className={`relative p-6 rounded-2xl border-2 cursor-pointer transition-all duration-500 backdrop-blur-lg ${\n        isActive\n          ? \"bg-gradient-to-br from-green-500/20 via-emerald-500/15 to-blue-500/20 border-green-400/60 shadow-2xl\"\n          : \"bg-slate-800/40 border-slate-600/40 hover:border-slate-500/60 hover:bg-slate-700/30 shadow-lg\"\n      }`}\n      onClick={onToggle}\n    >\n      {/* Top Ranking Badge */}\n      {rank <= 3 && (\n        <div className=\"absolute -top-3 -left-3 flex items-center justify-center w-8 h-8 rounded-full bg-gradient-to-r from-yellow-400 to-orange-500 text-black font-bold text-sm shadow-lg\">\n          {rank === 1 ? (\n            <Crown className=\"w-4 h-4\" />\n          ) : rank === 2 ? (\n            <Award className=\"w-4 h-4\" />\n          ) : (\n            <Star className=\"w-4 h-4\" />\n          )}\n        </div>\n      )}\n\n      {/* Money-Making Score Badge */}\n      {scores.money >= 80 && (\n        <motion.div\n          initial={{ scale: 0 }}\n          animate={{ scale: 1 }}\n          transition={{ delay: 0.5, type: \"spring\" }}\n          className={`absolute -top-2 -right-2 bg-gradient-to-r ${getMoneyScoreColor(scores.money)} text-black text-xs font-bold px-3 py-1 rounded-full shadow-xl`}\n        >\n          <div className=\"flex items-center gap-1\">\n            <DollarSign className=\"w-3 h-3\" />\n            {scores.money}%\n          </div>\n        </motion.div>\n      )}\n\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <motion.div\n            className={`p-3 rounded-xl transition-all duration-300 ${\n              isActive\n                ? \"bg-gradient-to-br from-green-500/30 to-blue-500/30 shadow-lg\"\n                : \"bg-slate-600/30\"\n            }`}\n            whileHover={{ rotate: 360 }}\n            transition={{ duration: 0.5 }}\n          >\n            {module.icon}\n          </motion.div>\n          <div>\n            <h3 className=\"font-bold text-sm leading-tight\">{module.name}</h3>\n            <p className=\"text-xs text-slate-400 capitalize\">\n              {module.category}\n            </p>\n          </div>\n        </div>\n        <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.9 }}>\n          {isActive ? (\n            <div className=\"flex items-center gap-2\">\n              <motion.div\n                className=\"w-2 h-2 bg-green-400 rounded-full\"\n                animate={{ scale: [1, 1.2, 1] }}\n                transition={{ repeat: Infinity, duration: 2 }}\n              />\n              <ToggleRight className=\"w-6 h-6 text-green-400\" />\n            </div>\n          ) : (\n            <ToggleLeft className=\"w-6 h-6 text-slate-400\" />\n          )}\n        </motion.div>\n      </div>\n\n      {/* Description */}\n      <p className=\"text-xs text-slate-300 mb-4 leading-relaxed line-clamp-2\">\n        {scores.description}\n      </p>\n\n      {/* Performance Metrics Grid */}\n      <div className=\"space-y-3 mb-4\">\n        {/* Money Impact Bar */}\n        <div className=\"space-y-1\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-xs text-slate-400 font-medium\">\n              Money Impact\n            </span>\n            <span className=\"text-xs font-bold text-green-400\">\n              {scores.money}%\n            </span>\n          </div>\n          <div className=\"w-full h-2 bg-slate-700 rounded-full overflow-hidden\">\n            <motion.div\n              className={`h-full rounded-full bg-gradient-to-r ${getMoneyScoreColor(scores.money)}`}\n              initial={{ width: 0 }}\n              animate={{ width: `${scores.money}%` }}\n              transition={{ delay: 0.3, duration: 1 }}\n            />\n          </div>\n        </div>\n\n        {/* Performance Metrics Row */}\n        <div className=\"grid grid-cols-2 gap-3\">\n          <div className=\"bg-blue-500/10 rounded-lg p-2 border border-blue-500/20\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-xs text-blue-300\">Accuracy</span>\n              <span className=\"text-xs font-bold text-blue-400\">\n                +{scores.accuracy}%\n              </span>\n            </div>\n          </div>\n          <div className=\"bg-green-500/10 rounded-lg p-2 border border-green-500/20\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-xs text-green-300\">ROI</span>\n              <span className=\"text-xs font-bold text-green-400\">\n                {scores.roi}%\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Daily Profit */}\n        <div className=\"bg-gradient-to-r from-emerald-500/10 to-green-500/10 rounded-lg p-2 border border-emerald-500/20\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-xs text-emerald-300\">Daily Profit</span>\n            <span className=\"text-xs font-bold text-emerald-400\">\n              +${scores.profit.toLocaleString()}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          <Badge\n            variant=\"outline\"\n            className={`text-xs bg-gradient-to-r ${getPriorityColor(module.priority)} text-white border-0`}\n          >\n            {module.priority}\n          </Badge>\n          {scores.reliability >= 90 && (\n            <CheckCircle className=\"w-3 h-3 text-green-400\" />\n          )}\n        </div>\n        <div className=\"flex items-center gap-1\">\n          <span className=\"text-xs text-slate-500 capitalize\">\n            {module.computationLevel}\n          </span>\n          <div\n            className={`w-2 h-2 rounded-full ${\n              module.computationLevel === \"light\"\n                ? \"bg-green-400\"\n                : module.computationLevel === \"medium\"\n                  ? \"bg-yellow-400\"\n                  : module.computationLevel === \"heavy\"\n                    ? \"bg-orange-400\"\n                    : \"bg-red-400\"\n            }`}\n          />\n        </div>\n      </div>\n\n      {/* Active Glow Effect */}\n      <AnimatePresence>\n        {isActive && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"absolute inset-0 rounded-2xl bg-gradient-to-r from-green-500/10 to-blue-500/10 pointer-events-none\"\n            style={{\n              background:\n                \"linear-gradient(45deg, rgba(34, 197, 94, 0.1), rgba(59, 130, 246, 0.1))\",\n              animation: \"pulse 3s ease-in-out infinite\",\n            }}\n          />\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n};\n\nconst PerformanceDashboard: React.FC<{\n  activeModules: Set<string>;\n  moduleConfigs: ModuleConfig[];\n}> = ({ activeModules, moduleConfigs }) => {\n  const activeConfigs = moduleConfigs.filter((config) =>\n    activeModules.has(config.id),\n  );\n\n  const metrics = useMemo(() => {\n    const totalProfitContribution = activeConfigs.reduce((sum, m) => {\n      const scores = MODULE_SCORES[m.id as keyof typeof MODULE_SCORES];\n      return sum + (scores?.profit || 5000);\n    }, 0);\n\n    const avgAccuracyBoost =\n      activeConfigs.length > 0\n        ? activeConfigs.reduce((sum, m) => {\n            const scores = MODULE_SCORES[m.id as keyof typeof MODULE_SCORES];\n            return sum + (scores?.accuracy || 3);\n          }, 0)\n        : 0;\n\n    const avgMoneyScore =\n      activeConfigs.length > 0\n        ? activeConfigs.reduce((sum, m) => {\n            const scores = MODULE_SCORES[m.id as keyof typeof MODULE_SCORES];\n            return sum + (scores?.money || 50);\n          }, 0) / activeConfigs.length\n        : 0;\n\n    const totalROI = activeConfigs.reduce((sum, m) => {\n      const scores = MODULE_SCORES[m.id as keyof typeof MODULE_SCORES];\n      return sum + (scores?.roi || 50);\n    }, 0);\n\n    return {\n      totalProfitContribution,\n      avgAccuracyBoost,\n      avgMoneyScore,\n      totalROI,\n    };\n  }, [activeConfigs]);\n\n  const dashboardCards = [\n    {\n      title: \"Active Profit Engine\",\n      value: `$${metrics.totalProfitContribution.toLocaleString()}`,\n      subtitle: \"Daily contribution\",\n      icon: DollarSign,\n      gradient: \"from-green-500/15 to-emerald-500/15\",\n      border: \"border-green-500/30\",\n      iconColor: \"text-green-400\",\n    },\n    {\n      title: \"Prediction Power\",\n      value: `${metrics.avgAccuracyBoost.toFixed(1)}%`,\n      subtitle: \"Combined boost\",\n      icon: Target,\n      gradient: \"from-blue-500/15 to-cyan-500/15\",\n      border: \"border-blue-500/30\",\n      iconColor: \"text-blue-400\",\n    },\n    {\n      title: \"Money Score\",\n      value: `${metrics.avgMoneyScore.toFixed(1)}%`,\n      subtitle: \"Average rating\",\n      icon: Sparkles,\n      gradient: \"from-purple-500/15 to-pink-500/15\",\n      border: \"border-purple-500/30\",\n      iconColor: \"text-purple-400\",\n    },\n    {\n      title: \"Total ROI\",\n      value: `${metrics.totalROI.toFixed(0)}%`,\n      subtitle: \"Return potential\",\n      icon: TrendingUp,\n      gradient: \"from-orange-500/15 to-yellow-500/15\",\n      border: \"border-orange-500/30\",\n      iconColor: \"text-orange-400\",\n    },\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\n      {dashboardCards.map((card, index) => (\n        <motion.div\n          key={card.title}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: index * 0.1 }}\n        >\n          <Card\n            className={`bg-gradient-to-br ${card.gradient} ${card.border} relative overflow-hidden hover:scale-105 transition-transform duration-300`}\n          >\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-xs uppercase tracking-wide font-semibold opacity-80 mb-1\">\n                    {card.title}\n                  </p>\n                  <p className={`text-3xl font-bold ${card.iconColor} mb-1`}>\n                    {card.value}\n                  </p>\n                  <p className=\"text-xs opacity-70\">{card.subtitle}</p>\n                </div>\n                <card.icon className={`w-10 h-10 ${card.iconColor}`} />\n              </div>\n              <motion.div\n                className=\"absolute inset-0 bg-gradient-to-r from-white/5 to-transparent\"\n                animate={{ x: [-100, 300] }}\n                transition={{\n                  repeat: Infinity,\n                  duration: 3,\n                  ease: \"easeInOut\",\n                }}\n              />\n            </CardContent>\n          </Card>\n        </motion.div>\n      ))}\n    </div>\n  );\n};\n\nexport const EnhancedModuleManagement: React.FC<\n  EnhancedModuleManagementProps\n> = ({ modules, activeModules, onToggleModule, onBatchActivate }) => {\n  const [moduleLayout, setModuleLayout] = useState<\"grid\" | \"list\">(\"grid\");\n  const [sortBy, setSortBy] = useState<\"money\" | \"accuracy\" | \"profit\">(\n    \"money\",\n  );\n\n  // Smart recommendations\n  const getSmartRecommendations = useCallback(() => {\n    const profitOptimized = modules\n      .filter((m) => {\n        const scores = MODULE_SCORES[m.id as keyof typeof MODULE_SCORES];\n        return scores && scores.money >= 85;\n      })\n      .sort((a, b) => {\n        const scoresA = MODULE_SCORES[a.id as keyof typeof MODULE_SCORES];\n        const scoresB = MODULE_SCORES[b.id as keyof typeof MODULE_SCORES];\n        return (scoresB?.profit || 0) - (scoresA?.profit || 0);\n      })\n      .slice(0, 6)\n      .map((m) => m.id);\n\n    const accuracyOptimized = modules\n      .filter((m) => {\n        const scores = MODULE_SCORES[m.id as keyof typeof MODULE_SCORES];\n        return scores && scores.accuracy >= 10;\n      })\n      .sort((a, b) => {\n        const scoresA = MODULE_SCORES[a.id as keyof typeof MODULE_SCORES];\n        const scoresB = MODULE_SCORES[b.id as keyof typeof MODULE_SCORES];\n        return (scoresB?.accuracy || 0) - (scoresA?.accuracy || 0);\n      })\n      .slice(0, 6)\n      .map((m) => m.id);\n\n    const balanced = modules\n      .filter((m) => {\n        const scores = MODULE_SCORES[m.id as keyof typeof MODULE_SCORES];\n        return scores && scores.money >= 70 && scores.accuracy >= 5;\n      })\n      .sort((a, b) => {\n        const scoresA = MODULE_SCORES[a.id as keyof typeof MODULE_SCORES];\n        const scoresB = MODULE_SCORES[b.id as keyof typeof MODULE_SCORES];\n        const totalA = (scoresA?.money || 0) + (scoresA?.accuracy || 0) * 5;\n        const totalB = (scoresB?.money || 0) + (scoresB?.accuracy || 0) * 5;\n        return totalB - totalA;\n      })\n      .slice(0, 8)\n      .map((m) => m.id);\n\n    return { profitOptimized, accuracyOptimized, balanced };\n  }, [modules]);\n\n  const recommendations = getSmartRecommendations();\n\n  // Sort modules by selected criteria\n  const sortedModules = useMemo(() => {\n    return [...modules].sort((a, b) => {\n      const scoresA = MODULE_SCORES[a.id as keyof typeof MODULE_SCORES];\n      const scoresB = MODULE_SCORES[b.id as keyof typeof MODULE_SCORES];\n\n      if (sortBy === \"money\") {\n        return (scoresB?.money || 0) - (scoresA?.money || 0);\n      } else if (sortBy === \"accuracy\") {\n        return (scoresB?.accuracy || 0) - (scoresA?.accuracy || 0);\n      } else {\n        return (scoresB?.profit || 0) - (scoresA?.profit || 0);\n      }\n    });\n  }, [modules, sortBy]);\n\n  const handleQuickAction = (action: string) => {\n    if (!onBatchActivate) return;\n\n    switch (action) {\n      case \"profit-optimized\":\n        onBatchActivate(recommendations.profitOptimized);\n        toast.success(\"🚀 Activated profit-optimized modules!\");\n        break;\n      case \"accuracy-optimized\":\n        onBatchActivate(recommendations.accuracyOptimized);\n        toast.success(\"🎯 Activated accuracy-optimized modules!\");\n        break;\n      case \"balanced\":\n        onBatchActivate(recommendations.balanced);\n        toast.success(\"⚖️ Activated balanced configuration!\");\n        break;\n      case \"critical\":\n        const criticalModules = modules\n          .filter((m) => m.priority === \"critical\")\n          .map((m) => m.id);\n        onBatchActivate(criticalModules);\n        toast.success(\"⚡ Activated critical modules only!\");\n        break;\n      case \"all\":\n        onBatchActivate(modules.map((m) => m.id));\n        toast.success(\"💪 Full power mode activated!\");\n        break;\n      case \"minimal\":\n        onBatchActivate([]);\n        toast.success(\"🔧 Reset to minimal configuration!\");\n        break;\n    }\n  };\n\n  return (\n    <Card className=\"bg-gradient-to-br from-slate-900/95 to-slate-800/95 backdrop-blur-sm border border-slate-700/50 shadow-2xl\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          <motion.div\n            className=\"flex items-center gap-3\"\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n          >\n            <div className=\"p-3 rounded-xl bg-gradient-to-r from-blue-500/20 to-purple-500/20\">\n              <Brain className=\"w-6 h-6\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">\n                Intelligent Module Management\n              </h2>\n              <p className=\"text-sm text-slate-400 font-normal\">\n                Optimize for maximum profitability\n              </p>\n            </div>\n          </motion.div>\n\n          <div className=\"flex items-center gap-3\">\n            {/* Sort Controls */}\n            <div className=\"flex items-center gap-1 bg-slate-800/50 rounded-lg p-1\">\n              {[\n                { key: \"money\", icon: DollarSign, label: \"Money\" },\n                { key: \"accuracy\", icon: Target, label: \"Accuracy\" },\n                { key: \"profit\", icon: TrendingUp, label: \"Profit\" },\n              ].map(({ key, icon: Icon, label }) => (\n                <Button\n                  key={key}\n                  size=\"sm\"\n                  variant={sortBy === key ? \"default\" : \"ghost\"}\n                  onClick={() => setSortBy(key as any)}\n                  className=\"h-8 px-2\"\n                  title={`Sort by ${label}`}\n                >\n                  <Icon className=\"w-3 h-3\" />\n                </Button>\n              ))}\n            </div>\n\n            {/* Layout Controls */}\n            <div className=\"flex items-center gap-1 bg-slate-800/50 rounded-lg p-1\">\n              <Button\n                size=\"sm\"\n                variant={moduleLayout === \"grid\" ? \"default\" : \"ghost\"}\n                onClick={() => setModuleLayout(\"grid\")}\n                className=\"h-8 px-2\"\n              >\n                <Grid className=\"w-3 h-3\" />\n              </Button>\n              <Button\n                size=\"sm\"\n                variant={moduleLayout === \"list\" ? \"default\" : \"ghost\"}\n                onClick={() => setModuleLayout(\"list\")}\n                className=\"h-8 px-2\"\n              >\n                <List className=\"w-3 h-3\" />\n              </Button>\n            </div>\n          </div>\n        </CardTitle>\n      </CardHeader>\n\n      <CardContent className=\"space-y-8\">\n        {/* Performance Dashboard */}\n        <PerformanceDashboard\n          activeModules={activeModules}\n          moduleConfigs={modules}\n        />\n\n        {/* Smart Quick Actions */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <Button\n            onClick={() => handleQuickAction(\"profit-optimized\")}\n            className=\"h-12 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold shadow-lg hover:shadow-xl transition-all duration-300\"\n          >\n            <DollarSign className=\"w-5 h-5 mr-2\" />\n            Max Profit Setup\n            <Badge variant=\"secondary\" className=\"ml-2 bg-white/20 text-white\">\n              {recommendations.profitOptimized.length}\n            </Badge>\n          </Button>\n          <Button\n            onClick={() => handleQuickAction(\"accuracy-optimized\")}\n            className=\"h-12 bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white font-semibold shadow-lg hover:shadow-xl transition-all duration-300\"\n          >\n            <Target className=\"w-5 h-5 mr-2\" />\n            Max Accuracy Setup\n            <Badge variant=\"secondary\" className=\"ml-2 bg-white/20 text-white\">\n              {recommendations.accuracyOptimized.length}\n            </Badge>\n          </Button>\n          <Button\n            onClick={() => handleQuickAction(\"balanced\")}\n            className=\"h-12 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-semibold shadow-lg hover:shadow-xl transition-all duration-300\"\n          >\n            <Sparkles className=\"w-5 h-5 mr-2\" />\n            Balanced Setup\n            <Badge variant=\"secondary\" className=\"ml-2 bg-white/20 text-white\">\n              {recommendations.balanced.length}\n            </Badge>\n          </Button>\n        </div>\n\n        {/* Enhanced Module Grid */}\n        <div\n          className={`grid gap-6 ${\n            moduleLayout === \"grid\"\n              ? \"grid-cols-1 md:grid-cols-2 lg:grid-cols-3\"\n              : \"grid-cols-1\"\n          }`}\n        >\n          {sortedModules.map((module, index) => (\n            <EnhancedModuleCard\n              key={module.id}\n              module={module}\n              isActive={activeModules.has(module.id)}\n              onToggle={() => onToggleModule(module.id)}\n              rank={index + 1}\n            />\n          ))}\n        </div>\n\n        {/* Traditional Quick Actions */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 pt-4 border-t border-slate-700/50\">\n          <Button\n            onClick={() => handleQuickAction(\"critical\")}\n            variant=\"outline\"\n            className=\"border-red-500/30 text-red-400 hover:bg-red-500/10 hover:border-red-500/50\"\n          >\n            <Zap className=\"w-4 h-4 mr-2\" />\n            Critical Only\n          </Button>\n          <Button\n            onClick={() => handleQuickAction(\"all\")}\n            variant=\"outline\"\n            className=\"border-blue-500/30 text-blue-400 hover:bg-blue-500/10 hover:border-blue-500/50\"\n          >\n            <Power className=\"w-4 h-4 mr-2\" />\n            Full Power\n          </Button>\n          <Button\n            onClick={() => handleQuickAction(\"minimal\")}\n            variant=\"outline\"\n            className=\"border-slate-500/30 text-slate-400 hover:bg-slate-500/10 hover:border-slate-500/50\"\n          >\n            <Minimize className=\"w-4 h-4 mr-2\" />\n            Reset All\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default EnhancedModuleManagement;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\EnhancedModuleSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\ModuleEnhancement.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\ModuleEnhancements.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\intelligence\\ModuleManagementEnhanced.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\AdvancedSidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\AdvancedSidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\AdvancedSidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\AppShell.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\AppShell.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\AppShell.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberFooter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberFooter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberFooter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberHeader.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberHeader.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberLayout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberSidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberSidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\CyberSidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\EliteSportsHeader.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\EliteSportsHeader.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\EliteSportsHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\EnhancedModernLayout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\EnhancedModernLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\Layout.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\Layout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\Layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\Navigation.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\Navigation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\layout\\Navigation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\lineup\\PayoutPreview.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\lineup\\PayoutPreview.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\lineup\\PayoutPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\lineup\\SmartLineupBuilder.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\lineup\\SmartLineupBuilder.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\lineup\\SmartLineupBuilder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\CyberTheme.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\CyberTheme.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaAdminPanel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaAdminPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaApp.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaApp.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaBetting.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaBetting.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaFeatures.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaFeatures.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaLayout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaLayout.tsx","messages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useTheme\" is called conditionally. React Hooks must be called in the exact same order in every component render.","line":1233,"column":23,"nodeType":"Identifier","endLine":1233,"endColumn":31}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, ReactNode } from \"react\";\nimport { createPortal } from \"react-dom\";\n// Removed unused CyberTheme imports\nimport { useTheme } from \"../../providers/SafeThemeProvider\";\nimport { MegaButton } from \"./MegaUI\";\n// Removed problematic import\nimport {\n  Brain,\n  Menu,\n  X,\n  Bell,\n  Settings,\n  User,\n  LogOut,\n  Search,\n  Wifi,\n  WifiOff,\n  ChevronLeft,\n  ChevronRight,\n  Home,\n  BarChart3,\n  DollarSign,\n  Target,\n  Activity,\n  Shield,\n  Zap,\n  Sun,\n  Moon,\n  ChevronDown,\n  UserCircle,\n} from \"lucide-react\";\n\n// MEGA LAYOUT SYSTEM - Consolidates 23 layout components\n\n// ============================================================================\n// USER AVATAR DROPDOWN COMPONENT\n// ============================================================================\nconst UserAvatarDropdown: React.FC<{\n  user: { name: string; avatar?: string };\n  isDark?: boolean;\n  onNavigate?: (pageId: string) => void;\n}> = ({ user, isDark, onNavigate }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [dropdownRef, setDropdownRef] = useState<HTMLDivElement | null>(null);\n  const [buttonRef, setButtonRef] = useState<HTMLButtonElement | null>(null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    right: 0,\n  });\n\n  // Calculate dropdown position based on button position\n  useEffect(() => {\n    if (isOpen && buttonRef) {\n      const rect = buttonRef.getBoundingClientRect();\n      setDropdownPosition({\n        top: rect.bottom + 8,\n        right: window.innerWidth - rect.right,\n      });\n    }\n  }, [isOpen, buttonRef]);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef &&\n        !dropdownRef.contains(event.target as Node) &&\n        buttonRef &&\n        !buttonRef.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n  }, [dropdownRef, buttonRef, isOpen]);\n\n  const handleAccountProfile = () => {\n    // Navigate to profile page using app navigation\n    if (onNavigate) {\n      onNavigate(\"profile\");\n    }\n    setIsOpen(false);\n  };\n\n  const handleSignOut = () => {\n    // Handle sign out\n    if (confirm(\"Are you sure you want to sign out?\")) {\n      // Clear any stored auth data\n      localStorage.removeItem(\"authToken\");\n      sessionStorage.clear();\n      // Redirect to login or home page\n      window.location.href = \"/login\";\n    }\n    setIsOpen(false);\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <button\n        ref={setButtonRef}\n        onClick={() => setIsOpen(!isOpen)}\n        style={{\n          width: \"32px\",\n          height: \"32px\",\n          background: \"linear-gradient(135deg, #06ffa5, #00ff88)\",\n          borderRadius: \"50%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          cursor: \"pointer\",\n          border: \"none\",\n          transition: \"all 0.2s ease\",\n          transform: isOpen ? \"scale(1.05)\" : \"scale(1)\",\n        }}\n      >\n        {user.avatar ? (\n          <img\n            src={user.avatar}\n            alt={user.name}\n            style={{ width: \"100%\", height: \"100%\", borderRadius: \"50%\" }}\n          />\n        ) : (\n          <User size={16} color={isDark ? \"#000\" : \"#fff\"} />\n        )}\n      </button>\n\n      {/* Dropdown Menu using Portal */}\n      {isOpen &&\n        createPortal(\n          <div\n            ref={setDropdownRef}\n            style={{\n              position: \"fixed\",\n              top: `${dropdownPosition.top}px`,\n              right: `${dropdownPosition.right}px`,\n              minWidth: \"220px\",\n              background: \"rgba(15, 23, 42, 0.98)\",\n              backdropFilter: \"blur(40px) saturate(2)\",\n              border: \"1px solid rgba(6, 255, 165, 0.4)\",\n              borderRadius: \"16px\",\n              boxShadow:\n                \"0 25px 80px rgba(0, 0, 0, 0.6), 0 10px 40px rgba(6, 255, 165, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)\",\n              zIndex: 2147483647,\n              padding: \"12px\",\n              transform: \"translateY(0)\",\n              opacity: 1,\n            }}\n          >\n            {/* User Info Header */}\n            <div\n              style={{\n                padding: \"12px 16px\",\n                borderBottom: \"1px solid rgba(6, 255, 165, 0.2)\",\n                marginBottom: \"8px\",\n              }}\n            >\n              <div\n                style={{\n                  fontSize: \"14px\",\n                  fontWeight: \"600\",\n                  color: \"#ffffff\",\n                  marginBottom: \"2px\",\n                }}\n              >\n                {user.name}\n              </div>\n              <div\n                style={{\n                  fontSize: \"12px\",\n                  color: \"#94a3b8\",\n                }}\n              >\n                Pro User\n              </div>\n            </div>\n\n            {/* Menu Items */}\n            <button\n              onClick={handleAccountProfile}\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                padding: \"12px 16px\",\n                background: \"transparent\",\n                border: \"none\",\n                borderRadius: \"12px\",\n                cursor: \"pointer\",\n                fontSize: \"14px\",\n                color: \"#ffffff\",\n                transition: \"all 0.2s ease\",\n                textAlign: \"left\",\n                fontWeight: \"500\",\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.background = \"rgba(6, 255, 165, 0.15)\";\n                e.currentTarget.style.transform = \"translateX(4px)\";\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.background = \"transparent\";\n                e.currentTarget.style.transform = \"translateX(0)\";\n              }}\n            >\n              <UserCircle\n                size={16}\n                style={{ marginRight: \"12px\", color: \"#06ffa5\" }}\n              />\n              Account & Profile\n            </button>\n\n            <button\n              onClick={handleSignOut}\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                padding: \"12px 16px\",\n                background: \"transparent\",\n                border: \"none\",\n                borderRadius: \"12px\",\n                cursor: \"pointer\",\n                fontSize: \"14px\",\n                color: \"#ff6b6b\",\n                transition: \"all 0.2s ease\",\n                textAlign: \"left\",\n                fontWeight: \"500\",\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.background = \"rgba(255, 107, 107, 0.15)\";\n                e.currentTarget.style.transform = \"translateX(4px)\";\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.background = \"transparent\";\n                e.currentTarget.style.transform = \"translateX(0)\";\n              }}\n            >\n              <LogOut\n                size={16}\n                style={{ marginRight: \"12px\", color: \"#ff6b6b\" }}\n              />\n              Sign Out\n            </button>\n          </div>,\n          document.body,\n        )}\n    </div>\n  );\n};\n\n// ============================================================================\n// MEGA SIDEBAR (Consolidates CyberSidebar, AdvancedSidebar, Sidebar variants)\n// ============================================================================\nexport const MegaSidebar: React.FC<{\n  isOpen: boolean;\n  onToggle: () => void;\n  navigationItems: Array<{\n    id: string;\n    label: string;\n    icon: React.ComponentType<any>;\n    href?: string;\n    badge?: string | number;\n    submenu?: Array<{\n      id: string;\n      label: string;\n      icon?: React.ComponentType<any>;\n    }>;\n  }>;\n  currentPage: string;\n  onNavigate: (pageId: string) => void;\n  user?: {\n    name: string;\n    email: string;\n    avatar?: string;\n    tier?: string;\n    balance?: number;\n  };\n  systemStatus?: {\n    connectedSources: number;\n    dataQuality: number;\n    isOnline: boolean;\n  };\n  variant?: \"default\" | \"compact\" | \"floating\";\n  className?: string;\n}> = ({\n  isOpen,\n  onToggle,\n  navigationItems,\n  currentPage,\n  onNavigate,\n  user,\n  systemStatus,\n  variant = \"default\",\n  className = \"\",\n}) => {\n  const { theme } = useTheme();\n  const [expandedSubmenus, setExpandedSubmenus] = useState<Set<string>>(\n    new Set(),\n  );\n\n  const toggleSubmenu = (itemId: string) => {\n    const newExpanded = new Set(expandedSubmenus);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedSubmenus(newExpanded);\n  };\n\n  const getStatusIcon = () => {\n    if (!systemStatus?.isOnline)\n      return { icon: WifiOff, color: \"#ff4757\", text: \"Offline\" };\n    if (systemStatus.connectedSources < 5)\n      return { icon: Wifi, color: \"#00d4ff\", text: \"Limited\" };\n    return { icon: Wifi, color: \"#06ffa5\", text: \"Connected\" };\n  };\n\n  const status = getStatusIcon();\n  const StatusIcon = status.icon;\n\n  const sidebarWidth = isOpen ? \"280px\" : \"64px\";\n  const isCompact = !isOpen || variant === \"compact\";\n\n  return (\n    <div\n      className={`mega-sidebar ${className}`}\n      style={{\n        width: sidebarWidth,\n        height: \"100vh\",\n        position: variant === \"floating\" ? \"fixed\" : \"relative\",\n        left: variant === \"floating\" && !isOpen ? \"-280px\" : \"0\",\n        zIndex: variant === \"floating\" ? 1000 : \"auto\",\n        transition: \"all 0.3s ease\",\n        backdropFilter: \"blur(40px) saturate(2)\",\n        backgroundColor: \"rgba(255, 255, 255, 0.02)\",\n        border: \"1px solid rgba(255, 255, 255, 0.05)\",\n        boxShadow:\n          \"0 8px 32px rgba(0, 0, 0, 0.2), 0 1px 0 rgba(255, 255, 255, 0.05) inset\",\n        borderRight:\n          variant !== \"floating\"\n            ? `1px solid rgba(255, 255, 255, 0.1)`\n            : \"none\",\n        borderRadius: variant === \"floating\" ? \"0 16px 16px 0\" : \"0\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/* Header */}\n      <div style={{ padding: isCompact ? \"16px 12px\" : \"24px 20px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: isCompact ? \"center\" : \"space-between\",\n            marginBottom: isCompact ? \"0\" : \"24px\",\n          }}\n        >\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <button\n              onClick={() => onNavigate(\"dashboard\")}\n              style={{\n                width: \"44px\",\n                height: \"44px\",\n                background:\n                  \"linear-gradient(135deg, rgba(6, 255, 165, 0.9), rgba(0, 255, 136, 0.8))\",\n                borderRadius: \"12px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginRight: isCompact ? \"0\" : \"14px\",\n                border: \"none\",\n                cursor: \"pointer\",\n                transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                boxShadow: \"0 4px 16px rgba(6, 255, 165, 0.2)\",\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.transform =\n                  \"scale(1.08) translateY(-1px)\";\n                e.currentTarget.style.boxShadow =\n                  \"0 8px 32px rgba(6, 255, 165, 0.4)\";\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.transform = \"scale(1) translateY(0)\";\n                e.currentTarget.style.boxShadow =\n                  \"0 4px 16px rgba(6, 255, 165, 0.2)\";\n              }}\n              title=\"Return to Dashboard\"\n            >\n              <Brain size={24} color=\"#000\" />\n            </button>\n            {!isCompact && (\n              <div>\n                <div\n                  style={{\n                    fontSize: \"16px\",\n                    fontWeight: \"700\",\n                    color: \"#ffffff\",\n                    lineHeight: \"1.2\",\n                    letterSpacing: \"-0.01em\",\n                  }}\n                >\n                  A1Betting\n                </div>\n                <div\n                  style={{\n                    fontSize: \"12px\",\n                    color: \"#94a3b8\",\n                    lineHeight: \"1.2\",\n                    fontWeight: \"500\",\n                  }}\n                >\n                  Quantum Platform\n                </div>\n              </div>\n            )}\n          </div>\n\n          {!isCompact && (\n            <button\n              onClick={onToggle}\n              style={{\n                background: \"rgba(6, 255, 165, 0.08)\",\n                border: \"1px solid rgba(6, 255, 165, 0.2)\",\n                color: \"#06ffa5\",\n                fontWeight: \"500\",\n                padding: \"8px\",\n                fontSize: \"12px\",\n                borderRadius: \"10px\",\n                cursor: \"pointer\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                transition: \"all 0.2s ease\",\n                width: \"36px\",\n                height: \"36px\",\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.background = \"rgba(6, 255, 165, 0.15)\";\n                e.currentTarget.style.borderColor = \"rgba(6, 255, 165, 0.4)\";\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.background = \"rgba(6, 255, 165, 0.08)\";\n                e.currentTarget.style.borderColor = \"rgba(6, 255, 165, 0.2)\";\n              }}\n            >\n              <X size={16} />\n            </button>\n          )}\n        </div>\n\n        {/* User Info */}\n        {user && !isCompact && (\n          <div\n            style={{\n              padding: \"16px\",\n              marginBottom: \"16px\",\n              borderRadius: \"12px\",\n              background: \"rgba(255, 255, 255, 0.05)\",\n              backdropFilter: \"blur(20px) saturate(180%)\",\n              border: \"1px solid rgba(255, 255, 255, 0.1)\",\n              boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.1)\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: \"8px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"32px\",\n                  height: \"32px\",\n                  background:\n                    \"linear-gradient(135deg, rgba(6, 255, 165, 0.8), rgba(0, 255, 136, 0.6))\",\n                  borderRadius: \"50%\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginRight: \"8px\",\n                }}\n              >\n                <User size={16} color=\"#000\" />\n              </div>\n              <div>\n                <div\n                  style={{\n                    fontSize: \"14px\",\n                    fontWeight: \"500\",\n                    color: \"#ffffff\",\n                    lineHeight: \"1.2\",\n                  }}\n                >\n                  {user.name}\n                </div>\n                <div\n                  style={{\n                    fontSize: \"12px\",\n                    color: \"#94a3b8\",\n                    lineHeight: \"1.2\",\n                  }}\n                >\n                  {user.tier || \"Pro User\"}\n                </div>\n              </div>\n            </div>\n            {user.balance && (\n              <div\n                style={{\n                  fontSize: \"12px\",\n                  color: \"#06ffa5\",\n                  lineHeight: \"1.2\",\n                }}\n              >\n                Balance: ${user.balance.toLocaleString()}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* System Status */}\n        {systemStatus && !isCompact && (\n          <div\n            style={{\n              padding: \"12px\",\n              marginBottom: \"16px\",\n              borderRadius: \"12px\",\n              background: \"rgba(255, 255, 255, 0.05)\",\n              backdropFilter: \"blur(20px) saturate(180%)\",\n              border: \"1px solid rgba(255, 255, 255, 0.1)\",\n              boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.1)\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <StatusIcon size={16} color={status.color} />\n                <div\n                  style={{\n                    fontSize: \"12px\",\n                    marginLeft: \"8px\",\n                    color: status.color,\n                    lineHeight: \"1.2\",\n                  }}\n                >\n                  {status.text}\n                </div>\n              </div>\n              <div\n                style={{\n                  fontSize: \"12px\",\n                  color: \"#94a3b8\",\n                  lineHeight: \"1.2\",\n                }}\n              >\n                {systemStatus.dataQuality}%\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Toggle Button for Compact */}\n        {isCompact && (\n          <div style={{ textAlign: \"center\", marginTop: \"16px\" }}>\n            <button\n              onClick={onToggle}\n              style={{\n                background: \"rgba(6, 255, 165, 0.1)\",\n                border: \"1px solid rgba(6, 255, 165, 0.8)\",\n                color: \"#06ffa5\",\n                fontWeight: \"500\",\n                padding: \"6px 12px\",\n                fontSize: \"12px\",\n                borderRadius: \"8px\",\n                cursor: \"pointer\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Menu size={16} />\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Navigation */}\n      <nav style={{ flex: 1, padding: \"0 16px\", overflowY: \"auto\" }}>\n        <div style={{ marginBottom: \"8px\" }}>\n          {navigationItems\n            .filter(\n              (item) =>\n                ![\"settings\", \"profile\", \"Settings\", \"Profile\"].includes(\n                  item.id,\n                ) &&\n                !item.label?.toLowerCase().includes(\"settings\") &&\n                !item.label?.toLowerCase().includes(\"profile\"),\n            )\n            .map((item, index) => {\n              const Icon = item.icon;\n              const isActive = currentPage === item.id;\n              const hasSubmenu = item.submenu && item.submenu.length > 0;\n              const isExpanded = expandedSubmenus.has(item.id);\n\n              return (\n                <div key={item.id} style={{ marginBottom: \"6px\" }}>\n                  <button\n                    onClick={() => {\n                      if (hasSubmenu && !isCompact) {\n                        toggleSubmenu(item.id);\n                      } else {\n                        onNavigate(item.id);\n                      }\n                    }}\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      borderRadius: \"14px\",\n                      padding: isCompact ? \"14px 12px\" : \"14px 18px\",\n                      fontSize: \"14px\",\n                      fontWeight: isActive ? \"600\" : \"500\",\n                      cursor: \"pointer\",\n                      transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                      justifyContent: isCompact ? \"center\" : \"flex-start\",\n                      border: isActive\n                        ? \"1px solid rgba(6, 255, 165, 0.3)\"\n                        : \"1px solid transparent\",\n                      background: isActive\n                        ? \"linear-gradient(135deg, rgba(6, 255, 165, 0.95), rgba(0, 255, 136, 0.9))\"\n                        : \"rgba(255, 255, 255, 0.03)\",\n                      color: isActive ? \"#000\" : \"#e2e8f0\",\n                      backdropFilter: \"blur(20px) saturate(1.8)\",\n                      position: \"relative\",\n                      overflow: \"hidden\",\n                      boxShadow: isActive\n                        ? \"0 8px 32px rgba(6, 255, 165, 0.25), 0 2px 8px rgba(0, 0, 0, 0.1)\"\n                        : \"0 2px 8px rgba(0, 0, 0, 0.05)\",\n                    }}\n                    onMouseEnter={(e) => {\n                      if (!isActive) {\n                        e.currentTarget.style.background =\n                          \"rgba(255, 255, 255, 0.08)\";\n                        e.currentTarget.style.transform = \"translateY(-1px)\";\n                        e.currentTarget.style.boxShadow =\n                          \"0 4px 16px rgba(0, 0, 0, 0.1)\";\n                      }\n                    }}\n                    onMouseLeave={(e) => {\n                      if (!isActive) {\n                        e.currentTarget.style.background =\n                          \"rgba(255, 255, 255, 0.03)\";\n                        e.currentTarget.style.transform = \"translateY(0)\";\n                        e.currentTarget.style.boxShadow =\n                          \"0 2px 8px rgba(0, 0, 0, 0.05)\";\n                      }\n                    }}\n                  >\n                    <span\n                      style={{\n                        fontSize: \"18px\",\n                        color: isActive ? \"#000\" : \"#ffffff\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        minWidth: \"18px\",\n                      }}\n                    >\n                      {item.icon}\n                    </span>\n                    {!isCompact && (\n                      <div\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          flex: 1,\n                          marginLeft: \"14px\",\n                        }}\n                      >\n                        <span\n                          style={{\n                            flex: 1,\n                            textAlign: \"left\",\n                            letterSpacing: \"-0.01em\",\n                          }}\n                        >\n                          {item.label}\n                        </span>\n                        {item.badge && (\n                          <span\n                            style={{\n                              background: isActive\n                                ? \"rgba(0, 0, 0, 0.15)\"\n                                : \"#06ffa5\",\n                              color: isActive ? \"#000\" : \"#000\",\n                              borderRadius: \"12px\",\n                              padding: \"4px 8px\",\n                              fontSize: \"11px\",\n                              fontWeight: \"700\",\n                              marginLeft: \"8px\",\n                            }}\n                          >\n                            {item.badge}\n                          </span>\n                        )}\n                        {hasSubmenu && (\n                          <ChevronRight\n                            size={16}\n                            style={{\n                              marginLeft: \"8px\",\n                              transform: isExpanded\n                                ? \"rotate(90deg)\"\n                                : \"rotate(0deg)\",\n                              transition: \"transform 0.3s ease\",\n                              color: isActive ? \"#000\" : \"#94a3b8\",\n                            }}\n                          />\n                        )}\n                      </div>\n                    )}\n                  </button>\n\n                  {/* Submenu */}\n                  {hasSubmenu && isExpanded && !isCompact && (\n                    <div style={{ marginLeft: \"16px\", marginTop: \"4px\" }}>\n                      {item.submenu!.map((subItem) => {\n                        const SubIcon = subItem.icon;\n                        return (\n                          <MegaButton\n                            key={subItem.id}\n                            variant=\"secondary\"\n                            onClick={() => onNavigate(subItem.id)}\n                            icon={\n                              SubIcon ? (\n                                <span style={{ fontSize: \"14px\" }}>\n                                  {SubIcon}\n                                </span>\n                              ) : undefined\n                            }\n                            style={{\n                              marginBottom: \"2px\",\n                              fontSize: \"12px\",\n                              padding: \"8px 12px\",\n                            }}\n                          >\n                            {subItem.label}\n                          </MegaButton>\n                        );\n                      })}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n        </div>\n      </nav>\n\n      <div>\n        <div>\n          <div\n            style={{\n              fontWeight: \"400\",\n              marginBottom: \"6px\",\n              pointerEvents: \"auto\",\n            }}\n          />\n          <div\n            style={{\n              fontWeight: \"400\",\n              marginBottom: \"6px\",\n              pointerEvents: \"auto\",\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Settings and Profile buttons outside navigation */}\n      {!isCompact && (\n        <div style={{ padding: \"8px 16px 20px 16px\" }}>\n          <div\n            style={{\n              height: \"1px\",\n              background:\n                \"linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent)\",\n              marginBottom: \"16px\",\n            }}\n          />\n          <button\n            onClick={() => onNavigate(\"profile\")}\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              width: \"100%\",\n              borderRadius: \"14px\",\n              padding: \"14px 18px\",\n              fontSize: \"14px\",\n              fontWeight: \"500\",\n              marginBottom: \"8px\",\n              cursor: \"pointer\",\n              transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n              border: \"1px solid transparent\",\n              background: \"rgba(255, 255, 255, 0.03)\",\n              color: \"#e2e8f0\",\n              backdropFilter: \"blur(20px) saturate(1.8)\",\n              boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.05)\",\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.background = \"rgba(255, 255, 255, 0.08)\";\n              e.currentTarget.style.transform = \"translateY(-1px)\";\n              e.currentTarget.style.boxShadow = \"0 4px 16px rgba(0, 0, 0, 0.1)\";\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.background = \"rgba(255, 255, 255, 0.03)\";\n              e.currentTarget.style.transform = \"translateY(0)\";\n              e.currentTarget.style.boxShadow = \"0 2px 8px rgba(0, 0, 0, 0.05)\";\n            }}\n          >\n            <span\n              style={{\n                fontSize: \"18px\",\n                color: \"#ffffff\",\n                display: \"flex\",\n                alignItems: \"center\",\n                minWidth: \"18px\",\n              }}\n            >\n              ��\n            </span>\n            <span\n              style={{\n                marginLeft: \"14px\",\n                letterSpacing: \"-0.01em\",\n              }}\n            >\n              Profile\n            </span>\n          </button>\n          <button\n            onClick={() => onNavigate(\"settings\")}\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              width: \"100%\",\n              borderRadius: \"14px\",\n              padding: \"14px 18px\",\n              fontSize: \"14px\",\n              fontWeight: \"500\",\n              cursor: \"pointer\",\n              transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n              border: \"1px solid rgba(6, 255, 165, 0.3)\",\n              background:\n                \"linear-gradient(135deg, rgba(6, 255, 165, 0.95), rgba(0, 255, 136, 0.9))\",\n              color: \"#000\",\n              backdropFilter: \"blur(20px) saturate(1.8)\",\n              boxShadow:\n                \"0 8px 32px rgba(6, 255, 165, 0.25), 0 2px 8px rgba(0, 0, 0, 0.1)\",\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.transform = \"translateY(-1px)\";\n              e.currentTarget.style.boxShadow =\n                \"0 12px 48px rgba(6, 255, 165, 0.35), 0 4px 16px rgba(0, 0, 0, 0.15)\";\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.transform = \"translateY(0)\";\n              e.currentTarget.style.boxShadow =\n                \"0 8px 32px rgba(6, 255, 165, 0.25), 0 2px 8px rgba(0, 0, 0, 0.1)\";\n            }}\n          >\n            <span\n              style={{\n                fontSize: \"18px\",\n                color: \"#000\",\n                display: \"flex\",\n                alignItems: \"center\",\n                minWidth: \"18px\",\n              }}\n            >\n              ⚙️\n            </span>\n            <span\n              style={{\n                marginLeft: \"14px\",\n                letterSpacing: \"-0.01em\",\n              }}\n            >\n              Settings\n            </span>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// ============================================================================\n// MEGA HEADER (Consolidates CyberHeader, EliteSportsHeader, Navbar variants)\n// ============================================================================\nexport const MegaHeader: React.FC<{\n  title?: string;\n  subtitle?: string;\n  leftActions?: ReactNode;\n  rightActions?: ReactNode;\n  showSearch?: boolean;\n  onSearch?: (query: string) => void;\n  notifications?: number;\n  onNotificationsClick?: () => void;\n  user?: {\n    name: string;\n    avatar?: string;\n  };\n  onNavigate?: (pageId: string) => void;\n  className?: string;\n}> = ({\n  title,\n  subtitle,\n  leftActions,\n  rightActions,\n  showSearch = false,\n  onSearch,\n  notifications = 0,\n  onNotificationsClick,\n  user,\n  onNavigate,\n  className = \"\",\n}) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Use try-catch to handle any theme access errors\n  let theme, isDark, toggleDarkMode;\n  try {\n    const themeContext = useTheme();\n    theme = themeContext.theme;\n    isDark = themeContext.isDark;\n    toggleDarkMode = themeContext.toggleDarkMode;\n  } catch (error) {\n    console.warn(\"Theme context error in MegaHeader, using fallback:\", error);\n    theme = null;\n    isDark = false;\n    toggleDarkMode = () => console.warn(\"Theme toggle not available\");\n  }\n\n  // Comprehensive fallback theme\n  const defaultTheme = {\n    colors: {\n      surface: \"rgba(255, 255, 255, 0.8)\",\n      border: \"rgba(15, 23, 42, 0.1)\",\n      text: {\n        primary: \"#0f172a\",\n        secondary: \"#334155\",\n        muted: \"#64748b\",\n      },\n      primary: \"#06ffa5\",\n    },\n    effects: {\n      shadow: \"0 8px 32px rgba(15, 23, 42, 0.1)\",\n    },\n    gradients: {\n      primary: \"linear-gradient(135deg, #06ffa5, #00ff88)\",\n    },\n  };\n\n  // Ensure we always have a complete theme object\n  const safeTheme = theme?.colors ? theme : defaultTheme;\n\n  return (\n    <header\n      className={`mega-header ${className}`}\n      style={{\n        background: \"rgba(15, 23, 42, 0.95)\",\n        backdropFilter: \"blur(40px) saturate(180%)\",\n        border: \"1px solid rgba(255, 255, 255, 0.1)\",\n        borderBottom: \"1px solid rgba(255, 255, 255, 0.08)\",\n        padding: \"20px 32px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        minHeight: \"72px\",\n        boxShadow:\n          \"0 8px 32px rgba(0, 0, 0, 0.3), 0 0px 20px rgba(6, 255, 165, 0.2)\",\n        position: \"relative\",\n        zIndex: 1000,\n      }}\n    >\n      {/* Left Section */}\n      <div style={{ display: \"flex\", alignItems: \"center\", flex: 1 }}>\n        {leftActions}\n\n        {(title || subtitle) && (\n          <div style={{ marginLeft: leftActions ? \"20px\" : \"0\" }}>\n            {title && (\n              <div\n                style={{\n                  fontSize: \"24px\",\n                  marginBottom: \"4px\",\n                  color: \"#ffffff\",\n                  fontWeight: \"700\",\n                  lineHeight: \"1.2\",\n                  letterSpacing: \"-0.02em\",\n                }}\n              >\n                {title}\n              </div>\n            )}\n            {subtitle && (\n              <div\n                style={{\n                  fontSize: \"14px\",\n                  color: \"#94a3b8\",\n                  lineHeight: \"1.3\",\n                  fontWeight: \"500\",\n                  letterSpacing: \"-0.01em\",\n                }}\n              >\n                {subtitle}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Center Section - Search */}\n      {showSearch && (\n        <div style={{ flex: 1, maxWidth: \"480px\", margin: \"0 32px\" }}>\n          <div style={{ position: \"relative\" }}>\n            <Search\n              size={18}\n              style={{\n                position: \"absolute\",\n                left: \"16px\",\n                top: \"50%\",\n                transform: \"translateY(-50%)\",\n                color: \"#94a3b8\",\n                zIndex: 1,\n              }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Search anything...\"\n              value={searchQuery}\n              onChange={(e) => {\n                setSearchQuery(e.target.value);\n                onSearch?.(e.target.value);\n              }}\n              style={{\n                width: \"100%\",\n                padding: \"14px 20px 14px 48px\",\n                borderRadius: \"16px\",\n                border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n                backdropFilter: \"blur(20px) saturate(180%)\",\n                color: \"#ffffff\",\n                fontSize: \"15px\",\n                fontWeight: \"500\",\n                outline: \"none\",\n                transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                boxShadow: \"0 4px 16px rgba(0, 0, 0, 0.1)\",\n              }}\n              onFocus={(e) => {\n                e.target.style.borderColor = \"rgba(6, 255, 165, 0.3)\";\n                e.target.style.backgroundColor = \"rgba(255, 255, 255, 0.08)\";\n                e.target.style.boxShadow =\n                  \"0 8px 32px rgba(0, 0, 0, 0.2), 0 0 0 1px rgba(6, 255, 165, 0.2)\";\n              }}\n              onBlur={(e) => {\n                e.target.style.borderColor = \"rgba(255, 255, 255, 0.1)\";\n                e.target.style.backgroundColor = \"rgba(255, 255, 255, 0.05)\";\n                e.target.style.boxShadow = \"0 4px 16px rgba(0, 0, 0, 0.1)\";\n              }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Right Section */}\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"16px\" }}>\n        {/* Theme Toggle */}\n        <button\n          onClick={toggleDarkMode}\n          style={{\n            background: \"rgba(255, 255, 255, 0.05)\",\n            border: \"1px solid rgba(255, 255, 255, 0.1)\",\n            color: \"#ffffff\",\n            fontWeight: \"500\",\n            padding: \"12px\",\n            borderRadius: \"12px\",\n            cursor: \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"44px\",\n            height: \"44px\",\n            transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n            backdropFilter: \"blur(20px) saturate(180%)\",\n          }}\n          onMouseEnter={(e) => {\n            e.currentTarget.style.background = \"rgba(255, 255, 255, 0.08)\";\n            e.currentTarget.style.transform = \"translateY(-1px)\";\n            e.currentTarget.style.boxShadow = \"0 8px 24px rgba(0, 0, 0, 0.15)\";\n          }}\n          onMouseLeave={(e) => {\n            e.currentTarget.style.background = \"rgba(255, 255, 255, 0.05)\";\n            e.currentTarget.style.transform = \"translateY(0)\";\n            e.currentTarget.style.boxShadow = \"none\";\n          }}\n          title={`Switch to ${isDark ? \"Light\" : \"Dark\"} Mode`}\n        >\n          {isDark ? <Sun size={18} /> : <Moon size={18} />}\n        </button>\n\n        {/* Notifications */}\n        {onNotificationsClick && (\n          <div style={{ position: \"relative\" }}>\n            <button\n              onClick={onNotificationsClick}\n              style={{\n                background: \"rgba(6, 255, 165, 0.08)\",\n                border: \"1px solid rgba(6, 255, 165, 0.2)\",\n                color: \"#06ffa5\",\n                fontWeight: \"500\",\n                padding: \"12px\",\n                borderRadius: \"12px\",\n                cursor: \"pointer\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                width: \"44px\",\n                height: \"44px\",\n                transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                backdropFilter: \"blur(20px) saturate(180%)\",\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.background = \"rgba(6, 255, 165, 0.15)\";\n                e.currentTarget.style.transform = \"translateY(-1px)\";\n                e.currentTarget.style.boxShadow =\n                  \"0 8px 24px rgba(6, 255, 165, 0.2)\";\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.background = \"rgba(6, 255, 165, 0.08)\";\n                e.currentTarget.style.transform = \"translateY(0)\";\n                e.currentTarget.style.boxShadow = \"none\";\n              }}\n            >\n              <Bell size={18} />\n            </button>\n            {notifications > 0 && (\n              <span\n                style={{\n                  position: \"absolute\",\n                  top: \"2px\",\n                  right: \"2px\",\n                  background: \"linear-gradient(135deg, #06ffa5, #00ff88)\",\n                  color: \"#000\",\n                  borderRadius: \"50%\",\n                  width: \"20px\",\n                  height: \"20px\",\n                  fontSize: \"11px\",\n                  fontWeight: \"700\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  border: \"2px solid rgba(15, 23, 42, 0.95)\",\n                  boxShadow: \"0 2px 8px rgba(6, 255, 165, 0.4)\",\n                }}\n              >\n                {notifications > 9 ? \"9+\" : notifications}\n              </span>\n            )}\n          </div>\n        )}\n\n        {/* User Avatar with Dropdown */}\n        {user && (\n          <UserAvatarDropdown\n            user={user}\n            isDark={isDark}\n            onNavigate={onNavigate}\n          />\n        )}\n\n        {/* Custom Right Actions */}\n        {rightActions}\n\n        {/* Current Time */}\n        <div\n          style={{\n            fontSize: \"12px\",\n            color: safeTheme.colors?.text?.muted || \"#64748b\",\n            lineHeight: \"1.2\",\n          }}\n        >\n          {new Date().toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n          })}\n        </div>\n      </div>\n    </header>\n  );\n};\n\n// ============================================================================\n// MEGA APP SHELL (Complete layout wrapper)\n// ============================================================================\nexport const MegaAppShell: React.FC<{\n  children: ReactNode;\n  sidebar?: ReactNode;\n  header?: ReactNode;\n  footer?: ReactNode;\n  sidebarOpen?: boolean;\n  className?: string;\n}> = ({\n  children,\n  sidebar,\n  header,\n  footer,\n  sidebarOpen = true,\n  className = \"\",\n}) => {\n  // Use try-catch to handle any theme access errors\n  let safeTheme;\n  try {\n    const { theme } = useTheme();\n    safeTheme = theme;\n  } catch (error) {\n    console.warn(\"Theme context error, using fallback:\", error);\n    safeTheme = null;\n  }\n\n  // Comprehensive fallback theme with all required properties\n  const defaultTheme = {\n    colors: {\n      background:\n        \"linear-gradient(135deg, #f8fafc 0%, #e2e8f0 25%, #cbd5e1 50%, #e2e8f0 75%, #f8fafc 100%)\",\n      text: {\n        primary: \"#0f172a\",\n        secondary: \"#334155\",\n        muted: \"#64748b\",\n      },\n      primary: \"#06ffa5\",\n      secondary: \"#00ff88\",\n      surface: \"rgba(255, 255, 255, 0.8)\",\n      border: \"rgba(15, 23, 42, 0.1)\",\n    },\n    gradients: {\n      primary: \"linear-gradient(135deg, #06ffa5, #00ff88)\",\n    },\n    effects: {\n      shadow: \"0 8px 32px rgba(15, 23, 42, 0.1)\",\n    },\n  };\n\n  // Ensure we always have a complete theme object\n  const finalTheme = safeTheme?.colors ? safeTheme : defaultTheme;\n\n  return (\n    <div\n      className={`mega-app-shell ${className}`}\n      style={{\n        display: \"flex\",\n        minHeight: \"100vh\",\n        background:\n          finalTheme.colors?.background || defaultTheme.colors.background,\n        color:\n          finalTheme.colors?.text?.primary || defaultTheme.colors.text.primary,\n      }}\n    >\n      {/* Sidebar */}\n      {sidebar}\n\n      {/* Main Content Area */}\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          overflow: \"hidden\",\n        }}\n      >\n        {/* Header */}\n        {header}\n\n        {/* Main Content */}\n        <main\n          style={{\n            flex: 1,\n            overflow: \"auto\",\n            position: \"relative\",\n            background:\n              \"linear-gradient(135deg, rgba(15, 23, 42, 0.98) 0%, rgba(30, 41, 59, 0.95) 50%, rgba(15, 23, 42, 0.98) 100%)\",\n            padding: \"24px 32px 32px 32px\",\n          }}\n        >\n          <div\n            style={{\n              maxWidth: \"1400px\",\n              margin: \"0 auto\",\n              width: \"100%\",\n            }}\n          >\n            {children}\n          </div>\n        </main>\n\n        {/* Footer */}\n        {footer}\n      </div>\n    </div>\n  );\n};\n\nexport default {\n  MegaSidebar,\n  MegaHeader,\n  MegaAppShell,\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaPrizePicks.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaPrizePicks.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaUI.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\MegaUI.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mega\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ml\\MLModelCenter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ml\\MLModelCenter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ml\\MLModelCenter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ml\\MLModelDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ml\\MLModelDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ml\\MLModelDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ml\\UltraAdvancedMLDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ml\\UltraAdvancedMLDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ml\\UltraAdvancedMLDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mobile\\MobileOptimizedInterface.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mobile\\MobileOptimizedInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\mobile\\MobileOptimizedInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\AppShell.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\AppShell.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\AppShell.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\BetSlipSidebar.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\BetSlipSidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\BetSlipSidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\BettingAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\BettingAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\BettingAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Dashboard.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Dashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\ESPNHeadlinesTicker.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\ESPNHeadlinesTicker.js","messages":[{"ruleId":null,"message":"Unused eslint-disable directive (no problems were reported).","line":77,"column":9,"severity":1,"nodeType":null,"fix":{"range":[3129,3156],"text":" "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useWebSocket } from '../../hooks/useWebSocket';\nconst getSentimentBadge = (sentiment) => {\n    // Simple badge: green if positive, red if negative, gray if neutral/undefined\n    const avg = sentiment &&\n        [sentiment.twitter, sentiment.reddit, sentiment.news]\n            .filter(v => typeof v === 'number')\n            .reduce((a, b) => a + (b || 0), 0) /\n            ([sentiment.twitter, sentiment.reddit, sentiment.news].filter(v => typeof v === 'number')\n                .length || 1);\n    let color = 'bg-gray-300 text-gray-700';\n    let icon = '−';\n    if (avg > 0.2) {\n        color = 'bg-green-200 text-green-700';\n        icon = '▲';\n    }\n    else if (avg < -0.2) {\n        color = 'bg-red-200 text-red-700';\n        icon = '▼';\n    }\n    return (_jsxs(\"span\", { className: `ml-2 px-2 py-1 rounded-full text-xs font-bold ${color}`, children: [icon, \" \", (avg * 100).toFixed(0), \"%\"] }));\n};\nconst ESPNHeadlinesTicker = () => {\n    const [headlines, setHeadlines] = useState([]);\n    const [playerSentiments, setPlayerSentiments] = useState({});\n    const [paused, setPaused] = useState(false);\n    const tickerRef = useRef(null);\n    // WebSocket connection for ESPN feed\n    useWebSocket({\n        url: 'ws://localhost:3001/espn-feed',\n        onMessage: msg => {\n            // Assume msg.data is a Headline or array of Headline\n            let newHeadlines = [];\n            if (Array.isArray(msg.data)) {\n                newHeadlines = msg.data;\n            }\n            else if (msg.data && typeof msg.data === 'object') {\n                newHeadlines = [msg.data];\n            }\n            setHeadlines(prev => {\n                // Merge, deduplicate by headline+timestamp\n                const all = [...newHeadlines, ...prev];\n                const seen = new Set();\n                return all.filter(h => {\n                    const key = h.headline + h.timestamp;\n                    if (seen.has(key))\n                        return false;\n                    seen.add(key);\n                    return true;\n                });\n            });\n        },\n    });\n    // Fetch sentiment for each related player\n    useEffect(() => {\n        const fetchSentiment = async (playerId) => {\n            try {\n                const res = await fetch(`/api/sentiment/${playerId}`);\n                if (!res.ok)\n                    return;\n                const data = await res.json();\n                setPlayerSentiments(prev => ({ ...prev, [playerId]: data }));\n            }\n            catch { }\n        };\n        const playerIds = headlines.flatMap(h => h.relatedPlayers.map(p => p.id));\n        Array.from(new Set(playerIds)).forEach(id => {\n            if (!playerSentiments[id])\n                fetchSentiment(id);\n        });\n        // Optionally, poll every 30s for live update\n        const interval = setInterval(() => {\n            Array.from(new Set(playerIds)).forEach(fetchSentiment);\n        }, 30000);\n        return () => clearInterval(interval);\n        // eslint-disable-next-line\n    }, [headlines]);\n    // Auto-scroll logic\n    useEffect(() => {\n        if (paused || !tickerRef.current)\n            return;\n        const ticker = tickerRef.current;\n        let frame;\n        let start = null;\n        const scrollWidth = ticker.scrollWidth;\n        const clientWidth = ticker.clientWidth;\n        const maxScroll = scrollWidth - clientWidth;\n        const speed = 40; // px/sec\n        function step(ts) {\n            if (start === null)\n                start = ts;\n            const elapsed = ts - start;\n            const px = ((elapsed / 1000) * speed) % (maxScroll + 100);\n            ticker.scrollLeft = px;\n            frame = requestAnimationFrame(step);\n        }\n        frame = requestAnimationFrame(step);\n        return () => cancelAnimationFrame(frame);\n    }, [paused, headlines]);\n    if (!headlines.length) {\n        return (_jsx(\"div\", { className: \"glass rounded-2xl px-4 py-2 text-gray-500 animate-pulse-soft\", children: \"Loading ESPN headlines...\" }));\n    }\n    return (_jsxs(\"div\", { ref: tickerRef, className: \"news-ticker glass rounded-2xl px-4 py-2 overflow-x-auto whitespace-nowrap cursor-pointer relative\", style: { transition: 'background 0.2s' }, onMouseEnter: () => setPaused(true), onMouseLeave: () => setPaused(false), children: [_jsx(\"div\", { className: \"inline-flex items-center gap-8 news-ticker-content\", children: headlines.map((h, i) => (_jsxs(\"span\", { className: \"flex items-center gap-2\", children: [_jsx(\"a\", { className: \"hover:underline text-blue-700 dark:text-blue-300 font-semibold\", href: h.link || '#', rel: \"noopener noreferrer\", target: \"_blank\", title: new Date(h.timestamp).toLocaleString(), children: h.headline }), h.relatedPlayers.map(p => (_jsxs(\"span\", { className: \"ml-1\", children: [_jsx(\"span\", { className: \"text-xs text-gray-500\", children: p.name }), getSentimentBadge(playerSentiments[p.id] || {})] }, p.id)))] }, h.headline + h.timestamp + i))) }), paused && _jsx(\"div\", { className: \"absolute inset-0 bg-black bg-opacity-10 pointer-events-none\" })] }));\n};\nexport default React.memo(ESPNHeadlinesTicker);\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\ESPNHeadlinesTicker.tsx","messages":[{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":15,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":17,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2734,2734],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'playerSentiments'. Either include it or remove the dependency array.","line":99,"column":6,"nodeType":"ArrayExpression","endLine":99,"endColumn":17,"suggestions":[{"desc":"Update the dependencies array to be: [headlines, playerSentiments]","fix":{"range":[3181,3192],"text":"[headlines, playerSentiments]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useRef, useState } from 'react';\nimport { useApiRequest } from '../../hooks/useApiRequest';\nimport { useWebSocket } from '../../hooks/useWebSocket';\n\ninterface Headline {\n  headline: string;\n  timestamp: number;\n  link?: string;\n  relatedPlayers: { id: string; name: string }[];\n  sentiment: {\n    twitter?: number;\n    reddit?: number;\n    news?: number;\n  };\n}\n\ninterface PlayerSentiment {\n  twitter?: number;\n  reddit?: number;\n  news?: number;\n}\n\nconst getSentimentBadge = (sentiment: PlayerSentiment) => {\n  // Simple badge: green if positive, red if negative, gray if neutral/undefined\n  const avg =\n    sentiment &&\n    [sentiment.twitter, sentiment.reddit, sentiment.news]\n      .filter(v => typeof v === 'number')\n      .reduce((a, b) => a + (b || 0), 0) /\n      ([sentiment.twitter, sentiment.reddit, sentiment.news].filter(v => typeof v === 'number')\n        .length || 1);\n  let color = 'bg-gray-300 text-gray-700';\n  let icon = '−';\n  if (avg > 0.2) {\n    color = 'bg-green-200 text-green-700';\n    icon = '▲';\n  } else if (avg < -0.2) {\n    color = 'bg-red-200 text-red-700';\n    icon = '▼';\n  }\n  return (\n    <span className={`ml-2 px-2 py-1 rounded-full text-xs font-bold ${color}`}>\n      {icon} {(avg * 100).toFixed(0)}%\n    </span>\n  );\n};\n\nconst ESPNHeadlinesTicker: React.FC = () => {\n  const [headlines, setHeadlines] = useState<Headline[]>([]);\n  const [playerSentiments, setPlayerSentiments] = useState<Record<string, PlayerSentiment>>({});\n  const [paused, setPaused] = useState(false);\n  const tickerRef = useRef<HTMLDivElement>(null);\n\n  // WebSocket connection for ESPN feed\n  useWebSocket({\n    url: 'ws://localhost:3001/espn-feed',\n    onMessage: msg => {\n      // Assume msg.data is a Headline or array of Headline\n      let newHeadlines: Headline[] = [];\n      if (Array.isArray(msg.data)) {\n        newHeadlines = msg.data as Headline[];\n      } else if (msg.data && typeof msg.data === 'object') {\n        newHeadlines = [msg.data as Headline];\n      }\n      setHeadlines(prev => {\n        // Merge, deduplicate by headline+timestamp\n        const all = [...newHeadlines, ...prev];\n        const seen = new Set();\n        return all.filter(h => {\n          const key = h.headline + h.timestamp;\n          if (seen.has(key)) return false;\n          seen.add(key);\n          return true;\n        });\n      });\n    },\n  });\n\n  // Fetch sentiment for each related player\n  useEffect(() => {\n    const fetchSentiment = async (playerId: string) => {\n      try {\n        const res = await fetch(`/api/sentiment/${playerId}`);\n        if (!res.ok) return;\n        const data = await res.json();\n        setPlayerSentiments(prev => ({ ...prev, [playerId]: data }));\n      } catch {}\n    };\n    const playerIds = headlines.flatMap(h => h.relatedPlayers.map(p => p.id));\n    Array.from(new Set(playerIds)).forEach(id => {\n      if (!playerSentiments[id]) fetchSentiment(id);\n    });\n    // Optionally, poll every 30s for live update\n    const interval = setInterval(() => {\n      Array.from(new Set(playerIds)).forEach(fetchSentiment);\n    }, 30000);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line\n  }, [headlines]);\n\n  // Auto-scroll logic\n  useEffect(() => {\n    if (paused || !tickerRef.current) return;\n    const ticker = tickerRef.current;\n    let frame: number;\n    let start: number | null = null;\n    const scrollWidth = ticker.scrollWidth;\n    const clientWidth = ticker.clientWidth;\n    const maxScroll = scrollWidth - clientWidth;\n    const speed = 40; // px/sec\n    function step(ts: number) {\n      if (start === null) start = ts;\n      const elapsed = ts - start;\n      const px = ((elapsed / 1000) * speed) % (maxScroll + 100);\n      ticker.scrollLeft = px;\n      frame = requestAnimationFrame(step);\n    }\n    frame = requestAnimationFrame(step);\n    return () => cancelAnimationFrame(frame);\n  }, [paused, headlines]);\n\n  if (!headlines.length) {\n    return (\n      <div className=\"glass rounded-2xl px-4 py-2 text-gray-500 animate-pulse-soft\">\n        Loading ESPN headlines...\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={tickerRef}\n      className=\"news-ticker glass rounded-2xl px-4 py-2 overflow-x-auto whitespace-nowrap cursor-pointer relative\"\n      style={{ transition: 'background 0.2s' }}\n      onMouseEnter={() => setPaused(true)}\n      onMouseLeave={() => setPaused(false)}\n    >\n      <div className=\"inline-flex items-center gap-8 news-ticker-content\">\n        {headlines.map((h, i) => (\n          <span key={h.headline + h.timestamp + i} className=\"flex items-center gap-2\">\n            <a\n              className=\"hover:underline text-blue-700 dark:text-blue-300 font-semibold\"\n              href={h.link || '#'}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title={new Date(h.timestamp).toLocaleString()}\n            >\n              {h.headline}\n            </a>\n            {/* Show sentiment badges for each related player */}\n            {h.relatedPlayers.map(p => (\n              <span key={p.id} className=\"ml-1\">\n                <span className=\"text-xs text-gray-500\">{p.name}</span>\n                {getSentimentBadge(playerSentiments[p.id] || {})}\n              </span>\n            ))}\n          </span>\n        ))}\n      </div>\n      {/* Pause overlay */}\n      {paused && <div className=\"absolute inset-0 bg-black bg-opacity-10 pointer-events-none\" />}\n    </div>\n  );\n};\n\nexport default React.memo(ESPNHeadlinesTicker);\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\EntryTracking.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\EntryTracking.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\EntryTracking.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\ErrorBoundary.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\ErrorBoundary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\ErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Header.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Header.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Header.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Modals.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Modals.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Modals.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\MoneyMaker.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\MoneyMaker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\MoneyMaker.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'generateParlays'. Either include it or remove the dependency array.","line":63,"column":6,"nodeType":"ArrayExpression","endLine":63,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [generateParlays]","fix":{"range":[1885,1887],"text":"[generateParlays]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport useStore from '@/store/useStore';\nimport { BettingDecision, Projection, BetResult } from '@/types/core';\nimport { PrizePicksAPI } from '../../services/PrizePicksAPI';\nimport { UnifiedBettingSystem } from '../../core/UnifiedBettingSystem';\nimport SHAPVisualization from '../shared/SHAPVisualization';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { useRiskProfile } from '@/hooks/useRiskProfile';\n\ninterface ParlayCard {\n  id: string;\n  projections: Projection[];\n  confidence: number;\n  expectedValue: number;\n  potentialPayout: number;\n  analysis: {\n    historicalTrends: string[];\n    marketSignals: string[];\n    riskFactors: string[];\n  };\n}\n\nconst defaultBettingContext = {\n  bankroll: 1000,\n  maxRiskPerBet: 100,\n  minOdds: 1.1,\n  maxOdds: 1000,\n  odds: 1.5,\n  metrics: {\n    totalBets: 0,\n    winRate: 0,\n    roi: 0,\n    profitLoss: 0,\n    clvAverage: 0,\n    edgeRetention: 0,\n    kellyMultiplier: 0,\n    marketEfficiencyScore: 0,\n    averageOdds: 0,\n    maxDrawdown: 0,\n    sharpeRatio: 0,\n    betterThanExpected: 0,\n  },\n  recentBets: [],\n  timestamp: Date.now(),\n};\n\nconst MoneyMaker: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [parlays, setParlays] = useState<ParlayCard[]>([]);\n  const [selectedParlay, setSelectedParlay] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const bettingSystem = UnifiedBettingSystem.getInstance();\n  const prizePicksAPI = PrizePicksAPI.getInstance();\n  const addBet = useStore(state => state.addBet);\n  const { riskProfile, validateBet } = useRiskProfile();\n\n  useEffect(() => {\n    generateParlays();\n  }, []);\n\n  const generateParlays = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Fetch available projections\n      const projections = await prizePicksAPI.getProjections({\n        limit: 100,\n      });\n\n      // Group projections by sport and analyze each group\n      const sportGroups = groupProjectionsBySport(projections);\n      const parlayCards: ParlayCard[] = [];\n\n      for (const [sport, sportProjections] of Object.entries(sportGroups)) {\n        // Analyze each projection in the sport group\n        const decisions = await Promise.all(\n          sportProjections.map(() => bettingSystem.analyzeBettingOpportunity(defaultBettingContext))\n        );\n\n        // Find high confidence projections\n        const highConfidenceDecisions = decisions.filter(d => d.confidence > 0.7);\n\n        // Generate parlays from high confidence projections\n        const sportParlays = generateParlaysFromDecisions(\n          highConfidenceDecisions,\n          sportProjections\n        );\n\n        parlayCards.push(...sportParlays);\n      }\n\n      // Sort parlays by expected value\n      const sortedParlays = parlayCards.sort((a, b) => b.expectedValue - a.expectedValue);\n      setParlays(sortedParlays.slice(0, 10)); // Show top 10 parlays\n    } catch (err) {\n      setError('Failed to generate parlays. Please try again later.');\n      console.error('Error generating parlays:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const groupProjectionsBySport = (projections: Projection[]): Record<string, Projection[]> => {\n    return projections.reduce(\n      (acc, proj) => {\n        if (!acc[proj.sport]) {\n          acc[proj.sport] = [];\n        }\n        acc[proj.sport].push(proj);\n        return acc;\n      },\n      {} as Record<string, Projection[]>\n    );\n  };\n\n  const generateParlaysFromDecisions = (\n    decisions: BettingDecision[],\n    projections: Projection[]\n  ): ParlayCard[] => {\n    const parlays: ParlayCard[] = [];\n    const maxParlaySize = 3;\n\n    // Generate combinations of 2-3 legs\n    for (let size = 2; size <= maxParlaySize; size++) {\n      const combinations = generateCombinations(decisions, size);\n\n      for (const combo of combinations) {\n        const projectionSet = combo\n          .map(decision => projections.find(p => p.playerId === decision.metadata.playerId))\n          .filter((p): p is Projection => Boolean(p));\n        if (projectionSet.length !== combo.length) continue;\n\n        // Calculate combined metrics\n        const combinedConfidence = combo.reduce((acc, d) => acc * d.confidence, 1);\n        const combinedEV =\n          combo.reduce(\n            (acc, d) => acc + (d.metadata && d.metadata.riskScore ? d.metadata.riskScore : 0),\n            0\n          ) / combo.length;\n\n        // Calculate potential payout\n        const odds = combo.length === 2 ? 3 : 6; // Simplified odds calculation\n        const potentialPayout = 100 * odds; // Assuming $100 stake\n\n        // Combine analysis factors\n        const historicalTrends = Array.from(\n          new Set(combo.flatMap(d => d.analysis.historicalTrends))\n        );\n        const marketSignals = Array.from(new Set(combo.flatMap(d => d.analysis.marketSignals)));\n        const riskFactors = Array.from(new Set(combo.flatMap(d => d.analysis.riskFactors)));\n\n        parlays.push({\n          id: `parlay_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          projections: projectionSet,\n          confidence: combinedConfidence,\n          expectedValue: combinedEV,\n          potentialPayout,\n          analysis: {\n            historicalTrends,\n            marketSignals,\n            riskFactors,\n          },\n        });\n      }\n    }\n\n    return parlays;\n  };\n\n  const generateCombinations = <T,>(arr: T[], size: number): T[][] => {\n    const result: T[][] = [];\n\n    function combine(current: T[], start: number) {\n      if (current.length === size) {\n        result.push([...current]);\n        return;\n      }\n\n      for (let i = start; i < arr.length; i++) {\n        current.push(arr[i]);\n        combine(current, i + 1);\n        current.pop();\n      }\n    }\n\n    combine([], 0);\n    return result;\n  };\n\n  const placeBet = (parlay: ParlayCard) => {\n    // Validate bet against risk profile\n    const betData = {\n      stake: 100,\n      confidence: parlay.confidence,\n      kellyFraction: 0.1, // Example, replace with actual calculation if available\n      sport: parlay.projections[0]?.sport || '',\n      market: parlay.projections[0]?.propType || '',\n      eventId: parlay.projections[0]?.eventId || '',\n    };\n    const validation = validateBet(betData);\n    if (!validation.isValid) {\n      setError('Bet does not meet risk profile: ' + validation.errors.join(', '));\n      return;\n    }\n\n    // Create bet record\n    const bet = {\n      id: `bet_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      userId: 'current_user',\n      propId: parlay.projections.map(p => p.id).join('_'),\n      type: 'PARLAY',\n      line: 0,\n      odds: parlay.projections.length === 2 ? 3 : 6,\n      stake: 100,\n      result: 'pending' as BetResult,\n      payout: parlay.potentialPayout,\n      timestamp: Date.now(),\n      metadata: {\n        confidence: parlay.confidence,\n        expectedValue: parlay.expectedValue,\n        predictionFactors: [\n          ...(parlay.analysis.historicalTrends || []),\n          ...(parlay.analysis.marketSignals || []),\n        ],\n      },\n    };\n\n    // Add bet to store\n    addBet(bet);\n\n    // Clear selection\n    setSelectedParlay(null);\n  };\n\n  if (error) {\n    return (\n      <div className=\"p-6\">\n        <div\n          className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\n          role=\"alert\"\n        >\n          <strong className=\"font-bold\">Error!</strong>\n          <span className=\"block sm:inline\"> {error}</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n          AI-Powered Parlay Suggestions\n        </h2>\n        <button\n          className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 disabled:opacity-50\"\n          disabled={loading}\n          onClick={generateParlays}\n        >\n          {loading ? 'Generating...' : 'Generate New Parlays'}\n        </button>\n      </div>\n\n      {loading ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {parlays.map(parlay => (\n            <div\n              key={parlay.id}\n              className={`bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden cursor-pointer transition-transform duration-200 ${\n                selectedParlay === parlay.id ? 'ring-2 ring-indigo-500 transform scale-105' : ''\n              }`}\n              onClick={() => setSelectedParlay(parlay.id)}\n            >\n              {/* Parlay Header */}\n              <div className=\"bg-indigo-600 px-4 py-2\">\n                <h3 className=\"text-lg font-semibold text-white\">\n                  {parlay.projections.length}-Leg Parlay\n                </h3>\n              </div>\n\n              {/* Projections */}\n              <div className=\"p-4 space-y-4\">\n                {parlay.projections.map(proj => (\n                  <div key={proj.id} className=\"flex justify-between items-center\">\n                    <div>\n                      <p className=\"font-medium text-gray-900 dark:text-white\">{proj.playerName}</p>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {proj.propType} {proj.line}\n                      </p>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-medium text-gray-900 dark:text-white\">\n                        {proj.team} vs {proj.opponent}\n                      </p>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {new Date(proj.gameTime).toLocaleDateString()}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Metrics */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">Confidence</p>\n                    <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                      {(parlay.confidence * 100).toFixed(1)}%\n                    </p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">Expected Value</p>\n                    <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                      {(parlay.expectedValue * 100).toFixed(1)}%\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Analysis */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">Analysis</p>\n                <ul className=\"text-sm text-gray-500 dark:text-gray-400 space-y-1\">\n                  {parlay.analysis.historicalTrends.slice(0, 2).map((trend, i) => (\n                    <li key={i} className=\"flex items-center\">\n                      <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                      {trend}\n                    </li>\n                  ))}\n                  {parlay.analysis.marketSignals.slice(0, 2).map((signal, i) => (\n                    <li key={i} className=\"flex items-center\">\n                      <span className=\"w-2 h-2 bg-blue-500 rounded-full mr-2\"></span>\n                      {signal}\n                    </li>\n                  ))}\n                </ul>\n                {/* SHAP/Explanation Accordion */}\n                <Accordion sx={{ mt: 2 }}>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      Model Explanation (SHAP)\n                    </span>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <SHAPVisualization\n                      explanations={[\n                        ...parlay.analysis.historicalTrends.map((t, i) => ({\n                          feature: t,\n                          value: 1,\n                          impact: 1,\n                          direction: 'positive' as const,\n                        })),\n                        ...parlay.analysis.marketSignals.map((t, i) => ({\n                          feature: t,\n                          value: 0.7,\n                          impact: 0.7,\n                          direction: 'positive' as const,\n                        })),\n                        ...parlay.analysis.riskFactors.map((t, i) => ({\n                          feature: t,\n                          value: -0.5,\n                          impact: -0.5,\n                          direction: 'negative' as const,\n                        })),\n                      ]}\n                    />\n                    <div className=\"mt-2\">\n                      <span className=\"font-medium\">Rationale:</span>\n                      <ul className=\"list-disc ml-6\">\n                        {parlay.analysis.historicalTrends.map((t, i) => (\n                          <li key={i} className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {t}\n                          </li>\n                        ))}\n                        {parlay.analysis.marketSignals.map((t, i) => (\n                          <li key={i} className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {t}\n                          </li>\n                        ))}\n                        {parlay.analysis.riskFactors.map((t, i) => (\n                          <li key={i} className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {t}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </AccordionDetails>\n                </Accordion>\n              </div>\n\n              {/* Action Button */}\n              {selectedParlay === parlay.id && (\n                <div className=\"p-4 bg-gray-50 dark:bg-gray-900\">\n                  <button\n                    className=\"w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n                    onClick={() => placeBet(parlay)}\n                  >\n                    Place $100 Bet (Potential: ${parlay.potentialPayout})\n                  </button>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(MoneyMaker);\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\PropCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\PropCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\PropCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\PropCards.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\PropCards.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\PropCards.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Settings.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Settings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Settings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Sidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Sidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\Sidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\StateProvider.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\StateProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\StateProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\ThemeProvider.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\ThemeProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\modern\\ThemeProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\money-maker\\UnifiedMoneyMaker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\money-maker\\UnifiedMoneyMaker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\money-maker\\UnifiedMoneyMaker.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'handleError' and 'store'. Either include them or remove the dependency array.","line":61,"column":6,"nodeType":"ArrayExpression","endLine":61,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [handleError, store]","fix":{"range":[1355,1357],"text":"[handleError, store]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","line":66,"column":6,"nodeType":"ArrayExpression","endLine":66,"endColumn":53,"suggestions":[{"desc":"Update the dependencies array to be: [store]","fix":{"range":[1477,1524],"text":"[store]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":66,"column":7,"nodeType":"CallExpression","endLine":66,"endColumn":30},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","line":66,"column":32,"nodeType":"CallExpression","endLine":66,"endColumn":52},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'store'. Either include it or remove the dependency array.","line":74,"column":6,"nodeType":"ArrayExpression","endLine":74,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [store]","fix":{"range":[1747,1749],"text":"[store]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has missing dependencies: 'handleError' and 'store'. Either include them or remove the dependency array.","line":91,"column":5,"nodeType":"ArrayExpression","endLine":91,"endColumn":25,"suggestions":[{"desc":"Update the dependencies array to be: [handleError, store]","fix":{"range":[2260,2280],"text":"[handleError, store]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has missing dependencies: 'handleError' and 'store'. Either include them or remove the dependency array.","line":114,"column":6,"nodeType":"ArrayExpression","endLine":114,"endColumn":27,"suggestions":[{"desc":"Update the dependencies array to be: [handleError, store]","fix":{"range":[2965,2986],"text":"[handleError, store]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useCallback, useState } from \"react\";\nimport { useMoneyMakerStore } from \"@/stores/moneyMakerStore\";\nimport {\n  MoneyMakerConfig,\n  MoneyMakerPrediction,\n  MoneyMakerPortfolio,\n  RiskLevel,\n} from \"@/types/money-maker\";\nimport {\n  Card,\n  Button,\n  Input,\n  Select,\n  Slider,\n  Spinner,\n  Toast,\n  Badge,\n  Modal,\n  Tabs,\n  Tab,\n  Progress,\n} from \"../ui/UnifiedUI\";\n\nexport const UnifiedMoneyMaker: React.FC = () => {\n  const store = useMoneyMakerStore();\n  const {\n    config,\n    predictions,\n    portfolios,\n    metrics,\n    isLoading,\n    error,\n    lastUpdate,\n    filters,\n    sort,\n  } = store;\n\n  const [activeTab, setActiveTab] = useState<\n    \"config\" | \"predictions\" | \"portfolios\" | \"metrics\"\n  >(\"config\");\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastType, setToastType] = useState<\n    \"success\" | \"error\" | \"warning\" | \"info\"\n  >(\"info\");\n\n  // Load initial data\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        store.setLoading(true);\n        // Load initial data from your backend\n        // This is where you would integrate with your actual services\n        store.setLoading(false);\n      } catch (error) {\n        handleError(\"Failed to load initial data\", error);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Fetch predictions on mount and when filters/sort change\n  useEffect(() => {\n    store.fetchPredictions();\n  }, [JSON.stringify(filters), JSON.stringify(sort)]);\n\n  const handleError = useCallback((message: string, error: any) => {\n    store.setError(message);\n    setToastMessage(message);\n    setToastType(\"error\");\n    setShowToast(true);\n    console.error(message, error);\n  }, []);\n\n  const handleTabChange = useCallback((value: string) => {\n    setActiveTab(value as typeof activeTab);\n  }, []);\n\n  const handleConfigChange = useCallback(\n    (key: keyof MoneyMakerConfig, value: string | number) => {\n      try {\n        store.updateConfig({ [key]: value });\n        setToastMessage(\"Configuration updated successfully\");\n        setToastType(\"success\");\n        setShowToast(true);\n      } catch (error) {\n        handleError(\"Failed to update configuration\", error);\n      }\n    },\n    [store.updateConfig],\n  );\n\n  const handleInputChange = useCallback(\n    (key: keyof MoneyMakerConfig) => (value: string) => {\n      const numValue =\n        key === \"timeHorizon\" || key === \"investmentAmount\"\n          ? Number(value)\n          : value;\n      handleConfigChange(key, numValue);\n    },\n    [handleConfigChange],\n  );\n\n  const handleGeneratePortfolio = useCallback(async () => {\n    try {\n      store.setLoading(true);\n      // Generate portfolio based on current predictions and config\n      // This is where you would integrate with your portfolio generation logic\n      store.setLoading(false);\n    } catch (error) {\n      handleError(\"Failed to generate portfolio\", error);\n    }\n  }, [config, predictions]);\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n    }).format(amount);\n  };\n\n  const formatPercentage = (value: number) => {\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"percent\",\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1,\n    }).format(value / 100);\n  };\n\n  const handleShowDetails = useCallback((prediction: MoneyMakerPrediction) => {\n    // TODO: Implement details modal\n    console.log(\"Show details for prediction:\", prediction);\n  }, []);\n\n  const handlePlaceBet = useCallback((prediction: MoneyMakerPrediction) => {\n    // TODO: Implement bet placement\n    console.log(\"Place bet for prediction:\", prediction);\n  }, []);\n\n  const getBadgeVariant = (\n    riskLevel: RiskLevel,\n  ): \"success\" | \"warning\" | \"danger\" => {\n    switch (riskLevel) {\n      case \"low\":\n        return \"success\";\n      case \"medium\":\n        return \"warning\";\n      case \"high\":\n        return \"danger\";\n      default:\n        return \"warning\";\n    }\n  };\n\n  // Sorting/filtering handlers\n  const handleSortChange = (field: keyof MoneyMakerPrediction) => {\n    store.updateSort({\n      field,\n      direction: sort.direction === \"asc\" ? \"desc\" : \"asc\",\n    });\n  };\n  const handleFilterChange = (key: keyof typeof filters, value: any) => {\n    store.updateFilters({ [key]: value });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Spinner size=\"large\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex items-center justify-between mb-8\">\n          <h1 className=\"text-3xl font-bold\">Money Maker</h1>\n          <Badge variant=\"success\">Active</Badge>\n        </div>\n\n        {/* Navigation Tabs */}\n        <Tabs className=\"mb-8\" value={activeTab} onChange={handleTabChange}>\n          <Tab label=\"Configuration\" value=\"config\" />\n          <Tab label=\"Predictions\" value=\"predictions\" />\n          <Tab label=\"Portfolios\" value=\"portfolios\" />\n          <Tab label=\"Metrics\" value=\"metrics\" />\n        </Tabs>\n\n        {/* Configuration Tab */}\n        {activeTab === \"config\" && (\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-bold mb-4\">Configuration</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Investment Amount\n                </label>\n                <Input\n                  max=\"100000\"\n                  min=\"0\"\n                  type=\"number\"\n                  value={String(config.investmentAmount)}\n                  onChange={handleInputChange(\"investmentAmount\")}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Time Horizon (Hours)\n                </label>\n                <Input\n                  max=\"72\"\n                  min=\"1\"\n                  type=\"number\"\n                  value={String(config.timeHorizon)}\n                  onChange={handleInputChange(\"timeHorizon\")}\n                />\n              </div>\n            </div>\n          </Card>\n        )}\n\n        {/* Predictions Tab */}\n        {activeTab === \"predictions\" && (\n          <Card className=\"p-6\">\n            <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-4 gap-4\">\n              <div className=\"flex flex-wrap gap-2\">\n                <Select\n                  className=\"w-32\"\n                  options={[\n                    { value: \"\", label: \"All Risks\" },\n                    { value: \"low\", label: \"Low\" },\n                    { value: \"medium\", label: \"Medium\" },\n                    { value: \"high\", label: \"High\" },\n                  ]}\n                  value={filters.riskLevel || \"\"}\n                  onChange={(value) =>\n                    handleFilterChange(\"riskLevel\", value || undefined)\n                  }\n                />\n                <Select\n                  className=\"w-32\"\n                  options={[\n                    { value: \"\", label: \"All Models\" },\n                    // Optionally map over available models\n                  ]}\n                  value={filters.modelId || \"\"}\n                  onChange={(value) =>\n                    handleFilterChange(\"modelId\", value || undefined)\n                  }\n                />\n                <Select\n                  className=\"w-32\"\n                  options={[\n                    { value: \"confidence\", label: \"Confidence\" },\n                    { value: \"expectedValue\", label: \"Expected Value\" },\n                    { value: \"odds\", label: \"Odds\" },\n                    { value: \"timestamp\", label: \"Timestamp\" },\n                  ]}\n                  value={sort.field}\n                  onChange={(value) =>\n                    handleSortChange(value as keyof MoneyMakerPrediction)\n                  }\n                />\n              </div>\n            </div>\n            {isLoading ? (\n              <div className=\"flex items-center justify-center min-h-[200px]\">\n                <Spinner size=\"large\" />\n              </div>\n            ) : predictions.length === 0 ? (\n              <div className=\"text-center text-gray-500 py-8\">\n                No predictions available.\n              </div>\n            ) : (\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-4 py-2 text-left\">Label</th>\n                      <th className=\"px-4 py-2 text-left\">Confidence</th>\n                      <th className=\"px-4 py-2 text-left\">EV</th>\n                      <th className=\"px-4 py-2 text-left\">Model</th>\n                      <th className=\"px-4 py-2 text-left\">Timestamp</th>\n                      <th className=\"px-4 py-2 text-left\">Rationale</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {predictions.map((pred) => (\n                      <tr key={pred.eventId} className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-2 font-medium\">\n                          {pred.selection} ({pred.marketType})\n                        </td>\n                        <td className=\"px-4 py-2\">\n                          {(pred.confidence * 100).toFixed(1)}%\n                        </td>\n                        <td className=\"px-4 py-2\">\n                          {pred.expectedValue.toFixed(3)}\n                        </td>\n                        <td className=\"px-4 py-2\">\n                          {pred.metadata.modelVersion ||\n                            Object.keys(pred.modelContributions).join(\", \")}\n                        </td>\n                        <td className=\"px-4 py-2\">\n                          {new Date(pred.metadata.timestamp).toLocaleString()}\n                        </td>\n                        <td className=\"px-4 py-2\">\n                          {pred.explanation &&\n                          pred.explanation.decisionPath &&\n                          pred.explanation.decisionPath.length > 0 ? (\n                            <span>\n                              {pred.explanation.decisionPath.join(\" → \")}\n                            </span>\n                          ) : (\n                            <span className=\"text-gray-400\">—</span>\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card>\n        )}\n\n        {/* Portfolios Tab */}\n        {activeTab === \"portfolios\" && (\n          <Card className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-bold\">Active Portfolios</h2>\n              <Button variant=\"primary\" onClick={handleGeneratePortfolio}>\n                Generate New Portfolio\n              </Button>\n            </div>\n            <div className=\"space-y-4\">\n              {portfolios.map((portfolio) => (\n                <div key={portfolio.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <div>\n                      <h3 className=\"font-medium\">Portfolio {portfolio.id}</h3>\n                      <p className=\"text-sm text-gray-500\">\n                        {portfolio.legs.length} legs\n                      </p>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-medium\">\n                        Total Odds: {portfolio.totalOdds.toFixed(2)}\n                      </p>\n                      <p className=\"text-sm text-gray-500\">\n                        EV: {formatPercentage(portfolio.expectedValue)}\n                      </p>\n                    </div>\n                  </div>\n                  <Progress className=\"mt-2\" value={portfolio.confidence} />\n                </div>\n              ))}\n            </div>\n          </Card>\n        )}\n\n        {/* Metrics Tab */}\n        {activeTab === \"metrics\" && (\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-bold mb-4\">Performance Metrics</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <div className=\"border rounded-lg p-4\">\n                <h3 className=\"font-medium mb-2\">Overall Performance</h3>\n                <p className=\"text-2xl font-bold\">\n                  {formatCurrency(metrics.totalProfit)}\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  ROI: {formatPercentage(metrics.roi)}\n                </p>\n              </div>\n\n              <div className=\"border rounded-lg p-4\">\n                <h3 className=\"font-medium mb-2\">Success Rate</h3>\n                <p className=\"text-2xl font-bold\">\n                  {formatPercentage(metrics.successRate)}\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  {metrics.winningBets} / {metrics.totalBets} bets\n                </p>\n              </div>\n\n              <div className=\"border rounded-lg p-4\">\n                <h3 className=\"font-medium mb-2\">Risk Metrics</h3>\n                <p className=\"text-2xl font-bold\">\n                  {metrics.sharpeRatio.toFixed(2)}\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  Max Drawdown: {formatPercentage(metrics.maxDrawdown)}\n                </p>\n              </div>\n            </div>\n          </Card>\n        )}\n\n        {/* Toast Notifications */}\n        {showToast && (\n          <Toast\n            message={toastMessage}\n            type={toastType}\n            onClose={() => setShowToast(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UnifiedMoneyMaker;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceAlert.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceAlert.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceAlert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceAlertContainer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceAlertContainer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceAlertContainer.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook React.useEffect has a missing dependency: 'handleDismiss'. Either include it or remove the dependency array.","line":47,"column":6,"nodeType":"ArrayExpression","endLine":47,"endColumn":52,"suggestions":[{"desc":"Update the dependencies array to be: [visibleAlerts, autoDismiss, autoDismissDelay, handleDismiss]","fix":{"range":[1267,1313],"text":"[visibleAlerts, autoDismiss, autoDismissDelay, handleDismiss]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { AnimatePresence } from 'framer-motion';\nimport PerformanceAlert, { PerformanceAlert as AlertType } from './PerformanceAlert';\n\ninterface PerformanceAlertContainerProps {\n  alerts: AlertType[];\n  onDismiss?: (id: string) => void;\n  onAcknowledge?: (id: string) => void;\n  maxAlerts?: number;\n  autoDismiss?: boolean;\n  autoDismissDelay?: number;\n}\n\nconst PerformanceAlertContainer: React.FC<PerformanceAlertContainerProps> = ({\n  alerts,\n  onDismiss,\n  onAcknowledge,\n  maxAlerts = 5,\n  autoDismiss = true,\n  autoDismissDelay = 5000,\n}) => {\n  const [dismissedAlerts, setDismissedAlerts] = useState<Set<string>>(new Set());\n\n  const handleDismiss = (id: string) => {\n    setDismissedAlerts(prev => new Set([...prev, id]));\n    onDismiss?.(id);\n  };\n\n  const handleAcknowledge = (id: string) => {\n    onAcknowledge?.(id);\n  };\n\n  const visibleAlerts = alerts.filter(alert => !dismissedAlerts.has(alert.id)).slice(0, maxAlerts);\n\n  React.useEffect(() => {\n    if (!autoDismiss) return;\n\n    const timers = visibleAlerts.map(alert => {\n      return setTimeout(() => {\n        handleDismiss(alert.id);\n      }, autoDismissDelay);\n    });\n\n    return () => {\n      timers.forEach(timer => clearTimeout(timer));\n    };\n  }, [visibleAlerts, autoDismiss, autoDismissDelay]);\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-4 w-96\">\n      <AnimatePresence>\n        {visibleAlerts.map(alert => (\n          <PerformanceAlert\n            key={alert.id}\n            alert={alert}\n            onAcknowledge={handleAcknowledge}\n            onDismiss={handleDismiss}\n          />\n        ))}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default React.memo(PerformanceAlertContainer);\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceChart.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceChart.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceChart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceDashboard.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\monitoring\\PerformanceDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\Navbar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\Navbar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\Navbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\Sidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\Sidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\Sidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\ThemeToggle.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\ThemeToggle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\ThemeToggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\UnifiedNavigation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\UnifiedNavigation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\navigation\\UnifiedNavigation.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'loadUserData' and 'setupNotificationListener'. Either include them or remove the dependency array.","line":79,"column":6,"nodeType":"ArrayExpression","endLine":79,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [loadUserData, setupNotificationListener]","fix":{"range":[2324,2326],"text":"[loadUserData, setupNotificationListener]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { UnifiedServiceRegistry } from '../../services/unified/UnifiedServiceRegistry';\nimport { UnifiedSettingsService } from '../../services/unified/UnifiedSettingsService';\nimport { UnifiedStateService } from '../../services/unified/UnifiedStateService';\nimport { UnifiedNotificationService } from '../../services/unified/UnifiedNotificationService';\nimport { UnifiedErrorService } from '../../services/unified/UnifiedErrorService';\nimport { Button, Badge, Modal, Toast } from '../ui/UnifiedUI';\n\ninterface NavigationItem {\n  path: string;\n  label: string;\n  icon: string;\n  badge?: number;\n  requiresAuth?: boolean;\n  adminOnly?: boolean;\n}\n\nconst NAVIGATION_ITEMS: NavigationItem[] = [\n  {\n    path: '/dashboard',\n    label: 'Dashboard',\n    icon: '📊',\n  },\n  {\n    path: '/predictions',\n    label: 'Predictions',\n    icon: '🎯',\n  },\n  {\n    path: '/betting',\n    label: 'Betting',\n    icon: '💰',\n    requiresAuth: true,\n  },\n  {\n    path: '/analytics',\n    label: 'Analytics',\n    icon: '📈',\n    requiresAuth: true,\n  },\n  {\n    path: '/settings',\n    label: 'Settings',\n    icon: '⚙️',\n  },\n  {\n    path: '/admin',\n    label: 'Admin',\n    icon: '👑',\n    adminOnly: true,\n  },\n];\n\nexport const UnifiedNavigation: React.FC = () => {\n  // Initialize services\n  const serviceRegistry = UnifiedServiceRegistry.getInstance();\n  const settingsService = serviceRegistry.getService<UnifiedSettingsService>('settings');\n  const stateService = serviceRegistry.getService<UnifiedStateService>('state');\n  const notificationService =\n    serviceRegistry.getService<UnifiedNotificationService>('notification');\n  const errorService = serviceRegistry.getService<UnifiedErrorService>('error');\n\n  // State\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n  } | null>(null);\n  const [notifications, setNotifications] = useState<number>(0);\n  const [user, setUser] = useState<any>(null);\n  const location = useLocation();\n\n  // Load user data and notifications\n  useEffect(() => {\n    loadUserData();\n    setupNotificationListener();\n  }, []);\n\n  const loadUserData = async () => {\n    try {\n      const currentUser = await stateService.getState('user');\n      setUser(currentUser);\n    } catch (error) {\n      handleError('Failed to load user data', error);\n    }\n  };\n\n  const setupNotificationListener = () => {\n    notificationService.subscribe(notification => {\n      setNotifications(prev => prev + 1);\n    });\n  };\n\n  const handleError = (message: string, error: any) => {\n    setToast({ message, type: 'error' });\n    errorService.handleError(error, {\n      code: 'NAVIGATION_ERROR',\n      source: 'UnifiedNavigation',\n      details: { message },\n    });\n  };\n\n  const handleLogout = async () => {\n    try {\n      await stateService.clearState();\n      window.location.href = '/login';\n    } catch (error) {\n      handleError('Failed to logout', error);\n    }\n  };\n\n  const isActive = (path: string) => {\n    return location.pathname === path;\n  };\n\n  const canAccess = (item: NavigationItem) => {\n    if (item.adminOnly && (!user || !user.isAdmin)) {\n      return false;\n    }\n    if (item.requiresAuth && !user) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <nav\n      className={`fixed top-0 left-0 h-full bg-white dark:bg-gray-800 shadow-lg transition-all duration-300 ${\n        isCollapsed ? 'w-16' : 'w-64'\n      }`}\n    >\n      <div className=\"flex flex-col h-full\">\n        {/* Header */}\n        <div className=\"p-4 border-b dark:border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            {!isCollapsed && (\n              <h1 className=\"text-xl font-bold text-gray-800 dark:text-white\">Betting App</h1>\n            )}\n            <Button className=\"p-2\" variant=\"ghost\" onClick={() => setIsCollapsed(!isCollapsed)}>\n              {isCollapsed ? '→' : '←'}\n            </Button>\n          </div>\n        </div>\n\n        {/* Navigation Items */}\n        <div className=\"flex-1 overflow-y-auto py-4\">\n          {NAVIGATION_ITEMS.map(\n            item =>\n              canAccess(item) && (\n                <Link\n                  key={item.path}\n                  className={`flex items-center px-4 py-3 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors ${\n                    isActive(item.path) ? 'bg-gray-100 dark:bg-gray-700' : ''\n                  }`}\n                  to={item.path}\n                >\n                  <span className=\"text-xl mr-3\">{item.icon}</span>\n                  {!isCollapsed && (\n                    <>\n                      <span className=\"flex-1\">{item.label}</span>\n                      {item.badge && <Badge variant=\"primary\">{item.badge}</Badge>}\n                    </>\n                  )}\n                </Link>\n              )\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"p-4 border-t dark:border-gray-700\">\n          {!isCollapsed && user && (\n            <div className=\"mb-4\">\n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 rounded-full bg-gray-300 dark:bg-gray-600 flex items-center justify-center\">\n                  {user.avatar || user.name?.[0] || '👤'}\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm font-medium text-gray-800 dark:text-white\">{user.name}</p>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">{user.email}</p>\n                </div>\n              </div>\n            </div>\n          )}\n          <Button\n            className=\"w-full justify-start\"\n            variant=\"ghost\"\n            onClick={() => setShowLogoutModal(true)}\n          >\n            <span className=\"text-xl mr-3\">🚪</span>\n            {!isCollapsed && 'Logout'}\n          </Button>\n        </div>\n      </div>\n\n      {/* Logout Confirmation Modal */}\n      <Modal\n        isOpen={showLogoutModal}\n        title=\"Confirm Logout\"\n        onClose={() => setShowLogoutModal(false)}\n      >\n        <div className=\"text-center\">\n          <p className=\"text-gray-600 mb-6\">\n            Are you sure you want to logout? Any unsaved changes will be lost.\n          </p>\n          <div className=\"flex justify-center space-x-4\">\n            <Button variant=\"secondary\" onClick={() => setShowLogoutModal(false)}>\n              Cancel\n            </Button>\n            <Button variant=\"danger\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </div>\n        </div>\n      </Modal>\n\n      {/* Toast Notifications */}\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n    </nav>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\overview\\UltraAccuracyOverview.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\overview\\UltraAccuracyOverview.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\overview\\UltraAccuracyOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\overview\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\AdvancedConfidenceVisualizer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\AdvancedConfidenceVisualizer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\AdvancedConfidenceVisualizer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\BetRecommendationCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\BetRecommendationCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\BetRecommendationCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\BetRecommendationList.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\BetRecommendationList.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\BetRecommendationList.tsx","messages":[{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":45,"column":11,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":45,"endColumn":60,"suggestions":[{"messageId":"addBrackets","fix":{"range":[1549,1664],"text":"{ const riskOrder = { low: 0, medium: 1, high: 2 };\n          return riskOrder[a.riskLevel] - riskOrder[b.riskLevel]; }"},"desc":"Add {} brackets around the case block."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useMemo } from 'react';\nimport { Box, Typography, TextField, MenuItem, Grid, Paper, CircularProgress } from '@mui/material';\nimport { BetRecommendationCard } from './BetRecommendationCard';\nimport { BetRecommendation } from '../../core/types/prediction';\nimport { PredictionExplanationModal } from './PredictionExplanationModal';\n\ninterface BetRecommendationListProps {\n  recommendations: BetRecommendation[];\n  loading?: boolean;\n  error?: string;\n}\n\ntype SortOption = 'confidence' | 'stake' | 'expectedValue' | 'riskLevel';\ntype FilterOption = 'all' | 'low' | 'medium' | 'high';\n\nexport const BetRecommendationList: React.FC<BetRecommendationListProps> = ({\n  recommendations,\n  loading = false,\n  error,\n}) => {\n  const [sortBy, setSortBy] = useState<SortOption>('confidence');\n  const [filterBy, setFilterBy] = useState<FilterOption>('all');\n  const [selectedRecommendation, setSelectedRecommendation] = useState<BetRecommendation | null>(\n    null\n  );\n\n  const filteredAndSortedRecommendations = useMemo(() => {\n    let filtered = recommendations;\n\n    // Apply risk level filter\n    if (filterBy !== 'all') {\n      filtered = filtered.filter(rec => rec.riskLevel === filterBy);\n    }\n\n    // Apply sorting\n    return filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'confidence':\n          return b.confidence - a.confidence;\n        case 'stake':\n          return b.stake - a.stake;\n        case 'expectedValue':\n          return b.expectedValue - a.expectedValue;\n        case 'riskLevel':\n          const riskOrder = { low: 0, medium: 1, high: 2 };\n          return riskOrder[a.riskLevel] - riskOrder[b.riskLevel];\n        default:\n          return 0;\n      }\n    });\n  }, [recommendations, sortBy, filterBy]);\n\n  if (loading) {\n    return (\n      <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\" minHeight={200}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Paper sx={{ p: 2, bgcolor: 'error.light' }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Paper>\n    );\n  }\n\n  if (recommendations.length === 0) {\n    return (\n      <Paper sx={{ p: 2 }}>\n        <Typography color=\"text.secondary\">No bet recommendations available</Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Box>\n      <Grid container spacing={2} sx={{ mb: 3 }}>\n        <Grid item sm={6} xs={12}>\n          <TextField\n            fullWidth\n            select\n            label=\"Sort By\"\n            value={sortBy}\n            onChange={e => setSortBy(e.target.value as SortOption)}\n          >\n            <MenuItem value=\"confidence\">Confidence</MenuItem>\n            <MenuItem value=\"stake\">Stake Amount</MenuItem>\n            <MenuItem value=\"expectedValue\">Expected Value</MenuItem>\n            <MenuItem value=\"riskLevel\">Risk Level</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item sm={6} xs={12}>\n          <TextField\n            fullWidth\n            select\n            label=\"Filter By Risk\"\n            value={filterBy}\n            onChange={e => setFilterBy(e.target.value as FilterOption)}\n          >\n            <MenuItem value=\"all\">All Risk Levels</MenuItem>\n            <MenuItem value=\"low\">Low Risk</MenuItem>\n            <MenuItem value=\"medium\">Medium Risk</MenuItem>\n            <MenuItem value=\"high\">High Risk</MenuItem>\n          </TextField>\n        </Grid>\n      </Grid>\n\n      <Box>\n        {filteredAndSortedRecommendations.map(recommendation => (\n          <BetRecommendationCard\n            key={recommendation.id}\n            recommendation={recommendation}\n            onViewDetails={() => setSelectedRecommendation(recommendation)}\n          />\n        ))}\n      </Box>\n\n      {selectedRecommendation && (\n        <PredictionExplanationModal\n          open={!!selectedRecommendation}\n          prediction={{\n            prediction: selectedRecommendation.prediction.prediction,\n            confidence: selectedRecommendation.confidence,\n            explanations: [\n              {\n                modelName: selectedRecommendation.prediction.type,\n                confidence: selectedRecommendation.confidence,\n                shapExplanation: {\n                  featureNames: Object.keys(selectedRecommendation.prediction.features),\n                  featureValues: Object.values(selectedRecommendation.prediction.features),\n                  importanceScores: [],\n                  baseValue: 0,\n                  prediction: selectedRecommendation.prediction.prediction,\n                },\n              },\n            ],\n          }}\n          onClose={() => setSelectedRecommendation(null)}\n        />\n      )}\n    </Box>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\MoneyMakerResults.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\MoneyMakerResults.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\MoneyMakerResults.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PayoutPreview.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PayoutPreview.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PayoutPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PredictionDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PredictionDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PredictionDisplay.tsx","messages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useCallback\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.","line":173,"column":36,"nodeType":"Identifier","endLine":173,"endColumn":47},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'isMounted'. Either include it or remove the dependency array. Outer scope values like 'eventId' aren't valid dependencies because mutating them doesn't re-render the component.","line":182,"column":7,"nodeType":"ArrayExpression","endLine":182,"endColumn":36,"suggestions":[{"desc":"Update the dependencies array to be: [isMounted]","fix":{"range":[6291,6320],"text":"[isMounted]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'errorHandler' and 'performanceMonitor'. Either include them or remove the dependency array.","line":330,"column":6,"nodeType":"ArrayExpression","endLine":330,"endColumn":38,"suggestions":[{"desc":"Update the dependencies array to be: [predictionService, filterStore, performanceMonitor, errorHandler]","fix":{"range":[10710,10742],"text":"[predictionService, filterStore, performanceMonitor, errorHandler]"}}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { useUnifiedAnalytics } from '../hooks/useUnifiedAnalytics.js';\nimport { UnifiedServiceRegistry } from '../../services/unified/UnifiedServiceRegistry.js';\nimport {\n  Box,\n  Typography,\n  Paper,\n  LinearProgress,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  Alert,\n  CircularProgress,\n  Chip,\n  Card,\n  CardContent,\n  CardHeader,\n} from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip as RechartsTooltip,\n  ResponsiveContainer,\n  Cell,\n  LineChart,\n  Line,\n} from 'recharts';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport SortIcon from '@mui/icons-material/Sort';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { NoResultsFallback } from './NoResultsFallback.js';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport type { PredictionStreamPayload } from '../../types/webSocket.js';\nimport { usePredictionService } from '../../hooks/usePredictionService.js';\nimport { useRiskProfile } from '../../hooks/useRiskProfile.js';\nimport { EventBus } from '../../unified/EventBus.js';\nimport { ErrorHandler } from '../../unified/ErrorHandler.js';\nimport { PerformanceMonitor } from '../../unified/PerformanceMonitor.js';\nimport { ModelVersioning } from '../../unified/ModelVersioning.js';\nimport { Prediction, RiskProfile, ErrorCategory, ErrorSeverity } from '../../types/core.js';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { useFilterStore } from '../stores/filterStore.js';\n\nconst PredictionContainer = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.shape.borderRadius,\n  boxShadow: theme.shadows[2],\n}));\n\nconst ConfidenceBar = styled(LinearProgress)(({ theme }) => ({\n  height: 8,\n  borderRadius: 4,\n  backgroundColor: theme.palette.grey[200],\n  '& .MuiLinearProgress-bar': {\n    borderRadius: 4,\n  },\n}));\n\nconst ShapContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  height: 300,\n  position: 'relative',\n}));\n\nconst ControlsContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(1),\n}));\n\nconst ValueDisplay = styled(Box)<{ changed?: boolean }>(({ theme, changed }) => ({\n  padding: theme.spacing(1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: changed ? theme.palette.primary.light : 'transparent',\n  transition: `background-color 0.3s`,\n}));\n\nconst PredictionCard = styled(Card)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  transition: 'transform 0.2s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-4px)',\n    boxShadow: theme.shadows[4],\n  },\n}));\n\ninterface PredictionDisplayProps {\n  eventId: string;\n  marketId?: string;\n  selectionId?: string;\n  className?: string;\n  showAdvancedMetrics?: boolean;\n  onPredictionUpdate?: (prediction: any) => void;\n}\n\ntype SortOrder = 'asc' | 'desc';\ntype FilterType = 'all' | 'high-confidence' | 'recent' | 'profitable';\n\nexport const PredictionDisplay: React.FC<PredictionDisplayProps> = ({\n  eventId,\n  marketId,\n  selectionId,\n  className = '',\n  showAdvancedMetrics = false,\n  onPredictionUpdate,\n}) => {\n  const { ml } = useUnifiedAnalytics({ ml: { autoUpdate: false } });\n  const predictionService = usePredictionService();\n  const { riskProfile } = useRiskProfile();\n  const eventBus = EventBus.getInstance();\n  const errorHandler = ErrorHandler.getInstance();\n  const performanceMonitor = PerformanceMonitor.getInstance();\n  const modelVersioning = ModelVersioning.getInstance();\n  const filterStore = useFilterStore();\n\n  const [sortOrder, setSortOrder] = useState<SortOrder>('desc');\n  const [filterType, setFilterType] = useState<FilterType>('all');\n  const [filterAnchorEl, setFilterAnchorEl] = useState<null | HTMLElement>(null);\n  const [sortAnchorEl, setSortAnchorEl] = useState<null | HTMLElement>(null);\n  const [changedValues, setChangedValues] = useState<Set<string>>(new Set());\n  const [showUncertaintyDetails, setShowUncertaintyDetails] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState<'Connected' | 'Disconnected'>(\n    'Disconnected'\n  );\n  const [error, setError] = useState<string | null>(null);\n  const [predictionHistory, setPredictionHistory] = useState<any[]>([]);\n  const [optimalStake, setOptimalStake] = useState<number | null>(null);\n  const [predictions, setPredictions] = useState<Prediction[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [selectedPrediction, setSelectedPrediction] = useState<Prediction | null>(null);\n\n  const serviceRegistry = UnifiedServiceRegistry.getInstance();\n  const webSocketService = serviceRegistry.getService<any>('websocket');\n\n  // Memoize prediction for performance\n  const prediction = useMemo(() => {\n    if (!ml || !ml.mlResult) return null;\n    if (Array.isArray(ml.mlResult.predictions)) {\n      return ml.mlResult.predictions.find((p: any) => p.eventId === eventId) || null;\n    }\n    return null;\n  }, [ml, eventId]);\n\n  // Calculate optimal stake when prediction or risk profile changes\n  useEffect(() => {\n    if (prediction && riskProfile) {\n      predictionService\n        .calculateOptimalStake(prediction, prediction.odds, riskProfile.level)\n        .then(setOptimalStake)\n        .catch(console.error);\n    }\n  }, [prediction, riskProfile, predictionService]);\n\n  // WebSocket connection for real-time updates\n  useEffect(() => {\n    let unsub: (() => void) | undefined;\n    let isMounted = true;\n    let reconnectTimeout: NodeJS.Timeout | null = null;\n    let reconnectAttempts = 0;\n    const maxReconnectAttempts = 5;\n    const reconnectInterval = 3000;\n\n    const handlePredictionUpdate = useCallback(\n      (data: PredictionStreamPayload) => {\n        if (!isMounted) return;\n        if (data.eventId === eventId) {\n          setPredictionHistory(prev => [...prev, data].slice(-10)); // Keep last 10 predictions\n          onPredictionUpdate?.(data);\n          setConnectionStatus('Connected');\n        }\n      },\n      [eventId, onPredictionUpdate]\n    );\n\n    const connectAndSubscribe = async () => {\n      try {\n        await webSocketService.connect();\n        unsub = webSocketService.subscribe('predictions', handlePredictionUpdate);\n        setConnectionStatus('Connected');\n        reconnectAttempts = 0;\n      } catch (error) {\n        if (reconnectAttempts < maxReconnectAttempts) {\n          reconnectTimeout = setTimeout(connectAndSubscribe, reconnectInterval);\n          reconnectAttempts++;\n        } else {\n          setError('WebSocket connection failed. Please refresh.');\n          setConnectionStatus('Disconnected');\n        }\n      }\n    };\n\n    connectAndSubscribe();\n\n    return () => {\n      isMounted = false;\n      if (unsub) unsub();\n      webSocketService.disconnect();\n      if (reconnectTimeout) clearTimeout(reconnectTimeout);\n    };\n  }, [eventId, webSocketService, onPredictionUpdate]);\n\n  // Handle prediction updates\n  useEffect(() => {\n    if (prediction) {\n      const newChangedValues = new Set<string>();\n      if (prediction.confidence) newChangedValues.add('confidence');\n      if (prediction.recommended_stake) newChangedValues.add('stake');\n      setChangedValues(newChangedValues);\n      const timeout = setTimeout(() => setChangedValues(new Set()), 1000);\n      return () => clearTimeout(timeout);\n    }\n  }, [prediction]);\n\n  useEffect(() => {\n    const componentId = 'prediction-display';\n    const startTime = performance.now();\n\n    const loadPredictions = async () => {\n      try {\n        const data = await predictionService.getPredictions({\n          riskProfile: filterStore.riskProfile,\n          sport: filterStore.sport,\n          minOdds: filterStore.minOdds,\n          maxOdds: filterStore.maxOdds,\n          minConfidence: filterStore.minConfidence,\n          maxConfidence: filterStore.maxConfidence,\n          projectedReturn: filterStore.projectedReturn,\n          // add any other filters as needed\n        });\n        setPredictions(data);\n        setError(null);\n\n        performanceMonitor.updateComponentMetrics(componentId, {\n          renderCount: 1,\n          renderTime: performance.now() - startTime,\n          memoryUsage: JSON.stringify(data).length,\n          errorCount: 0,\n          lastUpdate: Date.now(),\n        });\n      } catch (err) {\n        const error = err as Error;\n        setError(error.message);\n\n        errorHandler.handleError(error, {\n          code: 'PREDICTION_LOAD_ERROR',\n          category: 'BUSINESS',\n          severity: 'HIGH',\n          component: componentId,\n          retryable: true,\n          recoveryStrategy: {\n            type: 'retry',\n            maxRetries: 3,\n            timeout: 1000,\n          },\n        });\n\n        performanceMonitor.updateComponentMetrics(componentId, {\n          renderCount: 0,\n          renderTime: 0,\n          memoryUsage: 0,\n          errorCount: 1,\n          lastUpdate: Date.now(),\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const handlePredictionUpdate = (update: Prediction) => {\n      setPredictions(prev => {\n        const newPredictions = prev.map(p => (p.id === update.id ? { ...p, ...update } : p));\n\n        performanceMonitor.updateComponentMetrics(componentId, {\n          renderCount: 1,\n          renderTime: performance.now() - startTime,\n          memoryUsage: JSON.stringify(newPredictions).length,\n          errorCount: 0,\n          lastUpdate: Date.now(),\n        });\n\n        return newPredictions;\n      });\n    };\n\n    const handleError = (error: Error) => {\n      errorHandler.handleError(error, {\n        code: 'PREDICTION_UPDATE_ERROR',\n        category: 'BUSINESS',\n        severity: 'MEDIUM',\n        component: componentId,\n        retryable: true,\n      });\n\n      performanceMonitor.updateComponentMetrics(componentId, {\n        renderCount: 0,\n        renderTime: 0,\n        memoryUsage: 0,\n        errorCount: 1,\n        lastUpdate: Date.now(),\n      });\n    };\n\n    // Subscribe to real-time updates\n    const unsubscribe = predictionService.subscribeToUpdates(handlePredictionUpdate, handleError);\n\n    // Load initial predictions\n    loadPredictions();\n\n    // Cleanup\n    return () => {\n      unsubscribe();\n      performanceMonitor.updateComponentMetrics(componentId, {\n        renderCount: 0,\n        renderTime: 0,\n        memoryUsage: 0,\n        errorCount: 0,\n        lastUpdate: Date.now(),\n      });\n    };\n  }, [predictionService, filterStore]);\n\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>, prediction: Prediction) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedPrediction(prediction);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedPrediction(null);\n  };\n\n  if (ml?.isLoading) {\n    return (\n      <PredictionContainer className={className}>\n        <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\" minHeight={200}>\n          <CircularProgress />\n        </Box>\n      </PredictionContainer>\n    );\n  }\n\n  if (ml?.error) {\n    return (\n      <PredictionContainer className={className}>\n        <Alert severity=\"error\">Failed to load prediction data: {ml.error.message}</Alert>\n      </PredictionContainer>\n    );\n  }\n\n  if (!prediction) {\n    return <NoResultsFallback />;\n  }\n\n  const {\n    prediction: value,\n    confidence,\n    uncertainty,\n    kelly_fraction,\n    model_predictions,\n    shap_values,\n    feature_importance,\n    timestamp,\n  } = prediction;\n\n  return (\n    <PredictionContainer className={className}>\n      {/* Header with Connection Status and Controls */}\n      <Box alignItems=\"center\" display=\"flex\" justifyContent=\"space-between\" mb={2}>\n        <Typography variant=\"h6\">Prediction Details</Typography>\n        <Box alignItems=\"center\" display=\"flex\" gap={1}>\n          <Chip\n            color={connectionStatus === 'Connected' ? 'success' : 'warning'}\n            label={connectionStatus}\n            size=\"small\"\n          />\n          <ControlsContainer>\n            <IconButton size=\"small\" onClick={e => setFilterAnchorEl(e.currentTarget)}>\n              <FilterListIcon />\n            </IconButton>\n            <IconButton size=\"small\" onClick={e => setSortAnchorEl(e.currentTarget)}>\n              <SortIcon />\n            </IconButton>\n          </ControlsContainer>\n        </Box>\n      </Box>\n\n      {/* Main Prediction Display */}\n      <Grid container spacing={2}>\n        <Grid item md={6} xs={12}>\n          <Box mb={3}>\n            <Box alignItems=\"center\" display=\"flex\" justifyContent=\"space-between\" mb={1}>\n              <Typography variant=\"subtitle1\">Prediction</Typography>\n              <ValueDisplay changed={changedValues.has('value')}>\n                <Typography variant=\"h5\">{value.toFixed(2)}</Typography>\n              </ValueDisplay>\n            </Box>\n            <Box alignItems=\"center\" display=\"flex\" gap={1}>\n              <Typography color=\"textSecondary\" variant=\"body2\">\n                Confidence:\n              </Typography>\n              <Box flex={1}>\n                <ConfidenceBar\n                  sx={{\n                    '& .MuiLinearProgress-bar': {\n                      backgroundColor:\n                        confidence > 0.7\n                          ? 'success.main'\n                          : confidence > 0.5\n                            ? 'warning.main'\n                            : 'error.main',\n                    },\n                  }}\n                  value={confidence * 100}\n                  variant=\"determinate\"\n                />\n              </Box>\n              <Typography color=\"textSecondary\" variant=\"body2\">\n                {(confidence * 100).toFixed(1)}%\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item md={6} xs={12}>\n          <Box mb={3}>\n            <Typography gutterBottom variant=\"subtitle1\">\n              Risk Profile\n            </Typography>\n            <Box alignItems=\"center\" display=\"flex\" gap={1}>\n              <Typography variant=\"body2\">Recommended Stake:</Typography>\n              <Typography color=\"primary\" variant=\"h6\">\n                {optimalStake ? `${(optimalStake * 100).toFixed(1)}%` : 'Calculating...'}\n              </Typography>\n            </Box>\n            <Box mt={1}>\n              <Typography color=\"textSecondary\" variant=\"body2\">\n                Kelly Fraction: {kelly_fraction.toFixed(3)}\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n\n      {/* Advanced Metrics */}\n      {showAdvancedMetrics && (\n        <Box mt={3}>\n          <Typography gutterBottom variant=\"subtitle1\">\n            Advanced Metrics\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item md={6} xs={12}>\n              <Box>\n                <Typography gutterBottom color=\"textSecondary\" variant=\"body2\">\n                  Uncertainty Analysis\n                </Typography>\n                <Box alignItems=\"center\" display=\"flex\" gap={1}>\n                  <Typography variant=\"body2\">\n                    Total: {(uncertainty.total * 100).toFixed(1)}%\n                  </Typography>\n                  <Tooltip title=\"Epistemic: Model uncertainty, Aleatoric: Data uncertainty\">\n                    <IconButton size=\"small\">\n                      <InfoIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <Box>\n                <Typography gutterBottom color=\"textSecondary\" variant=\"body2\">\n                  Model Contributions\n                </Typography>\n                <ResponsiveContainer height={100} width=\"100%\">\n                  <BarChart\n                    data={Object.entries(model_predictions).map(([model, value]) => ({\n                      model,\n                      value: value * 100,\n                    }))}\n                  >\n                    <XAxis dataKey=\"model\" />\n                    <YAxis />\n                    <RechartsTooltip />\n                    <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      {/* Prediction History */}\n      {predictionHistory.length > 0 && (\n        <Box mt={3}>\n          <Typography gutterBottom variant=\"subtitle1\">\n            Prediction History\n          </Typography>\n          <ResponsiveContainer height={200} width=\"100%\">\n            <LineChart data={predictionHistory}>\n              <XAxis dataKey=\"timestamp\" />\n              <YAxis />\n              <RechartsTooltip />\n              <Line dataKey=\"prediction\" stroke=\"#8884d8\" type=\"monotone\" />\n              <Line dataKey=\"confidence\" stroke=\"#82ca9d\" type=\"monotone\" />\n            </LineChart>\n          </ResponsiveContainer>\n        </Box>\n      )}\n\n      {/* Menus */}\n      <Menu\n        anchorEl={filterAnchorEl}\n        open={Boolean(filterAnchorEl)}\n        onClose={() => setFilterAnchorEl(null)}\n      >\n        <MenuItem\n          onClick={() => {\n            setFilterType('all');\n            setFilterAnchorEl(null);\n          }}\n        >\n          All Predictions\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setFilterType('high-confidence');\n            setFilterAnchorEl(null);\n          }}\n        >\n          High Confidence\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setFilterType('recent');\n            setFilterAnchorEl(null);\n          }}\n        >\n          Recent\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setFilterType('profitable');\n            setFilterAnchorEl(null);\n          }}\n        >\n          Profitable\n        </MenuItem>\n      </Menu>\n\n      <Menu\n        anchorEl={sortAnchorEl}\n        open={Boolean(sortAnchorEl)}\n        onClose={() => setSortAnchorEl(null)}\n      >\n        <MenuItem\n          onClick={() => {\n            setSortOrder('desc');\n            setSortAnchorEl(null);\n          }}\n        >\n          Highest Confidence\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setSortOrder('asc');\n            setSortAnchorEl(null);\n          }}\n        >\n          Lowest Confidence\n        </MenuItem>\n      </Menu>\n\n      <Grid container spacing={3}>\n        {predictions.map(prediction => (\n          <Grid key={prediction.id} item md={4} sm={6} xs={12}>\n            <PredictionCard>\n              <CardHeader\n                action={\n                  <IconButton onClick={e => handleMenuOpen(e, prediction)}>\n                    <MoreVertIcon />\n                  </IconButton>\n                }\n                subheader={new Date(prediction.timestamp).toLocaleString()}\n                title={prediction.event}\n              />\n              <CardContent>\n                <Typography gutterBottom color=\"text.secondary\" variant=\"body2\">\n                  Confidence: {prediction.confidence}%\n                </Typography>\n                <Typography gutterBottom color=\"text.secondary\" variant=\"body2\">\n                  Recommended Bet: {prediction.recommendedBet}\n                </Typography>\n                <Typography color=\"text.secondary\" variant=\"body2\">\n                  Expected Value: {prediction.expectedValue}\n                </Typography>\n              </CardContent>\n            </PredictionCard>\n          </Grid>\n        ))}\n      </Grid>\n\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose}>\n        <MenuItem onClick={handleMenuClose}>View Details</MenuItem>\n        <MenuItem onClick={handleMenuClose}>Track Performance</MenuItem>\n        <MenuItem onClick={handleMenuClose}>Export Data</MenuItem>\n      </Menu>\n    </PredictionContainer>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PredictionExplanationModal.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PredictionExplanationModal.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PredictionExplanationModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PredictionForm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PredictionForm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\PredictionForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\QuantumPredictionsInterface.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\QuantumPredictionsInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\QuantumPredictionsInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\ShapExplanation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\ShapExplanation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\ShapExplanation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\ShapValueBar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\ShapValueBar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\ShapValueBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\UltraAccuracyDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\UncertaintyIndicator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\UncertaintyIndicator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\UncertaintyIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\UnifiedPredictionInterface.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\UnifiedPredictionInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\UnifiedPredictionInterface.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'loadData', 'setupWebSocket', and 'webSocketService'. Either include them or remove the dependency array.","line":67,"column":6,"nodeType":"ArrayExpression","endLine":67,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [loadData, setupWebSocket, webSocketService]","fix":{"range":[2806,2808],"text":"[loadData, setupWebSocket, webSocketService]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { UnifiedServiceRegistry } from '../../services/unified/UnifiedServiceRegistry';\nimport { UnifiedPredictionService } from '../../services/unified/UnifiedPredictionService';\nimport { UnifiedAnalyticsService } from '../../services/unified/UnifiedAnalyticsService';\nimport { UnifiedWebSocketService } from '../../services/unified/UnifiedWebSocketService';\nimport { UnifiedStateService } from '../../services/unified/UnifiedStateService';\nimport { UnifiedSettingsService } from '../../services/unified/UnifiedSettingsService';\nimport { UnifiedNotificationService } from '../../services/unified/UnifiedNotificationService';\nimport { UnifiedErrorService } from '../../services/unified/UnifiedErrorService';\nimport { Card, Button, Spinner, Badge, Modal, Toast } from '../ui/UnifiedUI';\n\ninterface Prediction {\n  id: string;\n  eventId: string;\n  marketType: string;\n  prediction: number;\n  confidence: number;\n  timestamp: number;\n  features: Record<string, number>;\n  modelVersion: string;\n  metadata: Record<string, any>;\n}\n\ninterface PredictionOpportunity {\n  id: string;\n  eventId: string;\n  marketType: string;\n  prediction: number;\n  confidence: number;\n  expectedValue: number;\n  kellyFraction: number;\n  timestamp: number;\n  metadata: Record<string, any>;\n}\n\nexport const UnifiedPredictionInterface: React.FC = () => {\n  // Initialize services\n  const serviceRegistry = UnifiedServiceRegistry.getInstance();\n  const predictionService = serviceRegistry.getService<UnifiedPredictionService>('prediction');\n  const analyticsService = serviceRegistry.getService<UnifiedAnalyticsService>('analytics');\n  const webSocketService = serviceRegistry.getService<UnifiedWebSocketService>('websocket');\n  const stateService = serviceRegistry.getService<UnifiedStateService>('state');\n  const settingsService = serviceRegistry.getService<UnifiedSettingsService>('settings');\n  const notificationService =\n    serviceRegistry.getService<UnifiedNotificationService>('notification');\n  const errorService = serviceRegistry.getService<UnifiedErrorService>('error');\n\n  // State\n  const [predictions, setPredictions] = useState<Prediction[]>([]);\n  const [opportunities, setOpportunities] = useState<PredictionOpportunity[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedPrediction, setSelectedPrediction] = useState<Prediction | null>(null);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n  } | null>(null);\n\n  // Load data\n  useEffect(() => {\n    loadData();\n    setupWebSocket();\n    return () => {\n      webSocketService.disconnect();\n    };\n  }, []);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      const [predictions, opportunities] = await Promise.all([\n        predictionService.getPredictions(),\n        predictionService.getOpportunities(),\n      ]);\n      setPredictions(predictions);\n      setOpportunities(opportunities);\n    } catch (error) {\n      handleError('Failed to load prediction data', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setupWebSocket = () => {\n    webSocketService.connect();\n    webSocketService.subscribe('predictions', data => {\n      setPredictions(prev => [...prev, data]);\n      notificationService.notifyUser({\n        type: 'info',\n        message: 'New prediction available',\n        data,\n      });\n    });\n    webSocketService.subscribe('opportunities', data => {\n      setOpportunities(prev => [...prev, data]);\n      notificationService.notifyUser({\n        type: 'info',\n        message: 'New opportunity detected',\n        data,\n      });\n    });\n  };\n\n  const handleError = (message: string, error: any) => {\n    setError(message);\n    setToast({ message, type: 'error' });\n    errorService.handleError(error, {\n      code: 'PREDICTION_ERROR',\n      source: 'UnifiedPredictionInterface',\n      details: { message },\n    });\n  };\n\n  const handlePredictionClick = (prediction: Prediction) => {\n    setSelectedPrediction(prediction);\n    setShowDetailsModal(true);\n  };\n\n  const handleOpportunityClick = async (opportunity: PredictionOpportunity) => {\n    try {\n      await predictionService.analyzeOpportunity(opportunity);\n      setToast({\n        message: 'Opportunity analyzed successfully',\n        type: 'success',\n      });\n    } catch (error) {\n      handleError('Failed to analyze opportunity', error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Spinner size=\"large\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Card className=\"max-w-md\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-red-500 mb-4\">Error</h2>\n            <p className=\"text-gray-600 mb-4\">{error}</p>\n            <Button variant=\"primary\" onClick={loadData}>\n              Retry\n            </Button>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold mb-4\">Predictions & Opportunities</h1>\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex space-x-4\">\n            <Button variant=\"primary\" onClick={loadData}>\n              Refresh\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Predictions */}\n        <div>\n          <h2 className=\"text-2xl font-bold mb-4\">Recent Predictions</h2>\n          <div className=\"space-y-4\">\n            {predictions.map(prediction => (\n              <Card\n                key={prediction.id}\n                className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n                onClick={() => handlePredictionClick(prediction)}\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"font-semibold\">{prediction.marketType}</h3>\n                    <p className=\"text-sm text-gray-600\">Event ID: {prediction.eventId}</p>\n                  </div>\n                  <Badge\n                    variant={\n                      prediction.confidence >= 0.8\n                        ? 'success'\n                        : prediction.confidence >= 0.6\n                          ? 'primary'\n                          : 'secondary'\n                    }\n                  >\n                    {prediction.confidence.toFixed(2)}\n                  </Badge>\n                </div>\n                <div className=\"mt-2\">\n                  <p className=\"text-sm text-gray-600\">\n                    Prediction: {prediction.prediction.toFixed(2)}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">Model: {prediction.modelVersion}</p>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Opportunities */}\n        <div>\n          <h2 className=\"text-2xl font-bold mb-4\">Betting Opportunities</h2>\n          <div className=\"space-y-4\">\n            {opportunities.map(opportunity => (\n              <Card\n                key={opportunity.id}\n                className=\"cursor-pointer hover:shadow-lg transition-shadow\"\n                onClick={() => handleOpportunityClick(opportunity)}\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"font-semibold\">{opportunity.marketType}</h3>\n                    <p className=\"text-sm text-gray-600\">Event ID: {opportunity.eventId}</p>\n                  </div>\n                  <Badge\n                    variant={\n                      opportunity.expectedValue >= 0.1\n                        ? 'success'\n                        : opportunity.expectedValue >= 0\n                          ? 'primary'\n                          : 'danger'\n                    }\n                  >\n                    EV: {opportunity.expectedValue.toFixed(2)}\n                  </Badge>\n                </div>\n                <div className=\"mt-2\">\n                  <p className=\"text-sm text-gray-600\">\n                    Prediction: {opportunity.prediction.toFixed(2)}\n                  </p>\n                  <p className=\"text-sm text-gray-600\">\n                    Kelly Fraction: {opportunity.kellyFraction.toFixed(2)}\n                  </p>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Prediction Details Modal */}\n      <Modal\n        isOpen={showDetailsModal}\n        title=\"Prediction Details\"\n        onClose={() => setShowDetailsModal(false)}\n      >\n        {selectedPrediction && (\n          <div className=\"space-y-4\">\n            <div>\n              <h3 className=\"font-semibold\">Market Information</h3>\n              <p className=\"text-sm text-gray-600\">Type: {selectedPrediction.marketType}</p>\n              <p className=\"text-sm text-gray-600\">Event ID: {selectedPrediction.eventId}</p>\n            </div>\n            <div>\n              <h3 className=\"font-semibold\">Prediction Details</h3>\n              <p className=\"text-sm text-gray-600\">\n                Value: {selectedPrediction.prediction.toFixed(2)}\n              </p>\n              <p className=\"text-sm text-gray-600\">\n                Confidence: {selectedPrediction.confidence.toFixed(2)}\n              </p>\n            </div>\n            <div>\n              <h3 className=\"font-semibold\">Features</h3>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {Object.entries(selectedPrediction.features).map(([key, value]) => (\n                  <div key={key} className=\"text-sm\">\n                    <span className=\"text-gray-600\">{key}:</span>\n                    <span className=\"ml-2\">{value.toFixed(2)}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <h3 className=\"font-semibold\">Metadata</h3>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {Object.entries(selectedPrediction.metadata).map(([key, value]) => (\n                  <div key={key} className=\"text-sm\">\n                    <span className=\"text-gray-600\">{key}:</span>\n                    <span className=\"ml-2\">{value}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </Modal>\n\n      {/* Toast Notifications */}\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\BetRecommendationCard.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\BetRecommendationCard.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\BetRecommendationCard.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\BetRecommendationList.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\BetRecommendationList.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\BetRecommendationList.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\PredictionExplanationModal.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\PredictionExplanationModal.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\PredictionExplanationModal.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\ShapExplanation.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\ShapExplanation.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\__tests__\\ShapExplanation.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\prediction\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\BettingOpportunities.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\BettingOpportunities.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\BettingOpportunities.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\ConfidenceIndicator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\ConfidenceIndicator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\ConfidenceIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\DailyFantasyIntegration.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\DailyFantasyIntegration.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\DailyFantasyIntegration.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\FantasyPredictionEnhancer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\FantasyPredictionEnhancer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\FantasyPredictionEnhancer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\LivePredictions.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\LivePredictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\LivePredictions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\ModelPerformance.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\ModelPerformance.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\ModelPerformance.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\PayoutPreviewPanel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\PayoutPreviewPanel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\PayoutPreviewPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\PredictionGenerator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\PredictionGenerator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\PredictionGenerator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\RealtimePredictionDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\RealtimePredictionDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\RealtimePredictionDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\SHAPChart.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\SHAPChart.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\SHAPChart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\ShapValueDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\ShapValueDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\ShapValueDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\UniversalPredictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\UniversalPredictions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\__tests__\\DailyFantasyIntegration.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\__tests__\\DailyFantasyIntegration.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\__tests__\\DailyFantasyIntegration.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\__tests__\\FantasyPredictionEnhancer.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\__tests__\\FantasyPredictionEnhancer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\__tests__\\FantasyPredictionEnhancer.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\__tests__\\PredictionGenerator.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\__tests__\\PredictionGenerator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\predictions\\__tests__\\PredictionGenerator.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\profile\\ProfilePage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\profile\\ProfilePage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\profile\\UnifiedProfile.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\profile\\UnifiedProfile.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\profile\\UnifiedProfile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\realtime\\RealTimeDataStream.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\realtime\\RealTimeDataStream.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\realtime\\RealTimeDataStream.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\revolutionary\\EnhancedRevolutionaryInterface.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\revolutionary\\EnhancedRevolutionaryInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\revolutionary\\EnhancedRevolutionaryInterface.tsx","messages":[{"ruleId":"no-shadow-restricted-names","severity":2,"message":"Shadowing of global property 'Infinity'.","line":31,"column":3,"nodeType":"Identifier","messageId":"shadowingRestrictedName","endLine":31,"endColumn":11},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadMathematicalFoundations'. Either include it or remove the dependency array.","line":144,"column":6,"nodeType":"ArrayExpression","endLine":144,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [loadMathematicalFoundations]","fix":{"range":[3525,3527],"text":"[loadMathematicalFoundations]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'performRealTimeAnalysis'. Either include it or remove the dependency array.","line":161,"column":6,"nodeType":"ArrayExpression","endLine":161,"endColumn":44,"suggestions":[{"desc":"Update the dependencies array to be: [realTimeMonitoring, predictionResult, performRealTimeAnalysis]","fix":{"range":[3887,3925],"text":"[realTimeMonitoring, predictionResult, performRealTimeAnalysis]"}}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Atom,\n  Brain,\n  Activity,\n  Target,\n  Zap,\n  BarChart3,\n  Network,\n  Layers,\n  TrendingUp,\n  Settings,\n  Eye,\n  RefreshCw,\n  AlertCircle,\n  CheckCircle,\n  Cpu,\n  Sparkles,\n  Radar,\n  GitBranch,\n  Microscope,\n  Gauge,\n  Calculator,\n  Infinity,\n  Sigma,\n  Pi,\n  Triangle,\n  Minimize,\n  Maximize,\n  Binary,\n  Workflow,\n  BookOpen,\n  GraduationCap,\n  Award,\n  Play,\n  Pause,\n} from \"lucide-react\";\nimport SafeChart from \"../ui/SafeChart\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  Filler,\n} from \"chart.js\";\nimport toast from \"react-hot-toast\";\n\n// Types for the prediction system\ninterface EnhancedPredictionRequest {\n  event_id: string;\n  sport: string;\n  features: Record<string, number>;\n  enable_neuromorphic: boolean;\n  enable_mamba: boolean;\n  enable_causal_inference: boolean;\n  enable_topological: boolean;\n  enable_riemannian: boolean;\n}\nimport { useLogger } from \"../../hooks/useLogger\";\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  Filler,\n);\n\nconst EnhancedRevolutionaryInterface: React.FC = () => {\n  // State management\n  const [selectedTab, setSelectedTab] = useState(\"enhanced-engine\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStage, setProcessingStage] = useState(\"\");\n  const [predictionResult, setPredictionResult] =\n    useState<EnhancedPredictionResponse | null>(null);\n  const [mathematicalAnalysis, setMathematicalAnalysis] =\n    useState<MathematicalAnalysisResponse | null>(null);\n  const [mathematicalFoundations, setMathematicalFoundations] = useState<Record<\n    string,\n    any\n  > | null>(null);\n  const [realTimeMonitoring, setRealTimeMonitoring] = useState(false);\n\n  // Enhanced prediction request state\n  const [predictionRequest, setPredictionRequest] =\n    useState<EnhancedPredictionRequest>({\n      event_id: \"\",\n      sport: \"basketball\",\n      features: {\n        player_performance: 75.5,\n        team_strength: 82.1,\n        matchup_difficulty: 68.3,\n        historical_performance: 77.8,\n        injury_impact: 15.2,\n        weather_effect: 5.0,\n        venue_advantage: 12.5,\n        rest_factor: 85.0,\n        momentum: 71.2,\n        public_sentiment: 63.7,\n      },\n      enable_neuromorphic: true,\n      neuromorphic_timesteps: 100,\n      enable_mamba: true,\n      mamba_sequence_length: 50,\n      enable_causal_inference: true,\n      causal_significance_level: 0.05,\n      enable_topological: true,\n      topological_max_dimension: 2,\n      enable_riemannian: true,\n      riemannian_manifold_dim: 16,\n      use_gpu: false,\n      numerical_precision: \"float32\",\n      convergence_tolerance: 1e-6,\n      context: {},\n    });\n\n  // Hooks\n  const logger = useLogger();\n\n  // Load mathematical foundations on mount\n  useEffect(() => {\n    loadMathematicalFoundations();\n  }, []);\n\n  // Real-time monitoring effect\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (realTimeMonitoring && predictionResult) {\n      intervalId = setInterval(() => {\n        performRealTimeAnalysis();\n      }, 30000); // Every 30 seconds\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [realTimeMonitoring, predictionResult]);\n\n  const loadMathematicalFoundations = async () => {\n    try {\n      // Mock mathematical foundations data - replace with actual API call when backend is available\n      const mockFoundations = {\n        hodgkin_huxley: {\n          enabled: true,\n          neuron_count: 10000,\n          synaptic_connections: 50000,\n          firing_rate: 45.2,\n          membrane_potential: -70.5,\n        },\n        mamba_ssm: {\n          enabled: true,\n          state_dimension: 256,\n          sequence_length: 1024,\n          selective_scan: true,\n          efficiency_gain: 3.8,\n        },\n        causal_discovery: {\n          enabled: true,\n          algorithm: \"PC\",\n          confidence_threshold: 0.05,\n          max_conditioning_set: 3,\n          discovered_edges: 42,\n        },\n        topological_analysis: {\n          enabled: true,\n          persistent_homology: true,\n          betti_numbers: [1, 3, 0],\n          euler_characteristic: -2,\n          holes_detected: 3,\n        },\n        riemannian_geometry: {\n          enabled: true,\n          manifold_dimension: 8,\n          curvature_scalar: 0.234,\n          geodesic_completeness: true,\n          metric_signature: [8, 0],\n        },\n      };\n\n      // Simulate network delay\n      await new Promise((resolve) => setTimeout(resolve, 500));\n\n      setMathematicalFoundations(mockFoundations);\n      logger.info(\"Mathematical foundations loaded (using mock data)\");\n    } catch (error) {\n      logger.error(\"Failed to load mathematical foundations\", error);\n      // Don't show error toast for mock data - just log it\n      console.warn(\"Using fallback mathematical foundations\");\n\n      // Set minimal fallback data\n      setMathematicalFoundations({\n        hodgkin_huxley: { enabled: false },\n        mamba_ssm: { enabled: false },\n        causal_discovery: { enabled: false },\n        topological_analysis: { enabled: false },\n        riemannian_geometry: { enabled: false },\n      });\n    }\n  };\n\n  const performRealTimeAnalysis = async () => {\n    if (!predictionResult) return;\n\n    try {\n      // Mock mathematical analysis data\n      const mockAnalysis = {\n        stability_analysis: {\n          lyapunov_exponents: [-0.23, 0.45, -1.2],\n          stability_index: 0.87,\n          convergence_rate: 0.034,\n          is_stable: true,\n        },\n        convergence_analysis: {\n          converged: true,\n          iterations: 1247,\n          final_tolerance: 1e-8,\n          convergence_rate: \"quadratic\",\n        },\n        sensitivity_analysis: {\n          parameter_sensitivity: {\n            feature_1: 0.234,\n            feature_2: 0.456,\n            feature_3: 0.123,\n          },\n          robust_features: [\"feature_2\", \"feature_1\"],\n          sensitivity_score: 0.67,\n        },\n        robustness_analysis: {\n          noise_tolerance: 0.15,\n          outlier_resistance: 0.82,\n          perturbation_bounds: [-0.05, 0.05],\n          robustness_score: 0.89,\n        },\n        theoretical_guarantees: {\n          pac_bound: 0.95,\n          generalization_bound: 0.08,\n          statistical_significance: true,\n          confidence_interval: [0.87, 0.93],\n        },\n        mathematical_consistency: {\n          energy_conservation: true,\n          symmetry_preservation: true,\n          causality_respected: true,\n          consistency_score: 0.96,\n        },\n      };\n\n      // Simulate network delay\n      await new Promise((resolve) => setTimeout(resolve, 200));\n\n      setMathematicalAnalysis(mockAnalysis);\n      logger.info(\"Real-time mathematical analysis updated (using mock data)\");\n    } catch (error) {\n      logger.error(\"Real-time analysis failed\", error);\n      // Just log the error, don't disrupt the UI\n    }\n  };\n\n  const executeEnhancedPrediction = async () => {\n    if (!predictionRequest.event_id.trim()) {\n      toast.error(\"Please enter an event ID\");\n      return;\n    }\n\n    setIsProcessing(true);\n    setPredictionResult(null);\n    setMathematicalAnalysis(null);\n\n    try {\n      // Processing stages with realistic timing\n      const stages = [\n        \"Initializing Enhanced Mathematical Engine...\",\n        \"Loading Hodgkin-Huxley Neuromorphic Networks...\",\n        \"Configuring Mamba State Space Models...\",\n        \"Setting up PC Algorithm for Causal Discovery...\",\n        \"Initializing GUDHI Topological Analysis...\",\n        \"Preparing Riemannian Geometry Computations...\",\n        \"Executing Enhanced Revolutionary Prediction...\",\n        \"Performing Mathematical Validation...\",\n        \"Generating Comprehensive Analysis...\",\n      ];\n\n      for (let i = 0; i < stages.length; i++) {\n        setProcessingStage(stages[i]);\n        if (i < stages.length - 1) {\n          await new Promise((resolve) =>\n            setTimeout(resolve, 1500 + Math.random() * 1000),\n          );\n        }\n      }\n\n      logger.info(\"Starting enhanced revolutionary prediction\", {\n        eventId: predictionRequest.event_id,\n        sport: predictionRequest.sport,\n        enabledComponents: {\n          neuromorphic: predictionRequest.enable_neuromorphic,\n          mamba: predictionRequest.enable_mamba,\n          causal: predictionRequest.enable_causal_inference,\n          topological: predictionRequest.enable_topological,\n          riemannian: predictionRequest.enable_riemannian,\n        },\n      });\n\n      // Mock enhanced prediction result\n      const mockResult = {\n        final_prediction: 0.847 + Math.random() * 0.1 - 0.05, // 0.797-0.897\n        prediction_confidence: 0.923 + Math.random() * 0.05 - 0.025, // 0.898-0.948\n        convergence_rate: 0.0234 + Math.random() * 0.01 - 0.005,\n        stability_coefficient: 0.891 + Math.random() * 0.05 - 0.025,\n        total_processing_time: 2.34 + Math.random() * 0.5 - 0.25,\n        mathematical_guarantees: {\n          hodgkin_huxley_convergence: predictionRequest.enable_neuromorphic,\n          mamba_state_consistency: predictionRequest.enable_mamba,\n          causal_inference_validity: predictionRequest.enable_causal_inference,\n          topological_robustness: predictionRequest.enable_topological,\n          riemannian_smoothness: predictionRequest.enable_riemannian,\n        },\n        mamba_eigenvalue_spectrum: Array.from(\n          { length: 20 },\n          (_, i) => Math.exp(-i * 0.3) + Math.random() * 0.1 - 0.05,\n        ),\n        hodgkin_huxley_dynamics: {\n          membrane_potential: Array.from(\n            { length: 100 },\n            (_, i) => -70 + 40 * Math.sin(i * 0.1) + Math.random() * 5 - 2.5,\n          ),\n          firing_rate: Array.from(\n            { length: 50 },\n            (_, i) => 20 + 15 * Math.sin(i * 0.2) + Math.random() * 3 - 1.5,\n          ),\n        },\n        feature_importance: Object.keys(predictionRequest.features).reduce(\n          (acc, key) => {\n            acc[key] = Math.random();\n            return acc;\n          },\n          {} as Record<string, number>,\n        ),\n        uncertainty_quantification: {\n          aleatoric: 0.023 + Math.random() * 0.01 - 0.005,\n          epistemic: 0.045 + Math.random() * 0.02 - 0.01,\n          total: 0.068 + Math.random() * 0.02 - 0.01,\n        },\n      };\n\n      setPredictionResult(mockResult);\n\n      // Mock mathematical analysis\n      const mockAnalysis = {\n        stability_analysis: {\n          lyapunov_exponents: [-0.23, 0.45, -1.2],\n          stability_index: 0.87 + Math.random() * 0.1 - 0.05,\n          convergence_rate: mockResult.convergence_rate,\n          is_stable: true,\n        },\n        convergence_analysis: {\n          converged: true,\n          iterations: Math.floor(1000 + Math.random() * 500),\n          final_tolerance: 1e-8,\n          convergence_rate: \"quadratic\",\n        },\n        sensitivity_analysis: {\n          parameter_sensitivity: mockResult.feature_importance,\n          robust_features: Object.keys(predictionRequest.features).slice(0, 2),\n          sensitivity_score: 0.67 + Math.random() * 0.2 - 0.1,\n        },\n        robustness_analysis: {\n          noise_tolerance: 0.15 + Math.random() * 0.1 - 0.05,\n          outlier_resistance: 0.82 + Math.random() * 0.1 - 0.05,\n          perturbation_bounds: [-0.05, 0.05],\n          robustness_score: 0.89 + Math.random() * 0.08 - 0.04,\n        },\n        theoretical_guarantees: {\n          pac_bound: mockResult.prediction_confidence,\n          generalization_bound: 0.08 + Math.random() * 0.04 - 0.02,\n          statistical_significance: true,\n          confidence_interval: [\n            mockResult.prediction_confidence - 0.06,\n            mockResult.prediction_confidence + 0.06,\n          ],\n        },\n        mathematical_consistency: {\n          energy_conservation: true,\n          symmetry_preservation: true,\n          causality_respected: true,\n          consistency_score: 0.96 + Math.random() * 0.03 - 0.015,\n        },\n      };\n\n      setMathematicalAnalysis(mockAnalysis);\n\n      logger.info(\n        \"Enhanced revolutionary prediction completed successfully (mock)\",\n        {\n          eventId: predictionRequest.event_id,\n          finalPrediction: mockResult.final_prediction,\n          confidence: mockResult.prediction_confidence,\n          processingTime: mockResult.total_processing_time,\n          guaranteesMet: Object.values(\n            mockResult.mathematical_guarantees,\n          ).filter(Boolean).length,\n        },\n      );\n\n      toast.success(\n        `Enhanced prediction completed! Confidence: ${(mockResult.prediction_confidence * 100).toFixed(1)}%`,\n      );\n    } catch (error) {\n      logger.error(\"Enhanced revolutionary prediction failed\", error);\n      toast.error(\"Enhanced prediction failed. Please try again.\");\n    } finally {\n      setIsProcessing(false);\n      setProcessingStage(\"\");\n    }\n  };\n\n  // Memoized chart data\n  const convergenceChartData = useMemo(() => {\n    if (!predictionResult) return null;\n\n    return {\n      labels: Array.from({ length: 50 }, (_, i) => i + 1),\n      datasets: [\n        {\n          label: \"Convergence Rate\",\n          data: Array.from({ length: 50 }, (_, i) => {\n            const progress = (i + 1) / 50;\n            return (\n              predictionResult.convergence_rate * (1 - Math.exp(-progress * 3))\n            );\n          }),\n          borderColor: \"rgba(59, 130, 246, 1)\",\n          backgroundColor: \"rgba(59, 130, 246, 0.1)\",\n          fill: true,\n          tension: 0.4,\n        },\n      ],\n    };\n  }, [predictionResult]);\n\n  const eigenvalueSpectrumData = useMemo(() => {\n    if (!predictionResult?.mamba_eigenvalue_spectrum) return null;\n\n    return {\n      labels: predictionResult.mamba_eigenvalue_spectrum.map(\n        (_, i) => `λ${i + 1}`,\n      ),\n      datasets: [\n        {\n          label: \"Eigenvalue Magnitude\",\n          data: predictionResult.mamba_eigenvalue_spectrum.map(Math.abs),\n          backgroundColor: predictionResult.mamba_eigenvalue_spectrum.map(\n            (val, i) =>\n              Math.abs(val) < 1\n                ? \"rgba(34, 197, 94, 0.8)\"\n                : \"rgba(239, 68, 68, 0.8)\",\n          ),\n          borderColor: predictionResult.mamba_eigenvalue_spectrum.map(\n            (val, i) =>\n              Math.abs(val) < 1\n                ? \"rgba(34, 197, 94, 1)\"\n                : \"rgba(239, 68, 68, 1)\",\n          ),\n          borderWidth: 2,\n        },\n      ],\n    };\n  }, [predictionResult]);\n\n  const topologicalBarcodeData = useMemo(() => {\n    if (!predictionResult?.topological_persistence_barcode) return null;\n\n    return {\n      datasets: [\n        {\n          label: \"Persistence Intervals\",\n          data: predictionResult.topological_persistence_barcode.map(\n            (interval, i) => ({\n              x: interval[0],\n              y: i,\n            }),\n          ),\n          backgroundColor: \"rgba(168, 85, 247, 0.8)\",\n          borderColor: \"rgba(168, 85, 247, 1)\",\n          pointRadius: 4,\n        },\n        {\n          label: \"Death Times\",\n          data: predictionResult.topological_persistence_barcode.map(\n            (interval, i) => ({\n              x: interval[1],\n              y: i,\n            }),\n          ),\n          backgroundColor: \"rgba(239, 68, 68, 0.8)\",\n          borderColor: \"rgba(239, 68, 68, 1)\",\n          pointRadius: 4,\n        },\n      ],\n    };\n  }, [predictionResult]);\n\n  // Mathematical guarantees summary\n  const guaranteesScore = useMemo(() => {\n    if (!predictionResult?.mathematical_guarantees) return 0;\n    const guarantees = Object.values(predictionResult.mathematical_guarantees);\n    return (guarantees.filter(Boolean).length / guarantees.length) * 100;\n  }, [predictionResult]);\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Enhanced Header */}\n      <div className=\"text-center\">\n        <div className=\"flex items-center justify-center gap-3 mb-4\">\n          <Calculator className=\"w-10 h-10 text-purple-600 animate-pulse\" />\n          <h1 className=\"text-4xl font-bold text-gray-900\">\n            Enhanced Revolutionary Engine\n          </h1>\n          <Infinity className=\"w-10 h-10 text-blue-500 animate-bounce\" />\n        </div>\n        <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n          Mathematically Rigorous Implementation: Hodgkin-Huxley Neuromorphics,\n          Mamba State Space, PC Algorithm Causal Discovery, GUDHI Topological\n          Analysis & Riemannian Geometry\n        </p>\n\n        {/* Mathematical Rigor Badges */}\n        <div className=\"flex flex-wrap justify-center gap-2 mt-4\">\n          <Badge className=\"bg-purple-100 text-purple-800\">\n            <Sigma className=\"w-3 h-3 mr-1\" />\n            Hodgkin-Huxley ODEs\n          </Badge>\n          <Badge className=\"bg-green-100 text-green-800\">\n            <Calculator className=\"w-3 h-3 mr-1\" />\n            PC Algorithm\n          </Badge>\n          <Badge className=\"bg-blue-100 text-blue-800\">\n            <Pi className=\"w-3 h-3 mr-1\" />\n            Do-Calculus\n          </Badge>\n          <Badge className=\"bg-yellow-100 text-yellow-800\">\n            <Triangle className=\"w-3 h-3 mr-1\" />\n            GUDHI Persistent Homology\n          </Badge>\n          <Badge className=\"bg-red-100 text-red-800\">\n            <Binary className=\"w-3 h-3 mr-1\" />\n            Mamba O(L) Scaling\n          </Badge>\n          <Badge className=\"bg-indigo-100 text-indigo-800\">\n            <Minimize className=\"w-3 h-3 mr-1\" />\n            Riemannian Geodesics\n          </Badge>\n        </div>\n\n        {/* Real-time monitoring toggle */}\n        <div className=\"flex items-center justify-center gap-2 mt-4\">\n          <Button\n            variant={realTimeMonitoring ? \"default\" : \"outline\"}\n            size=\"sm\"\n            onClick={() => setRealTimeMonitoring(!realTimeMonitoring)}\n            className=\"flex items-center gap-2\"\n          >\n            {realTimeMonitoring ? (\n              <Pause className=\"w-4 h-4\" />\n            ) : (\n              <Play className=\"w-4 h-4\" />\n            )}\n            {realTimeMonitoring ? \"Pause\" : \"Start\"} Real-time Monitoring\n          </Button>\n          {predictionResult && (\n            <Badge\n              variant={\n                guaranteesScore > 80\n                  ? \"success\"\n                  : guaranteesScore > 60\n                    ? \"warning\"\n                    : \"destructive\"\n              }\n            >\n              Mathematical Guarantees: {guaranteesScore.toFixed(0)}%\n            </Badge>\n          )}\n        </div>\n      </div>\n\n      {/* Processing Status */}\n      {isProcessing && (\n        <Card className=\"border-l-4 border-l-purple-500 bg-gradient-to-r from-purple-50 to-blue-50\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-3\">\n              <RefreshCw className=\"w-6 h-6 animate-spin text-purple-600\" />\n              <div className=\"flex-1\">\n                <p className=\"font-medium text-purple-800\">{processingStage}</p>\n                <p className=\"text-sm text-purple-600\">\n                  Enhanced mathematical computation in progress...\n                </p>\n                <Progress value={Math.random() * 100} className=\"mt-2\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Enhanced Interface */}\n      <Tabs\n        value={selectedTab}\n        onValueChange={setSelectedTab}\n        className=\"w-full\"\n      >\n        <TabsList className=\"grid w-full grid-cols-6\">\n          <TabsTrigger value=\"enhanced-engine\">Enhanced Engine</TabsTrigger>\n          <TabsTrigger value=\"mathematical-results\">\n            Mathematical Results\n          </TabsTrigger>\n          <TabsTrigger value=\"rigor-analysis\">Rigor Analysis</TabsTrigger>\n          <TabsTrigger value=\"foundations\">\n            Mathematical Foundations\n          </TabsTrigger>\n          <TabsTrigger value=\"validation\">Validation & Proofs</TabsTrigger>\n          <TabsTrigger value=\"complexity\">Complexity Analysis</TabsTrigger>\n        </TabsList>\n\n        {/* Enhanced Engine Configuration */}\n        <TabsContent value=\"enhanced-engine\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Enhanced Configuration Panel */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Settings className=\"w-5 h-5 mr-2 text-purple-600\" />\n                  Enhanced Mathematical Configuration\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"event-id\">Event ID</Label>\n                  <Input\n                    id=\"event-id\"\n                    value={predictionRequest.event_id}\n                    onChange={(e) =>\n                      setPredictionRequest((prev) => ({\n                        ...prev,\n                        event_id: e.target.value,\n                      }))\n                    }\n                    placeholder=\"Enter event identifier\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"sport\">Sport</Label>\n                  <select\n                    id=\"sport\"\n                    value={predictionRequest.sport}\n                    onChange={(e) =>\n                      setPredictionRequest((prev) => ({\n                        ...prev,\n                        sport: e.target.value,\n                      }))\n                    }\n                    className=\"w-full p-2 border rounded\"\n                  >\n                    <option value=\"basketball\">Basketball</option>\n                    <option value=\"football\">Football</option>\n                    <option value=\"baseball\">Baseball</option>\n                    <option value=\"hockey\">Hockey</option>\n                    <option value=\"soccer\">Soccer</option>\n                  </select>\n                </div>\n\n                {/* Mathematical Rigor Settings */}\n                <div className=\"space-y-4 border-t pt-4\">\n                  <h4 className=\"font-medium text-gray-800 flex items-center\">\n                    <Calculator className=\"w-4 h-4 mr-2\" />\n                    Mathematical Rigor Settings\n                  </h4>\n\n                  {/* Neuromorphic Settings */}\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-3\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"enable-neuromorphic\"\n                        checked={predictionRequest.enable_neuromorphic}\n                        onChange={(e) =>\n                          setPredictionRequest((prev) => ({\n                            ...prev,\n                            enable_neuromorphic: e.target.checked,\n                          }))\n                        }\n                      />\n                      <Brain className=\"w-4 h-4 text-purple-600\" />\n                      <label\n                        htmlFor=\"enable-neuromorphic\"\n                        className=\"text-sm font-medium\"\n                      >\n                        Hodgkin-Huxley Neuromorphic\n                      </label>\n                    </div>\n                    {predictionRequest.enable_neuromorphic && (\n                      <div className=\"ml-7\">\n                        <Label htmlFor=\"timesteps\" className=\"text-xs\">\n                          Temporal Simulation Steps\n                        </Label>\n                        <Input\n                          id=\"timesteps\"\n                          type=\"number\"\n                          value={predictionRequest.neuromorphic_timesteps}\n                          onChange={(e) =>\n                            setPredictionRequest((prev) => ({\n                              ...prev,\n                              neuromorphic_timesteps:\n                                parseInt(e.target.value) || 100,\n                            }))\n                          }\n                          className=\"h-8\"\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Mamba Settings */}\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-3\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"enable-mamba\"\n                        checked={predictionRequest.enable_mamba}\n                        onChange={(e) =>\n                          setPredictionRequest((prev) => ({\n                            ...prev,\n                            enable_mamba: e.target.checked,\n                          }))\n                        }\n                      />\n                      <Activity className=\"w-4 h-4 text-green-600\" />\n                      <label\n                        htmlFor=\"enable-mamba\"\n                        className=\"text-sm font-medium\"\n                      >\n                        Mamba State Space O(L)\n                      </label>\n                    </div>\n                    {predictionRequest.enable_mamba && (\n                      <div className=\"ml-7\">\n                        <Label htmlFor=\"sequence-length\" className=\"text-xs\">\n                          Sequence Length\n                        </Label>\n                        <Input\n                          id=\"sequence-length\"\n                          type=\"number\"\n                          value={predictionRequest.mamba_sequence_length}\n                          onChange={(e) =>\n                            setPredictionRequest((prev) => ({\n                              ...prev,\n                              mamba_sequence_length:\n                                parseInt(e.target.value) || 50,\n                            }))\n                          }\n                          className=\"h-8\"\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Causal Settings */}\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-3\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"enable-causal\"\n                        checked={predictionRequest.enable_causal_inference}\n                        onChange={(e) =>\n                          setPredictionRequest((prev) => ({\n                            ...prev,\n                            enable_causal_inference: e.target.checked,\n                          }))\n                        }\n                      />\n                      <GitBranch className=\"w-4 h-4 text-blue-600\" />\n                      <label\n                        htmlFor=\"enable-causal\"\n                        className=\"text-sm font-medium\"\n                      >\n                        PC Algorithm + Do-Calculus\n                      </label>\n                    </div>\n                    {predictionRequest.enable_causal_inference && (\n                      <div className=\"ml-7\">\n                        <Label htmlFor=\"significance-level\" className=\"text-xs\">\n                          Statistical Significance (α)\n                        </Label>\n                        <Input\n                          id=\"significance-level\"\n                          type=\"number\"\n                          step=\"0.001\"\n                          value={predictionRequest.causal_significance_level}\n                          onChange={(e) =>\n                            setPredictionRequest((prev) => ({\n                              ...prev,\n                              causal_significance_level:\n                                parseFloat(e.target.value) || 0.05,\n                            }))\n                          }\n                          className=\"h-8\"\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Topological Settings */}\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-3\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"enable-topological\"\n                        checked={predictionRequest.enable_topological}\n                        onChange={(e) =>\n                          setPredictionRequest((prev) => ({\n                            ...prev,\n                            enable_topological: e.target.checked,\n                          }))\n                        }\n                      />\n                      <Network className=\"w-4 h-4 text-yellow-600\" />\n                      <label\n                        htmlFor=\"enable-topological\"\n                        className=\"text-sm font-medium\"\n                      >\n                        GUDHI Persistent Homology\n                      </label>\n                    </div>\n                    {predictionRequest.enable_topological && (\n                      <div className=\"ml-7\">\n                        <Label htmlFor=\"max-dimension\" className=\"text-xs\">\n                          Max Homological Dimension\n                        </Label>\n                        <Input\n                          id=\"max-dimension\"\n                          type=\"number\"\n                          value={predictionRequest.topological_max_dimension}\n                          onChange={(e) =>\n                            setPredictionRequest((prev) => ({\n                              ...prev,\n                              topological_max_dimension:\n                                parseInt(e.target.value) || 2,\n                            }))\n                          }\n                          className=\"h-8\"\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Riemannian Settings */}\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-3\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"enable-riemannian\"\n                        checked={predictionRequest.enable_riemannian}\n                        onChange={(e) =>\n                          setPredictionRequest((prev) => ({\n                            ...prev,\n                            enable_riemannian: e.target.checked,\n                          }))\n                        }\n                      />\n                      <Minimize className=\"w-4 h-4 text-indigo-600\" />\n                      <label\n                        htmlFor=\"enable-riemannian\"\n                        className=\"text-sm font-medium\"\n                      >\n                        Riemannian Geometry\n                      </label>\n                    </div>\n                    {predictionRequest.enable_riemannian && (\n                      <div className=\"ml-7\">\n                        <Label htmlFor=\"manifold-dim\" className=\"text-xs\">\n                          Manifold Dimension\n                        </Label>\n                        <Input\n                          id=\"manifold-dim\"\n                          type=\"number\"\n                          value={predictionRequest.riemannian_manifold_dim}\n                          onChange={(e) =>\n                            setPredictionRequest((prev) => ({\n                              ...prev,\n                              riemannian_manifold_dim:\n                                parseInt(e.target.value) || 16,\n                            }))\n                          }\n                          className=\"h-8\"\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Advanced Computation Settings */}\n                <div className=\"space-y-4 border-t pt-4\">\n                  <h4 className=\"font-medium text-gray-800 flex items-center\">\n                    <Cpu className=\"w-4 h-4 mr-2\" />\n                    Computation Settings\n                  </h4>\n\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"flex items-center space-x-2\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"use-gpu\"\n                        checked={predictionRequest.use_gpu}\n                        onChange={(e) =>\n                          setPredictionRequest((prev) => ({\n                            ...prev,\n                            use_gpu: e.target.checked,\n                          }))\n                        }\n                      />\n                      <label htmlFor=\"use-gpu\" className=\"text-xs\">\n                        GPU Acceleration\n                      </label>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"precision\" className=\"text-xs\">\n                        Numerical Precision\n                      </Label>\n                      <select\n                        id=\"precision\"\n                        value={predictionRequest.numerical_precision}\n                        onChange={(e) =>\n                          setPredictionRequest((prev) => ({\n                            ...prev,\n                            numerical_precision: e.target.value,\n                          }))\n                        }\n                        className=\"w-full p-1 border rounded text-xs\"\n                      >\n                        <option value=\"float32\">Float32</option>\n                        <option value=\"float64\">Float64</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"tolerance\" className=\"text-xs\">\n                      Convergence Tolerance\n                    </Label>\n                    <Input\n                      id=\"tolerance\"\n                      type=\"number\"\n                      step=\"1e-8\"\n                      value={predictionRequest.convergence_tolerance}\n                      onChange={(e) =>\n                        setPredictionRequest((prev) => ({\n                          ...prev,\n                          convergence_tolerance:\n                            parseFloat(e.target.value) || 1e-6,\n                        }))\n                      }\n                      className=\"h-8 text-xs\"\n                    />\n                  </div>\n                </div>\n\n                <Button\n                  onClick={executeEnhancedPrediction}\n                  disabled={isProcessing || !predictionRequest.event_id.trim()}\n                  className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700\"\n                >\n                  {isProcessing ? (\n                    <>\n                      <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n                      Computing...\n                    </>\n                  ) : (\n                    <>\n                      <Sparkles className=\"w-4 h-4 mr-2\" />\n                      Execute Enhanced Prediction\n                    </>\n                  )}\n                </Button>\n              </CardContent>\n            </Card>\n\n            {/* Feature Input Panel */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <BarChart3 className=\"w-5 h-5 mr-2 text-blue-600\" />\n                  Feature Configuration\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                {Object.entries(predictionRequest.features).map(\n                  ([key, value]) => (\n                    <div key={key}>\n                      <Label htmlFor={key} className=\"text-xs capitalize\">\n                        {key.replace(/_/g, \" \")}\n                      </Label>\n                      <Input\n                        id={key}\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={value}\n                        onChange={(e) =>\n                          setPredictionRequest((prev) => ({\n                            ...prev,\n                            features: {\n                              ...prev.features,\n                              [key]: parseFloat(e.target.value) || 0,\n                            },\n                          }))\n                        }\n                        className=\"h-8\"\n                      />\n                    </div>\n                  ),\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Mathematical Results */}\n        <TabsContent value=\"mathematical-results\">\n          {predictionResult ? (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Core Predictions */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Target className=\"w-5 h-5 mr-2 text-green-600\" />\n                    Enhanced Prediction Results\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-4xl font-bold text-green-600 mb-2\">\n                      {predictionResult.final_prediction.toFixed(2)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      Final Enhanced Prediction\n                    </div>\n                    <div className=\"mt-2\">\n                      <Badge\n                        variant={\n                          predictionResult.prediction_confidence > 0.8\n                            ? \"success\"\n                            : predictionResult.prediction_confidence > 0.6\n                              ? \"warning\"\n                              : \"destructive\"\n                        }\n                      >\n                        Confidence:{\" \"}\n                        {(predictionResult.prediction_confidence * 100).toFixed(\n                          1,\n                        )}\n                        %\n                      </Badge>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">\n                        Base Prediction:\n                      </span>\n                      <span className=\"font-medium\">\n                        {predictionResult.base_prediction.toFixed(2)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">\n                        Neuromorphic Enhancement:\n                      </span>\n                      <span className=\"font-medium text-purple-600\">\n                        +{predictionResult.neuromorphic_enhancement.toFixed(2)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">\n                        Mamba Refinement:\n                      </span>\n                      <span className=\"font-medium text-green-600\">\n                        +{predictionResult.mamba_temporal_refinement.toFixed(2)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">\n                        Causal Adjustment:\n                      </span>\n                      <span className=\"font-medium text-blue-600\">\n                        {predictionResult.causal_adjustment >= 0 ? \"+\" : \"\"}\n                        {predictionResult.causal_adjustment.toFixed(2)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">\n                        Topological Smoothing:\n                      </span>\n                      <span className=\"font-medium text-yellow-600\">\n                        {predictionResult.topological_smoothing >= 0 ? \"+\" : \"\"}\n                        {predictionResult.topological_smoothing.toFixed(2)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">\n                        Riemannian Projection:\n                      </span>\n                      <span className=\"font-medium text-indigo-600\">\n                        {predictionResult.riemannian_projection >= 0 ? \"+\" : \"\"}\n                        {predictionResult.riemannian_projection.toFixed(2)}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"border-t pt-3\">\n                    <div className=\"text-xs text-gray-500 space-y-1\">\n                      <div>\n                        Processing Time:{\" \"}\n                        {predictionResult.total_processing_time.toFixed(2)}s\n                      </div>\n                      <div>\n                        Convergence Rate:{\" \"}\n                        {(predictionResult.convergence_rate * 100).toFixed(1)}%\n                      </div>\n                      <div>\n                        Stability Margin:{\" \"}\n                        {predictionResult.stability_margin.toFixed(3)}\n                      </div>\n                      <div>\n                        Lyapunov Exponent:{\" \"}\n                        {predictionResult.lyapunov_exponent.toFixed(6)}\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Convergence Analysis */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <TrendingUp className=\"w-5 h-5 mr-2 text-blue-600\" />\n                    Convergence Analysis\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {convergenceChartData && (\n                    <div className=\"h-64\">\n                      <Line\n                        data={convergenceChartData}\n                        options={{\n                          responsive: true,\n                          maintainAspectRatio: false,\n                          plugins: {\n                            legend: { display: false },\n                            title: { display: false },\n                          },\n                          scales: {\n                            x: { title: { display: true, text: \"Iteration\" } },\n                            y: {\n                              title: {\n                                display: true,\n                                text: \"Convergence Rate\",\n                              },\n                              min: 0,\n                              max: 1,\n                            },\n                          },\n                        }}\n                      />\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n\n              {/* Eigenvalue Spectrum */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Activity className=\"w-5 h-5 mr-2 text-green-600\" />\n                    Mamba Eigenvalue Spectrum\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {eigenvalueSpectrumData && (\n                    <div className=\"h-64\">\n                      <Bar\n                        data={eigenvalueSpectrumData}\n                        options={{\n                          responsive: true,\n                          maintainAspectRatio: false,\n                          plugins: {\n                            legend: { display: false },\n                            title: { display: false },\n                          },\n                          scales: {\n                            x: { title: { display: true, text: \"Eigenvalue\" } },\n                            y: { title: { display: true, text: \"Magnitude\" } },\n                          },\n                        }}\n                      />\n                    </div>\n                  )}\n                  <div className=\"mt-2 text-xs text-gray-500\">\n                    Stability guaranteed when all eigenvalues have magnitude\n                    &lt; 1\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Topological Persistence */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Network className=\"w-5 h-5 mr-2 text-yellow-600\" />\n                    Topological Persistence Barcode\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {topologicalBarcodeData && (\n                    <div className=\"h-64\">\n                      <Scatter\n                        data={topologicalBarcodeData}\n                        options={{\n                          responsive: true,\n                          maintainAspectRatio: false,\n                          plugins: {\n                            legend: { position: \"top\" },\n                          },\n                          scales: {\n                            x: {\n                              title: { display: true, text: \"Persistence\" },\n                            },\n                            y: {\n                              title: { display: true, text: \"Feature Index\" },\n                            },\n                          },\n                        }}\n                      />\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <Microscope className=\"w-16 h-16 mx-auto text-gray-400 mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                  No Results Yet\n                </h3>\n                <p className=\"text-gray-600\">\n                  Execute an enhanced prediction to see mathematical results\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* Mathematical Rigor Analysis */}\n        <TabsContent value=\"rigor-analysis\">\n          {mathematicalAnalysis ? (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Award className=\"w-5 h-5 mr-2 text-purple-600\" />\n                    Mathematical Rigor Score\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center\">\n                    <div className=\"text-6xl font-bold text-purple-600 mb-2\">\n                      {mathematicalAnalysis.mathematical_rigor_score.toFixed(0)}\n                    </div>\n                    <div className=\"text-lg text-gray-600\">\n                      Overall Rigor Score\n                    </div>\n                    <Progress\n                      value={mathematicalAnalysis.mathematical_rigor_score}\n                      className=\"mt-4\"\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 mr-2 text-green-600\" />\n                    Theoretical Guarantees\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {predictionResult && (\n                    <div className=\"space-y-2\">\n                      {Object.entries(\n                        predictionResult.mathematical_guarantees,\n                      ).map(([key, value]) => (\n                        <div\n                          key={key}\n                          className=\"flex items-center justify-between\"\n                        >\n                          <span className=\"text-sm text-gray-600 capitalize\">\n                            {key.replace(/_/g, \" \")}\n                          </span>\n                          {value ? (\n                            <CheckCircle className=\"w-4 h-4 text-green-600\" />\n                          ) : (\n                            <AlertCircle className=\"w-4 h-4 text-red-600\" />\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <Gauge className=\"w-16 h-16 mx-auto text-gray-400 mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                  No Analysis Available\n                </h3>\n                <p className=\"text-gray-600\">\n                  Execute an enhanced prediction to see rigor analysis\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* Mathematical Foundations */}\n        <TabsContent value=\"foundations\">\n          {mathematicalFoundations ? (\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <BookOpen className=\"w-5 h-5 mr-2 text-blue-600\" />\n                    Theoretical Foundations\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    {Object.entries(\n                      mathematicalFoundations.theoretical_foundations || {},\n                    ).map(([key, value]: [string, any]) => (\n                      <div key={key} className=\"space-y-2\">\n                        <h4 className=\"font-medium text-gray-900 capitalize\">\n                          {key.replace(/_/g, \" \")}\n                        </h4>\n                        <div className=\"text-sm text-gray-600 space-y-1\">\n                          <div>\n                            <strong>Basis:</strong> {value.mathematical_basis}\n                          </div>\n                          {value.differential_equations && (\n                            <div>\n                              <strong>Equations:</strong>\n                              <ul className=\"list-disc list-inside ml-2 font-mono text-xs\">\n                                {value.differential_equations.map(\n                                  (eq: string, i: number) => (\n                                    <li key={i}>{eq}</li>\n                                  ),\n                                )}\n                              </ul>\n                            </div>\n                          )}\n                          {value.computational_complexity && (\n                            <div>\n                              <strong>Complexity:</strong>{\" \"}\n                              {value.computational_complexity}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <GraduationCap className=\"w-16 h-16 mx-auto text-gray-400 mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                  Loading Foundations...\n                </h3>\n                <p className=\"text-gray-600\">\n                  Retrieving mathematical foundations from backend\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* Validation & Proofs */}\n        <TabsContent value=\"validation\">\n          {predictionResult ? (\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Eye className=\"w-5 h-5 mr-2 text-green-600\" />\n                    Numerical Stability Validation\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    {Object.entries(predictionResult.numerical_stability).map(\n                      ([key, value]) => (\n                        <div key={key} className=\"text-center\">\n                          <div\n                            className={`text-2xl mb-1 ${value ? \"text-green-600\" : \"text-red-600\"}`}\n                          >\n                            {value ? \"✓\" : \"✗\"}\n                          </div>\n                          <div className=\"text-xs text-gray-600 capitalize\">\n                            {key.replace(/_/g, \" \")}\n                          </div>\n                        </div>\n                      ),\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Radar className=\"w-5 h-5 mr-2 text-blue-600\" />\n                    Convergence Diagnostics\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {Object.entries(\n                      predictionResult.convergence_diagnostics,\n                    ).map(([key, value]: [string, any]) => (\n                      <div\n                        key={key}\n                        className=\"flex justify-between items-center\"\n                      >\n                        <span className=\"text-sm text-gray-600 capitalize\">\n                          {key.replace(/_/g, \" \")}\n                        </span>\n                        <span className=\"font-mono text-sm\">\n                          {typeof value === \"boolean\"\n                            ? value\n                              ? \"True\"\n                              : \"False\"\n                            : typeof value === \"number\"\n                              ? value.toFixed(6)\n                              : String(value)}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <Eye className=\"w-16 h-16 mx-auto text-gray-400 mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                  No Validation Data\n                </h3>\n                <p className=\"text-gray-600\">\n                  Execute an enhanced prediction to see validation results\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* Complexity Analysis */}\n        <TabsContent value=\"complexity\">\n          {predictionResult ? (\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Workflow className=\"w-5 h-5 mr-2 text-purple-600\" />\n                    Computational Complexity\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 mb-3\">\n                        Time Complexity\n                      </h4>\n                      <div className=\"space-y-2\">\n                        {Object.entries(predictionResult.actual_complexity).map(\n                          ([key, value]) => (\n                            <div key={key} className=\"flex justify-between\">\n                              <span className=\"text-sm text-gray-600 capitalize\">\n                                {key}:\n                              </span>\n                              <span className=\"font-mono text-sm\">\n                                {String(value)}\n                              </span>\n                            </div>\n                          ),\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 mb-3\">\n                        Memory Usage (MB)\n                      </h4>\n                      <div className=\"space-y-2\">\n                        {Object.entries(predictionResult.memory_usage).map(\n                          ([key, value]) => (\n                            <div key={key} className=\"flex justify-between\">\n                              <span className=\"text-sm text-gray-600 capitalize\">\n                                {key}:\n                              </span>\n                              <span className=\"font-mono text-sm\">\n                                {value.toFixed(2)}\n                              </span>\n                            </div>\n                          ),\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Cpu className=\"w-5 h-5 mr-2 text-blue-600\" />\n                    Runtime Analysis\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-2\">\n                    {Object.entries(\n                      predictionResult.component_processing_times,\n                    ).map(([key, value]) => (\n                      <div\n                        key={key}\n                        className=\"flex justify-between items-center\"\n                      >\n                        <span className=\"text-sm text-gray-600 capitalize\">\n                          {key.replace(/_/g, \" \")}:\n                        </span>\n                        <div className=\"flex items-center gap-2\">\n                          <Progress\n                            value={\n                              (value / predictionResult.total_processing_time) *\n                              100\n                            }\n                            className=\"w-20 h-2\"\n                          />\n                          <span className=\"font-mono text-sm w-16 text-right\">\n                            {value.toFixed(2)}s\n                          </span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <Cpu className=\"w-16 h-16 mx-auto text-gray-400 mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                  No Complexity Data\n                </h3>\n                <p className=\"text-gray-600\">\n                  Execute an enhanced prediction to see complexity analysis\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default EnhancedRevolutionaryInterface;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\revolutionary\\RevolutionaryAccuracyInterface.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\revolutionary\\RevolutionaryAccuracyInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\revolutionary\\RevolutionaryAccuracyInterface.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchBreakthroughSummary'. Either include it or remove the dependency array.","line":154,"column":6,"nodeType":"ArrayExpression","endLine":154,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [fetchBreakthroughSummary]","fix":{"range":[4115,4117],"text":"[fetchBreakthroughSummary]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Atom,\n  Zap,\n  Target,\n  Brain,\n  Activity,\n  BarChart3,\n  Network,\n  Layers,\n  TrendingUp,\n  Settings,\n  Eye,\n  RefreshCw,\n  AlertCircle,\n  CheckCircle,\n  Cpu,\n  Sparkles,\n  Radar,\n  GitBranch,\n  Microscope,\n  Gauge,\n  Workflow,\n} from \"lucide-react\";\nimport SafeChart from \"../ui/SafeChart\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  Filler,\n} from \"chart.js\";\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  Filler,\n);\n\ninterface RevolutionaryPredictionRequest {\n  event_id: string;\n  sport: string;\n  features: Record<string, number>;\n  strategy: string;\n  enable_neuromorphic: boolean;\n  enable_physics_informed: boolean;\n  enable_causal_inference: boolean;\n  enable_geometric_manifold: boolean;\n  enable_mamba_ssm: boolean;\n  enable_topological: boolean;\n  enable_graph_transformer: boolean;\n  context: Record<string, any>;\n}\n\ninterface RevolutionaryPredictionResult {\n  event_id: string;\n  strategy_used: string;\n  base_prediction: number;\n  neuromorphic_enhancement: number;\n  physics_informed_correction: number;\n  causal_adjustment: number;\n  geometric_manifold_projection: number;\n  mamba_temporal_refinement: number;\n  topological_smoothing: number;\n  graph_attention_boost: number;\n  final_prediction: number;\n  manifold_distance: number;\n  causal_strength: number;\n  topological_persistence: number;\n  neuromorphic_spike_rate: number;\n  physics_constraint_violation: number;\n  temporal_coherence: number;\n  graph_centrality: number;\n  uncertainty_bounds: [number, number];\n  confidence_distribution: Record<string, number>;\n  strategy_contributions: Record<string, number>;\n  computational_complexity: Record<string, any>;\n  emergence_patterns: string[];\n  theoretical_bounds: Record<string, number>;\n  processing_time: number;\n  breakthrough_methods_used: string[];\n  accuracy_improvements: Record<string, number>;\n  novel_discoveries: string[];\n}\n\ninterface BreakthroughSummary {\n  breakthrough_technologies: Record<\n    string,\n    {\n      description: string;\n      research_basis: string;\n      accuracy_improvement: string;\n      key_innovations: string[];\n    }\n  >;\n  overall_system_performance: Record<string, any>;\n  research_integration: Record<string, any>;\n  future_roadmap: Record<string, string>;\n}\n\nexport const RevolutionaryAccuracyInterface: React.FC = () => {\n  const [predictionRequest, setPredictionRequest] =\n    useState<RevolutionaryPredictionRequest>({\n      event_id: \"\",\n      sport: \"basketball\",\n      features: {},\n      strategy: \"hybrid_fusion\",\n      enable_neuromorphic: true,\n      enable_physics_informed: true,\n      enable_causal_inference: true,\n      enable_geometric_manifold: true,\n      enable_mamba_ssm: true,\n      enable_topological: true,\n      enable_graph_transformer: true,\n      context: {},\n    });\n\n  const [predictionResult, setPredictionResult] =\n    useState<RevolutionaryPredictionResult | null>(null);\n  const [breakthroughSummary, setBreakthroughSummary] =\n    useState<BreakthroughSummary | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStage, setProcessingStage] = useState(\"\");\n  const [selectedAnalysis, setSelectedAnalysis] =\n    useState<string>(\"prediction\");\n\n  // Fetch breakthrough summary on component mount\n  useEffect(() => {\n    fetchBreakthroughSummary();\n  }, []);\n\n  const fetchBreakthroughSummary = useCallback(async () => {\n    try {\n      const response = await fetch(\n        \"/api/revolutionary/research/breakthrough-summary\",\n      );\n      if (response.ok) {\n        const data = await response.json();\n        setBreakthroughSummary(data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching breakthrough summary:\", error);\n    }\n  }, []);\n\n  // Generate revolutionary prediction\n  const generateRevolutionaryPrediction = useCallback(async () => {\n    if (!predictionRequest.event_id) {\n      alert(\"Please provide an event ID\");\n      return;\n    }\n\n    setIsProcessing(true);\n    setProcessingStage(\"Initializing revolutionary ML systems...\");\n\n    try {\n      // Simulate processing stages\n      const stages = [\n        \"Initializing neuromorphic spiking networks...\",\n        \"Applying physics-informed constraints...\",\n        \"Computing causal inference with do-calculus...\",\n        \"Projecting onto geometric manifolds...\",\n        \"Processing with Mamba state space models...\",\n        \"Analyzing topological persistence...\",\n        \"Applying graph transformer attention...\",\n        \"Fusing revolutionary predictions...\",\n        \"Finalizing breakthrough analysis...\",\n      ];\n\n      for (let i = 0; i < stages.length; i++) {\n        setProcessingStage(stages[i]);\n        await new Promise((resolve) => setTimeout(resolve, 800));\n      }\n\n      const response = await fetch(\"/api/revolutionary/predict/revolutionary\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(predictionRequest),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        setPredictionResult(result);\n      } else {\n        // Fallback with simulated revolutionary data\n        const simulatedResult: RevolutionaryPredictionResult = {\n          event_id: predictionRequest.event_id,\n          strategy_used: predictionRequest.strategy,\n          base_prediction: Math.random() * 100 + 50,\n          neuromorphic_enhancement: (Math.random() - 0.5) * 10,\n          physics_informed_correction: (Math.random() - 0.5) * 5,\n          causal_adjustment: (Math.random() - 0.5) * 8,\n          geometric_manifold_projection: (Math.random() - 0.5) * 6,\n          mamba_temporal_refinement: (Math.random() - 0.5) * 12,\n          topological_smoothing: (Math.random() - 0.5) * 4,\n          graph_attention_boost: (Math.random() - 0.5) * 7,\n          final_prediction: Math.random() * 100 + 50,\n          manifold_distance: Math.random() * 0.5,\n          causal_strength: Math.random() * 0.3 + 0.7,\n          topological_persistence: Math.random() * 0.4 + 0.6,\n          neuromorphic_spike_rate: Math.random() * 0.3 + 0.7,\n          physics_constraint_violation: Math.random() * 0.1,\n          temporal_coherence: Math.random() * 0.2 + 0.8,\n          graph_centrality: Math.random() * 0.6 + 0.4,\n          uncertainty_bounds: [45, 85],\n          confidence_distribution: { high: 0.7, medium: 0.2, low: 0.1 },\n          strategy_contributions: {\n            neuromorphic: 0.15,\n            physics_informed: 0.12,\n            causal: 0.18,\n            manifold: 0.1,\n            mamba: 0.2,\n            topological: 0.08,\n            graph_transformer: 0.17,\n          },\n          computational_complexity: {\n            total_theoretical_complexity: \"O(n^3)\",\n            parallel_efficiency: \"85%\",\n            memory_optimization: \"40% reduction\",\n          },\n          emergence_patterns: [\n            \"Non-linear dynamics detected\",\n            \"Topological features identified\",\n            \"Causal relationships discovered\",\n            \"Manifold structure revealed\",\n          ],\n          theoretical_bounds: { min: 0, max: 100 },\n          processing_time: Math.random() * 3 + 2,\n          breakthrough_methods_used: [\n            \"Neuromorphic Spiking Neural Networks (2024)\",\n            \"Physics-Informed Neural Networks with Sports Constraints\",\n            \"Causal Inference with Do-Calculus (Pearl 2024)\",\n            \"Mamba State Space Models (2024 Breakthrough)\",\n            \"Topological Deep Learning with Persistence Analysis\",\n          ],\n          accuracy_improvements: {\n            neuromorphic: 15.3,\n            physics_informed: 12.7,\n            causal: 18.2,\n            mamba: 23.5,\n            topological: 8.9,\n          },\n          novel_discoveries: [\n            \"Strong causal relationships identified - high confidence in feature causality\",\n            \"Persistent topological features found - robust structural patterns\",\n            \"High neuromorphic spike synchrony detected - indicates strong temporal patterns\",\n            \"Data lies on low-dimensional manifold - efficient geometric representation\",\n          ],\n        };\n        setPredictionResult(simulatedResult);\n      }\n    } catch (error) {\n      console.error(\"Revolutionary prediction failed:\", error);\n    } finally {\n      setIsProcessing(false);\n      setProcessingStage(\"\");\n    }\n  }, [predictionRequest]);\n\n  // Add sample features\n  const addAdvancedSampleFeatures = useCallback(() => {\n    const advancedFeatures = {\n      // Player performance metrics\n      player_efficiency_rating: Math.random() * 35 + 15,\n      usage_rate: Math.random() * 25 + 15,\n      true_shooting_percentage: Math.random() * 0.3 + 0.45,\n\n      // Team dynamics\n      team_offensive_rating: Math.random() * 20 + 100,\n      team_defensive_rating: Math.random() * 15 + 95,\n      pace_factor: Math.random() * 10 + 95,\n\n      // Advanced analytics\n      expected_value_added: Math.random() * 5 - 2.5,\n      win_probability_added: Math.random() * 0.2 - 0.1,\n      clutch_performance: Math.random() * 10 + 5,\n\n      // Contextual factors\n      rest_days: Math.floor(Math.random() * 5),\n      travel_distance: Math.random() * 3000,\n      altitude_effect: Math.random() * 1000 + 500,\n\n      // Market dynamics\n      betting_volume: Math.random() * 1000000 + 100000,\n      market_sentiment: Math.random() * 2 - 1,\n      sharp_money_percentage: Math.random() * 100,\n\n      // Weather and venue\n      temperature: Math.random() * 40 + 40,\n      humidity: Math.random() * 60 + 20,\n      wind_speed: Math.random() * 15,\n\n      // Psychological factors\n      momentum_score: Math.random() * 20 - 10,\n      pressure_index: Math.random() * 100,\n      confidence_rating: Math.random() * 10 + 5,\n    };\n\n    setPredictionRequest((prev) => ({\n      ...prev,\n      features: advancedFeatures,\n    }));\n  }, []);\n\n  // Revolutionary enhancement breakdown chart\n  const enhancementBreakdownData = useMemo(() => {\n    if (!predictionResult) return null;\n\n    return {\n      labels: [\n        \"Neuromorphic\",\n        \"Physics-Informed\",\n        \"Causal Inference\",\n        \"Geometric Manifold\",\n        \"Mamba SSM\",\n        \"Topological\",\n        \"Graph Transformer\",\n      ],\n      datasets: [\n        {\n          label: \"Enhancement Magnitude\",\n          data: [\n            Math.abs(predictionResult.neuromorphic_enhancement),\n            Math.abs(predictionResult.physics_informed_correction),\n            Math.abs(predictionResult.causal_adjustment),\n            Math.abs(predictionResult.geometric_manifold_projection),\n            Math.abs(predictionResult.mamba_temporal_refinement),\n            Math.abs(predictionResult.topological_smoothing),\n            Math.abs(predictionResult.graph_attention_boost),\n          ],\n          backgroundColor: [\n            \"rgba(99, 102, 241, 0.8)\",\n            \"rgba(34, 197, 94, 0.8)\",\n            \"rgba(168, 85, 247, 0.8)\",\n            \"rgba(251, 191, 36, 0.8)\",\n            \"rgba(239, 68, 68, 0.8)\",\n            \"rgba(59, 130, 246, 0.8)\",\n            \"rgba(16, 185, 129, 0.8)\",\n          ],\n          borderColor: [\n            \"rgba(99, 102, 241, 1)\",\n            \"rgba(34, 197, 94, 1)\",\n            \"rgba(168, 85, 247, 1)\",\n            \"rgba(251, 191, 36, 1)\",\n            \"rgba(239, 68, 68, 1)\",\n            \"rgba(59, 130, 246, 1)\",\n            \"rgba(16, 185, 129, 1)\",\n          ],\n          borderWidth: 2,\n        },\n      ],\n    };\n  }, [predictionResult]);\n\n  // Advanced metrics radar chart\n  const advancedMetricsData = useMemo(() => {\n    if (!predictionResult) return null;\n\n    return {\n      labels: [\n        \"Causal Strength\",\n        \"Temporal Coherence\",\n        \"Topological Persistence\",\n        \"Neuromorphic Activity\",\n        \"Graph Centrality\",\n        \"Manifold Quality\",\n        \"Physics Compliance\",\n      ],\n      datasets: [\n        {\n          label: \"Revolutionary Metrics\",\n          data: [\n            predictionResult.causal_strength * 100,\n            predictionResult.temporal_coherence * 100,\n            predictionResult.topological_persistence * 100,\n            predictionResult.neuromorphic_spike_rate * 100,\n            predictionResult.graph_centrality * 100,\n            (1 - predictionResult.manifold_distance) * 100,\n            (1 - predictionResult.physics_constraint_violation) * 100,\n          ],\n          backgroundColor: \"rgba(147, 51, 234, 0.2)\",\n          borderColor: \"rgba(147, 51, 234, 1)\",\n          pointBackgroundColor: \"rgba(147, 51, 234, 1)\",\n          pointBorderColor: \"#fff\",\n          pointHoverBackgroundColor: \"#fff\",\n          pointHoverBorderColor: \"rgba(147, 51, 234, 1)\",\n        },\n      ],\n    };\n  }, [predictionResult]);\n\n  // Accuracy improvements comparison\n  const accuracyImprovementsData = useMemo(() => {\n    if (!predictionResult) return null;\n\n    const improvements = predictionResult.accuracy_improvements;\n    return {\n      labels: Object.keys(improvements),\n      datasets: [\n        {\n          label: \"Accuracy Improvement (%)\",\n          data: Object.values(improvements),\n          backgroundColor: \"rgba(34, 197, 94, 0.8)\",\n          borderColor: \"rgba(34, 197, 94, 1)\",\n          borderWidth: 2,\n        },\n      ],\n    };\n  }, [predictionResult]);\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <div className=\"flex items-center justify-center gap-3 mb-4\">\n          <Atom className=\"w-10 h-10 text-purple-600 animate-pulse\" />\n          <h1 className=\"text-4xl font-bold text-gray-900\">\n            Revolutionary Accuracy Engine\n          </h1>\n          <Sparkles className=\"w-10 h-10 text-yellow-500 animate-bounce\" />\n        </div>\n        <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n          State-of-the-Art 2024 ML Research Integration: Neuromorphic Computing,\n          Physics-Informed Networks, Causal Inference, Geometric Deep Learning,\n          Mamba Models, Topological Analysis & Graph Transformers\n        </p>\n\n        {/* Breakthrough Technologies Badge */}\n        <div className=\"flex flex-wrap justify-center gap-2 mt-4\">\n          <Badge className=\"bg-purple-100 text-purple-800\">\n            Neuromorphic 2024\n          </Badge>\n          <Badge className=\"bg-green-100 text-green-800\">\n            Physics-Informed\n          </Badge>\n          <Badge className=\"bg-blue-100 text-blue-800\">Do-Calculus</Badge>\n          <Badge className=\"bg-yellow-100 text-yellow-800\">\n            Manifold Learning\n          </Badge>\n          <Badge className=\"bg-red-100 text-red-800\">Mamba SSM</Badge>\n          <Badge className=\"bg-indigo-100 text-indigo-800\">\n            Topological DL\n          </Badge>\n          <Badge className=\"bg-pink-100 text-pink-800\">\n            Graph Transformers\n          </Badge>\n        </div>\n      </div>\n\n      {/* Processing Status */}\n      {isProcessing && (\n        <Card className=\"border-l-4 border-l-purple-500 bg-gradient-to-r from-purple-50 to-blue-50\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-3\">\n              <RefreshCw className=\"w-6 h-6 animate-spin text-purple-600\" />\n              <div>\n                <p className=\"font-medium text-purple-800\">{processingStage}</p>\n                <p className=\"text-sm text-purple-600\">\n                  Revolutionary computation in progress...\n                </p>\n                <Progress\n                  value={\n                    ((stages.indexOf(processingStage) + 1) / stages.length) *\n                    100\n                  }\n                  className=\"mt-2\"\n                />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Main Interface */}\n      <Tabs\n        value={selectedAnalysis}\n        onValueChange={setSelectedAnalysis}\n        className=\"w-full\"\n      >\n        <TabsList className=\"grid w-full grid-cols-5\">\n          <TabsTrigger value=\"prediction\">Prediction Engine</TabsTrigger>\n          <TabsTrigger value=\"results\">Revolutionary Results</TabsTrigger>\n          <TabsTrigger value=\"analysis\">Advanced Analysis</TabsTrigger>\n          <TabsTrigger value=\"breakthroughs\">2024 Breakthroughs</TabsTrigger>\n          <TabsTrigger value=\"research\">Research Integration</TabsTrigger>\n        </TabsList>\n\n        {/* Prediction Engine */}\n        <TabsContent value=\"prediction\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Configuration Panel */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Settings className=\"w-5 h-5 mr-2 text-purple-600\" />\n                  Revolutionary Configuration\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"event-id\">Event ID</Label>\n                  <Input\n                    id=\"event-id\"\n                    value={predictionRequest.event_id}\n                    onChange={(e) =>\n                      setPredictionRequest((prev) => ({\n                        ...prev,\n                        event_id: e.target.value,\n                      }))\n                    }\n                    placeholder=\"Enter event identifier\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"sport\">Sport</Label>\n                  <select\n                    id=\"sport\"\n                    value={predictionRequest.sport}\n                    onChange={(e) =>\n                      setPredictionRequest((prev) => ({\n                        ...prev,\n                        sport: e.target.value,\n                      }))\n                    }\n                    className=\"w-full px-3 py-2 border rounded-md\"\n                  >\n                    <option value=\"basketball\">Basketball</option>\n                    <option value=\"football\">Football</option>\n                    <option value=\"baseball\">Baseball</option>\n                    <option value=\"soccer\">Soccer</option>\n                    <option value=\"hockey\">Hockey</option>\n                  </select>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"strategy\">Revolutionary Strategy</Label>\n                  <select\n                    id=\"strategy\"\n                    value={predictionRequest.strategy}\n                    onChange={(e) =>\n                      setPredictionRequest((prev) => ({\n                        ...prev,\n                        strategy: e.target.value,\n                      }))\n                    }\n                    className=\"w-full px-3 py-2 border rounded-md\"\n                  >\n                    <option value=\"hybrid_fusion\">\n                      Hybrid Fusion (Recommended)\n                    </option>\n                    <option value=\"neuromorphic_spiking\">\n                      Neuromorphic Spiking\n                    </option>\n                    <option value=\"physics_informed\">Physics-Informed</option>\n                    <option value=\"causal_inference\">Causal Inference</option>\n                    <option value=\"geometric_manifold\">\n                      Geometric Manifold\n                    </option>\n                    <option value=\"mamba_state_space\">Mamba State Space</option>\n                    <option value=\"topological_learning\">\n                      Topological Learning\n                    </option>\n                    <option value=\"graph_transformer\">Graph Transformer</option>\n                  </select>\n                </div>\n\n                <div className=\"space-y-3\">\n                  <Label>Enable Revolutionary Components</Label>\n                  {[\n                    {\n                      key: \"enable_neuromorphic\",\n                      label: \"Neuromorphic Spiking Networks\",\n                      icon: Brain,\n                    },\n                    {\n                      key: \"enable_physics_informed\",\n                      label: \"Physics-Informed Constraints\",\n                      icon: Atom,\n                    },\n                    {\n                      key: \"enable_causal_inference\",\n                      label: \"Causal Inference (Do-Calculus)\",\n                      icon: GitBranch,\n                    },\n                    {\n                      key: \"enable_geometric_manifold\",\n                      label: \"Geometric Manifold Learning\",\n                      icon: Layers,\n                    },\n                    {\n                      key: \"enable_mamba_ssm\",\n                      label: \"Mamba State Space Models\",\n                      icon: Activity,\n                    },\n                    {\n                      key: \"enable_topological\",\n                      label: \"Topological Deep Learning\",\n                      icon: Network,\n                    },\n                    {\n                      key: \"enable_graph_transformer\",\n                      label: \"Graph Transformer Attention\",\n                      icon: Radar,\n                    },\n                  ].map(({ key, label, icon: Icon }) => (\n                    <div key={key} className=\"flex items-center space-x-3\">\n                      <input\n                        type=\"checkbox\"\n                        id={key}\n                        checked={\n                          predictionRequest[\n                            key as keyof RevolutionaryPredictionRequest\n                          ] as boolean\n                        }\n                        onChange={(e) =>\n                          setPredictionRequest((prev) => ({\n                            ...prev,\n                            [key]: e.target.checked,\n                          }))\n                        }\n                        className=\"rounded\"\n                      />\n                      <Icon className=\"w-4 h-4 text-purple-600\" />\n                      <label htmlFor={key} className=\"text-sm font-medium\">\n                        {label}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"flex gap-3\">\n                  <Button\n                    onClick={addAdvancedSampleFeatures}\n                    variant=\"outline\"\n                    className=\"flex-1\"\n                  >\n                    <Microscope className=\"w-4 h-4 mr-2\" />\n                    Advanced Sample Data\n                  </Button>\n                  <Button\n                    onClick={generateRevolutionaryPrediction}\n                    disabled={isProcessing}\n                    className=\"flex-1 bg-gradient-to-r from-purple-600 to-violet-600 hover:from-purple-700 hover:to-violet-700\"\n                  >\n                    {isProcessing ? (\n                      <RefreshCw className=\"w-4 h-4 animate-spin mr-2\" />\n                    ) : (\n                      <Zap className=\"w-4 h-4 mr-2\" />\n                    )}\n                    {isProcessing\n                      ? \"Processing...\"\n                      : \"Generate Revolutionary Prediction\"}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Feature Input */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Advanced Feature Vector</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-2 gap-3 max-h-96 overflow-y-auto\">\n                  {Object.entries(predictionRequest.features).map(\n                    ([key, value]) => (\n                      <div key={key}>\n                        <Label htmlFor={key} className=\"text-xs\">\n                          {key.replace(/_/g, \" \").toUpperCase()}\n                        </Label>\n                        <Input\n                          id={key}\n                          type=\"number\"\n                          step=\"0.001\"\n                          value={value}\n                          onChange={(e) =>\n                            setPredictionRequest((prev) => ({\n                              ...prev,\n                              features: {\n                                ...prev.features,\n                                [key]: parseFloat(e.target.value) || 0,\n                              },\n                            }))\n                          }\n                          className=\"text-xs\"\n                        />\n                      </div>\n                    ),\n                  )}\n                </div>\n                {Object.keys(predictionRequest.features).length === 0 && (\n                  <div className=\"text-center py-8\">\n                    <p className=\"text-gray-500 mb-4\">No features configured</p>\n                    <Button\n                      onClick={addAdvancedSampleFeatures}\n                      variant=\"outline\"\n                    >\n                      Add Advanced Sample Features\n                    </Button>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Revolutionary Results */}\n        <TabsContent value=\"results\">\n          {predictionResult ? (\n            <div className=\"space-y-6\">\n              {/* Main Prediction Result */}\n              <Card className=\"border-l-4 border-l-purple-500 bg-gradient-to-r from-purple-50 to-violet-50\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Target className=\"w-6 h-6 mr-2 text-purple-600\" />\n                    Revolutionary Prediction Result\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    <div className=\"text-center\">\n                      <p className=\"text-sm font-medium text-gray-600\">\n                        Base Prediction\n                      </p>\n                      <p className=\"text-3xl font-bold text-gray-900\">\n                        {predictionResult.base_prediction.toFixed(2)}\n                      </p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-sm font-medium text-gray-600\">\n                        Revolutionary Enhancement\n                      </p>\n                      <p className=\"text-3xl font-bold text-purple-600\">\n                        {predictionResult.final_prediction -\n                          predictionResult.base_prediction >\n                        0\n                          ? \"+\"\n                          : \"\"}\n                        {(\n                          predictionResult.final_prediction -\n                          predictionResult.base_prediction\n                        ).toFixed(2)}\n                      </p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-sm font-medium text-purple-800\">\n                        Final Revolutionary Prediction\n                      </p>\n                      <p className=\"text-4xl font-bold text-purple-900\">\n                        {predictionResult.final_prediction.toFixed(2)}\n                      </p>\n                      <p className=\"text-sm text-purple-700 mt-1\">\n                        Uncertainty: [\n                        {predictionResult.uncertainty_bounds[0].toFixed(1)},{\" \"}\n                        {predictionResult.uncertainty_bounds[1].toFixed(1)}]\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Enhancement Breakdown */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <BarChart3 className=\"w-5 h-5 mr-2 text-blue-600\" />\n                      Enhancement Breakdown\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {enhancementBreakdownData && (\n                      <div className=\"h-64\">\n                        <Bar\n                          data={enhancementBreakdownData}\n                          options={{\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            plugins: {\n                              legend: {\n                                display: false,\n                              },\n                            },\n                            scales: {\n                              y: {\n                                beginAtZero: true,\n                                title: {\n                                  display: true,\n                                  text: \"Enhancement Magnitude\",\n                                },\n                              },\n                            },\n                          }}\n                        />\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Radar className=\"w-5 h-5 mr-2 text-purple-600\" />\n                      Advanced Metrics\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {advancedMetricsData && (\n                      <div className=\"h-64\">\n                        <RadarChart\n                          data={advancedMetricsData}\n                          options={{\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            plugins: {\n                              legend: {\n                                display: false,\n                              },\n                            },\n                            scales: {\n                              r: {\n                                beginAtZero: true,\n                                max: 100,\n                                ticks: {\n                                  callback: function (value) {\n                                    return value + \"%\";\n                                  },\n                                },\n                              },\n                            },\n                          }}\n                        />\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </div>\n\n              {/* Revolutionary Methods Used */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Sparkles className=\"w-5 h-5 mr-2 text-yellow-600\" />\n                    Breakthrough Methods Applied\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {predictionResult.breakthrough_methods_used.map(\n                      (method, idx) => (\n                        <div\n                          key={idx}\n                          className=\"flex items-center gap-3 p-3 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg\"\n                        >\n                          <CheckCircle className=\"w-5 h-5 text-green-500 flex-shrink-0\" />\n                          <span className=\"text-sm font-medium text-gray-800\">\n                            {method}\n                          </span>\n                        </div>\n                      ),\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Novel Discoveries */}\n              {predictionResult.novel_discoveries.length > 0 && (\n                <Card className=\"border-l-4 border-l-green-500 bg-green-50\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center text-green-800\">\n                      <Eye className=\"w-5 h-5 mr-2\" />\n                      Novel Discoveries & Insights\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      {predictionResult.novel_discoveries.map(\n                        (discovery, idx) => (\n                          <div key={idx} className=\"flex items-start gap-3\">\n                            <Microscope className=\"w-5 h-5 text-green-600 flex-shrink-0 mt-0.5\" />\n                            <p className=\"text-sm text-green-800\">\n                              {discovery}\n                            </p>\n                          </div>\n                        ),\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <Atom className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\n                <p className=\"text-gray-500\">\n                  No revolutionary prediction generated yet\n                </p>\n                <p className=\"text-sm text-gray-400 mt-2\">\n                  Configure your input and generate a prediction to see\n                  revolutionary results\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* Advanced Analysis */}\n        <TabsContent value=\"analysis\">\n          {predictionResult && accuracyImprovementsData ? (\n            <div className=\"space-y-6\">\n              {/* Accuracy Improvements */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <TrendingUp className=\"w-5 h-5 mr-2 text-green-600\" />\n                    Accuracy Improvements by Method\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"h-64\">\n                    <Bar\n                      data={accuracyImprovementsData}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        plugins: {\n                          legend: {\n                            display: false,\n                          },\n                        },\n                        scales: {\n                          y: {\n                            beginAtZero: true,\n                            title: {\n                              display: true,\n                              text: \"Accuracy Improvement (%)\",\n                            },\n                          },\n                        },\n                      }}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Detailed Metrics */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                <Card>\n                  <CardContent className=\"p-4 text-center\">\n                    <Gauge className=\"w-8 h-8 mx-auto mb-2 text-blue-600\" />\n                    <p className=\"text-sm font-medium text-gray-600\">\n                      Causal Strength\n                    </p>\n                    <p className=\"text-xl font-bold text-blue-600\">\n                      {(predictionResult.causal_strength * 100).toFixed(1)}%\n                    </p>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardContent className=\"p-4 text-center\">\n                    <Activity className=\"w-8 h-8 mx-auto mb-2 text-green-600\" />\n                    <p className=\"text-sm font-medium text-gray-600\">\n                      Temporal Coherence\n                    </p>\n                    <p className=\"text-xl font-bold text-green-600\">\n                      {(predictionResult.temporal_coherence * 100).toFixed(1)}%\n                    </p>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardContent className=\"p-4 text-center\">\n                    <Network className=\"w-8 h-8 mx-auto mb-2 text-purple-600\" />\n                    <p className=\"text-sm font-medium text-gray-600\">\n                      Topological Persistence\n                    </p>\n                    <p className=\"text-xl font-bold text-purple-600\">\n                      {(predictionResult.topological_persistence * 100).toFixed(\n                        1,\n                      )}\n                      %\n                    </p>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardContent className=\"p-4 text-center\">\n                    <Brain className=\"w-8 h-8 mx-auto mb-2 text-orange-600\" />\n                    <p className=\"text-sm font-medium text-gray-600\">\n                      Neuromorphic Activity\n                    </p>\n                    <p className=\"text-xl font-bold text-orange-600\">\n                      {(predictionResult.neuromorphic_spike_rate * 100).toFixed(\n                        1,\n                      )}\n                      %\n                    </p>\n                  </CardContent>\n                </Card>\n              </div>\n\n              {/* Computational Complexity */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Cpu className=\"w-5 h-5 mr-2 text-gray-600\" />\n                    Computational Analysis\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">\n                        Processing Time\n                      </p>\n                      <p className=\"text-lg font-bold text-gray-900\">\n                        {predictionResult.processing_time.toFixed(3)}s\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">\n                        Theoretical Complexity\n                      </p>\n                      <p className=\"text-lg font-bold text-gray-900\">\n                        {\n                          predictionResult.computational_complexity\n                            .total_theoretical_complexity\n                        }\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">\n                        Memory Optimization\n                      </p>\n                      <p className=\"text-lg font-bold text-gray-900\">\n                        {\n                          predictionResult.computational_complexity\n                            .memory_optimization\n                        }\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <BarChart3 className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\n                <p className=\"text-gray-500\">No analysis data available</p>\n                <p className=\"text-sm text-gray-400 mt-2\">\n                  Generate a revolutionary prediction to view detailed analysis\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* 2024 Breakthroughs */}\n        <TabsContent value=\"breakthroughs\">\n          {breakthroughSummary ? (\n            <div className=\"space-y-6\">\n              {/* System Performance Overview */}\n              <Card className=\"border-l-4 border-l-green-500 bg-green-50\">\n                <CardHeader>\n                  <CardTitle className=\"text-green-800\">\n                    Overall System Performance\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                    <div>\n                      <p className=\"text-sm font-medium text-green-700\">\n                        Theoretical Maximum\n                      </p>\n                      <p className=\"text-xl font-bold text-green-900\">\n                        {\n                          breakthroughSummary.overall_system_performance\n                            .theoretical_maximum_improvement\n                        }\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-green-700\">\n                        Practical Achieved\n                      </p>\n                      <p className=\"text-xl font-bold text-green-900\">\n                        {\n                          breakthroughSummary.overall_system_performance\n                            .practical_achieved_improvement\n                        }\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-green-700\">\n                        Computational Efficiency\n                      </p>\n                      <p className=\"text-xl font-bold text-green-900\">\n                        {\n                          breakthroughSummary.overall_system_performance\n                            .computational_efficiency\n                        }\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-green-700\">\n                        Memory Efficiency\n                      </p>\n                      <p className=\"text-xl font-bold text-green-900\">\n                        {\n                          breakthroughSummary.overall_system_performance\n                            .memory_efficiency\n                        }\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Breakthrough Technologies */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {Object.entries(\n                  breakthroughSummary.breakthrough_technologies,\n                ).map(([tech, details]) => (\n                  <Card\n                    key={tech}\n                    className=\"hover:shadow-lg transition-shadow\"\n                  >\n                    <CardHeader>\n                      <CardTitle className=\"text-lg capitalize\">\n                        {tech.replace(/_/g, \" \")}\n                      </CardTitle>\n                      <Badge className=\"w-fit bg-blue-100 text-blue-800\">\n                        {details.accuracy_improvement} improvement\n                      </Badge>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-sm text-gray-600 mb-3\">\n                        {details.description}\n                      </p>\n                      <p className=\"text-xs text-gray-500 mb-3 font-medium\">\n                        Research: {details.research_basis}\n                      </p>\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-700 mb-2\">\n                          Key Innovations:\n                        </p>\n                        <ul className=\"space-y-1\">\n                          {details.key_innovations.map((innovation, idx) => (\n                            <li\n                              key={idx}\n                              className=\"flex items-center gap-2 text-xs\"\n                            >\n                              <div className=\"w-1.5 h-1.5 bg-blue-500 rounded-full flex-shrink-0\" />\n                              <span className=\"text-gray-600\">\n                                {innovation}\n                              </span>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <RefreshCw className=\"w-8 h-8 animate-spin mx-auto mb-4 text-gray-400\" />\n                <p className=\"text-gray-500\">\n                  Loading breakthrough technologies...\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* Research Integration */}\n        <TabsContent value=\"research\">\n          {breakthroughSummary ? (\n            <div className=\"space-y-6\">\n              {/* Research Integration Stats */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Workflow className=\"w-5 h-5 mr-2 text-purple-600\" />\n                    Research Integration Statistics\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                    <div className=\"text-center\">\n                      <p className=\"text-3xl font-bold text-purple-600\">\n                        {\n                          breakthroughSummary.research_integration\n                            .total_papers_implemented\n                        }\n                      </p>\n                      <p className=\"text-sm text-gray-600\">\n                        Papers Implemented\n                      </p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-3xl font-bold text-blue-600\">\n                        {\n                          breakthroughSummary.research_integration\n                            .cutting_edge_methods\n                        }\n                      </p>\n                      <p className=\"text-sm text-gray-600\">\n                        Cutting-Edge Methods\n                      </p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-3xl font-bold text-green-600\">\n                        {\n                          breakthroughSummary.research_integration\n                            .novel_combinations\n                        }\n                      </p>\n                      <p className=\"text-sm text-gray-600\">\n                        Novel Combinations\n                      </p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-3xl font-bold text-orange-600\">\n                        {\n                          breakthroughSummary.research_integration\n                            .breakthrough_conferences.length\n                        }\n                      </p>\n                      <p className=\"text-sm text-gray-600\">Top Conferences</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Future Roadmap */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <TrendingUp className=\"w-5 h-5 mr-2 text-green-600\" />\n                    Future Research Roadmap\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {Object.entries(breakthroughSummary.future_roadmap).map(\n                      ([area, timeline]) => (\n                        <div\n                          key={area}\n                          className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\"\n                        >\n                          <span className=\"font-medium text-gray-800 capitalize\">\n                            {area.replace(/_/g, \" \")}\n                          </span>\n                          <Badge variant=\"outline\">{timeline}</Badge>\n                        </div>\n                      ),\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Theoretical Guarantees */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Theoretical Guarantees</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {breakthroughSummary.research_integration.theoretical_guarantees.map(\n                      (guarantee, idx) => (\n                        <div key={idx} className=\"flex items-start gap-3\">\n                          <CheckCircle className=\"w-5 h-5 text-green-500 flex-shrink-0 mt-0.5\" />\n                          <span className=\"text-sm text-gray-700\">\n                            {guarantee}\n                          </span>\n                        </div>\n                      ),\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <RefreshCw className=\"w-8 h-8 animate-spin mx-auto mb-4 text-gray-400\" />\n                <p className=\"text-gray-500\">\n                  Loading research integration data...\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default RevolutionaryAccuracyInterface;\n\n// Helper data for processing stages\nconst stages = [\n  \"Initializing neuromorphic spiking networks...\",\n  \"Applying physics-informed constraints...\",\n  \"Computing causal inference with do-calculus...\",\n  \"Projecting onto geometric manifolds...\",\n  \"Processing with Mamba state space models...\",\n  \"Analyzing topological persistence...\",\n  \"Applying graph transformer attention...\",\n  \"Fusing revolutionary predictions...\",\n  \"Finalizing breakthrough analysis...\",\n];\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\risk\\RiskProfileManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\risk\\RiskProfileManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\risk\\RiskProfileManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\settings\\UltimateSettingsPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\settings\\UltimateSettingsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\settings\\UnifiedSettingsInterface.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\settings\\UnifiedSettingsInterface.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\settings\\UnifiedSettingsInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\settings\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\settings\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\RiskReasoningDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\RiskReasoningDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\RiskReasoningDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\SHAPVisualization.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\SHAPVisualization.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\SHAPVisualization.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\ErrorFallback.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\ErrorFallback.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\ErrorFallback.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\FeedbackWidget.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\FeedbackWidget.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\FeedbackWidget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\Toast.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":2,"column":52,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":2,"endColumn":54,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[78,80],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[78,80],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\ndeclare const _default: React.NamedExoticComponent<{}>;\nexport default _default;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\Toast.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\Toast.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\ToastContext.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\ToastContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\ToastContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\Toaster.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\Toaster.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\feedback\\Toaster.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\layout\\Navigation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\layout\\Navigation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\layout\\Navigation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\layout\\ProtectedRoute.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\layout\\ProtectedRoute.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\layout\\ProtectedRoute.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\LoadingScreen.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\LoadingScreen.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\LoadingScreen.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\LoadingSpinner.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\LoadingSpinner.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\LoadingSpinner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\NoResultsFallback.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\NoResultsFallback.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\NoResultsFallback.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\ProgressBar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\ProgressBar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\ProgressBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\Skeleton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\Skeleton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\Skeleton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\SkeletonLoader.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\SkeletonLoader.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\SkeletonLoader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\ThemeToggle.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\ThemeToggle.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\shared\\ui\\ThemeToggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedMoneyMakerIntegration.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedMoneyMakerIntegration.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedMoneyMakerIntegration.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadConfiguration'. Either include it or remove the dependency array.","line":98,"column":6,"nodeType":"ArrayExpression","endLine":98,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [loadConfiguration]","fix":{"range":[3048,3050],"text":"[loadConfiguration]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { UnifiedServiceRegistry } from '../../services/unified/UnifiedServiceRegistry';\nimport { UnifiedPredictionService } from '../../services/unified/UnifiedPredictionService';\nimport { UnifiedAnalyticsService } from '../../services/unified/UnifiedAnalyticsService';\nimport { UnifiedStateService } from '../../services/unified/UnifiedStateService';\nimport { UnifiedNotificationService } from '../../services/unified/UnifiedNotificationService';\nimport { UnifiedErrorService } from '../../services/unified/UnifiedErrorService';\nimport {\n  Card,\n  Button,\n  Input,\n  Select,\n  Slider,\n  Spinner,\n  Toast,\n  Badge,\n  Modal,\n  Tabs,\n  Tab,\n  Progress,\n} from '../ui/UnifiedUI';\n\ninterface MoneyMakerConfig {\n  investmentAmount: number;\n  riskProfile: 'conservative' | 'moderate' | 'aggressive';\n  timeHorizon: number;\n  confidenceThreshold: number;\n  modelWeights: {\n    [key: string]: number;\n  };\n  arbitrageThreshold: number;\n  maxExposure: number;\n  correlationLimit: number;\n}\n\ninterface MoneyMakerPrediction {\n  eventId: string;\n  marketType: string;\n  selection: string;\n  odds: number;\n  confidence: number;\n  expectedValue: number;\n  kellyFraction: number;\n  modelContributions: {\n    [key: string]: number;\n  };\n}\n\ninterface MoneyMakerPortfolio {\n  legs: MoneyMakerPrediction[];\n  totalOdds: number;\n  expectedValue: number;\n  riskScore: number;\n  confidence: number;\n  arbitrageOpportunity: boolean;\n  optimalStakes: {\n    [key: string]: number;\n  };\n}\n\nexport const UnifiedMoneyMakerIntegration: React.FC = () => {\n  // Initialize services\n  const serviceRegistry = UnifiedServiceRegistry.getInstance();\n  const predictionService = serviceRegistry.getService<UnifiedPredictionService>('prediction');\n  const analyticsService = serviceRegistry.getService<UnifiedAnalyticsService>('analytics');\n  const stateService = serviceRegistry.getService<UnifiedStateService>('state');\n  const notificationService =\n    serviceRegistry.getService<UnifiedNotificationService>('notification');\n  const errorService = serviceRegistry.getService<UnifiedErrorService>('error');\n\n  // State\n  const [config, setConfig] = useState<MoneyMakerConfig>({\n    investmentAmount: 1000,\n    riskProfile: 'moderate',\n    timeHorizon: 24,\n    confidenceThreshold: 85,\n    modelWeights: {},\n    arbitrageThreshold: 0.05,\n    maxExposure: 50,\n    correlationLimit: 0.7,\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n  } | null>(null);\n  const [portfolios, setPortfolios] = useState<MoneyMakerPortfolio[]>([]);\n  const [showPortfolios, setShowPortfolios] = useState(false);\n  const [activeTab, setActiveTab] = useState<'basic' | 'advanced' | 'arbitrage' | 'analysis'>(\n    'basic'\n  );\n  const [analysisResults, setAnalysisResults] = useState<any>(null);\n\n  // Load initial configuration\n  useEffect(() => {\n    loadConfiguration();\n  }, []);\n\n  const loadConfiguration = async () => {\n    try {\n      setLoading(true);\n      const models = await predictionService.getAvailableModels();\n      const modelWeights = models.reduce(\n        (acc, model) => ({\n          ...acc,\n          [model.id]: 1 / models.length,\n        }),\n        {}\n      );\n\n      setConfig(prev => ({ ...prev, modelWeights }));\n    } catch (error) {\n      handleError('Failed to load configuration', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleConfigChange = (key: keyof MoneyMakerConfig, value: any) => {\n    setConfig(prev => ({ ...prev, [key]: value }));\n  };\n\n  const generatePortfolios = async () => {\n    try {\n      setLoading(true);\n      const results = await predictionService.generateMoneyMakerPortfolios(config);\n      setPortfolios(results.portfolios);\n      setAnalysisResults(results.analysis);\n      setShowPortfolios(true);\n    } catch (error) {\n      handleError('Failed to generate portfolios', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleError = (message: string, error: any) => {\n    setError(message);\n    setToast({ message, type: 'error' });\n    errorService.handleError(error, {\n      code: 'MONEY_MAKER_ERROR',\n      source: 'UnifiedMoneyMakerIntegration',\n      details: { message },\n    });\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount);\n  };\n\n  const formatPercentage = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'percent',\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1,\n    }).format(value / 100);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Spinner size=\"large\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex items-center justify-between mb-8\">\n          <h1 className=\"text-3xl font-bold\">Money Maker Integration</h1>\n          <Badge variant=\"success\">Advanced Mode</Badge>\n        </div>\n\n        {/* Navigation Tabs */}\n        <Tabs className=\"mb-8\" value={activeTab} onChange={setActiveTab}>\n          <Tab label=\"Basic Settings\" value=\"basic\" />\n          <Tab label=\"Advanced Settings\" value=\"advanced\" />\n          <Tab label=\"Arbitrage\" value=\"arbitrage\" />\n          <Tab label=\"Analysis\" value=\"analysis\" />\n        </Tabs>\n\n        {/* Basic Settings Tab */}\n        {activeTab === 'basic' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Investment & Risk</h2>\n              <div className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Investment Amount\n                  </label>\n                  <Input\n                    max=\"100000\"\n                    min=\"10\"\n                    type=\"number\"\n                    value={config.investmentAmount}\n                    onChange={e =>\n                      handleConfigChange('investmentAmount', parseFloat(e.target.value))\n                    }\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Risk Profile\n                  </label>\n                  <Select\n                    options={[\n                      { value: 'conservative', label: 'Conservative' },\n                      { value: 'moderate', label: 'Moderate' },\n                      { value: 'aggressive', label: 'Aggressive' },\n                    ]}\n                    value={config.riskProfile}\n                    onChange={e => handleConfigChange('riskProfile', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Time Horizon (Hours)\n                  </label>\n                  <Input\n                    max=\"72\"\n                    min=\"1\"\n                    type=\"number\"\n                    value={config.timeHorizon}\n                    onChange={e => handleConfigChange('timeHorizon', parseInt(e.target.value))}\n                  />\n                </div>\n              </div>\n            </Card>\n\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Model Configuration</h2>\n              <div className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Confidence Threshold\n                  </label>\n                  <div className=\"space-y-2\">\n                    <Slider\n                      max={99}\n                      min={80}\n                      value={config.confidenceThreshold}\n                      onChange={value => handleConfigChange('confidenceThreshold', value)}\n                    />\n                    <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n                      <span>80%</span>\n                      <span>Current: {config.confidenceThreshold}%</span>\n                      <span>99%</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"font-medium mb-2\">Model Weights</h3>\n                  <div className=\"space-y-4\">\n                    {Object.entries(config.modelWeights).map(([modelId, weight]) => (\n                      <div key={modelId} className=\"flex items-center space-x-4\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex justify-between mb-1\">\n                            <span className=\"font-medium\">{modelId}</span>\n                            <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                              {formatPercentage(weight * 100)}\n                            </span>\n                          </div>\n                          <Slider\n                            max={100}\n                            min={0}\n                            value={weight * 100}\n                            onChange={value =>\n                              handleConfigChange('modelWeights', {\n                                ...config.modelWeights,\n                                [modelId]: value / 100,\n                              })\n                            }\n                          />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Advanced Settings Tab */}\n        {activeTab === 'advanced' && (\n          <Card>\n            <h2 className=\"text-xl font-bold mb-4\">Advanced Configuration</h2>\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Maximum Exposure\n                </label>\n                <div className=\"space-y-2\">\n                  <Slider\n                    max={100}\n                    min={10}\n                    value={config.maxExposure}\n                    onChange={value => handleConfigChange('maxExposure', value)}\n                  />\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n                    <span>10%</span>\n                    <span>Current: {config.maxExposure}%</span>\n                    <span>100%</span>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Correlation Limit\n                </label>\n                <div className=\"space-y-2\">\n                  <Slider\n                    max={1}\n                    min={0}\n                    step={0.1}\n                    value={config.correlationLimit}\n                    onChange={value => handleConfigChange('correlationLimit', value)}\n                  />\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n                    <span>0.0</span>\n                    <span>Current: {config.correlationLimit}</span>\n                    <span>1.0</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n        )}\n\n        {/* Arbitrage Tab */}\n        {activeTab === 'arbitrage' && (\n          <Card>\n            <h2 className=\"text-xl font-bold mb-4\">Arbitrage Settings</h2>\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Arbitrage Threshold\n                </label>\n                <div className=\"space-y-2\">\n                  <Slider\n                    max={10}\n                    min={1}\n                    step={0.1}\n                    value={config.arbitrageThreshold * 100}\n                    onChange={value => handleConfigChange('arbitrageThreshold', value / 100)}\n                  />\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n                    <span>1%</span>\n                    <span>Current: {formatPercentage(config.arbitrageThreshold)}</span>\n                    <span>10%</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded\">\n                <h3 className=\"font-medium mb-2\">Arbitrage Opportunities</h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  The system will automatically identify and prioritize arbitrage opportunities\n                  based on the configured threshold. Higher thresholds will result in more\n                  conservative arbitrage selections.\n                </p>\n              </div>\n            </div>\n          </Card>\n        )}\n\n        {/* Analysis Tab */}\n        {activeTab === 'analysis' && analysisResults && (\n          <Card>\n            <h2 className=\"text-xl font-bold mb-4\">Performance Analysis</h2>\n            <div className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded\">\n                  <h3 className=\"font-medium mb-2\">Win Rate</h3>\n                  <p className=\"text-2xl font-bold text-green-600\">\n                    {formatPercentage(analysisResults.winRate)}\n                  </p>\n                </div>\n                <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded\">\n                  <h3 className=\"font-medium mb-2\">ROI</h3>\n                  <p className=\"text-2xl font-bold text-blue-600\">\n                    {formatPercentage(analysisResults.roi)}\n                  </p>\n                </div>\n                <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded\">\n                  <h3 className=\"font-medium mb-2\">Profit Factor</h3>\n                  <p className=\"text-2xl font-bold text-purple-600\">\n                    {analysisResults.profitFactor.toFixed(2)}\n                  </p>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"font-medium mb-2\">Model Performance</h3>\n                <div className=\"space-y-4\">\n                  {Object.entries(analysisResults.modelPerformance).map(\n                    ([modelId, performance]: [string, any]) => (\n                      <div key={modelId} className=\"space-y-2\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"font-medium\">{modelId}</span>\n                          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                            {formatPercentage(performance.accuracy)}\n                          </span>\n                        </div>\n                        <Progress className=\"h-2\" max={100} value={performance.accuracy} />\n                      </div>\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n          </Card>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-end mt-8 space-x-4\">\n          <Button variant=\"secondary\" onClick={loadConfiguration}>\n            Reset\n          </Button>\n          <Button disabled={loading} variant=\"primary\" onClick={generatePortfolios}>\n            {loading ? <Spinner size=\"small\" /> : 'Generate Portfolios'}\n          </Button>\n        </div>\n      </div>\n\n      {/* Portfolios Modal */}\n      <Modal\n        isOpen={showPortfolios}\n        title=\"Money Maker Portfolios\"\n        onClose={() => setShowPortfolios(false)}\n      >\n        <div className=\"space-y-6\">\n          {portfolios.map((portfolio, index) => (\n            <Card key={index}>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium\">Portfolio {index + 1}</h3>\n                <div className=\"flex space-x-2\">\n                  {portfolio.arbitrageOpportunity && <Badge variant=\"success\">Arbitrage</Badge>}\n                  <Badge\n                    variant={\n                      portfolio.expectedValue > 0\n                        ? 'success'\n                        : portfolio.expectedValue < 0\n                          ? 'danger'\n                          : 'warning'\n                    }\n                  >\n                    {formatPercentage(portfolio.expectedValue)} Expected Value\n                  </Badge>\n                </div>\n              </div>\n              <div className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-medium mb-2\">Legs</h4>\n                  <div className=\"space-y-2\">\n                    {portfolio.legs.map((leg, legIndex) => (\n                      <div key={legIndex} className=\"p-2 bg-gray-50 dark:bg-gray-800 rounded\">\n                        <div className=\"flex justify-between mb-1\">\n                          <span className=\"font-medium\">{leg.selection}</span>\n                          <span>{leg.odds.toFixed(2)}</span>\n                        </div>\n                        <div className=\"grid grid-cols-2 gap-2 text-sm text-gray-600 dark:text-gray-400\">\n                          <div>\n                            <span>Confidence: {formatPercentage(leg.confidence)}</span>\n                          </div>\n                          <div>\n                            <span>Kelly: {formatPercentage(leg.kellyFraction)}</span>\n                          </div>\n                          <div>\n                            <span>\n                              Stake: {formatCurrency(portfolio.optimalStakes[leg.eventId])}\n                            </span>\n                          </div>\n                          <div>\n                            <span>EV: {formatPercentage(leg.expectedValue)}</span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Odds</p>\n                    <p className=\"font-medium\">{portfolio.totalOdds.toFixed(2)}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Risk Score</p>\n                    <p className=\"font-medium\">{portfolio.riskScore.toFixed(2)}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Confidence</p>\n                    <p className=\"font-medium\">{formatPercentage(portfolio.confidence)}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Expected Value</p>\n                    <p\n                      className={`font-medium ${\n                        portfolio.expectedValue > 0 ? 'text-green-600' : 'text-red-600'\n                      }`}\n                    >\n                      {formatPercentage(portfolio.expectedValue)}\n                    </p>\n                  </div>\n                </div>\n                <Button\n                  className=\"w-full\"\n                  variant=\"primary\"\n                  onClick={() => {\n                    // Handle portfolio selection\n                    setShowPortfolios(false);\n                  }}\n                >\n                  Select Portfolio\n                </Button>\n              </div>\n            </Card>\n          ))}\n        </div>\n      </Modal>\n\n      {/* Toast Notifications */}\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedStrategyConfig-fixed.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedStrategyConfig.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedStrategyConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedStrategyConfig.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadModels'. Either include it or remove the dependency array.","line":151,"column":6,"nodeType":"ArrayExpression","endLine":151,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [loadModels]","fix":{"range":[4203,4205],"text":"[loadModels]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { UnifiedServiceRegistry } from '../../services/unified/UnifiedServiceRegistry';\nimport { UnifiedPredictionService } from '../../services/unified/UnifiedPredictionService';\nimport { UnifiedAnalyticsService } from '../../services/unified/UnifiedAnalyticsService';\nimport { UnifiedStateService } from '../../services/unified/UnifiedStateService';\nimport { UnifiedNotificationService } from '../../services/unified/UnifiedNotificationService';\nimport { UnifiedErrorService } from '../../services/unified/UnifiedErrorService';\nimport { useEventAnalytics } from '../../hooks/useUnifiedAnalytics';\nimport {\n  Card,\n  Button,\n  Input,\n  Select,\n  Slider,\n  Spinner,\n  Toast,\n  Badge,\n  Modal,\n  Tabs,\n  Tab,\n} from '../ui/UnifiedUI';\n\ninterface StrategyConfig {\n  investmentAmount: number;\n  modelSet: {\n    [key: string]: {\n      enabled: boolean;\n      weight: number;\n    };\n  };\n  confidenceThreshold: number;\n  strategyMode:\n    | 'maximum_profit'\n    | 'balanced'\n    | 'conservative'\n    | 'aggressive'\n    | 'arbitrage'\n    | 'ai_adaptive';\n  portfolioSize: number;\n  sportsUniverse: {\n    all: boolean;\n    selected: string[];\n  };\n  timeHorizon: {\n    value: number;\n    unit: 'minutes' | 'hours' | 'days';\n  };\n  riskProfile: {\n    maxDrawdown: number;\n    maxExposure: number;\n    correlationLimit: number;\n  };\n}\n\ninterface ModelInfo {\n  id: string;\n  name: string;\n  type: string;\n  accuracy: number;\n  profitFactor: number;\n  description: string;\n  lastUpdated: string;\n}\n\ninterface PortfolioRecommendation {\n  legs: Array<{\n    eventId: string;\n    marketType: string;\n    selection: string;\n    odds: number;\n    confidence: number;\n    expectedValue: number;\n    kellyFraction: number;\n  }>;\n  totalOdds: number;\n  expectedValue: number;\n  riskScore: number;\n  confidence: number;\n}\n\nexport const UnifiedStrategyConfig: React.FC = () => {\n  // Initialize services\n  const serviceRegistry = UnifiedServiceRegistry.getInstance();\n  const predictionService = serviceRegistry.getService<UnifiedPredictionService>('prediction');\n  const analyticsService = serviceRegistry.getService<UnifiedAnalyticsService>('analytics');\n  const stateService = serviceRegistry.getService<UnifiedStateService>('state');\n  const notificationService =\n    serviceRegistry.getService<UnifiedNotificationService>('notification');\n  const errorService = serviceRegistry.getService<UnifiedErrorService>('error');\n  const webSocketService = serviceRegistry.getService<any>('websocket');\n\n  // State\n  const [config, setConfig] = useState<StrategyConfig>({\n    investmentAmount: 1000,\n    modelSet: {},\n    confidenceThreshold: 85,\n    strategyMode: 'balanced',\n    portfolioSize: 3,\n    sportsUniverse: {\n      all: true,\n      selected: [],\n    },\n    timeHorizon: {\n      value: 1,\n      unit: 'hours',\n    },\n    riskProfile: {\n      maxDrawdown: 20,\n      maxExposure: 50,\n      correlationLimit: 0.7,\n    },\n  });\n  const [models, setModels] = useState<ModelInfo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [toast, setToast] = useState<{\n    message: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n  } | null>(null);\n  const [recommendations, setRecommendations] = useState<PortfolioRecommendation[]>([]);\n  const [showRecommendations, setShowRecommendations] = useState(false);\n  const [activeTab, setActiveTab] = useState<'basic' | 'advanced' | 'risk' | 'models'>('basic');\n\n  // Analytics state\n  const [selectedEvent, setSelectedEvent] = useState<string | null>(null);\n  const [selectedMarket, setSelectedMarket] = useState<string | null>(null);\n  const [selectedSelection, setSelectedSelection] = useState<string | null>(null);\n\n  const analytics = useEventAnalytics(\n    selectedEvent || '',\n    selectedMarket || '',\n    selectedSelection || ''\n  );\n\n  const {\n    metrics,\n    trendDelta,\n    riskProfile,\n    explainabilityMap,\n    modelMetadata,\n    isLoading: analyticsLoading,\n    error: analyticsError,\n    getMetricColor,\n    getTrendIcon,\n    getRiskLevelColor,\n  } = analytics;\n\n  // Load available models\n  useEffect(() => {\n    loadModels();\n  }, []);\n\n  const loadModels = async () => {\n    try {\n      setLoading(true);\n      const availableModels = await predictionService.getAvailableModels();\n      setModels(availableModels);\n\n      // Initialize model set with default weights\n      const modelSet = availableModels.reduce(\n        (acc, model) => ({\n          ...acc,\n          [model.id]: {\n            enabled: true,\n            weight: 1 / availableModels.length,\n          },\n        }),\n        {}\n      );\n\n      setConfig(prev => ({ ...prev, modelSet }));\n    } catch (error) {\n      handleError('Failed to load models', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleConfigChange = (key: keyof StrategyConfig, value: any) => {\n    setConfig(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleModelWeightChange = (modelId: string, weight: number) => {\n    setConfig(prev => ({\n      ...prev,\n      modelSet: {\n        ...prev.modelSet,\n        [modelId]: {\n          ...prev.modelSet[modelId],\n          weight,\n        },\n      },\n    }));\n  };\n\n  const handleModelToggle = (modelId: string, enabled: boolean) => {\n    setConfig(prev => ({\n      ...prev,\n      modelSet: {\n        ...prev.modelSet,\n        [modelId]: {\n          ...prev.modelSet[modelId],\n          enabled,\n        },\n      },\n    }));\n  };\n\n  const generateRecommendations = async () => {\n    try {\n      setLoading(true);\n      const recommendations = await predictionService.generatePortfolioRecommendations(config);\n      setRecommendations(recommendations);\n      setShowRecommendations(true);\n    } catch (error) {\n      handleError('Failed to generate recommendations', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleError = (message: string, error: any) => {\n    setError(message);\n    setToast({ message, type: 'error' });\n    errorService.handleError(error, {\n      code: 'STRATEGY_CONFIG_ERROR',\n      source: 'UnifiedStrategyConfig',\n      details: { message },\n    });\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount);\n  };\n\n  const formatPercentage = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'percent',\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1,\n    }).format(value / 100);\n  };\n\n  // Subscribe to real-time updates\n  useEffect(() => {\n    if (!selectedEvent || !selectedMarket || !selectedSelection) return;\n\n    const unsubscribe = webSocketService?.subscribe?.('analytics', (data: any) => {\n      if (data.eventId === selectedEvent && data.marketId === selectedMarket) {\n        // Analytics hook will auto-update via its own effect\n      }\n    });\n\n    return () => unsubscribe && unsubscribe();\n  }, [selectedEvent, selectedMarket, selectedSelection, webSocketService]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Spinner size=\"large\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <h1 className=\"text-3xl font-bold mb-8\">Strategy Configuration</h1>\n\n        {/* Analytics Overview */}\n        {selectedEvent && selectedMarket && selectedSelection && (\n          <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n            <h2 className=\"text-2xl font-bold mb-6\">Strategy Configuration</h2>\n\n            {/* Analytics Overview */}\n            {analyticsLoading ? (\n              <div className=\"flex justify-center py-4\">\n                <Spinner size=\"medium\" />\n              </div>\n            ) : analyticsError ? (\n              <div className=\"text-red-500 text-center\">\n                <p>{analyticsError}</p>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                {metrics && (\n                  <>\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Accuracy</p>\n                      <div className=\"flex items-center space-x-2\">\n                        <p className=\"text-lg font-semibold\">\n                          {(metrics.accuracy * 100).toFixed(1)}%\n                        </p>\n                        {trendDelta && (\n                          <Icon\n                            className={`w-4 h-4 ${getMetricColor(trendDelta.accuracyDelta, 'positive')}`}\n                            name={getTrendIcon(trendDelta.accuracyDelta)}\n                          />\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Precision</p>\n                      <div className=\"flex items-center space-x-2\">\n                        <p className=\"text-lg font-semibold\">\n                          {(metrics.precision * 100).toFixed(1)}%\n                        </p>\n                        {trendDelta && (\n                          <Icon\n                            className={`w-4 h-4 ${getMetricColor(trendDelta.precisionDelta, 'positive')}`}\n                            name={getTrendIcon(trendDelta.precisionDelta)}\n                          />\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Recall</p>\n                      <div className=\"flex items-center space-x-2\">\n                        <p className=\"text-lg font-semibold\">\n                          {(metrics.recall * 100).toFixed(1)}%\n                        </p>\n                        {trendDelta && (\n                          <Icon\n                            className={`w-4 h-4 ${getMetricColor(trendDelta.recallDelta, 'positive')}`}\n                            name={getTrendIcon(trendDelta.recallDelta)}\n                          />\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Profit/Loss</p>\n                      <div className=\"flex items-center space-x-2\">\n                        <p className=\"text-lg font-semibold\">{metrics.profitLoss.toFixed(2)}%</p>\n                        <Icon\n                          className={`w-4 h-4 ${getMetricColor(metrics.profitLoss, 'positive')}`}\n                          name={getTrendIcon(metrics.profitLoss)}\n                        />\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            )}\n\n            {/* Risk Profile */}\n            {riskProfile && (\n              <div className=\"mt-4\">\n                <h4 className=\"text-sm font-medium mb-2\">Risk Profile</h4>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant={riskProfile.riskLevel.toLowerCase() as any}>\n                    {riskProfile.riskLevel}\n                  </Badge>\n                  <p className=\"text-sm text-gray-600\">{riskProfile.recommendation}</p>\n                </div>\n              </div>\n            )}\n\n            {/* Model Stability */}\n            {modelMetadata && (\n              <div className=\"mt-4\">\n                <h4 className=\"text-sm font-medium mb-2\">Model Stability</h4>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge\n                    variant={\n                      modelMetadata.stability > 0.8\n                        ? 'success'\n                        : modelMetadata.stability > 0.6\n                          ? 'warning'\n                          : 'danger'\n                    }\n                  >\n                    {modelMetadata.stability > 0.8\n                      ? 'High'\n                      : modelMetadata.stability > 0.6\n                        ? 'Medium'\n                        : 'Low'}\n                  </Badge>\n                  <p className=\"text-sm text-gray-600\">\n                    Last updated: {new Date(modelMetadata.lastUpdated).toLocaleString()}\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Navigation Tabs */}\n        <Tabs className=\"mb-8\" value={activeTab} onChange={setActiveTab}>\n          <Tab label=\"Basic Settings\" value=\"basic\" />\n          <Tab label=\"Advanced Settings\" value=\"advanced\" />\n          <Tab label=\"Risk Management\" value=\"risk\" />\n          <Tab label=\"Model Selection\" value=\"models\" />\n        </Tabs>\n\n        {/* Basic Settings Tab */}\n        {activeTab === 'basic' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Investment & Strategy</h2>\n              <div className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Investment Amount\n                  </label>\n                  <Input\n                    max=\"100000\"\n                    min=\"10\"\n                    type=\"number\"\n                    value={config.investmentAmount}\n                    onChange={e =>\n                      handleConfigChange('investmentAmount', parseFloat(e.target.value))\n                    }\n                  />\n                  <p className=\"mt-1 text-sm text-gray-500\">Range: $10 - $100,000</p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Strategy Mode\n                  </label>\n                  <Select\n                    options={[\n                      { value: 'maximum_profit', label: 'Maximum Profit' },\n                      { value: 'balanced', label: 'Balanced' },\n                      { value: 'conservative', label: 'Conservative' },\n                      { value: 'aggressive', label: 'Aggressive' },\n                      { value: 'arbitrage', label: 'Arbitrage' },\n                      { value: 'ai_adaptive', label: 'AI-Adaptive' },\n                    ]}\n                    value={config.strategyMode}\n                    onChange={e => handleConfigChange('strategyMode', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Portfolio Size\n                  </label>\n                  <Select\n                    options={[\n                      { value: 2, label: '2 Legs' },\n                      { value: 3, label: '3 Legs' },\n                      { value: 4, label: '4 Legs' },\n                      { value: 5, label: '5 Legs' },\n                      { value: 6, label: '6 Legs' },\n                    ]}\n                    value={config.portfolioSize}\n                    onChange={e => handleConfigChange('portfolioSize', parseInt(e.target.value))}\n                  />\n                </div>\n              </div>\n            </Card>\n\n            <Card>\n              <h2 className=\"text-xl font-bold mb-4\">Sports & Time Horizon</h2>\n              <div className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Sports Universe\n                  </label>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center\">\n                      <input\n                        checked={config.sportsUniverse.all}\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                        type=\"checkbox\"\n                        onChange={e =>\n                          handleConfigChange('sportsUniverse', {\n                            ...config.sportsUniverse,\n                            all: e.target.checked,\n                            selected: e.target.checked ? [] : config.sportsUniverse.selected,\n                          })\n                        }\n                      />\n                      <label className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                        All Sports\n                      </label>\n                    </div>\n                    {!config.sportsUniverse.all && (\n                      <Select\n                        multiple\n                        options={[\n                          { value: 'football', label: 'Football' },\n                          { value: 'basketball', label: 'Basketball' },\n                          { value: 'baseball', label: 'Baseball' },\n                          { value: 'hockey', label: 'Hockey' },\n                          { value: 'soccer', label: 'Soccer' },\n                          { value: 'tennis', label: 'Tennis' },\n                        ]}\n                        value={config.sportsUniverse.selected}\n                        onChange={e =>\n                          handleConfigChange('sportsUniverse', {\n                            ...config.sportsUniverse,\n                            selected: Array.from(e.target.selectedOptions, option => option.value),\n                          })\n                        }\n                      />\n                    )}\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Time Horizon\n                  </label>\n                  <div className=\"flex space-x-4\">\n                    <Input\n                      className=\"w-24\"\n                      min=\"1\"\n                      type=\"number\"\n                      value={config.timeHorizon.value}\n                      onChange={e =>\n                        handleConfigChange('timeHorizon', {\n                          ...config.timeHorizon,\n                          value: parseInt(e.target.value),\n                        })\n                      }\n                    />\n                    <Select\n                      options={[\n                        { value: 'minutes', label: 'Minutes' },\n                        { value: 'hours', label: 'Hours' },\n                        { value: 'days', label: 'Days' },\n                      ]}\n                      value={config.timeHorizon.unit}\n                      onChange={e =>\n                        handleConfigChange('timeHorizon', {\n                          ...config.timeHorizon,\n                          unit: e.target.value,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n        )}\n\n        {/* Advanced Settings Tab */}\n        {activeTab === 'advanced' && (\n          <Card>\n            <h2 className=\"text-xl font-bold mb-4\">Advanced Configuration</h2>\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Confidence Threshold\n                </label>\n                <div className=\"space-y-2\">\n                  <Slider\n                    max={99}\n                    min={80}\n                    value={config.confidenceThreshold}\n                    onChange={value => handleConfigChange('confidenceThreshold', value)}\n                  />\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n                    <span>80%</span>\n                    <span>Current: {config.confidenceThreshold}%</span>\n                    <span>99%</span>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"font-medium mb-2\">Model Weights</h3>\n                <div className=\"space-y-4\">\n                  {models.map(model => (\n                    <div key={model.id} className=\"flex items-center space-x-4\">\n                      <input\n                        checked={config.modelSet[model.id]?.enabled}\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                        type=\"checkbox\"\n                        onChange={e => handleModelToggle(model.id, e.target.checked)}\n                      />\n                      <div className=\"flex-1\">\n                        <div className=\"flex justify-between mb-1\">\n                          <span className=\"font-medium\">{model.name}</span>\n                          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                            Accuracy: {formatPercentage(model.accuracy)}\n                          </span>\n                        </div>\n                        <Slider\n                          disabled={!config.modelSet[model.id]?.enabled}\n                          max={100}\n                          min={0}\n                          value={config.modelSet[model.id]?.weight * 100}\n                          onChange={value => handleModelWeightChange(model.id, value / 100)}\n                        />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card>\n        )}\n\n        {/* Risk Management Tab */}\n        {activeTab === 'risk' && (\n          <Card>\n            <h2 className=\"text-xl font-bold mb-4\">Risk Management</h2>\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Maximum Drawdown\n                </label>\n                <div className=\"space-y-2\">\n                  <Slider\n                    max={50}\n                    min={5}\n                    value={config.riskProfile.maxDrawdown}\n                    onChange={value =>\n                      handleConfigChange('riskProfile', {\n                        ...config.riskProfile,\n                        maxDrawdown: value,\n                      })\n                    }\n                  />\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n                    <span>5%</span>\n                    <span>Current: {config.riskProfile.maxDrawdown}%</span>\n                    <span>50%</span>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Maximum Exposure\n                </label>\n                <div className=\"space-y-2\">\n                  <Slider\n                    max={100}\n                    min={10}\n                    value={config.riskProfile.maxExposure}\n                    onChange={value =>\n                      handleConfigChange('riskProfile', {\n                        ...config.riskProfile,\n                        maxExposure: value,\n                      })\n                    }\n                  />\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n                    <span>10%</span>\n                    <span>Current: {config.riskProfile.maxExposure}%</span>\n                    <span>100%</span>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Correlation Limit\n                </label>\n                <div className=\"space-y-2\">\n                  <Slider\n                    max={1}\n                    min={0}\n                    step={0.1}\n                    value={config.riskProfile.correlationLimit}\n                    onChange={value =>\n                      handleConfigChange('riskProfile', {\n                        ...config.riskProfile,\n                        correlationLimit: value,\n                      })\n                    }\n                  />\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n                    <span>0.0</span>\n                    <span>Current: {config.riskProfile.correlationLimit}</span>\n                    <span>1.0</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n        )}\n\n        {/* Model Selection Tab */}\n        {activeTab === 'models' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {models.map(model => (\n              <Card key={model.id}>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-medium\">{model.name}</h3>\n                  <Badge\n                    variant={\n                      model.accuracy >= 90 ? 'success' : model.accuracy >= 80 ? 'warning' : 'danger'\n                    }\n                  >\n                    {formatPercentage(model.accuracy)} Accuracy\n                  </Badge>\n                </div>\n                <div className=\"space-y-4\">\n                  <p className=\"text-gray-600 dark:text-gray-400\">{model.description}</p>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Type</p>\n                      <p className=\"font-medium\">{model.type}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Profit Factor</p>\n                      <p className=\"font-medium\">{model.profitFactor.toFixed(2)}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Last Updated: {new Date(model.lastUpdated).toLocaleDateString()}\n                    </span>\n                    <input\n                      checked={config.modelSet[model.id]?.enabled}\n                      className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                      type=\"checkbox\"\n                      onChange={e => handleModelToggle(model.id, e.target.checked)}\n                    />\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-end mt-8 space-x-4\">\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              // Reset to default configuration\n              loadModels();\n            }}\n          >\n            Reset\n          </Button>\n          <Button disabled={loading} variant=\"primary\" onClick={generateRecommendations}>\n            {loading ? <Spinner size=\"small\" /> : 'Generate Recommendations'}\n          </Button>\n        </div>\n      </div>\n\n      {/* Recommendations Modal */}\n      <Modal\n        isOpen={showRecommendations}\n        title=\"Portfolio Recommendations\"\n        onClose={() => setShowRecommendations(false)}\n      >\n        <div className=\"space-y-6\">\n          {recommendations.map((recommendation, index) => (\n            <Card key={index}>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium\">Portfolio {index + 1}</h3>\n                <Badge\n                  variant={\n                    recommendation.expectedValue > 0\n                      ? 'success'\n                      : recommendation.expectedValue < 0\n                        ? 'danger'\n                        : 'warning'\n                  }\n                >\n                  {formatPercentage(recommendation.expectedValue)} Expected Value\n                </Badge>\n              </div>\n              <div className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-medium mb-2\">Legs</h4>\n                  <div className=\"space-y-2\">\n                    {recommendation.legs.map((leg, legIndex) => (\n                      <div key={legIndex} className=\"p-2 bg-gray-50 dark:bg-gray-800 rounded\">\n                        <div className=\"flex justify-between mb-1\">\n                          <span className=\"font-medium\">{leg.selection}</span>\n                          <span>{leg.odds.toFixed(2)}</span>\n                        </div>\n                        <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400\">\n                          <span>{leg.marketType}</span>\n                          <span>Confidence: {formatPercentage(leg.confidence)}</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Odds</p>\n                    <p className=\"font-medium\">{recommendation.totalOdds.toFixed(2)}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Risk Score</p>\n                    <p className=\"font-medium\">{recommendation.riskScore.toFixed(2)}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Confidence</p>\n                    <p className=\"font-medium\">{formatPercentage(recommendation.confidence)}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Expected Value</p>\n                    <p\n                      className={`font-medium ${\n                        recommendation.expectedValue > 0 ? 'text-green-600' : 'text-red-600'\n                      }`}\n                    >\n                      {formatPercentage(recommendation.expectedValue)}\n                    </p>\n                  </div>\n                </div>\n                <Button\n                  className=\"w-full\"\n                  variant=\"primary\"\n                  onClick={() => {\n                    // Handle portfolio selection\n                    setShowRecommendations(false);\n                  }}\n                >\n                  Select Portfolio\n                </Button>\n              </div>\n            </Card>\n          ))}\n        </div>\n      </Modal>\n\n      {/* Toast Notifications */}\n      {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedStrategyEngineDisplay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedStrategyEngineDisplay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\strategy\\UnifiedStrategyEngineDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\BackendControl.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\BankrollTracker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\BankrollTracker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\BankrollTracker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\BetSimulationTool.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\BetSimulationTool.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\BetSimulationTool.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'handleSingleSimulation' function makes the dependencies of useEffect Hook (at line 343) change on every render. To fix this, wrap the definition of 'handleSingleSimulation' in its own useCallback() Hook.","line":260,"column":9,"nodeType":"VariableDeclarator","endLine":273,"endColumn":4,"suggestions":[{"desc":"Wrap the definition of 'handleSingleSimulation' in its own useCallback() Hook.","fix":{"range":[7000,7389],"text":"useCallback(async () => {\n    setIsSimulating(true);\n    try {\n      const result = await runSingleSimulation(scenario);\n      setResults((prev) => {\n        const filtered = prev.filter((r) => r.scenario.id !== scenario.id);\n        return [...filtered, result];\n      });\n    } catch (error) {\n      console.error(\"Simulation failed:\", error);\n    } finally {\n      setIsSimulating(false);\n    }\n  })"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Box,\n  Grid,\n  Chip,\n  Alert,\n  LinearProgress,\n  Tooltip,\n  IconButton,\n  Divider,\n  Paper,\n  Stack,\n  Switch,\n  FormControlLabel,\n} from \"@mui/material\";\nimport {\n  PlayArrow,\n  Stop,\n  Refresh,\n  TrendingUp,\n  TrendingDown,\n  Assessment,\n  MonetizationOn,\n  Warning,\n  Info,\n  Download,\n  Settings,\n  Timeline,\n} from \"@mui/icons-material\";\nimport { useSimulationStore } from \"../../store/slices/simulationSlice\";\nimport { confidenceService } from \"../../services/analytics/confidenceService\";\nimport { MLSimulationService } from \"../../services/MLSimulationService\";\nimport { formatCurrency, formatPercentage } from \"../../utils/formatters\";\n\ninterface SimulationScenario {\n  id: string;\n  name: string;\n  stake: number;\n  odds: number;\n  eventId: string;\n  player: string;\n  market: string;\n  iterations: number;\n  expectedValue?: number;\n  riskLevel?: \"low\" | \"medium\" | \"high\";\n}\n\ninterface SimulationResult {\n  scenario: SimulationScenario;\n  winProbability: number;\n  expectedPayout: number;\n  expectedLoss: number;\n  expectedValue: number;\n  kellyFraction: number;\n  roi: number;\n  riskAssessment: {\n    level: \"low\" | \"medium\" | \"high\";\n    factors: string[];\n    recommendation: string;\n  };\n  breakdown: {\n    wins: number;\n    losses: number;\n    totalPayout: number;\n    totalLoss: number;\n    variance: number;\n    sharpeRatio: number;\n  };\n  confidence: {\n    lower: number;\n    upper: number;\n    interval: number;\n  };\n}\n\nconst predefinedScenarios: SimulationScenario[] = [\n  {\n    id: \"conservative\",\n    name: \"Conservative Play\",\n    stake: 50,\n    odds: 1.8,\n    eventId: \"NBA-LAL-BOS-2024\",\n    player: \"LeBron James\",\n    market: \"points\",\n    iterations: 1000,\n    riskLevel: \"low\",\n  },\n  {\n    id: \"moderate\",\n    name: \"Moderate Risk\",\n    stake: 100,\n    odds: 2.2,\n    eventId: \"NBA-GSW-LAC-2024\",\n    player: \"Stephen Curry\",\n    market: \"threePointers\",\n    iterations: 1000,\n    riskLevel: \"medium\",\n  },\n  {\n    id: \"aggressive\",\n    name: \"High Risk/Reward\",\n    stake: 200,\n    odds: 3.5,\n    eventId: \"NBA-MIA-DEN-2024\",\n    player: \"Nikola Jokic\",\n    market: \"rebounds\",\n    iterations: 1000,\n    riskLevel: \"high\",\n  },\n];\n\nexport const BetSimulationTool: React.FC = () => {\n  // State Management\n  const [activeTab, setActiveTab] = useState<\"single\" | \"batch\" | \"comparison\">(\n    \"single\",\n  );\n  const [scenario, setScenario] = useState<SimulationScenario>(\n    predefinedScenarios[0],\n  );\n  const [scenarios, setScenarios] = useState<SimulationScenario[]>([]);\n  const [results, setResults] = useState<SimulationResult[]>([]);\n  const [isSimulating, setIsSimulating] = useState(false);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [realTimeMode, setRealTimeMode] = useState(false);\n\n  // Store Integration\n  const setInput = useSimulationStore((s) => s.setInput);\n  const storeResult = useSimulationStore((s) => s.result);\n  const setStoreResult = useSimulationStore((s) => s.setResult);\n  const clear = useSimulationStore((s) => s.clear);\n\n  // Computed Values\n  const currentResult = useMemo(() => {\n    return results.find((r) => r.scenario.id === scenario.id);\n  }, [results, scenario.id]);\n\n  // Simulation Logic\n  const runSingleSimulation = useCallback(\n    async (simScenario: SimulationScenario): Promise<SimulationResult> => {\n      const prediction = confidenceService.getPredictionWithConfidence(\n        simScenario.eventId,\n        simScenario.player,\n        simScenario.market,\n      );\n\n      const simInput = {\n        stake: simScenario.stake,\n        odds: simScenario.odds,\n        confidenceBand: prediction.confidenceBand,\n        winProbability: prediction.winProbability,\n        iterations: simScenario.iterations,\n      };\n\n      setInput(simInput);\n\n      // Enhanced simulation with Monte Carlo analysis\n      let wins = 0;\n      let totalPayout = 0;\n      let totalLoss = 0;\n      const outcomes: number[] = [];\n\n      for (let i = 0; i < simScenario.iterations; i++) {\n        const randomValue = Math.random();\n        if (randomValue <= prediction.winProbability) {\n          wins++;\n          const payout = simScenario.stake * (simScenario.odds - 1);\n          totalPayout += payout;\n          outcomes.push(payout);\n        } else {\n          totalLoss += simScenario.stake;\n          outcomes.push(-simScenario.stake);\n        }\n      }\n\n      const losses = simScenario.iterations - wins;\n      const expectedPayout = totalPayout / simScenario.iterations;\n      const expectedLoss = totalLoss / simScenario.iterations;\n      const expectedValue = expectedPayout - expectedLoss;\n\n      // Kelly Criterion calculation\n      const p = prediction.winProbability;\n      const b = simScenario.odds - 1;\n      const kellyFraction = (b * p - (1 - p)) / b;\n\n      // ROI calculation\n      const roi = (expectedValue / simScenario.stake) * 100;\n\n      // Risk assessment\n      const riskLevel =\n        kellyFraction > 0.25 ? \"high\" : kellyFraction > 0.1 ? \"medium\" : \"low\";\n      const riskFactors = [];\n      if (simScenario.odds > 3.0)\n        riskFactors.push(\"High odds indicate lower probability\");\n      if (kellyFraction < 0) riskFactors.push(\"Negative expected value\");\n      if (prediction.confidenceBand.lower < 0.6)\n        riskFactors.push(\"Low prediction confidence\");\n\n      // Statistical calculations\n      const mean = outcomes.reduce((a, b) => a + b, 0) / outcomes.length;\n      const variance =\n        outcomes.reduce((a, b) => a + Math.pow(b - mean, 2), 0) /\n        outcomes.length;\n      const standardDev = Math.sqrt(variance);\n      const sharpeRatio = mean / standardDev;\n\n      // Confidence interval (95%)\n      const confidenceInterval =\n        1.96 * (standardDev / Math.sqrt(simScenario.iterations));\n\n      const result: SimulationResult = {\n        scenario: simScenario,\n        winProbability: prediction.winProbability,\n        expectedPayout,\n        expectedLoss,\n        expectedValue,\n        kellyFraction: Math.max(0, kellyFraction),\n        roi,\n        riskAssessment: {\n          level: riskLevel,\n          factors: riskFactors,\n          recommendation:\n            kellyFraction > 0\n              ? kellyFraction > 0.25\n                ? \"Reduce stake size\"\n                : \"Proceed with caution\"\n              : \"Avoid this bet\",\n        },\n        breakdown: {\n          wins,\n          losses,\n          totalPayout,\n          totalLoss,\n          variance,\n          sharpeRatio,\n        },\n        confidence: {\n          lower: mean - confidenceInterval,\n          upper: mean + confidenceInterval,\n          interval: 95,\n        },\n      };\n\n      setStoreResult(result);\n      return result;\n    },\n    [setInput, setStoreResult],\n  );\n\n  // Event Handlers\n  const handleSingleSimulation = async () => {\n    setIsSimulating(true);\n    try {\n      const result = await runSingleSimulation(scenario);\n      setResults((prev) => {\n        const filtered = prev.filter((r) => r.scenario.id !== scenario.id);\n        return [...filtered, result];\n      });\n    } catch (error) {\n      console.error(\"Simulation failed:\", error);\n    } finally {\n      setIsSimulating(false);\n    }\n  };\n\n  const handleBatchSimulation = async () => {\n    if (scenarios.length === 0) return;\n\n    setIsSimulating(true);\n    try {\n      const batchResults: SimulationResult[] = [];\n      for (const scenario of scenarios) {\n        const result = await runSingleSimulation(scenario);\n        batchResults.push(result);\n      }\n      setResults(batchResults);\n    } catch (error) {\n      console.error(\"Batch simulation failed:\", error);\n    } finally {\n      setIsSimulating(false);\n    }\n  };\n\n  const addScenario = () => {\n    const newScenario: SimulationScenario = {\n      ...scenario,\n      id: `custom_${Date.now()}`,\n      name: `Scenario ${scenarios.length + 1}`,\n    };\n    setScenarios((prev) => [...prev, newScenario]);\n  };\n\n  const removeScenario = (id: string) => {\n    setScenarios((prev) => prev.filter((s) => s.id !== id));\n    setResults((prev) => prev.filter((r) => r.scenario.id !== id));\n  };\n\n  const exportResults = () => {\n    const exportData = {\n      timestamp: new Date().toISOString(),\n      scenarios: scenarios.length || 1,\n      results: results.map((r) => ({\n        scenario: r.scenario.name,\n        expectedValue: r.expectedValue,\n        roi: r.roi,\n        winProbability: r.winProbability,\n        riskLevel: r.riskAssessment.level,\n        recommendation: r.riskAssessment.recommendation,\n      })),\n    };\n\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: \"application/json\",\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `bet-simulation-${Date.now()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Real-time updates\n  useEffect(() => {\n    if (!realTimeMode) return;\n\n    const interval = setInterval(async () => {\n      if (!isSimulating && scenario) {\n        await handleSingleSimulation();\n      }\n    }, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, [realTimeMode, isSimulating, scenario, handleSingleSimulation]);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"w-full\"\n    >\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            mb={2}\n          >\n            <Typography\n              variant=\"h5\"\n              component=\"h2\"\n              sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}\n            >\n              <Assessment />\n              Advanced Bet Simulation Tool\n            </Typography>\n            <Box display=\"flex\" gap={1}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={realTimeMode}\n                    onChange={(e) => setRealTimeMode(e.target.checked)}\n                  />\n                }\n                label=\"Real-time\"\n              />\n              <IconButton\n                onClick={exportResults}\n                disabled={results.length === 0}\n              >\n                <Download />\n              </IconButton>\n              <IconButton onClick={() => setShowAdvanced(!showAdvanced)}>\n                <Settings />\n              </IconButton>\n            </Box>\n          </Box>\n\n          {/* Tab Navigation */}\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\", mb: 2 }}>\n            <Stack direction=\"row\" spacing={2}>\n              {[\"single\", \"batch\", \"comparison\"].map((tab) => (\n                <Button\n                  key={tab}\n                  variant={activeTab === tab ? \"contained\" : \"outlined\"}\n                  onClick={() => setActiveTab(tab as any)}\n                  sx={{ textTransform: \"capitalize\" }}\n                >\n                  {tab} Simulation\n                </Button>\n              ))}\n            </Stack>\n          </Box>\n\n          {/* Single Simulation Tab */}\n          {activeTab === \"single\" && (\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Simulation Parameters\n                  </Typography>\n\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      <TextField\n                        fullWidth\n                        label=\"Stake ($)\"\n                        type=\"number\"\n                        value={scenario.stake}\n                        onChange={(e) =>\n                          setScenario((prev) => ({\n                            ...prev,\n                            stake: Number(e.target.value),\n                          }))\n                        }\n                        inputProps={{ min: 1 }}\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <TextField\n                        fullWidth\n                        label=\"Odds\"\n                        type=\"number\"\n                        value={scenario.odds}\n                        onChange={(e) =>\n                          setScenario((prev) => ({\n                            ...prev,\n                            odds: Number(e.target.value),\n                          }))\n                        }\n                        inputProps={{ min: 1.01, step: 0.01 }}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        fullWidth\n                        label=\"Event ID\"\n                        value={scenario.eventId}\n                        onChange={(e) =>\n                          setScenario((prev) => ({\n                            ...prev,\n                            eventId: e.target.value,\n                          }))\n                        }\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <TextField\n                        fullWidth\n                        label=\"Player\"\n                        value={scenario.player}\n                        onChange={(e) =>\n                          setScenario((prev) => ({\n                            ...prev,\n                            player: e.target.value,\n                          }))\n                        }\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormControl fullWidth>\n                        <InputLabel>Market</InputLabel>\n                        <Select\n                          value={scenario.market}\n                          onChange={(e) =>\n                            setScenario((prev) => ({\n                              ...prev,\n                              market: e.target.value,\n                            }))\n                          }\n                        >\n                          <MenuItem value=\"points\">Points</MenuItem>\n                          <MenuItem value=\"rebounds\">Rebounds</MenuItem>\n                          <MenuItem value=\"assists\">Assists</MenuItem>\n                          <MenuItem value=\"threePointers\">\n                            Three Pointers\n                          </MenuItem>\n                          <MenuItem value=\"steals\">Steals</MenuItem>\n                          <MenuItem value=\"blocks\">Blocks</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    {showAdvanced && (\n                      <Grid item xs={12}>\n                        <TextField\n                          fullWidth\n                          label=\"Simulation Iterations\"\n                          type=\"number\"\n                          value={scenario.iterations}\n                          onChange={(e) =>\n                            setScenario((prev) => ({\n                              ...prev,\n                              iterations: Number(e.target.value),\n                            }))\n                          }\n                          inputProps={{ min: 100, max: 100000, step: 100 }}\n                        />\n                      </Grid>\n                    )}\n                  </Grid>\n\n                  <Box mt={2}>\n                    <Button\n                      variant=\"contained\"\n                      onClick={handleSingleSimulation}\n                      disabled={isSimulating}\n                      startIcon={\n                        isSimulating ? (\n                          <LinearProgress sx={{ width: 20 }} />\n                        ) : (\n                          <PlayArrow />\n                        )\n                      }\n                      fullWidth\n                      size=\"large\"\n                    >\n                      {isSimulating ? \"Simulating...\" : \"Run Simulation\"}\n                    </Button>\n                  </Box>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                {currentResult && (\n                  <motion.div\n                    initial={{ opacity: 0, scale: 0.9 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <Paper sx={{ p: 2 }}>\n                      <Typography variant=\"h6\" gutterBottom>\n                        Simulation Results\n                      </Typography>\n\n                      <Stack spacing={2}>\n                        <Box>\n                          <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            Expected Value\n                          </Typography>\n                          <Typography\n                            variant=\"h4\"\n                            color={\n                              currentResult.expectedValue >= 0\n                                ? \"success.main\"\n                                : \"error.main\"\n                            }\n                          >\n                            {formatCurrency(currentResult.expectedValue)}\n                          </Typography>\n                        </Box>\n\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <Box textAlign=\"center\">\n                              <Typography\n                                variant=\"subtitle2\"\n                                color=\"textSecondary\"\n                              >\n                                Win Probability\n                              </Typography>\n                              <Typography variant=\"h6\">\n                                {formatPercentage(currentResult.winProbability)}\n                              </Typography>\n                            </Box>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <Box textAlign=\"center\">\n                              <Typography\n                                variant=\"subtitle2\"\n                                color=\"textSecondary\"\n                              >\n                                ROI\n                              </Typography>\n                              <Typography\n                                variant=\"h6\"\n                                color={\n                                  currentResult.roi >= 0\n                                    ? \"success.main\"\n                                    : \"error.main\"\n                                }\n                              >\n                                {formatPercentage(currentResult.roi / 100)}\n                              </Typography>\n                            </Box>\n                          </Grid>\n                        </Grid>\n\n                        <Divider />\n\n                        <Box>\n                          <Typography variant=\"subtitle2\" gutterBottom>\n                            Risk Assessment\n                          </Typography>\n                          <Chip\n                            label={currentResult.riskAssessment.level.toUpperCase()}\n                            color={\n                              currentResult.riskAssessment.level === \"low\"\n                                ? \"success\"\n                                : currentResult.riskAssessment.level ===\n                                    \"medium\"\n                                  ? \"warning\"\n                                  : \"error\"\n                            }\n                            icon={\n                              currentResult.riskAssessment.level === \"low\" ? (\n                                <TrendingUp />\n                              ) : currentResult.riskAssessment.level ===\n                                \"medium\" ? (\n                                <Warning />\n                              ) : (\n                                <TrendingDown />\n                              )\n                            }\n                          />\n                          <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                            {currentResult.riskAssessment.recommendation}\n                          </Typography>\n                        </Box>\n\n                        {currentResult.riskAssessment.factors.length > 0 && (\n                          <Alert severity=\"warning\" icon={<Warning />}>\n                            <Typography variant=\"subtitle2\">\n                              Risk Factors:\n                            </Typography>\n                            <ul style={{ margin: 0, paddingLeft: 16 }}>\n                              {currentResult.riskAssessment.factors.map(\n                                (factor, index) => (\n                                  <li key={index}>{factor}</li>\n                                ),\n                              )}\n                            </ul>\n                          </Alert>\n                        )}\n\n                        {showAdvanced && (\n                          <>\n                            <Divider />\n                            <Box>\n                              <Typography variant=\"subtitle2\" gutterBottom>\n                                Advanced Metrics\n                              </Typography>\n                              <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                  <Typography variant=\"caption\">\n                                    Kelly Fraction\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    {formatPercentage(\n                                      currentResult.kellyFraction,\n                                    )}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                  <Typography variant=\"caption\">\n                                    Sharpe Ratio\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    {currentResult.breakdown.sharpeRatio.toFixed(\n                                      3,\n                                    )}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                  <Typography variant=\"caption\">\n                                    Confidence (95%)\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    {formatCurrency(\n                                      currentResult.confidence.lower,\n                                    )}{\" \"}\n                                    -{\" \"}\n                                    {formatCurrency(\n                                      currentResult.confidence.upper,\n                                    )}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                  <Typography variant=\"caption\">\n                                    Variance\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    {currentResult.breakdown.variance.toFixed(\n                                      2,\n                                    )}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Box>\n                          </>\n                        )}\n                      </Stack>\n                    </Paper>\n                  </motion.div>\n                )}\n              </Grid>\n            </Grid>\n          )}\n\n          {/* Batch Simulation Tab */}\n          {activeTab === \"batch\" && (\n            <Box>\n              <Box\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb={2}\n              >\n                <Typography variant=\"h6\">Batch Simulation</Typography>\n                <Box>\n                  <Button\n                    onClick={addScenario}\n                    variant=\"outlined\"\n                    sx={{ mr: 1 }}\n                  >\n                    Add Scenario\n                  </Button>\n                  <Button\n                    onClick={handleBatchSimulation}\n                    variant=\"contained\"\n                    disabled={scenarios.length === 0 || isSimulating}\n                    startIcon={\n                      isSimulating ? (\n                        <LinearProgress sx={{ width: 20 }} />\n                      ) : (\n                        <PlayArrow />\n                      )\n                    }\n                  >\n                    Run Batch\n                  </Button>\n                </Box>\n              </Box>\n\n              <Grid container spacing={2}>\n                {scenarios.map((scenario, index) => (\n                  <Grid item xs={12} md={6} key={scenario.id}>\n                    <Paper sx={{ p: 2 }}>\n                      <Box\n                        display=\"flex\"\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                        mb={1}\n                      >\n                        <Typography variant=\"subtitle1\">\n                          {scenario.name}\n                        </Typography>\n                        <Button\n                          size=\"small\"\n                          onClick={() => removeScenario(scenario.id)}\n                        >\n                          Remove\n                        </Button>\n                      </Box>\n                      <Typography variant=\"body2\">\n                        ${scenario.stake} @ {scenario.odds} odds -{\" \"}\n                        {scenario.player} {scenario.market}\n                      </Typography>\n                      {results.find((r) => r.scenario.id === scenario.id) && (\n                        <Box mt={1}>\n                          <Chip\n                            size=\"small\"\n                            label={`EV: ${formatCurrency(results.find((r) => r.scenario.id === scenario.id)!.expectedValue)}`}\n                            color={\n                              results.find(\n                                (r) => r.scenario.id === scenario.id,\n                              )!.expectedValue >= 0\n                                ? \"success\"\n                                : \"error\"\n                            }\n                          />\n                        </Box>\n                      )}\n                    </Paper>\n                  </Grid>\n                ))}\n              </Grid>\n\n              {scenarios.length === 0 && (\n                <Alert severity=\"info\">\n                  Add scenarios to run batch simulations. You can start with\n                  predefined scenarios or create custom ones.\n                </Alert>\n              )}\n            </Box>\n          )}\n\n          {/* Comparison Tab */}\n          {activeTab === \"comparison\" && (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Simulation Comparison\n              </Typography>\n              {results.length > 0 ? (\n                <Grid container spacing={2}>\n                  {results.map((result) => (\n                    <Grid item xs={12} md={4} key={result.scenario.id}>\n                      <Paper sx={{ p: 2 }}>\n                        <Typography variant=\"subtitle1\" gutterBottom>\n                          {result.scenario.name}\n                        </Typography>\n                        <Stack spacing={1}>\n                          <Box display=\"flex\" justifyContent=\"space-between\">\n                            <Typography variant=\"caption\">\n                              Expected Value\n                            </Typography>\n                            <Typography\n                              variant=\"body2\"\n                              color={\n                                result.expectedValue >= 0\n                                  ? \"success.main\"\n                                  : \"error.main\"\n                              }\n                            >\n                              {formatCurrency(result.expectedValue)}\n                            </Typography>\n                          </Box>\n                          <Box display=\"flex\" justifyContent=\"space-between\">\n                            <Typography variant=\"caption\">ROI</Typography>\n                            <Typography variant=\"body2\">\n                              {formatPercentage(result.roi / 100)}\n                            </Typography>\n                          </Box>\n                          <Box display=\"flex\" justifyContent=\"space-between\">\n                            <Typography variant=\"caption\">\n                              Risk Level\n                            </Typography>\n                            <Chip\n                              size=\"small\"\n                              label={result.riskAssessment.level}\n                              color={\n                                result.riskAssessment.level === \"low\"\n                                  ? \"success\"\n                                  : result.riskAssessment.level === \"medium\"\n                                    ? \"warning\"\n                                    : \"error\"\n                              }\n                            />\n                          </Box>\n                        </Stack>\n                      </Paper>\n                    </Grid>\n                  ))}\n                </Grid>\n              ) : (\n                <Alert severity=\"info\">\n                  Run simulations to compare results. Switch to Single or Batch\n                  tabs to create simulations.\n                </Alert>\n              )}\n            </Box>\n          )}\n        </CardContent>\n      </Card>\n    </motion.div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ChartErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ChartOverride.tsx","messages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"React.useMemo\" is called conditionally. React Hooks must be called in the exact same order in every component render.","line":21,"column":27,"nodeType":"MemberExpression","endLine":21,"endColumn":40},{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"React.useMemo\" is called conditionally. React Hooks must be called in the exact same order in every component render. Did you accidentally call a React Hook after an early return?","line":73,"column":27,"nodeType":"MemberExpression","endLine":73,"endColumn":40},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook React.useMemo has an unnecessary dependency: 'chartType'. Either exclude it or remove the dependency array. Outer scope values like 'chartType' aren't valid dependencies because mutating them doesn't re-render the component.","line":98,"column":9,"nodeType":"ArrayExpression","endLine":98,"endColumn":29,"suggestions":[{"desc":"Update the dependencies array to be: [options]","fix":{"range":[3275,3295],"text":"[options]"}}]},{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"React.useMemo\" is called conditionally. React Hooks must be called in the exact same order in every component render. Did you accidentally call a React Hook after an early return?","line":186,"column":25,"nodeType":"MemberExpression","endLine":186,"endColumn":38},{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"React.useMemo\" is called conditionally. React Hooks must be called in the exact same order in every component render. Did you accidentally call a React Hook after an early return?","line":214,"column":25,"nodeType":"MemberExpression","endLine":214,"endColumn":38}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport {\n  Line as OriginalLine,\n  Bar as OriginalBar,\n  Doughnut as OriginalDoughnut,\n  Radar as OriginalRadar,\n  Scatter as OriginalScatter,\n} from \"react-chartjs-2\";\nimport { Activity, BarChart3, PieChart, Zap } from \"lucide-react\";\n\n// Create fallback components that mirror Chart.js API but use SafeChart internally\nconst createSafeChartComponent = (\n  chartType: \"line\" | \"bar\" | \"doughnut\" | \"radar\" | \"scatter\",\n) => {\n  return React.forwardRef<any, any>((props, ref) => {\n    try {\n      // Extract data and options from props\n      const { data, options, ...restProps } = props;\n\n      // Enhanced validation\n      const isValidData = React.useMemo(() => {\n        if (!data || typeof data !== \"object\") return false;\n        if (!data.labels || !Array.isArray(data.labels)) return false;\n        if (!data.datasets || !Array.isArray(data.datasets)) return false;\n        if (data.labels.length === 0) return false;\n        if (data.datasets.length === 0) return false;\n\n        // Check if datasets have data property\n        return data.datasets.every(\n          (dataset: any) =>\n            dataset &&\n            typeof dataset === \"object\" &&\n            (Array.isArray(dataset.data) || typeof dataset.data === \"object\"),\n        );\n      }, [data]);\n\n      // If no data or data is invalid, show loading state\n      if (!isValidData) {\n        const icons = {\n          line: (\n            <Activity className=\"w-8 h-8 mx-auto mb-2 animate-pulse text-cyan-400\" />\n          ),\n          bar: (\n            <BarChart3 className=\"w-8 h-8 mx-auto mb-2 animate-pulse text-cyan-400\" />\n          ),\n          doughnut: (\n            <PieChart className=\"w-8 h-8 mx-auto mb-2 animate-pulse text-cyan-400\" />\n          ),\n          radar: (\n            <Zap className=\"w-8 h-8 mx-auto mb-2 animate-pulse text-cyan-400\" />\n          ),\n          scatter: (\n            <Activity className=\"w-8 h-8 mx-auto mb-2 animate-pulse text-cyan-400\" />\n          ),\n        };\n\n        return (\n          <div className=\"flex items-center justify-center h-full text-gray-400 p-8 min-h-[200px]\">\n            <div className=\"text-center\">\n              {icons[chartType]}\n              <p className=\"text-sm text-gray-400\">\n                Loading {chartType} chart data...\n              </p>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Waiting for data to load\n              </p>\n            </div>\n          </div>\n        );\n      }\n\n      // Default safe options\n      const safeOptions = React.useMemo(\n        () => ({\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: \"top\" as const,\n              labels: { color: \"#e5e7eb\" },\n            },\n          },\n          scales:\n            chartType !== \"doughnut\"\n              ? {\n                  x: {\n                    ticks: { color: \"#9ca3af\" },\n                    grid: { color: \"rgba(156, 163, 175, 0.2)\" },\n                  },\n                  y: {\n                    ticks: { color: \"#9ca3af\" },\n                    grid: { color: \"rgba(156, 163, 175, 0.2)\" },\n                  },\n                }\n              : undefined,\n          ...options,\n        }),\n        [options, chartType],\n      );\n\n      // Render the appropriate original Chart.js component\n      const ChartComponent = (() => {\n        switch (chartType) {\n          case \"line\":\n            return OriginalLine;\n          case \"bar\":\n            return OriginalBar;\n          case \"doughnut\":\n            return OriginalDoughnut;\n          case \"radar\":\n            return OriginalRadar;\n          case \"scatter\":\n            return OriginalScatter;\n          default:\n            return null;\n        }\n      })();\n\n      if (!ChartComponent) {\n        return (\n          <div className=\"flex items-center justify-center h-full text-red-400 p-8 min-h-[200px]\">\n            <div className=\"text-center\">\n              <BarChart3 className=\"w-8 h-8 mx-auto mb-2 text-red-400\" />\n              <p className=\"text-sm text-red-400\">Unsupported Chart Type</p>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {chartType} charts not available\n              </p>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <ChartComponent\n          data={data}\n          options={safeOptions}\n          {...restProps}\n          ref={ref}\n        />\n      );\n    } catch (error) {\n      console.warn(`SafeChart ${chartType} error:`, error);\n      return (\n        <div className=\"flex items-center justify-center h-full text-red-400 p-8 min-h-[200px]\">\n          <div className=\"text-center\">\n            <BarChart3 className=\"w-8 h-8 mx-auto mb-2 text-red-400\" />\n            <p className=\"text-sm text-red-400\">Chart Error</p>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Unable to render {chartType} chart\n            </p>\n          </div>\n        </div>\n      );\n    }\n  });\n};\n\n// Create safe versions of all Chart.js components\nexport const Line = createSafeChartComponent(\"line\");\nexport const Bar = createSafeChartComponent(\"bar\");\nexport const Doughnut = createSafeChartComponent(\"doughnut\");\nexport const Radar = createSafeChartComponent(\"radar\");\nexport const Scatter = createSafeChartComponent(\"scatter\");\n\n// Also create a generic Chart component\nexport const Chart = React.forwardRef<any, any>((props, ref) => {\n  try {\n    const { type, data, options, ...restProps } = props;\n\n    // Validate type parameter\n    if (!type || typeof type !== \"string\") {\n      return (\n        <div className=\"flex items-center justify-center h-full text-orange-400 p-8 min-h-[200px]\">\n          <div className=\"text-center\">\n            <BarChart3 className=\"w-8 h-8 mx-auto mb-2 text-orange-400\" />\n            <p className=\"text-sm text-orange-400\">Invalid Chart Type</p>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Chart type \"{type}\" not supported\n            </p>\n          </div>\n        </div>\n      );\n    }\n\n    // Enhanced data validation\n    const isValidData = React.useMemo(() => {\n      if (!data || typeof data !== \"object\") return false;\n      if (!data.labels || !Array.isArray(data.labels)) return false;\n      if (!data.datasets || !Array.isArray(data.datasets)) return false;\n      if (data.labels.length === 0) return false;\n      if (data.datasets.length === 0) return false;\n\n      return data.datasets.every(\n        (dataset: any) =>\n          dataset &&\n          typeof dataset === \"object\" &&\n          (Array.isArray(dataset.data) || typeof dataset.data === \"object\"),\n      );\n    }, [data]);\n\n    if (!isValidData) {\n      return (\n        <div className=\"flex items-center justify-center h-full text-gray-400 p-8 min-h-[200px]\">\n          <div className=\"text-center\">\n            <BarChart3 className=\"w-8 h-8 mx-auto mb-2 animate-pulse text-cyan-400\" />\n            <p className=\"text-sm text-gray-400\">Loading chart data...</p>\n            <p className=\"text-xs text-gray-500 mt-1\">Preparing {type} chart</p>\n          </div>\n        </div>\n      );\n    }\n\n    // Default safe options\n    const safeOptions = React.useMemo(\n      () => ({\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: \"top\" as const,\n            labels: { color: \"#e5e7eb\" },\n          },\n        },\n        scales:\n          type !== \"doughnut\" && type !== \"pie\"\n            ? {\n                x: {\n                  ticks: { color: \"#9ca3af\" },\n                  grid: { color: \"rgba(156, 163, 175, 0.2)\" },\n                },\n                y: {\n                  ticks: { color: \"#9ca3af\" },\n                  grid: { color: \"rgba(156, 163, 175, 0.2)\" },\n                },\n              }\n            : undefined,\n        ...options,\n      }),\n      [options, type],\n    );\n\n    // Render the appropriate original Chart.js component\n    const ChartComponent = (() => {\n      switch (type) {\n        case \"line\":\n          return OriginalLine;\n        case \"bar\":\n          return OriginalBar;\n        case \"doughnut\":\n        case \"pie\":\n          return OriginalDoughnut;\n        case \"radar\":\n          return OriginalRadar;\n        case \"scatter\":\n        case \"bubble\":\n          return OriginalScatter;\n        default:\n          return null;\n      }\n    })();\n\n    if (!ChartComponent) {\n      return (\n        <div className=\"flex items-center justify-center h-full text-red-400 p-8 min-h-[200px]\">\n          <div className=\"text-center\">\n            <BarChart3 className=\"w-8 h-8 mx-auto mb-2 text-red-400\" />\n            <p className=\"text-sm text-red-400\">Unsupported Chart Type</p>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              \"{type}\" charts not available\n            </p>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <ChartComponent\n        data={data}\n        options={safeOptions}\n        {...restProps}\n        ref={ref}\n      />\n    );\n  } catch (error) {\n    console.error(\"Chart component error:\", error);\n    return (\n      <div className=\"flex items-center justify-center h-full text-red-400 p-8 min-h-[200px]\">\n        <div className=\"text-center\">\n          <BarChart3 className=\"w-8 h-8 mx-auto mb-2 text-red-400\" />\n          <p className=\"text-sm text-red-400\">Chart Error</p>\n          <p className=\"text-xs text-gray-500 mt-1\">Unable to render chart</p>\n        </div>\n      </div>\n    );\n  }\n});\n\n// Set display names for debugging\nLine.displayName = \"SafeLine\";\nBar.displayName = \"SafeBar\";\nDoughnut.displayName = \"SafeDoughnut\";\nRadar.displayName = \"SafeRadar\";\nScatter.displayName = \"SafeScatter\";\nChart.displayName = \"SafeChart\";\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ChartWrapper.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ConfidenceBandChart.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ConfidenceBandChart.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ConfidenceBandChart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ConfidenceBands.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ConfidenceBands.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ConfidenceBands.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\CyberButton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\CyberButton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\CyberButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EmptyState.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EnhancedErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EnhancedMetricCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EnhancedMetricCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EnhancedPropCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EnhancedPropCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EnhancedPropCard.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EnhancedPropCard.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EnhancedPropCard.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\EnhancedPropCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\FeatureFlagIndicators.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\FeatureFlagIndicators.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\FeatureFlagIndicators.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\GlassCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\GlassCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\GlassCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\GlowButton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\GlowButton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\GlowButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\HistoricalPerformanceDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\HistoricalPerformanceDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\HistoricalPerformanceDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\HolographicText.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\HolographicText.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\HolographicText.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\LoadingOverlay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\LoadingOverlay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\LoadingOverlay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\MetricCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\MetricCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\MetricCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ModernActivityFeed.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ModernActivityFeed.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ModernCommandPalette.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ModernCommandPalette.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ModernNotificationCenter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ModernNotificationCenter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ModernStatusBar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ModernStatusBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\NotificationCenter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\NotificationCenter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\NotificationCenter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\OfflineIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\PredictionExplanationOverlay.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\PredictionExplanationOverlay.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\PredictionExplanationOverlay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\PredictionSummaryCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\PredictionSummaryCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\PredictionSummaryCard.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\PredictionSummaryCard.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\PredictionSummaryCard.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\PredictionSummaryCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\RiskHeatMap.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\RiskHeatMap.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\RiskHeatMap.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SafeChart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SearchModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ServiceStatusIndicators.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ServiceStatusIndicators.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ServiceStatusIndicators.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\Sidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\Sidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\Sidebar.tsx","messages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useLocation\" is called conditionally. React Hooks must be called in the exact same order in every component render.","line":27,"column":20,"nodeType":"Identifier","endLine":27,"endColumn":31}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Home, BarChart2, Lightbulb, Settings } from 'lucide-react';\n\ninterface SidebarProps {\n  isOpen?: boolean;\n  onClose?: () => void;\n  showProfile?: boolean;\n}\n\nconst navItems = [\n  { name: 'Dashboard', path: '/', icon: Home },\n  { name: 'Money Maker', path: '/money-maker', icon: BarChart2 },\n  { name: 'Props', path: '/props', icon: BarChart2 },\n  { name: 'Analytics', path: '/analytics', icon: BarChart2 },\n  { name: 'Arbitrage', path: '/arbitrage', icon: BarChart2 },\n  { name: 'Bankroll', path: '/bankroll', icon: BarChart2 },\n  { name: 'Risk Manager', path: '/risk', icon: BarChart2 },\n  { name: 'Predictions', path: '/predictions', icon: Lightbulb },\n  { name: 'Settings', path: '/settings', icon: Settings },\n  { name: 'Admin', path: '/admin', icon: BarChart2 },\n];\n\nconst Sidebar: React.FC<SidebarProps> = ({ isOpen = true, onClose, showProfile = true }) => {\n  let locationPath = '/';\n  try {\n    locationPath = useLocation().pathname;\n  } catch {\n    locationPath = typeof window !== 'undefined' ? window.location.pathname : '/';\n  }\n  const isMobile = typeof window !== 'undefined' && window.innerWidth < 1024;\n\n  return (\n    <>\n      {/* Mobile Backdrop */}\n      {isMobile && isOpen && (\n        <div className=\"fixed inset-0 z-20 bg-black bg-opacity-50 lg:hidden\" onClick={onClose} />\n      )}\n\n      {/* Sidebar */}\n      <aside\n        className={`fixed inset-y-0 left-0 z-30 w-64 transform bg-white dark:bg-gray-800 transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0 ${\n          isOpen ? 'translate-x-0' : '-translate-x-full'\n        }`}\n      >\n        {/* Logo */}\n        <div className=\"flex items-center justify-between h-16 px-6 bg-indigo-600\">\n          <a className=\"flex items-center space-x-3\" href=\"/\">\n            <span className=\"text-2xl font-bold text-white\">BetPro AI</span>\n          </a>\n          {isMobile && (\n            <button className=\"p-1 text-white hover:text-gray-200 lg:hidden\" onClick={onClose}>\n              <span className=\"sr-only\">Close sidebar</span>\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path\n                  d=\"M6 18L18 6M6 6l12 12\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                />\n              </svg>\n            </button>\n          )}\n        </div>\n\n        {/* Navigation */}\n        <nav className=\"flex-1 px-4 py-6 space-y-1 overflow-y-auto\">\n          {navItems.map(item => {\n            const isActive = locationPath === item.path;\n            return (\n              <a\n                key={item.path}\n                className={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors duration-150 ${\n                  isActive\n                    ? 'bg-indigo-50 text-indigo-600 dark:bg-indigo-900 dark:text-indigo-200'\n                    : 'text-gray-600 hover:bg-gray-50 dark:text-gray-300 dark:hover:bg-gray-700'\n                }`}\n                href={item.path}\n              >\n                <item.icon\n                  className={`w-5 h-5 mr-3 ${\n                    isActive\n                      ? 'text-indigo-600 dark:text-indigo-200'\n                      : 'text-gray-400 dark:text-gray-500'\n                  }`}\n                />\n                <span>{item.name}</span>\n              </a>\n            );\n          })}\n        </nav>\n\n        {/* User Profile */}\n        {showProfile && (\n          <div className=\"flex items-center px-6 py-4 border-t border-gray-200 dark:border-gray-700\">\n            <div className=\"flex-shrink-0\">\n              <img\n                alt=\"User avatar\"\n                className=\"w-8 h-8 rounded-full\"\n                src=\"https://ui-avatars.com/api/?name=User\"\n              />\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm font-medium text-gray-700 dark:text-gray-200\">User Name</p>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Pro Member</p>\n            </div>\n          </div>\n        )}\n      </aside>\n    </>\n  );\n};\n\nexport default React.memo(Sidebar);\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\Skeleton.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\Skeleton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\Skeleton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SmartControlsBar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SmartControlsBar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SmartControlsBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SmartSidebar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SmartSidebar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SmartSidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SourceHealthBar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SourceHealthBar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\SourceHealthBar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\StatusIndicator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\StatusIndicator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\StatusIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\StyledSelect.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\Tooltip.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\Tooltip.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\Tooltip.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'updatePosition'. Either include it or remove the dependency array.","line":94,"column":6,"nodeType":"ArrayExpression","endLine":94,"endColumn":27,"suggestions":[{"desc":"Update the dependencies array to be: [isVisible, position, updatePosition]","fix":{"range":[2910,2931],"text":"[isVisible, position, updatePosition]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TooltipProps {\n  content: React.ReactNode;\n  children: React.ReactElement;\n  delay?: number;\n  position?: 'top' | 'right' | 'bottom' | 'left';\n  className?: string;\n}\n\nexport const Tooltip: React.FC<TooltipProps> = ({\n  content,\n  children,\n  delay = 300,\n  position = 'top',\n  className = '',\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [coords, setCoords] = useState({ x: 0, y: 0 });\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const timeoutRef = useRef<number>();\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const updatePosition = () => {\n    if (triggerRef.current && tooltipRef.current) {\n      const triggerRect = triggerRef.current.getBoundingClientRect();\n      const tooltipRect = tooltipRef.current.getBoundingClientRect();\n      \n      let x = 0;\n      let y = 0;\n      const offset = 8;\n\n      switch (position) {\n        case 'top':\n          x = triggerRect.left + (triggerRect.width - tooltipRect.width) / 2;\n          y = triggerRect.top - tooltipRect.height - offset;\n          break;\n        case 'right':\n          x = triggerRect.right + offset;\n          y = triggerRect.top + (triggerRect.height - tooltipRect.height) / 2;\n          break;\n        case 'bottom':\n          x = triggerRect.left + (triggerRect.width - tooltipRect.width) / 2;\n          y = triggerRect.bottom + offset;\n          break;\n        case 'left':\n          x = triggerRect.left - tooltipRect.width - offset;\n          y = triggerRect.top + (triggerRect.height - tooltipRect.height) / 2;\n          break;\n      }\n\n      // Ensure tooltip stays within viewport\n      x = Math.max(offset, Math.min(window.innerWidth - tooltipRect.width - offset, x));\n      y = Math.max(offset, Math.min(window.innerHeight - tooltipRect.height - offset, y));\n\n      setCoords({ x, y });\n    }\n  };\n\n  const showTooltip = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    timeoutRef.current = window.setTimeout(() => {\n      setIsVisible(true);\n      // Wait for the tooltip to be visible before calculating position\n      requestAnimationFrame(updatePosition);\n    }, delay);\n  };\n\n  const hideTooltip = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setIsVisible(false);\n  };\n\n  useEffect(() => {\n    if (isVisible) {\n      updatePosition();\n      window.addEventListener('resize', updatePosition);\n      window.addEventListener('scroll', updatePosition, true);\n    }\n\n    return () => {\n      window.removeEventListener('resize', updatePosition);\n      window.removeEventListener('scroll', updatePosition, true);\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [isVisible, position]);\n\n  const tooltipVariants = {\n    hidden: { opacity: 0, y: 5, scale: 0.95 },\n    visible: { opacity: 1, y: 0, scale: 1 },\n  };\n\n  return (\n    <div className=\"relative inline-block\">\n      <div\n        ref={triggerRef}\n        onMouseEnter={showTooltip}\n        onMouseLeave={hideTooltip}\n        onFocus={showTooltip}\n        onBlur={hideTooltip}\n        className=\"inline-block\"\n      >\n        {children}\n      </div>\n\n      <AnimatePresence>\n        {isVisible && (\n          <motion.div\n            ref={tooltipRef}\n            className={`fixed z-50 px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-md shadow-lg whitespace-nowrap pointer-events-none ${className}`}\n            style={{\n              left: `${coords.x}px`,\n              top: `${coords.y}px`,\n              transformOrigin: 'center',\n            }}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n            variants={tooltipVariants}\n            transition={{\n              type: 'spring',\n              damping: 25,\n              stiffness: 300,\n            }}\n          >\n            {content}\n            <div \n              className=\"absolute w-2 h-2 bg-gray-900 transform -translate-x-1/2 -translate-y-1/2 rotate-45\"\n              style={{\n                left: '50%',\n                top: '100%',\n                ...(position === 'top' && { top: '0%', transform: 'translate(-50%, -50%) rotate(45deg)' }),\n                ...(position === 'right' && { left: '0%', top: '50%', transform: 'translate(-50%, -50%) rotate(45deg)' }),\n                ...(position === 'bottom' && { top: '100%', transform: 'translate(-50%, -50%) rotate(45deg)' }),\n                ...(position === 'left' && { left: '100%', top: '50%', transform: 'translate(-50%, -50%) rotate(45deg)' }),\n              }}\n            />\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default Tooltip;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\UnifiedUI.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\UnifiedUI.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\UnifiedUI.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\UniversalButton.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\UniversalButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\WinProbabilityMeter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\WinProbabilityMeter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\WinProbabilityMeter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\__tests__\\BankrollTracker.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\__tests__\\BankrollTracker.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\__tests__\\BankrollTracker.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\__tests__\\ConfidenceBandChart.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\__tests__\\ConfidenceBandChart.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\__tests__\\ConfidenceBandChart.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\advanced-charts.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\advanced-charts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\advanced-charts.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook React.useMemo has a missing dependency: 'title'. Either include it or remove the dependency array.","line":106,"column":7,"nodeType":"ArrayExpression","endLine":106,"endColumn":9,"suggestions":[{"desc":"Update the dependencies array to be: [title]","fix":{"range":[2279,2281],"text":"[title]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport SafeChart from \"./SafeChart\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n);\n\ninterface ChartData {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    backgroundColor?: string | string[];\n    borderColor?: string | string[];\n    fill?: boolean;\n    tension?: number;\n  }[];\n}\n\ninterface AdvancedChartsProps {\n  data: ChartData;\n  type: \"line\" | \"bar\";\n  title?: string;\n  height?: number;\n  options?: any;\n}\n\n/**\n * AdvancedCharts renders a high-performance, accessible chart using Chart.js.\n * - Wrapped in <figure> with <figcaption> for semantic context\n * - ARIA label and role for screen readers\n * - Keyboard accessible (tabIndex)\n */\nexport const AdvancedCharts: React.FC<AdvancedChartsProps> = React.memo(\n  ({ data, type, title, height = 300, options = {} }) => {\n    const defaultOptions = React.useMemo(\n      () => ({\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: \"top\" as const,\n            labels: {\n              color: \"#fff\",\n              font: {\n                family: \"Inter\",\n              },\n            },\n          },\n          title: {\n            display: !!title,\n            text: title,\n            color: \"#fff\",\n            font: {\n              family: \"Inter\",\n              size: 16,\n            },\n          },\n          tooltip: {\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            titleColor: \"#fff\",\n            bodyColor: \"#fff\",\n            borderColor: \"rgba(255, 255, 255, 0.1)\",\n            borderWidth: 1,\n          },\n        },\n        scales: {\n          x: {\n            grid: {\n              color: \"rgba(255, 255, 255, 0.1)\",\n            },\n            ticks: {\n              color: \"#fff\",\n            },\n          },\n          y: {\n            grid: {\n              color: \"rgba(255, 255, 255, 0.1)\",\n            },\n            ticks: {\n              color: \"#fff\",\n            },\n          },\n        },\n      }),\n      [],\n    );\n\n    return (\n      <figure style={{ height }}>\n        {title && (\n          <figcaption\n            style={{ color: \"#fff\", fontFamily: \"Inter\", fontSize: 16 }}\n          >\n            {title}\n          </figcaption>\n        )}\n        <SafeChart\n          type={type}\n          data={data}\n          options={{ ...defaultOptions, ...options }}\n          className=\"w-full h-full\"\n          loadingMessage=\"Loading chart data...\"\n        />\n      </figure>\n    );\n  },\n);\n\nexport const PredictionConfidenceChart = React.memo(\n  ({\n    predictions,\n  }: {\n    predictions: { confidence: number; label: string }[];\n  }) => {\n    const data = React.useMemo(\n      () => ({\n        labels: predictions.map((p) => p.label),\n        datasets: [\n          {\n            label: \"Confidence\",\n            data: predictions.map((p) => p.confidence),\n            backgroundColor: \"rgba(16, 185, 129, 0.5)\",\n            borderColor: \"rgb(16, 185, 129)\",\n            borderWidth: 2,\n          },\n        ],\n      }),\n      [predictions],\n    );\n\n    return (\n      <AdvancedCharts data={data} type=\"bar\" title=\"Prediction Confidence\" />\n    );\n  },\n);\n\nexport const ModelPerformanceChart = React.memo(\n  ({ models }: { models: { name: string; performance: number }[] }) => {\n    const data = React.useMemo(\n      () => ({\n        labels: models.map((m) => m.name),\n        datasets: [\n          {\n            label: \"Performance\",\n            data: models.map((m) => m.performance),\n            backgroundColor: \"rgba(59, 130, 246, 0.5)\",\n            borderColor: \"rgb(59, 130, 246)\",\n            borderWidth: 2,\n          },\n        ],\n      }),\n      [models],\n    );\n\n    return <AdvancedCharts data={data} type=\"bar\" title=\"Model Performance\" />;\n  },\n);\n\nexport const BettingPerformanceChart = React.memo(\n  ({ performance }: { performance: { date: string; value: number }[] }) => {\n    const data = React.useMemo(\n      () => ({\n        labels: performance.map((p) => p.date),\n        datasets: [\n          {\n            label: \"Betting Performance\",\n            data: performance.map((p) => p.value),\n            backgroundColor: \"rgba(245, 158, 11, 0.5)\",\n            borderColor: \"rgb(245, 158, 11)\",\n            borderWidth: 2,\n            fill: true,\n            tension: 0.4,\n          },\n        ],\n      }),\n      [performance],\n    );\n    return (\n      <AdvancedCharts data={data} type=\"line\" title=\"Betting Performance\" />\n    );\n  },\n);\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\alert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\badge.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\badge.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\betting\\BettingFilters.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\betting\\BettingFilters.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\betting\\BettingFilters.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\betting\\BettingOpportunityCard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\betting\\BettingOpportunityCard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\betting\\BettingOpportunityCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\button.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\button.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\card.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\card.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\design-system.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\design-system.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\design-system.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\grid.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\grid.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\grid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\input.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\input.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\label.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\label.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\label.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ml-status-indicators.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ml-status-indicators.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\ml-status-indicators.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\progress.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\progress.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\progress.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\real-time-metrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\real-time-metrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\real-time-metrics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\select.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\select.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\slider.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\slider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\slider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\tabs-simple.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\tabs.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\tabs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\ui\\tabs.tsx","messages":[{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":7,"column":19,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":7,"endColumn":50},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":18,"column":7,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":18,"endColumn":31}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\n// Try to import Radix UI, fallback to simple implementation if it fails\nlet TabsPrimitive: any;\ntry {\n  TabsPrimitive = require(\"@radix-ui/react-tabs\");\n} catch (error) {\n  console.warn(\n    \"@radix-ui/react-tabs not available, using fallback implementation\",\n  );\n  // Import our simple fallback\n  const {\n    Tabs: SimpleTabs,\n    TabsList: SimpleTabsList,\n    TabsTrigger: SimpleTabsTrigger,\n    TabsContent: SimpleTabsContent,\n  } = require(\"./tabs-simple\");\n  TabsPrimitive = {\n    Root: SimpleTabs,\n    List: SimpleTabsList,\n    Trigger: SimpleTabsTrigger,\n    Content: SimpleTabsContent,\n  };\n}\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\unified\\IntelligentMergedInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\AnalyticsCommandCenter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\ArbitrageHunter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\ComprehensiveUserProfile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\ConsolidatedUserProfile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\EnhancedUserFriendlyApp.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\EsportsMoneyMaker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\MoneyMakerPro.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\PortfolioCommander.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\PrizePicksPro.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\PrizePicksProClean.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'filtered' is never reassigned. Use 'const' instead.","line":144,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":144,"endColumn":17,"fix":{"range":[3917,4196],"text":"const filtered = playerProps.filter((prop) => {\n      if (filterSport !== \"all\" && !prop.team.toLowerCase().includes(filterSport.toLowerCase())) {\n        return false;\n      }\n      if (prop.confidence < filterConfidence) {\n        return false;\n      }\n      return true;\n    });"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport {\n  TrophyIcon,\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  UserIcon,\n  CheckCircleIcon,\n  CurrencyDollarIcon,\n  ChartBarIcon,\n  CogIcon,\n  BoltIcon,\n  FireIcon,\n  XMarkIcon,\n  UsersIcon,\n  ArrowPathIcon,\n  InformationCircleIcon,\n  ClockIcon,\n  ShieldCheckIcon,\n  StarIcon,\n  ExclamationTriangleIcon,\n} from \"@heroicons/react/24/outline\";\nimport { productionApiService, api } from \"@/services/api/ProductionApiService\";\nimport { logger, logUserAction } from \"@/utils/logger\";\nimport OfflineIndicator from \"@/components/ui/OfflineIndicator\";\n\n// ============================================================================\n// INTERFACES & TYPES\n// ============================================================================\n\ninterface PlayerProp {\n  id: string;\n  player: string;\n  team: string;\n  opponent: string;\n  stat: string;\n  line: number;\n  overOdds: number;\n  underOdds: number;\n  confidence: number;\n  pickType: \"over\" | \"under\" | null;\n  projection: number;\n  edge: number;\n  recent_form: number[];\n  season_stats: {\n    average: number;\n    games: number;\n    hit_rate: number;\n  };\n  matchup_data: {\n    defense_rank: number;\n    pace: number;\n    total: number;\n  };\n  weather?: {\n    condition: string;\n    temp: number;\n    wind: number;\n  };\n  injury_report?: string;\n  last_5_games: number[];\n  vs_opponent: number[];\n}\n\ninterface SelectedPick {\n  propId: string;\n  choice: \"over\" | \"under\";\n  player: string;\n  stat: string;\n  line: number;\n  confidence: number;\n  pickType: string;\n  projection: number;\n  edge: number;\n}\n\ninterface LineupEntry {\n  picks: SelectedPick[];\n  entryFee: number;\n  potentialPayout: number;\n  riskLevel: \"low\" | \"medium\" | \"high\";\n  strategy: string;\n}\n\ninterface PrizePicksStats {\n  totalLineups: number;\n  winRate: number;\n  profit: number;\n  avgConfidence: number;\n  bestStreak: number;\n  currentStreak: number;\n}\n\ninterface HealthStatus {\n  status: string;\n  accuracy: number;\n  activePredictions: number;\n  uptime: number;\n  lastUpdate: string;\n}\n\n// ============================================================================\n// COMPONENT\n// ============================================================================\n\nconst PrizePicksPro: React.FC = () => {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  const [playerProps, setPlayerProps] = useState<PlayerProp[]>([]);\n  const [selectedPicks, setSelectedPicks] = useState<SelectedPick[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [entryFee, setEntryFee] = useState<number>(5);\n  const [filterSport, setFilterSport] = useState<string>(\"all\");\n  const [filterConfidence, setFilterConfidence] = useState<number>(70);\n  const [sortBy, setSortBy] = useState<string>(\"confidence\");\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"desc\");\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [autoRefresh, setAutoRefresh] = useState(false);\n  const [refreshInterval, setRefreshInterval] = useState<number>(30);\n  const [stats, setStats] = useState<PrizePicksStats>({\n    totalLineups: 0,\n    winRate: 0,\n    profit: 0,\n    avgConfidence: 0,\n    bestStreak: 0,\n    currentStreak: 0,\n  });\n  const [healthStatus, setHealthStatus] = useState<HealthStatus>({\n    status: \"online\",\n    accuracy: 85,\n    activePredictions: 0,\n    uptime: 99.9,\n    lastUpdate: new Date().toISOString(),\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // ============================================================================\n  // COMPUTED VALUES\n  // ============================================================================\n\n  const filteredProps = useMemo(() => {\n    let filtered = playerProps.filter((prop) => {\n      if (filterSport !== \"all\" && !prop.team.toLowerCase().includes(filterSport.toLowerCase())) {\n        return false;\n      }\n      if (prop.confidence < filterConfidence) {\n        return false;\n      }\n      return true;\n    });\n\n    // Sort props\n    filtered.sort((a, b) => {\n      let aValue, bValue;\n      switch (sortBy) {\n        case \"confidence\":\n          aValue = a.confidence;\n          bValue = b.confidence;\n          break;\n        case \"edge\":\n          aValue = a.edge;\n          bValue = b.edge;\n          break;\n        case \"projection\":\n          aValue = a.projection;\n          bValue = b.projection;\n          break;\n        default:\n          aValue = a.confidence;\n          bValue = b.confidence;\n      }\n\n      return sortOrder === \"desc\" ? bValue - aValue : aValue - bValue;\n    });\n\n    return filtered;\n  }, [playerProps, filterSport, filterConfidence, sortBy, sortOrder]);\n\n  const potentialPayout = useMemo(() => {\n    if (selectedPicks.length < 2) return 0;\n    const multipliers = [0, 0, 3, 5, 10, 20, 40];\n    return Math.round(entryFee * (multipliers[selectedPicks.length] || 40));\n  }, [selectedPicks.length, entryFee]);\n\n  const totalEdge = useMemo(() => {\n    return selectedPicks.reduce((sum, pick) => sum + pick.edge, 0);\n  }, [selectedPicks]);\n\n  const avgConfidence = useMemo(() => {\n    if (selectedPicks.length === 0) return 0;\n    return Math.round(\n      selectedPicks.reduce((sum, pick) => sum + pick.confidence, 0) /\n        selectedPicks.length\n    );\n  }, [selectedPicks]);\n\n  const riskLevel = useMemo(() => {\n    if (avgConfidence >= 85) return \"low\";\n    if (avgConfidence >= 75) return \"medium\";\n    return \"high\";\n  }, [avgConfidence]);\n\n  // ============================================================================\n  // DATA FETCHING\n  // ============================================================================\n\n  const fetchPlayerProps = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await api.getPredictions();\n      \n      if (response.success && response.data) {\n        // Transform predictions to player props format\n        const transformedProps: PlayerProp[] = response.data.map((pred, index) => ({\n          id: pred.id,\n          player: pred.event.split(' vs ')[0] || `Player ${index + 1}`,\n          team: pred.league.substring(0, 3).toUpperCase(),\n          opponent: pred.event.split(' vs ')[1] || \"TBD\",\n          stat: \"Points\", // Default for now\n          line: 25.5, // Default line - should come from proper API\n          overOdds: pred.odds || -110,\n          underOdds: -(pred.odds || 110),\n          confidence: pred.confidence,\n          pickType: null,\n          projection: pred.modelProb * 30, // Convert to points\n          edge: pred.edge,\n          recent_form: [0, 0, 0, 0, 0], // Default - should come from proper API\n          season_stats: {\n            average: 0, // Default - should come from proper API\n            games: 0, // Default - should come from proper API\n            hit_rate: 0, // Default - should come from proper API\n          },\n          matchup_data: {\n            defense_rank: 0, // Default - should come from proper API\n            pace: 0, // Default - should come from proper API\n            total: 0, // Default - should come from proper API\n          },\n          last_5_games: [0, 0, 0, 0, 0], // Default - should come from proper API\n          vs_opponent: [0, 0, 0], // Default - should come from proper API\n        }));\n        \n        setPlayerProps(transformedProps);\n        logUserAction(\"prizepicks_props_loaded\", { count: transformedProps.length });\n      } else {\n        // No fallback data - set empty array and error for production\n        setPlayerProps([]);\n        setError(\"No player props data available\");\n        logger.error(\"No player props data returned from API\");\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : \"Failed to fetch player props\";\n      setError(errorMessage);\n      logger.error(\"prizepicks_fetch_error\", { error: errorMessage });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchHealthStatus = useCallback(async () => {\n    try {\n      const response = await api.getSystemHealth();\n      if (response.success && response.data) {\n        setHealthStatus({\n          status: response.data.status,\n          accuracy: response.data.accuracy,\n          activePredictions: response.data.activePredictions,\n          uptime: response.data.uptime,\n          lastUpdate: response.data.lastUpdate,\n        });\n      }\n    } catch (err) {\n      logger.warn(\"Failed to fetch health status\", err);\n    }\n  }, []);\n\n  const fetchStats = useCallback(async () => {\n    try {\n      const response = await api.getUserAnalytics(\"current-user\");\n      if (response.success && response.data) {\n        // Transform analytics data to stats format\n        const analyticsData = response.data as any;\n        setStats({\n          totalLineups: Object.values(analyticsData.yearly || {}).reduce((sum: number, val: any) => sum + (Number(val) || 0), 0),\n          winRate: Number(analyticsData.winRate) || 0,\n          profit: Number(analyticsData.profit) || 0,\n          avgConfidence: Number(analyticsData.avgConfidence) || 0,\n          bestStreak: Number(analyticsData.bestStreak) || 0,\n          currentStreak: Number(analyticsData.currentStreak) || 0,\n        });\n      }\n    } catch (err) {\n      logger.warn(\"Failed to fetch stats\", err);\n    }\n  }, []);\n\n  // ============================================================================\n  // EFFECTS\n  // ============================================================================\n\n  useEffect(() => {\n    fetchPlayerProps();\n    fetchHealthStatus();\n    fetchStats();\n  }, [fetchPlayerProps, fetchHealthStatus, fetchStats]);\n\n  useEffect(() => {\n    let interval: ReturnType<typeof setInterval>;\n    \n    if (autoRefresh && refreshInterval > 0) {\n      interval = setInterval(() => {\n        fetchPlayerProps();\n        fetchHealthStatus();\n      }, refreshInterval * 1000);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [autoRefresh, refreshInterval, fetchPlayerProps, fetchHealthStatus]);\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n\n  const handlePickToggle = (prop: PlayerProp, choice: \"over\" | \"under\") => {\n    // Check if user already has a pick for this player\n    const existingPickIndex = selectedPicks.findIndex(\n      (pick) => pick.player === prop.player && pick.stat === prop.stat\n    );\n\n    if (existingPickIndex !== -1) {\n      // Remove existing pick if clicking the same choice, or replace if different\n      const existingPick = selectedPicks[existingPickIndex];\n      if (existingPick.choice === choice) {\n        // Remove the pick\n        setSelectedPicks((prev) => prev.filter((_, index) => index !== existingPickIndex));\n        return;\n      } else {\n        // Replace with new choice\n        const updatedPick: SelectedPick = {\n          ...existingPick,\n          choice,\n        };\n        setSelectedPicks((prev) => \n          prev.map((pick, index) => index === existingPickIndex ? updatedPick : pick)\n        );\n        return;\n      }\n    }\n\n    // Check maximum picks limit\n    if (selectedPicks.length >= 6) {\n      alert(\"Maximum 6 picks per lineup!\");\n      return;\n    }\n\n    // Add new pick\n    const newPick: SelectedPick = {\n      propId: prop.id,\n      choice,\n      player: prop.player,\n      stat: prop.stat,\n      line: prop.line,\n      confidence: prop.confidence,\n      pickType: prop.stat,\n      projection: prop.projection,\n      edge: prop.edge,\n    };\n\n    setSelectedPicks((prev) => [...prev, newPick]);\n    logUserAction(\"pick_selected\", { \n      player: prop.player, \n      stat: prop.stat, \n      choice, \n      confidence: prop.confidence \n    });\n  };\n\n  const getPickChoice = (prop: PlayerProp, choice: \"over\" | \"under\"): boolean => {\n    return selectedPicks.some(\n      (pick) => pick.player === prop.player && pick.stat === prop.stat && pick.choice === choice\n    );\n  };\n\n  const removePick = (index: number) => {\n    const removedPick = selectedPicks[index];\n    setSelectedPicks((prev) => prev.filter((_, i) => i !== index));\n    logUserAction(\"pick_removed\", { \n      player: removedPick.player, \n      stat: removedPick.stat \n    });\n  };\n\n  const handleSubmitLineup = async () => {\n    if (selectedPicks.length < 2) {\n      alert(\"You need at least 2 picks to submit a lineup!\");\n      return;\n    }\n\n    // Validate team diversity (at least 2 different teams)\n    const teams = new Set(selectedPicks.map(pick => {\n      const prop = playerProps.find(p => p.player === pick.player && p.stat === pick.stat);\n      return prop?.team || \"\";\n    }));\n\n    if (teams.size < 2) {\n      alert(\"You need picks from at least 2 different teams!\");\n      return;\n    }\n\n    try {\n      setIsSubmitting(true);\n\n      const lineup: LineupEntry = {\n        picks: selectedPicks,\n        entryFee,\n        potentialPayout,\n        riskLevel,\n        strategy: `${selectedPicks.length}-pick ${riskLevel} risk`,\n      };\n\n      // Mock submission - in real app would call API\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      alert(`Lineup submitted! Potential payout: $${potentialPayout}`);\n      setSelectedPicks([]);\n      await fetchStats(); // Refresh stats\n      logUserAction(\"lineup_submitted\", { \n        picks: selectedPicks.length, \n        entryFee, \n        potentialPayout \n      });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"Failed to submit lineup\";\n      alert(`Failed to submit lineup: ${errorMessage}`);\n      logger.error(\"lineup_submit_error\", { error: errorMessage });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // ============================================================================\n  // UTILITY FUNCTIONS\n  // ============================================================================\n\n  const getConfidenceColor = (confidence: number): string => {\n    if (confidence >= 85) return \"text-green-600\";\n    if (confidence >= 75) return \"text-yellow-600\";\n    return \"text-red-600\";\n  };\n\n  const getConfidenceBgColor = (confidence: number): string => {\n    if (confidence >= 85) return \"bg-green-100\";\n    if (confidence >= 75) return \"bg-yellow-100\";\n    return \"bg-red-100\";\n  };\n\n  const getRiskColor = (risk: \"low\" | \"medium\" | \"high\"): string => {\n    switch (risk) {\n      case \"low\": return \"text-green-600\";\n      case \"medium\": return \"text-yellow-600\";\n      case \"high\": return \"text-red-600\";\n      default: return \"text-gray-600\";\n    }\n  };\n\n  // ============================================================================\n  // RENDER HELPERS\n  // ============================================================================\n\n  const renderPickButton = (prop: PlayerProp, choice: \"over\" | \"under\") => {\n    const isSelected = getPickChoice(prop, choice);\n    const value = choice === \"over\" ? prop.overOdds : prop.underOdds;\n    const line = prop.line;\n\n    return (\n      <button\n        onClick={() => handlePickToggle(prop, choice)}\n        title={`${choice === \"over\" ? \"Over\" : \"Under\"} ${line} ${prop.stat}`}\n        className={`\n          flex-1 p-3 rounded-lg border-2 transition-all duration-200 text-sm font-medium\n          ${isSelected\n            ? choice === \"over\"\n              ? \"bg-green-600 text-white border-green-600 shadow-lg\"\n              : \"bg-red-600 text-white border-red-600 shadow-lg\"\n            : \"bg-white text-gray-700 border-gray-200 hover:bg-gray-50\"\n          }\n        `}\n      >\n        <div className=\"text-center\">\n          <div className=\"font-bold\">\n            {choice === \"over\" ? \"O\" : \"U\"} {line}\n          </div>\n          <div className=\"text-xs opacity-80\">\n            {value > 0 ? `+${value}` : value}\n          </div>\n        </div>\n      </button>\n    );\n  };\n\n  const renderPropCard = (prop: PlayerProp) => (\n    <div\n      key={prop.id}\n      className=\"bg-white rounded-xl shadow-lg border border-gray-200 p-6 hover:shadow-xl transition-all duration-300\"\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <UserIcon className=\"h-8 w-8 text-blue-600\" />\n          <div>\n            <h3 className=\"text-lg font-bold text-gray-900\">{prop.player}</h3>\n            <p className=\"text-sm text-gray-600\">{prop.team} vs {prop.opponent}</p>\n          </div>\n        </div>\n        <div className={`px-3 py-1 rounded-full text-xs font-medium ${getConfidenceBgColor(prop.confidence)} ${getConfidenceColor(prop.confidence)}`}>\n          {prop.confidence}% confidence\n        </div>\n      </div>\n\n      {/* Stat Info */}\n      <div className=\"mb-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"text-lg font-semibold text-gray-900\">{prop.stat}</span>\n          <div className=\"flex items-center space-x-2\">\n            <ChartBarIcon className=\"h-4 w-4 text-gray-500\" />\n            <span className=\"text-sm text-gray-600\">Proj: {prop.projection.toFixed(1)}</span>\n          </div>\n        </div>\n        <div className=\"text-sm text-gray-600 mb-3\">\n          Season Avg: {prop.season_stats.average.toFixed(1)} | Hit Rate: {Math.round(prop.season_stats.hit_rate * 100)}%\n        </div>\n      </div>\n\n      {/* Pick Buttons */}\n      <div className=\"flex space-x-2 mb-4\">\n        {renderPickButton(prop, \"over\")}\n        {renderPickButton(prop, \"under\")}\n      </div>\n\n      {/* Advanced Stats */}\n      {showAdvanced && (\n        <div className=\"pt-4 border-t border-gray-200\">\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">Recent Form:</span>\n              <div className=\"flex space-x-1 mt-1\">\n                {prop.recent_form.map((value, idx) => (\n                  <span\n                    key={idx}\n                    className={`px-2 py-1 rounded text-xs ${\n                      value > prop.line ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"\n                    }`}\n                  >\n                    {value}\n                  </span>\n                ))}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Edge:</span>\n              <div className={`font-semibold ${prop.edge > 0 ? \"text-green-600\" : \"text-red-600\"}`}>\n                {prop.edge > 0 ? \"+\" : \"\"}{prop.edge.toFixed(1)}%\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n\n  if (loading && playerProps.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center py-20\">\n            <ArrowPathIcon className=\"h-12 w-12 text-blue-600 mx-auto mb-4 animate-spin\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Loading PrizePicks Props</h2>\n            <p className=\"text-gray-600\">Fetching the latest player props and recommendations...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error && playerProps.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center py-20\">\n            <ExclamationTriangleIcon className=\"h-12 w-12 text-red-600 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Error Loading Props</h2>\n            <p className=\"text-gray-600 mb-6\">{error}</p>\n            <button\n              onClick={fetchPlayerProps}\n              className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <OfflineIndicator show={healthStatus?.status !== 'healthy'} />\n      \n      {/* Header */}\n      <div className=\"bg-white border-b border-gray-200 shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <TrophyIcon className=\"h-8 w-8 text-blue-600\" />\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-900\">PrizePicks Pro</h1>\n                <p className=\"text-gray-600\">AI-Powered Prop Betting Intelligence</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              {/* Health Status */}\n              <div className=\"flex items-center space-x-2\">\n                <div className={`w-3 h-3 rounded-full ${\n                  healthStatus.status === \"online\" ? \"bg-green-500\" : \"bg-red-500\"\n                }`} />\n                <span className=\"text-sm text-gray-600\">\n                  {healthStatus.activePredictions} active props\n                </span>\n              </div>\n              \n              {/* Refresh Button */}\n              <button\n                onClick={fetchPlayerProps}\n                disabled={loading}\n                title=\"Refresh props data\"\n                className=\"p-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 transition-colors\"\n              >\n                <ArrowPathIcon className={`h-5 w-5 ${loading ? \"animate-spin\" : \"\"}`} />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto p-4\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Sidebar - Filters & Selected Picks */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Stats Card */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                <ChartBarIcon className=\"h-5 w-5 text-blue-600 mr-2\" />\n                Your Stats\n              </h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Win Rate:</span>\n                  <span className=\"font-semibold text-green-600\">{stats.winRate.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Profit:</span>\n                  <span className={`font-semibold ${stats.profit >= 0 ? \"text-green-600\" : \"text-red-600\"}`}>\n                    ${stats.profit.toFixed(2)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Total Lineups:</span>\n                  <span className=\"font-semibold\">{stats.totalLineups}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Current Streak:</span>\n                  <span className=\"font-semibold\">{stats.currentStreak}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Filters */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                <CogIcon className=\"h-5 w-5 text-blue-600 mr-2\" />\n                Filters & Settings\n              </h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"sport-filter\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Sport\n                  </label>\n                  <select\n                    id=\"sport-filter\"\n                    value={filterSport}\n                    onChange={(e) => setFilterSport(e.target.value)}\n                    title=\"Filter by sport\"\n                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"all\">All Sports</option>\n                    <option value=\"nba\">NBA</option>\n                    <option value=\"nfl\">NFL</option>\n                    <option value=\"mlb\">MLB</option>\n                    <option value=\"nhl\">NHL</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label htmlFor=\"confidence-filter\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Min Confidence: {filterConfidence}%\n                  </label>\n                  <input\n                    id=\"confidence-filter\"\n                    type=\"range\"\n                    min=\"50\"\n                    max=\"95\"\n                    value={filterConfidence}\n                    onChange={(e) => setFilterConfidence(Number(e.target.value))}\n                    title={`Minimum confidence: ${filterConfidence}%`}\n                    className=\"w-full\"\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"sort-by\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Sort By\n                  </label>\n                  <select\n                    id=\"sort-by\"\n                    value={sortBy}\n                    onChange={(e) => setSortBy(e.target.value)}\n                    title=\"Sort props by\"\n                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"confidence\">Confidence</option>\n                    <option value=\"edge\">Edge</option>\n                    <option value=\"projection\">Projection</option>\n                  </select>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"show-advanced\"\n                    checked={showAdvanced}\n                    onChange={(e) => setShowAdvanced(e.target.checked)}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"show-advanced\" className=\"text-sm text-gray-700\">\n                    Show Advanced Stats\n                  </label>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"auto-refresh\"\n                    checked={autoRefresh}\n                    onChange={(e) => setAutoRefresh(e.target.checked)}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"auto-refresh\" className=\"text-sm text-gray-700\">\n                    Auto Refresh ({refreshInterval}s)\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            {/* Selected Picks */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                <CheckCircleIcon className=\"h-5 w-5 text-green-600 mr-2\" />\n                Selected Picks ({selectedPicks.length}/6)\n              </h3>\n\n              {selectedPicks.length === 0 ? (\n                <p className=\"text-gray-500 text-center py-4\">No picks selected yet</p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {selectedPicks.map((pick, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium text-gray-900\">{pick.player}</div>\n                        <div className=\"text-sm text-gray-600\">\n                          {pick.choice.toUpperCase()} {pick.line} {pick.stat}\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          {pick.confidence}% confidence\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => removePick(index)}\n                        title={`Remove ${pick.player} pick`}\n                        className=\"p-1 text-red-600 hover:bg-red-100 rounded transition-colors\"\n                      >\n                        <XMarkIcon className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  ))}\n\n                  {/* Lineup Summary */}\n                  <div className=\"pt-4 border-t border-gray-200\">\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Entry Fee:</span>\n                        <span className=\"font-medium\">${entryFee}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Potential Payout:</span>\n                        <span className=\"font-bold text-green-600\">${potentialPayout}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Avg Confidence:</span>\n                        <span className={`font-medium ${getConfidenceColor(avgConfidence)}`}>\n                          {avgConfidence}%\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Risk Level:</span>\n                        <span className={`font-medium ${getRiskColor(riskLevel)}`}>\n                          {riskLevel.toUpperCase()}\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <button\n                      onClick={handleSubmitLineup}\n                      disabled={selectedPicks.length < 2 || isSubmitting}\n                      title={selectedPicks.length < 2 ? \"Need at least 2 picks\" : \"Submit lineup\"}\n                      className=\"w-full mt-4 bg-green-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                    >\n                      {isSubmitting ? \"Submitting...\" : \"Submit Lineup\"}\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Main Content - Props List */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"mb-6 flex items-center justify-between\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">\n                Player Props ({filteredProps.length})\n              </h2>\n              <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n                <ClockIcon className=\"h-4 w-4\" />\n                <span>Last updated: {new Date().toLocaleTimeString()}</span>\n              </div>\n            </div>\n\n            {filteredProps.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <InformationCircleIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No Props Found</h3>\n                <p className=\"text-gray-600\">Try adjusting your filters to see more props.</p>\n              </div>\n            ) : (\n              <div className=\"grid gap-6\">\n                {filteredProps.map(renderPropCard)}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PrizePicksPro;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\PrizePicksProNew.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\PrizePicksProNew2.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'filtered' is never reassigned. Use 'const' instead.","line":146,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":146,"endColumn":17,"fix":{"range":[3928,4207],"text":"const filtered = playerProps.filter((prop) => {\n      if (filterSport !== \"all\" && !prop.team.toLowerCase().includes(filterSport.toLowerCase())) {\n        return false;\n      }\n      if (prop.confidence < filterConfidence) {\n        return false;\n      }\n      return true;\n    });"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport {\n  TrophyIcon,\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon,\n  UserIcon,\n  CheckCircleIcon,\n  CurrencyDollarIcon,\n  ChartBarIcon,\n  CogIcon,\n  BoltIcon,\n  FireIcon,\n  XMarkIcon,\n  UsersIcon,\n  ArrowPathIcon,\n  InformationCircleIcon,\n  ClockIcon,\n  ShieldCheckIcon,\n  StarIcon,\n  ExclamationTriangleIcon,\n  PlayIcon,\n  StopIcon,\n  PlusIcon,\n  MinusIcon,\n} from \"@heroicons/react/24/outline\";\nimport { productionApiService } from \"@/services/api/ProductionApiService\";\nimport { logger, logUserAction, logError } from \"@/utils/logger\";\nimport OfflineIndicator from \"@/components/ui/OfflineIndicator\";\n\n// ============================================================================\n// INTERFACES & TYPES\n// ============================================================================\n\ninterface PlayerProp {\n  id: string;\n  player: string;\n  team: string;\n  opponent: string;\n  stat: string;\n  line: number;\n  overOdds: number;\n  underOdds: number;\n  confidence: number;\n  pickType: \"over\" | \"under\" | null;\n  projection: number;\n  edge: number;\n  recent_form: number[];\n  season_stats: {\n    average: number;\n    games: number;\n    hit_rate: number;\n  };\n  matchup_data: {\n    defense_rank: number;\n    pace: number;\n    total: number;\n  };\n  weather?: {\n    condition: string;\n    temp: number;\n    wind: number;\n  };\n  injury_report?: string;\n  last_5_games: number[];\n  vs_opponent: number[];\n}\n\ninterface SelectedPick {\n  propId: string;\n  choice: \"over\" | \"under\";\n  player: string;\n  stat: string;\n  line: number;\n  confidence: number;\n  pickType: string;\n  projection: number;\n  edge: number;\n}\n\ninterface LineupEntry {\n  picks: SelectedPick[];\n  entryFee: number;\n  potentialPayout: number;\n  riskLevel: \"low\" | \"medium\" | \"high\";\n  strategy: string;\n}\n\ninterface PrizePicksStats {\n  totalLineups: number;\n  winRate: number;\n  profit: number;\n  avgConfidence: number;\n  bestStreak: number;\n  currentStreak: number;\n}\n\ninterface HealthStatus {\n  api_status: string;\n  data_freshness: number;\n  active_props: number;\n  system_load: number;\n}\n\n// ============================================================================\n// COMPONENT\n// ============================================================================\n\nconst PrizePicksPro: React.FC = () => {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  const [playerProps, setPlayerProps] = useState<PlayerProp[]>([]);\n  const [selectedPicks, setSelectedPicks] = useState<SelectedPick[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [entryFee, setEntryFee] = useState<number>(5);\n  const [filterSport, setFilterSport] = useState<string>(\"all\");\n  const [filterConfidence, setFilterConfidence] = useState<number>(70);\n  const [sortBy, setSortBy] = useState<string>(\"confidence\");\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"desc\");\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [autoRefresh, setAutoRefresh] = useState(false);\n  const [refreshInterval, setRefreshInterval] = useState<number>(30);\n  const [stats, setStats] = useState<PrizePicksStats>({\n    totalLineups: 0,\n    winRate: 0,\n    profit: 0,\n    avgConfidence: 0,\n    bestStreak: 0,\n    currentStreak: 0,\n  });\n  const [healthStatus, setHealthStatus] = useState<HealthStatus>({\n    api_status: \"connected\",\n    data_freshness: 100,\n    active_props: 0,\n    system_load: 0,\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // ============================================================================\n  // COMPUTED VALUES\n  // ============================================================================\n\n  const filteredProps = useMemo(() => {\n    let filtered = playerProps.filter((prop) => {\n      if (filterSport !== \"all\" && !prop.team.toLowerCase().includes(filterSport.toLowerCase())) {\n        return false;\n      }\n      if (prop.confidence < filterConfidence) {\n        return false;\n      }\n      return true;\n    });\n\n    // Sort props\n    filtered.sort((a, b) => {\n      let aValue, bValue;\n      switch (sortBy) {\n        case \"confidence\":\n          aValue = a.confidence;\n          bValue = b.confidence;\n          break;\n        case \"edge\":\n          aValue = a.edge;\n          bValue = b.edge;\n          break;\n        case \"projection\":\n          aValue = a.projection;\n          bValue = b.projection;\n          break;\n        default:\n          aValue = a.confidence;\n          bValue = b.confidence;\n      }\n\n      return sortOrder === \"desc\" ? bValue - aValue : aValue - bValue;\n    });\n\n    return filtered;\n  }, [playerProps, filterSport, filterConfidence, sortBy, sortOrder]);\n\n  const potentialPayout = useMemo(() => {\n    if (selectedPicks.length < 2) return 0;\n    const multipliers = [0, 0, 3, 5, 10, 20, 40];\n    return Math.round(entryFee * (multipliers[selectedPicks.length] || 40));\n  }, [selectedPicks.length, entryFee]);\n\n  const totalEdge = useMemo(() => {\n    return selectedPicks.reduce((sum, pick) => sum + pick.edge, 0);\n  }, [selectedPicks]);\n\n  const avgConfidence = useMemo(() => {\n    if (selectedPicks.length === 0) return 0;\n    return Math.round(\n      selectedPicks.reduce((sum, pick) => sum + pick.confidence, 0) /\n        selectedPicks.length\n    );\n  }, [selectedPicks]);\n\n  const riskLevel = useMemo(() => {\n    if (avgConfidence >= 85) return \"low\";\n    if (avgConfidence >= 75) return \"medium\";\n    return \"high\";\n  }, [avgConfidence]);\n\n  // ============================================================================\n  // DATA FETCHING\n  // ============================================================================\n\n  const fetchPlayerProps = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await productionApiService.getPlayerProps();\n      \n      if (response.success && response.data) {\n        setPlayerProps(response.data);\n        logUserAction(\"prizepicks_props_loaded\", { count: response.data.length });\n      } else {\n        // No fallback data - set empty array and error for production\n        setPlayerProps([]);\n        setError(\"No player props data available\");\n        logger.error(\"No player props data returned from API\");\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : \"Failed to fetch player props\";\n      setError(errorMessage);\n      logError(\"prizepicks_fetch_error\", err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchHealthStatus = useCallback(async () => {\n    try {\n      const response = await productionApiService.getHealthStatus();\n      if (response.success && response.data) {\n        setHealthStatus(response.data);\n      }\n    } catch (err) {\n      logger.warn(\"Failed to fetch health status\", err);\n    }\n  }, []);\n\n  const fetchStats = useCallback(async () => {\n    try {\n      const response = await productionApiService.getPrizePicksStats();\n      if (response.success && response.data) {\n        setStats(response.data);\n      }\n    } catch (err) {\n      logger.warn(\"Failed to fetch stats\", err);\n    }\n  }, []);\n\n  // ============================================================================\n  // EFFECTS\n  // ============================================================================\n\n  useEffect(() => {\n    fetchPlayerProps();\n    fetchHealthStatus();\n    fetchStats();\n  }, [fetchPlayerProps, fetchHealthStatus, fetchStats]);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    \n    if (autoRefresh && refreshInterval > 0) {\n      interval = setInterval(() => {\n        fetchPlayerProps();\n        fetchHealthStatus();\n      }, refreshInterval * 1000);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [autoRefresh, refreshInterval, fetchPlayerProps, fetchHealthStatus]);\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n\n  const handlePickToggle = (prop: PlayerProp, choice: \"over\" | \"under\") => {\n    // Check if user already has a pick for this player\n    const existingPickIndex = selectedPicks.findIndex(\n      (pick) => pick.player === prop.player && pick.stat === prop.stat\n    );\n\n    if (existingPickIndex !== -1) {\n      // Remove existing pick if clicking the same choice, or replace if different\n      const existingPick = selectedPicks[existingPickIndex];\n      if (existingPick.choice === choice) {\n        // Remove the pick\n        setSelectedPicks((prev) => prev.filter((_, index) => index !== existingPickIndex));\n        return;\n      } else {\n        // Replace with new choice\n        const updatedPick: SelectedPick = {\n          ...existingPick,\n          choice,\n        };\n        setSelectedPicks((prev) => \n          prev.map((pick, index) => index === existingPickIndex ? updatedPick : pick)\n        );\n        return;\n      }\n    }\n\n    // Check maximum picks limit\n    if (selectedPicks.length >= 6) {\n      alert(\"Maximum 6 picks per lineup!\");\n      return;\n    }\n\n    // Add new pick\n    const newPick: SelectedPick = {\n      propId: prop.id,\n      choice,\n      player: prop.player,\n      stat: prop.stat,\n      line: prop.line,\n      confidence: prop.confidence,\n      pickType: prop.stat,\n      projection: prop.projection,\n      edge: prop.edge,\n    };\n\n    setSelectedPicks((prev) => [...prev, newPick]);\n    logUserAction(\"pick_selected\", { \n      player: prop.player, \n      stat: prop.stat, \n      choice, \n      confidence: prop.confidence \n    });\n  };\n\n  const getPickChoice = (prop: PlayerProp, choice: \"over\" | \"under\"): boolean => {\n    return selectedPicks.some(\n      (pick) => pick.player === prop.player && pick.stat === prop.stat && pick.choice === choice\n    );\n  };\n\n  const removePick = (index: number) => {\n    const removedPick = selectedPicks[index];\n    setSelectedPicks((prev) => prev.filter((_, i) => i !== index));\n    logUserAction(\"pick_removed\", { \n      player: removedPick.player, \n      stat: removedPick.stat \n    });\n  };\n\n  const handleSubmitLineup = async () => {\n    if (selectedPicks.length < 2) {\n      alert(\"You need at least 2 picks to submit a lineup!\");\n      return;\n    }\n\n    // Validate team diversity (at least 2 different teams)\n    const teams = new Set(selectedPicks.map(pick => {\n      const prop = playerProps.find(p => p.player === pick.player && p.stat === pick.stat);\n      return prop?.team || \"\";\n    }));\n\n    if (teams.size < 2) {\n      alert(\"You need picks from at least 2 different teams!\");\n      return;\n    }\n\n    try {\n      setIsSubmitting(true);\n\n      const lineup: LineupEntry = {\n        picks: selectedPicks,\n        entryFee,\n        potentialPayout,\n        riskLevel,\n        strategy: `${selectedPicks.length}-pick ${riskLevel} risk`,\n      };\n\n      const response = await productionApiService.submitLineup(lineup);\n      \n      if (response.success) {\n        alert(`Lineup submitted! Potential payout: $${potentialPayout}`);\n        setSelectedPicks([]);\n        await fetchStats(); // Refresh stats\n        logUserAction(\"lineup_submitted\", { \n          picks: selectedPicks.length, \n          entryFee, \n          potentialPayout \n        });\n      } else {\n        throw new Error(response.error || \"Failed to submit lineup\");\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"Failed to submit lineup\";\n      alert(`Failed to submit lineup: ${errorMessage}`);\n      logError(\"lineup_submit_error\", error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleReconnect = () => {\n    alert(\"Reconnecting to PrizePicks API...\");\n    fetchPlayerProps();\n    fetchHealthStatus();\n  };\n\n  // ============================================================================\n  // UTILITY FUNCTIONS\n  // ============================================================================\n\n  const getConfidenceColor = (confidence: number): string => {\n    if (confidence >= 85) return \"text-green-600\";\n    if (confidence >= 75) return \"text-yellow-600\";\n    return \"text-red-600\";\n  };\n\n  const getConfidenceBgColor = (confidence: number): string => {\n    if (confidence >= 85) return \"bg-green-100\";\n    if (confidence >= 75) return \"bg-yellow-100\";\n    return \"bg-red-100\";\n  };\n\n  const getRiskColor = (risk: \"low\" | \"medium\" | \"high\"): string => {\n    switch (risk) {\n      case \"low\": return \"text-green-600\";\n      case \"medium\": return \"text-yellow-600\";\n      case \"high\": return \"text-red-600\";\n      default: return \"text-gray-600\";\n    }\n  };\n\n  // ============================================================================\n  // RENDER HELPERS\n  // ============================================================================\n\n  const renderPickButton = (prop: PlayerProp, choice: \"over\" | \"under\") => {\n    const isSelected = getPickChoice(prop, choice);\n    const value = choice === \"over\" ? prop.overOdds : prop.underOdds;\n    const line = prop.line;\n\n    return (\n      <button\n        onClick={() => handlePickToggle(prop, choice)}\n        title={`${choice === \"over\" ? \"Over\" : \"Under\"} ${line} ${prop.stat}`}\n        className={`\n          flex-1 p-3 rounded-lg border-2 transition-all duration-200 text-sm font-medium\n          ${isSelected\n            ? choice === \"over\"\n              ? \"bg-green-600 text-white border-green-600 shadow-lg\"\n              : \"bg-red-600 text-white border-red-600 shadow-lg\"\n            : \"bg-white text-gray-700 border-gray-200 hover:bg-gray-50\"\n          }\n        `}\n      >\n        <div className=\"text-center\">\n          <div className=\"font-bold\">\n            {choice === \"over\" ? \"O\" : \"U\"} {line}\n          </div>\n          <div className=\"text-xs opacity-80\">\n            {value > 0 ? `+${value}` : value}\n          </div>\n        </div>\n      </button>\n    );\n  };\n\n  const renderPropCard = (prop: PlayerProp) => (\n    <div\n      key={prop.id}\n      className=\"bg-white rounded-xl shadow-lg border border-gray-200 p-6 hover:shadow-xl transition-all duration-300\"\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <UserIcon className=\"h-8 w-8 text-blue-600\" />\n          <div>\n            <h3 className=\"text-lg font-bold text-gray-900\">{prop.player}</h3>\n            <p className=\"text-sm text-gray-600\">{prop.team} vs {prop.opponent}</p>\n          </div>\n        </div>\n        <div className={`px-3 py-1 rounded-full text-xs font-medium ${getConfidenceBgColor(prop.confidence)} ${getConfidenceColor(prop.confidence)}`}>\n          {prop.confidence}% confidence\n        </div>\n      </div>\n\n      {/* Stat Info */}\n      <div className=\"mb-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"text-lg font-semibold text-gray-900\">{prop.stat}</span>\n          <div className=\"flex items-center space-x-2\">\n            <ChartBarIcon className=\"h-4 w-4 text-gray-500\" />\n            <span className=\"text-sm text-gray-600\">Proj: {prop.projection}</span>\n          </div>\n        </div>\n        <div className=\"text-sm text-gray-600 mb-3\">\n          Season Avg: {prop.season_stats.average} | Hit Rate: {Math.round(prop.season_stats.hit_rate * 100)}%\n        </div>\n      </div>\n\n      {/* Pick Buttons */}\n      <div className=\"flex space-x-2 mb-4\">\n        {renderPickButton(prop, \"over\")}\n        {renderPickButton(prop, \"under\")}\n      </div>\n\n      {/* Advanced Stats */}\n      {showAdvanced && (\n        <div className=\"pt-4 border-t border-gray-200\">\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">Recent Form:</span>\n              <div className=\"flex space-x-1 mt-1\">\n                {prop.recent_form.map((value, idx) => (\n                  <span\n                    key={idx}\n                    className={`px-2 py-1 rounded text-xs ${\n                      value > prop.line ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"\n                    }`}\n                  >\n                    {value}\n                  </span>\n                ))}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Edge:</span>\n              <div className={`font-semibold ${prop.edge > 0 ? \"text-green-600\" : \"text-red-600\"}`}>\n                {prop.edge > 0 ? \"+\" : \"\"}{prop.edge.toFixed(1)}%\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n\n  if (loading && playerProps.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center py-20\">\n            <ArrowPathIcon className=\"h-12 w-12 text-blue-600 mx-auto mb-4 animate-spin\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Loading PrizePicks Props</h2>\n            <p className=\"text-gray-600\">Fetching the latest player props and recommendations...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error && playerProps.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center py-20\">\n            <ExclamationTriangleIcon className=\"h-12 w-12 text-red-600 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Error Loading Props</h2>\n            <p className=\"text-gray-600 mb-6\">{error}</p>\n            <button\n              onClick={fetchPlayerProps}\n              className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <OfflineIndicator />\n      \n      {/* Header */}\n      <div className=\"bg-white border-b border-gray-200 shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <TrophyIcon className=\"h-8 w-8 text-blue-600\" />\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-900\">PrizePicks Pro</h1>\n                <p className=\"text-gray-600\">AI-Powered Prop Betting Intelligence</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              {/* Health Status */}\n              <div className=\"flex items-center space-x-2\">\n                <div className={`w-3 h-3 rounded-full ${\n                  healthStatus.api_status === \"connected\" ? \"bg-green-500\" : \"bg-red-500\"\n                }`} />\n                <span className=\"text-sm text-gray-600\">\n                  {healthStatus.active_props} active props\n                </span>\n              </div>\n              \n              {/* Refresh Button */}\n              <button\n                onClick={fetchPlayerProps}\n                disabled={loading}\n                title=\"Refresh props data\"\n                className=\"p-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 transition-colors\"\n              >\n                <ArrowPathIcon className={`h-5 w-5 ${loading ? \"animate-spin\" : \"\"}`} />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto p-4\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Sidebar - Filters & Selected Picks */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Stats Card */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                <ChartBarIcon className=\"h-5 w-5 text-blue-600 mr-2\" />\n                Your Stats\n              </h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Win Rate:</span>\n                  <span className=\"font-semibold text-green-600\">{stats.winRate.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Profit:</span>\n                  <span className={`font-semibold ${stats.profit >= 0 ? \"text-green-600\" : \"text-red-600\"}`}>\n                    ${stats.profit.toFixed(2)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Total Lineups:</span>\n                  <span className=\"font-semibold\">{stats.totalLineups}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Current Streak:</span>\n                  <span className=\"font-semibold\">{stats.currentStreak}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Filters */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                <CogIcon className=\"h-5 w-5 text-blue-600 mr-2\" />\n                Filters & Settings\n              </h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"sport-filter\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Sport\n                  </label>\n                  <select\n                    id=\"sport-filter\"\n                    value={filterSport}\n                    onChange={(e) => setFilterSport(e.target.value)}\n                    title=\"Filter by sport\"\n                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"all\">All Sports</option>\n                    <option value=\"nba\">NBA</option>\n                    <option value=\"nfl\">NFL</option>\n                    <option value=\"mlb\">MLB</option>\n                    <option value=\"nhl\">NHL</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label htmlFor=\"confidence-filter\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Min Confidence: {filterConfidence}%\n                  </label>\n                  <input\n                    id=\"confidence-filter\"\n                    type=\"range\"\n                    min=\"50\"\n                    max=\"95\"\n                    value={filterConfidence}\n                    onChange={(e) => setFilterConfidence(Number(e.target.value))}\n                    title={`Minimum confidence: ${filterConfidence}%`}\n                    className=\"w-full\"\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"sort-by\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Sort By\n                  </label>\n                  <select\n                    id=\"sort-by\"\n                    value={sortBy}\n                    onChange={(e) => setSortBy(e.target.value)}\n                    title=\"Sort props by\"\n                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"confidence\">Confidence</option>\n                    <option value=\"edge\">Edge</option>\n                    <option value=\"projection\">Projection</option>\n                  </select>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"show-advanced\"\n                    checked={showAdvanced}\n                    onChange={(e) => setShowAdvanced(e.target.checked)}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"show-advanced\" className=\"text-sm text-gray-700\">\n                    Show Advanced Stats\n                  </label>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"auto-refresh\"\n                    checked={autoRefresh}\n                    onChange={(e) => setAutoRefresh(e.target.checked)}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"auto-refresh\" className=\"text-sm text-gray-700\">\n                    Auto Refresh ({refreshInterval}s)\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            {/* Selected Picks */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                <CheckCircleIcon className=\"h-5 w-5 text-green-600 mr-2\" />\n                Selected Picks ({selectedPicks.length}/6)\n              </h3>\n\n              {selectedPicks.length === 0 ? (\n                <p className=\"text-gray-500 text-center py-4\">No picks selected yet</p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {selectedPicks.map((pick, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium text-gray-900\">{pick.player}</div>\n                        <div className=\"text-sm text-gray-600\">\n                          {pick.choice.toUpperCase()} {pick.line} {pick.stat}\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          {pick.confidence}% confidence\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => removePick(index)}\n                        title={`Remove ${pick.player} pick`}\n                        className=\"p-1 text-red-600 hover:bg-red-100 rounded transition-colors\"\n                      >\n                        <XMarkIcon className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  ))}\n\n                  {/* Lineup Summary */}\n                  <div className=\"pt-4 border-t border-gray-200\">\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Entry Fee:</span>\n                        <span className=\"font-medium\">${entryFee}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Potential Payout:</span>\n                        <span className=\"font-bold text-green-600\">${potentialPayout}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Avg Confidence:</span>\n                        <span className={`font-medium ${getConfidenceColor(avgConfidence)}`}>\n                          {avgConfidence}%\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Risk Level:</span>\n                        <span className={`font-medium ${getRiskColor(riskLevel)}`}>\n                          {riskLevel.toUpperCase()}\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <button\n                      onClick={handleSubmitLineup}\n                      disabled={selectedPicks.length < 2 || isSubmitting}\n                      title={selectedPicks.length < 2 ? \"Need at least 2 picks\" : \"Submit lineup\"}\n                      className=\"w-full mt-4 bg-green-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                    >\n                      {isSubmitting ? \"Submitting...\" : \"Submit Lineup\"}\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Main Content - Props List */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"mb-6 flex items-center justify-between\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">\n                Player Props ({filteredProps.length})\n              </h2>\n              <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n                <ClockIcon className=\"h-4 w-4\" />\n                <span>Last updated: {new Date().toLocaleTimeString()}</span>\n              </div>\n            </div>\n\n            {filteredProps.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <InformationCircleIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No Props Found</h3>\n                <p className=\"text-gray-600\">Try adjusting your filters to see more props.</p>\n              </div>\n            ) : (\n              <div className=\"grid gap-6\">\n                {filteredProps.map(renderPropCard)}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PrizePicksPro;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\PropOllama.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\RiskEngineInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\SearchNotificationHandlers.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\Settings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\SettingsTest.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\SimpleSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UltimateOpportunityScanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserFriendlyApp-Clean.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has an unnecessary dependency: 'ultimateBrainHealth'. Either exclude it or remove the dependency array.","line":165,"column":5,"nodeType":"ArrayExpression","endLine":165,"endColumn":54,"suggestions":[{"desc":"Update the dependencies array to be: [isUltimateBrainInitialized]","fix":{"range":[4821,4870],"text":"[isUltimateBrainInitialized]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useMemo } from \"react\";\nimport React from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport {\n  BarChart3,\n  Bell,\n  Brain,\n  DollarSign,\n  Home,\n  Menu,\n  Search,\n  Settings as SettingsIcon,\n  Trophy,\n  X,\n} from \"lucide-react\";\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { api } from \"../../services/integrationService\";\nimport ApiErrorBoundary from \"../ApiErrorBoundary\";\nimport {\n  initializeSettings,\n  getUserDisplayName,\n  getUserEmail,\n} from \"../../utils/userSettings\";\nimport toast from \"react-hot-toast\";\n\n// Import ULTIMATE BRAIN SYSTEM 🧠⚡\nimport { ultimateBrainCentralNervousSystem } from \"../../core/UltimateBrainCentralNervousSystem\";\n\n// Import user-friendly components\nimport MoneyMakerPro from \"./MoneyMakerPro\";\nimport PrizePicksPro from \"./PrizePicksPro\";\nimport PropOllama from \"./PropOllama\";\nimport UserFriendlyDashboard from \"./UserFriendlyDashboard\";\nimport SimpleSettings from \"./SimpleSettings\";\n\n// Import Intelligence Hub\nimport { AdvancedIntelligenceHub } from \"../intelligence/AdvancedIntelligenceHub\";\n\n// Modal components\nimport SearchModal from \"../modals/SearchModal\";\nimport NotificationsModal from \"../modals/NotificationsModal\";\n\ninterface NavigationItem {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  component: React.ComponentType<{ onNavigate?: (page: string) => void }>;\n  badge?: string;\n}\n\nconst UserFriendlyApp: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [searchModalOpen, setSearchModalOpen] = useState(false);\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n  const [userLoading, setUserLoading] = useState(true);\n  const [isUltimateBrainInitialized, setIsUltimateBrainInitialized] =\n    useState(false);\n\n  const queryClient = useQueryClient();\n\n  // Navigation handler\n  const handleNavigate = (page: string) => {\n    setActiveTab(page);\n    setSidebarOpen(false);\n  };\n\n  // Initialize user and Ultimate Brain\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        await initializeSettings();\n        setUserLoading(false);\n\n        // Initialize Ultimate Brain in background (non-blocking)\n        setTimeout(async () => {\n          try {\n            const initResult =\n              await ultimateBrainCentralNervousSystem.initialize();\n            setIsUltimateBrainInitialized(initResult.success);\n            if (initResult.success) {\n              toast.success(\"🧠 Ultimate Brain System Activated!\");\n            }\n          } catch (error) {\n            console.warn(\n              \"Ultimate Brain failed, using autonomous mode:\",\n              error,\n            );\n            setIsUltimateBrainInitialized(false);\n          }\n        }, 100);\n      } catch (error) {\n        console.error(\"App initialization error:\", error);\n        setUserLoading(false);\n      }\n    };\n\n    initializeApp();\n  }, []);\n\n  // Real-time Ultimate Brain health monitoring\n  const { data: ultimateBrainHealth } = useQuery({\n    queryKey: [\"ultimateBrainHealth\"],\n    queryFn: async () => {\n      if (!isUltimateBrainInitialized) return null;\n\n      try {\n        const health =\n          await ultimateBrainCentralNervousSystem.getSystemHealth();\n        return health;\n      } catch (error) {\n        console.warn(\"Ultimate Brain health check failed:\", error);\n        return null;\n      }\n    },\n    refetchInterval: 30000,\n    enabled: isUltimateBrainInitialized,\n  });\n\n  // Streamlined navigation for user-friendly main tools\n  const navigationItems: NavigationItem[] = useMemo(\n    () => [\n      {\n        id: \"dashboard\",\n        label: \"Dashboard\",\n        icon: <Home className=\"w-5 h-5\" />,\n        component: UserFriendlyDashboard,\n        badge: isUltimateBrainInitialized ? \"🧠\" : undefined,\n      },\n      {\n        id: \"prizepicks\",\n        label: \"PrizePicks Pro\",\n        icon: <Trophy className=\"w-5 h-5\" />,\n        component: PrizePicksPro,\n        badge: \"🏆\",\n      },\n      {\n        id: \"moneymaker\",\n        label: \"Money Maker Pro\",\n        icon: <DollarSign className=\"w-5 h-5\" />,\n        component: MoneyMakerPro,\n        badge: \"💰\",\n      },\n      {\n        id: \"propollama\",\n        label: \"propOllama\",\n        icon: <Brain className=\"w-5 h-5\" />,\n        component: PropOllama,\n        badge: \"🤖\",\n      },\n      {\n        id: \"intelligence\",\n        label: \"Intelligence Hub\",\n        icon: <BarChart3 className=\"w-5 h-5\" />,\n        component: AdvancedIntelligenceHub,\n        badge: isUltimateBrainInitialized ? \"🧠\" : \"⚡\",\n      },\n      {\n        id: \"settings\",\n        label: \"Settings\",\n        icon: <SettingsIcon className=\"w-5 h-5\" />,\n        component: SimpleSettings,\n      },\n    ],\n    [isUltimateBrainInitialized, ultimateBrainHealth],\n  );\n\n  const activeComponent = navigationItems.find((item) => item.id === activeTab);\n  const ActiveComponent = activeComponent?.component || UserFriendlyDashboard;\n\n  if (userLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 flex items-center justify-center\">\n        <motion.div\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          className=\"text-center\"\n        >\n          <div className=\"w-16 h-16 border-4 border-cyan-400 border-t-transparent rounded-full animate-spin mx-auto mb-4\" />\n          <div className=\"text-cyan-400 text-xl font-semibold mb-2\">\n            Initializing Autonomous Intelligence...\n          </div>\n          <div className=\"text-gray-400\">Loading advanced AI systems</div>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return (\n    <ApiErrorBoundary>\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 text-white relative overflow-hidden\">\n        {/* Background Effects */}\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-cyan-500/20 rounded-full blur-3xl animate-pulse\" />\n          <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-purple-500/20 rounded-full blur-3xl animate-pulse\" />\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-green-500/10 rounded-full blur-3xl animate-pulse\" />\n        </div>\n\n        {/* Header */}\n        <header className=\"relative z-20 bg-black/20 backdrop-blur-xl border-b border-cyan-500/20 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={() => setSidebarOpen(!sidebarOpen)}\n                className=\"lg:hidden p-2 rounded-lg bg-gray-800/40 hover:bg-gray-700/40 transition-colors\"\n              >\n                <Menu className=\"w-5 h-5\" />\n              </button>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"text-2xl\">🧠</div>\n                <div>\n                  <h1 className=\"text-xl font-bold bg-gradient-to-r from-cyan-400 via-green-400 to-blue-500 bg-clip-text text-transparent\">\n                    A1BETTING AUTONOMOUS AI\n                  </h1>\n                  <div className=\"text-xs text-gray-400\">\n                    {getUserDisplayName()} • {getUserEmail()}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-4\">\n              {/* Status Indicator */}\n              <div className=\"flex items-center gap-2 px-3 py-1 bg-gray-800/40 rounded-full\">\n                <div\n                  className={`w-2 h-2 rounded-full animate-pulse ${\n                    isUltimateBrainInitialized\n                      ? \"bg-green-400\"\n                      : \"bg-orange-400\"\n                  }`}\n                />\n                <span className=\"text-xs\">\n                  {isUltimateBrainInitialized ? \"AI Active\" : \"Autonomous Mode\"}\n                </span>\n              </div>\n\n              <button\n                onClick={() => setSearchModalOpen(true)}\n                className=\"p-2 rounded-lg bg-gray-800/40 hover:bg-gray-700/40 transition-colors\"\n              >\n                <Search className=\"w-5 h-5\" />\n              </button>\n              <button\n                onClick={() => setNotificationsOpen(true)}\n                className=\"p-2 rounded-lg bg-gray-800/40 hover:bg-gray-700/40 transition-colors relative\"\n              >\n                <Bell className=\"w-5 h-5\" />\n                <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full\" />\n              </button>\n            </div>\n          </div>\n        </header>\n\n        {/* Mobile overlay */}\n        <AnimatePresence>\n          {sidebarOpen && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-40 lg:hidden\"\n              onClick={() => setSidebarOpen(false)}\n            />\n          )}\n        </AnimatePresence>\n\n        <div className=\"flex\">\n          {/* Sidebar */}\n          <motion.aside\n            initial={false}\n            animate={{\n              x: sidebarOpen ? 0 : \"-100%\",\n            }}\n            className=\"fixed inset-y-0 left-0 z-50 w-64 bg-gray-900/95 backdrop-blur-2xl border-r border-cyan-500/20 lg:relative lg:translate-x-0 lg:z-auto\"\n          >\n            <div className=\"flex flex-col h-full\">\n              <div className=\"p-6\">\n                <h2 className=\"text-lg font-semibold text-cyan-400 mb-6 flex items-center gap-2\">\n                  <Brain className=\"w-5 h-5\" />\n                  Navigation\n                </h2>\n                <nav className=\"space-y-2\">\n                  {navigationItems.map((item) => (\n                    <button\n                      key={item.id}\n                      onClick={() => handleNavigate(item.id)}\n                      className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg text-left transition-all ${\n                        activeTab === item.id\n                          ? \"bg-gradient-to-r from-cyan-500/20 to-purple-500/20 border border-cyan-500/30 text-cyan-400\"\n                          : \"text-gray-300 hover:bg-gray-800/40 hover:text-white\"\n                      }`}\n                    >\n                      {item.icon}\n                      <span className=\"font-medium\">{item.label}</span>\n                      {item.badge && (\n                        <span className=\"ml-auto text-xs\">{item.badge}</span>\n                      )}\n                    </button>\n                  ))}\n                </nav>\n              </div>\n\n              {/* Autonomous AI Status */}\n              <div className=\"mt-auto p-6 border-t border-gray-800\">\n                <div className=\"bg-gray-800/40 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Brain className=\"w-4 h-4 text-cyan-400\" />\n                    <span className=\"text-sm font-medium text-cyan-400\">\n                      Autonomous AI\n                    </span>\n                  </div>\n                  <div className=\"text-xs text-gray-400 space-y-1\">\n                    <div className=\"flex justify-between\">\n                      <span>Status:</span>\n                      <span className=\"text-green-400\">ACTIVE</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Mode:</span>\n                      <span className=\"text-blue-400\">\n                        {isUltimateBrainInitialized ? \"Enhanced\" : \"Autonomous\"}\n                      </span>\n                    </div>\n                    <div className=\"text-xs text-green-400 mt-2\">\n                      ✅ All tools AI-enhanced\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.aside>\n\n          {/* Main Content */}\n          <main className=\"flex-1 min-h-screen lg:ml-0\">\n            <div className=\"p-6\">\n              <motion.div\n                key={activeTab}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3 }}\n                className=\"w-full\"\n              >\n                <ActiveComponent onNavigate={handleNavigate} />\n              </motion.div>\n            </div>\n          </main>\n        </div>\n\n        {/* Modals */}\n        <SearchModal\n          isOpen={searchModalOpen}\n          onClose={() => setSearchModalOpen(false)}\n        />\n        <NotificationsModal\n          isOpen={notificationsOpen}\n          onClose={() => setNotificationsOpen(false)}\n        />\n\n        {/* Footer */}\n        <footer className=\"relative z-10 bg-black/20 backdrop-blur-xl border-t border-cyan-500/20 p-6 mt-auto\">\n          <div className=\"text-center\">\n            <div className=\"text-cyan-400 bg-gradient-to-r from-cyan-400 via-green-400 to-blue-500 bg-clip-text font-bold mb-2 text-lg drop-shadow-2xl relative\">\n              <span className=\"relative z-10\">\n                A1BETTING AUTONOMOUS INTELLIGENCE\n              </span>\n            </div>\n            <div className=\"text-cyan-300/60 font-medium\">\n              © 2024 Autonomous Sports Intelligence Platform • AI-Enhanced\n              Tools • Real-time Analysis •{\" \"}\n              {isUltimateBrainInitialized\n                ? \"🧠 Enhanced Mode\"\n                : \"⚡ Autonomous Mode\"}\n            </div>\n          </div>\n        </footer>\n      </div>\n    </ApiErrorBoundary>\n  );\n};\n\nexport default UserFriendlyApp;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserFriendlyApp-Complete.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has an unnecessary dependency: 'ultimateBrainHealth'. Either exclude it or remove the dependency array.","line":498,"column":5,"nodeType":"ArrayExpression","endLine":498,"endColumn":54,"suggestions":[{"desc":"Update the dependencies array to be: [isUltimateBrainInitialized]","fix":{"range":[16423,16472],"text":"[isUltimateBrainInitialized]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useMemo } from \"react\";\nimport React from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport {\n  BarChart3,\n  Bell,\n  Brain,\n  DollarSign,\n  Home,\n  Menu,\n  MessageCircle,\n  Search,\n  Settings as SettingsIcon,\n  Trophy,\n  TrendingUp,\n  X,\n  Filter,\n  Clock,\n  AlertCircle,\n  CheckCircle,\n  Target,\n} from \"lucide-react\";\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { api } from \"../../services/integrationService\";\nimport OfflineIndicator from \"../ui/OfflineIndicator\";\nimport ApiErrorBoundary from \"../ApiErrorBoundary\";\nimport { ultraAccuracyIntegrationService } from \"../../services/UltraAccuracyIntegrationService\";\nimport {\n  initializeSettings,\n  getUserDisplayName,\n  getUserEmail,\n} from \"../../utils/userSettings\";\nimport toast from \"react-hot-toast\";\n\n// Import ULTIMATE BRAIN SYSTEM 🧠⚡\nimport {\n  ultimateBrainCentralNervousSystem,\n  type UltimateAccuracyResult,\n  type SportsPredictionRequest,\n} from \"../../core/UltimateBrainCentralNervousSystem\";\n\n// Import user-friendly components with enhanced AI\nimport MoneyMakerPro from \"./MoneyMakerPro\";\nimport PrizePicksPro from \"./PrizePicksPro\";\nimport PropOllama from \"./PropOllama\";\nimport UserFriendlyDashboard from \"./UserFriendlyDashboard\";\nimport SimpleSettings from \"./SimpleSettings\";\n\n// Modal components\nimport SearchModal from \"../modals/SearchModal\";\nimport NotificationsModal from \"../modals/NotificationsModal\";\n\n// Enhanced Intelligence Hub Component\nimport React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  BarChart3,\n  Brain,\n  Target,\n  Settings,\n  Activity,\n  Zap,\n  TrendingUp,\n  Shield,\n  Database,\n  Cpu,\n  Network,\n  AlertCircle,\n  CheckCircle,\n  Eye,\n  Gauge,\n} from \"lucide-react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { api } from \"../../services/integrationService\";\n\n// Import existing components to integrate\nimport { AdvancedIntelligenceHub } from \"../intelligence/AdvancedIntelligenceHub\";\nimport { UltraAccuracyDashboard } from \"../overview/UltraAccuracyOverview\";\nimport { AdminSettings } from \"../admin/AdminSettings\";\n\nconst EnhancedIntelligenceHub: React.FC<{\n  onNavigate?: (page: string) => void;\n}> = ({ onNavigate }) => {\n  const [activeSection, setActiveSection] = useState(\"overview\");\n\n  // Real-time system monitoring\n  const { data: healthData } = useQuery({\n    queryKey: [\"intelligence-health\"],\n    queryFn: () => api.getHealthStatus(),\n    refetchInterval: 5000,\n  });\n\n  const { data: accuracyData } = useQuery({\n    queryKey: [\"intelligence-accuracy\"],\n    queryFn: () => api.getAccuracyMetrics(),\n    refetchInterval: 10000,\n  });\n\n  // Intelligence Hub sections\n  const sections = [\n    {\n      id: \"overview\",\n      label: \"System Overview\",\n      icon: <Eye className=\"w-5 h-5\" />,\n      description: \"Real-time system status and performance\",\n    },\n    {\n      id: \"accuracy\",\n      label: \"Ultra Accuracy\",\n      icon: <Target className=\"w-5 h-5\" />,\n      description: \"Advanced accuracy monitoring and optimization\",\n    },\n    {\n      id: \"intelligence\",\n      label: \"AI Intelligence\",\n      icon: <Brain className=\"w-5 h-5\" />,\n      description: \"AI models, predictions, and neural networks\",\n    },\n    {\n      id: \"admin\",\n      label: \"Admin Control\",\n      icon: <Settings className=\"w-5 h-5\" />,\n      description: \"System administration and configuration\",\n    },\n  ];\n\n  const renderActiveSection = () => {\n    switch (activeSection) {\n      case \"overview\":\n        return (\n          <SystemOverview healthData={healthData} accuracyData={accuracyData} />\n        );\n      case \"accuracy\":\n        return <UltraAccuracyDashboard onNavigate={onNavigate} />;\n      case \"intelligence\":\n        return <AdvancedIntelligenceHub onNavigate={onNavigate} />;\n      case \"admin\":\n        return <AdminSettings onNavigate={onNavigate} />;\n      default:\n        return (\n          <SystemOverview healthData={healthData} accuracyData={accuracyData} />\n        );\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"text-center\"\n      >\n        <div className=\"text-6xl mb-4\">🧠</div>\n        <h1 className=\"text-4xl font-bold bg-gradient-to-r from-cyan-400 via-purple-400 to-green-400 bg-clip-text text-transparent mb-2\">\n          Intelligence Hub\n        </h1>\n        <p className=\"text-gray-400 text-lg\">\n          Central command for all AI systems and monitoring\n        </p>\n      </motion.div>\n\n      {/* Quick Stats */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.1 }}\n        className=\"grid grid-cols-1 md:grid-cols-4 gap-6\"\n      >\n        <div className=\"glass-card rounded-xl p-6 text-center\">\n          <div className=\"text-2xl mb-2 text-green-400\">\n            <Activity className=\"w-8 h-8 mx-auto\" />\n          </div>\n          <div className=\"text-xl font-bold text-white\">\n            {healthData?.status === \"healthy\" ? \"ONLINE\" : \"OFFLINE\"}\n          </div>\n          <div className=\"text-sm text-gray-400\">System Status</div>\n        </div>\n\n        <div className=\"glass-card rounded-xl p-6 text-center\">\n          <div className=\"text-2xl mb-2 text-blue-400\">\n            <Target className=\"w-8 h-8 mx-auto\" />\n          </div>\n          <div className=\"text-xl font-bold text-white\">\n            {accuracyData\n              ? `${(accuracyData.overall_accuracy * 100).toFixed(1)}%`\n              : \"0%\"}\n          </div>\n          <div className=\"text-sm text-gray-400\">AI Accuracy</div>\n        </div>\n\n        <div className=\"glass-card rounded-xl p-6 text-center\">\n          <div className=\"text-2xl mb-2 text-purple-400\">\n            <Brain className=\"w-8 h-8 mx-auto\" />\n          </div>\n          <div className=\"text-xl font-bold text-white\">\n            {Object.keys(healthData?.services || {}).length}\n          </div>\n          <div className=\"text-sm text-gray-400\">Active Models</div>\n        </div>\n\n        <div className=\"glass-card rounded-xl p-6 text-center\">\n          <div className=\"text-2xl mb-2 text-orange-400\">\n            <Zap className=\"w-8 h-8 mx-auto\" />\n          </div>\n          <div className=\"text-xl font-bold text-white\">\n            {healthData?.uptime\n              ? `${Math.floor(healthData.uptime / 3600)}h`\n              : \"0h\"}\n          </div>\n          <div className=\"text-sm text-gray-400\">Uptime</div>\n        </div>\n      </motion.div>\n\n      {/* Section Navigation */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.2 }}\n        className=\"glass-card rounded-xl p-6\"\n      >\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          {sections.map((section) => (\n            <motion.button\n              key={section.id}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={() => setActiveSection(section.id)}\n              className={`p-4 rounded-lg text-left transition-all ${\n                activeSection === section.id\n                  ? \"bg-gradient-to-r from-cyan-500/20 to-purple-500/20 border border-cyan-500/50\"\n                  : \"hover:bg-gray-800/40\"\n              }`}\n            >\n              <div className=\"flex items-center gap-3 mb-2\">\n                {section.icon}\n                <span className=\"font-semibold\">{section.label}</span>\n              </div>\n              <p className=\"text-sm text-gray-400\">{section.description}</p>\n            </motion.button>\n          ))}\n        </div>\n      </motion.div>\n\n      {/* Active Section */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.3 }}\n        className=\"glass-card rounded-xl p-6\"\n      >\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={activeSection}\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n            transition={{ duration: 0.3 }}\n          >\n            {renderActiveSection()}\n          </motion.div>\n        </AnimatePresence>\n      </motion.div>\n    </div>\n  );\n};\n\n// System Overview Component\nconst SystemOverview: React.FC<{ healthData: any; accuracyData: any }> = ({\n  healthData,\n  accuracyData,\n}) => {\n  return (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-cyan-400 mb-6\">System Overview</h2>\n\n      {/* Real-time Metrics */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold text-white\">System Health</h3>\n          {healthData?.services &&\n            Object.entries(healthData.services).map(\n              ([service, status]: [string, any]) => (\n                <div\n                  key={service}\n                  className=\"flex items-center justify-between p-3 bg-gray-800/40 rounded-lg\"\n                >\n                  <span className=\"text-gray-300 capitalize\">\n                    {service.replace(\"_\", \" \")}\n                  </span>\n                  <div className=\"flex items-center gap-2\">\n                    {status === \"operational\" ? (\n                      <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                    ) : (\n                      <AlertCircle className=\"w-4 h-4 text-red-400\" />\n                    )}\n                    <span\n                      className={\n                        status === \"operational\"\n                          ? \"text-green-400\"\n                          : \"text-red-400\"\n                      }\n                    >\n                      {status}\n                    </span>\n                  </div>\n                </div>\n              ),\n            )}\n        </div>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold text-white\">AI Performance</h3>\n          <div className=\"space-y-3\">\n            {accuracyData?.performance_by_sport &&\n              Object.entries(accuracyData.performance_by_sport).map(\n                ([sport, data]: [string, any]) => (\n                  <div key={sport} className=\"p-3 bg-gray-800/40 rounded-lg\">\n                    <div className=\"flex justify-between items-center mb-2\">\n                      <span className=\"text-gray-300 capitalize\">{sport}</span>\n                      <span className=\"text-cyan-400 font-bold\">\n                        {(data.accuracy * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                    <div className=\"w-full bg-gray-700 rounded-full h-2\">\n                      <div\n                        className=\"bg-gradient-to-r from-cyan-400 to-purple-400 h-2 rounded-full transition-all duration-500\"\n                        style={{ width: `${data.accuracy * 100}%` }}\n                      />\n                    </div>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      {data.games} games analyzed\n                    </div>\n                  </div>\n                ),\n              )}\n          </div>\n        </div>\n      </div>\n\n      {/* Autonomous Intelligence Status */}\n      <div className=\"bg-gradient-to-r from-purple-500/10 to-cyan-500/10 border border-purple-500/20 rounded-xl p-6\">\n        <h3 className=\"text-lg font-semibold text-purple-400 mb-4 flex items-center gap-2\">\n          <Brain className=\"w-5 h-5\" />\n          Autonomous Intelligence Status\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl text-green-400 mb-2\">✅</div>\n            <div className=\"text-sm font-semibold\">Background Processing</div>\n            <div className=\"text-xs text-gray-400\">All user tools enhanced</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl text-blue-400 mb-2\">🔄</div>\n            <div className=\"text-sm font-semibold\">Real-time Analysis</div>\n            <div className=\"text-xs text-gray-400\">Continuous learning</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl text-purple-400 mb-2\">🎯</div>\n            <div className=\"text-sm font-semibold\">Smart Predictions</div>\n            <div className=\"text-xs text-gray-400\">Optimized for profit</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Define interfaces\ninterface NavigationItem {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  component: React.ComponentType<{ onNavigate?: (page: string) => void }>;\n  badge?: string;\n}\n\nconst UserFriendlyApp: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [searchModalOpen, setSearchModalOpen] = useState(false);\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n  const [userLoading, setUserLoading] = useState(true);\n  const [isUltimateBrainInitialized, setIsUltimateBrainInitialized] =\n    useState(false);\n\n  const queryClient = useQueryClient();\n\n  // Navigation handler\n  const handleNavigate = (page: string) => {\n    setActiveTab(page);\n    setSidebarOpen(false);\n  };\n\n  // Initialize user and Ultimate Brain with fallback\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        await initializeSettings();\n\n        // Initialize Ultimate Brain System in background\n        try {\n          const initResult =\n            await ultimateBrainCentralNervousSystem.initialize();\n          setIsUltimateBrainInitialized(initResult.success);\n\n          if (initResult.success) {\n            toast.success(\"🧠 Ultimate Brain System Activated!\");\n          } else {\n            console.warn(\n              \"Ultimate Brain failed to initialize, using autonomous mode\",\n            );\n            setIsUltimateBrainInitialized(false);\n          }\n        } catch (brainError) {\n          console.warn(\n            \"Ultimate Brain initialization failed, using autonomous mode:\",\n            brainError,\n          );\n          // Continue without Ultimate Brain - app should still work\n          setIsUltimateBrainInitialized(false);\n        }\n\n        setUserLoading(false);\n      } catch (error) {\n        console.error(\"App initialization error:\", error);\n        setUserLoading(false);\n      }\n    };\n\n    initializeApp();\n  }, []);\n\n  // Real-time Ultimate Brain health monitoring\n  const { data: ultimateBrainHealth } = useQuery({\n    queryKey: [\"ultimateBrainHealth\"],\n    queryFn: async () => {\n      if (!isUltimateBrainInitialized) return null;\n\n      try {\n        const health =\n          await ultimateBrainCentralNervousSystem.getSystemHealth();\n        return health;\n      } catch (error) {\n        console.warn(\"Ultimate Brain health check failed:\", error);\n        return null;\n      }\n    },\n    refetchInterval: 30000,\n    enabled: isUltimateBrainInitialized,\n  });\n\n  // Streamlined navigation for user-friendly main tools\n  const navigationItems: NavigationItem[] = useMemo(\n    () => [\n      {\n        id: \"dashboard\",\n        label: \"Dashboard\",\n        icon: <Home className=\"w-5 h-5\" />,\n        component: UserFriendlyDashboard,\n        badge: isUltimateBrainInitialized ? \"🧠\" : undefined,\n      },\n      {\n        id: \"prizepicks\",\n        label: \"PrizePicks Pro\",\n        icon: <Trophy className=\"w-5 h-5\" />,\n        component: PrizePicksPro,\n        badge: \"🏆\",\n      },\n      {\n        id: \"moneymaker\",\n        label: \"Money Maker Pro\",\n        icon: <DollarSign className=\"w-5 h-5\" />,\n        component: MoneyMakerPro,\n        badge: \"💰\",\n      },\n      {\n        id: \"propollama\",\n        label: \"propOllama\",\n        icon: <Brain className=\"w-5 h-5\" />,\n        component: PropOllama,\n        badge: \"🤖\",\n      },\n      {\n        id: \"intelligence\",\n        label: \"Intelligence Hub\",\n        icon: <BarChart3 className=\"w-5 h-5\" />,\n        component: EnhancedIntelligenceHub,\n        badge: isUltimateBrainInitialized ? \"🧠\" : \"⚡\",\n      },\n      {\n        id: \"settings\",\n        label: \"Settings\",\n        icon: <SettingsIcon className=\"w-5 h-5\" />,\n        component: SimpleSettings,\n      },\n    ],\n    [isUltimateBrainInitialized, ultimateBrainHealth],\n  );\n\n  const activeComponent = navigationItems.find((item) => item.id === activeTab);\n  const ActiveComponent = activeComponent?.component || UserFriendlyDashboard;\n\n  if (userLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 flex items-center justify-center\">\n        <motion.div\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          className=\"text-center\"\n        >\n          <div className=\"w-16 h-16 border-4 border-cyan-400 border-t-transparent rounded-full animate-spin mx-auto mb-4\" />\n          <div className=\"text-cyan-400 text-xl font-semibold mb-2\">\n            Initializing Autonomous Intelligence...\n          </div>\n          <div className=\"text-gray-400\">Loading advanced AI systems</div>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return (\n    <ApiErrorBoundary>\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 text-white relative overflow-hidden\">\n        {/* Background Effects */}\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-cyan-500/20 rounded-full blur-3xl animate-pulse\" />\n          <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-purple-500/20 rounded-full blur-3xl animate-pulse\" />\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-green-500/10 rounded-full blur-3xl animate-pulse\" />\n        </div>\n\n        {/* Header */}\n        <header className=\"relative z-20 bg-black/20 backdrop-blur-xl border-b border-cyan-500/20 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={() => setSidebarOpen(!sidebarOpen)}\n                className=\"lg:hidden p-2 rounded-lg bg-gray-800/40 hover:bg-gray-700/40 transition-colors\"\n              >\n                <Menu className=\"w-5 h-5\" />\n              </button>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"text-2xl\">🧠</div>\n                <div>\n                  <h1 className=\"text-xl font-bold bg-gradient-to-r from-cyan-400 via-green-400 to-blue-500 bg-clip-text text-transparent\">\n                    A1BETTING AUTONOMOUS AI\n                  </h1>\n                  <div className=\"text-xs text-gray-400\">\n                    {getUserDisplayName()} • {getUserEmail()}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-4\">\n              {/* Status Indicator */}\n              <div className=\"flex items-center gap-2 px-3 py-1 bg-gray-800/40 rounded-full\">\n                <div\n                  className={`w-2 h-2 rounded-full animate-pulse ${\n                    isUltimateBrainInitialized\n                      ? \"bg-green-400\"\n                      : \"bg-orange-400\"\n                  }`}\n                />\n                <span className=\"text-xs\">\n                  {isUltimateBrainInitialized ? \"AI Active\" : \"Autonomous Mode\"}\n                </span>\n              </div>\n\n              <button\n                onClick={() => setSearchModalOpen(true)}\n                className=\"p-2 rounded-lg bg-gray-800/40 hover:bg-gray-700/40 transition-colors\"\n              >\n                <Search className=\"w-5 h-5\" />\n              </button>\n              <button\n                onClick={() => setNotificationsOpen(true)}\n                className=\"p-2 rounded-lg bg-gray-800/40 hover:bg-gray-700/40 transition-colors relative\"\n              >\n                <Bell className=\"w-5 h-5\" />\n                <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full\" />\n              </button>\n            </div>\n          </div>\n        </header>\n\n        {/* Mobile overlay */}\n        <AnimatePresence>\n          {sidebarOpen && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-40 lg:hidden\"\n              onClick={() => setSidebarOpen(false)}\n            />\n          )}\n        </AnimatePresence>\n\n        <div className=\"flex\">\n          {/* Sidebar */}\n          <motion.aside\n            initial={false}\n            animate={{\n              x: sidebarOpen ? 0 : \"-100%\",\n            }}\n            className=\"fixed inset-y-0 left-0 z-50 w-64 bg-gray-900/95 backdrop-blur-2xl border-r border-cyan-500/20 lg:relative lg:translate-x-0 lg:z-auto\"\n          >\n            <div className=\"flex flex-col h-full\">\n              <div className=\"p-6\">\n                <h2 className=\"text-lg font-semibold text-cyan-400 mb-6 flex items-center gap-2\">\n                  <Brain className=\"w-5 h-5\" />\n                  Navigation\n                </h2>\n                <nav className=\"space-y-2\">\n                  {navigationItems.map((item) => (\n                    <button\n                      key={item.id}\n                      onClick={() => handleNavigate(item.id)}\n                      className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg text-left transition-all ${\n                        activeTab === item.id\n                          ? \"bg-gradient-to-r from-cyan-500/20 to-purple-500/20 border border-cyan-500/30 text-cyan-400\"\n                          : \"text-gray-300 hover:bg-gray-800/40 hover:text-white\"\n                      }`}\n                    >\n                      {item.icon}\n                      <span className=\"font-medium\">{item.label}</span>\n                      {item.badge && (\n                        <span className=\"ml-auto text-xs\">{item.badge}</span>\n                      )}\n                    </button>\n                  ))}\n                </nav>\n              </div>\n\n              {/* Autonomous AI Status */}\n              <div className=\"mt-auto p-6 border-t border-gray-800\">\n                <div className=\"bg-gray-800/40 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Brain className=\"w-4 h-4 text-cyan-400\" />\n                    <span className=\"text-sm font-medium text-cyan-400\">\n                      Autonomous AI\n                    </span>\n                  </div>\n                  <div className=\"text-xs text-gray-400 space-y-1\">\n                    <div className=\"flex justify-between\">\n                      <span>Status:</span>\n                      <span className=\"text-green-400\">ACTIVE</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Mode:</span>\n                      <span className=\"text-blue-400\">\n                        {isUltimateBrainInitialized ? \"Enhanced\" : \"Autonomous\"}\n                      </span>\n                    </div>\n                    <div className=\"text-xs text-green-400 mt-2\">\n                      ✅ All tools AI-enhanced\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.aside>\n\n          {/* Main Content */}\n          <main className=\"flex-1 min-h-screen lg:ml-0\">\n            <div className=\"p-6\">\n              <motion.div\n                key={activeTab}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3 }}\n                className=\"w-full\"\n              >\n                <ActiveComponent onNavigate={handleNavigate} />\n              </motion.div>\n            </div>\n          </main>\n        </div>\n\n        {/* Modals */}\n        <SearchModal\n          isOpen={searchModalOpen}\n          onClose={() => setSearchModalOpen(false)}\n        />\n        <NotificationsModal\n          isOpen={notificationsOpen}\n          onClose={() => setNotificationsOpen(false)}\n        />\n\n        {/* Footer */}\n        <footer className=\"relative z-10 bg-black/20 backdrop-blur-xl border-t border-cyan-500/20 p-6 mt-auto\">\n          <div className=\"text-center\">\n            <div className=\"text-cyan-400 bg-gradient-to-r from-cyan-400 via-green-400 to-blue-500 bg-clip-text font-bold mb-2 text-lg drop-shadow-2xl relative\">\n              <span className=\"relative z-10\">\n                A1BETTING AUTONOMOUS INTELLIGENCE\n              </span>\n            </div>\n            <div className=\"text-cyan-300/60 font-medium\">\n              © 2024 Autonomous Sports Intelligence Platform • AI-Enhanced\n              Tools • Real-time Analysis •{\" \"}\n              {isUltimateBrainInitialized\n                ? \"🧠 Enhanced Mode\"\n                : \"⚡ Autonomous Mode\"}\n            </div>\n          </div>\n        </footer>\n      </div>\n    </ApiErrorBoundary>\n  );\n};\n\nexport default UserFriendlyApp;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserFriendlyApp-fixed.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has an unnecessary dependency: 'ultimateBrainHealth'. Either exclude it or remove the dependency array.","line":186,"column":5,"nodeType":"ArrayExpression","endLine":186,"endColumn":54,"suggestions":[{"desc":"Update the dependencies array to be: [isUltimateBrainInitialized]","fix":{"range":[5526,5575],"text":"[isUltimateBrainInitialized]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useMemo } from \"react\";\nimport React from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport {\n  BarChart3,\n  Bell,\n  Brain,\n  DollarSign,\n  Home,\n  Menu,\n  MessageCircle,\n  Search,\n  Settings as SettingsIcon,\n  Trophy,\n  TrendingUp,\n  X,\n  Filter,\n  Clock,\n  AlertCircle,\n  CheckCircle,\n  Target,\n} from \"lucide-react\";\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { api } from \"../../services/integrationService\";\nimport OfflineIndicator from \"../ui/OfflineIndicator\";\nimport ApiErrorBoundary from \"../ApiErrorBoundary\";\nimport { ultraAccuracyIntegrationService } from \"../../services/UltraAccuracyIntegrationService\";\nimport {\n  initializeSettings,\n  getUserDisplayName,\n  getUserEmail,\n} from \"../../utils/userSettings\";\nimport toast from \"react-hot-toast\";\n\n// Import ULTIMATE BRAIN SYSTEM 🧠⚡\nimport {\n  ultimateBrainCentralNervousSystem,\n  type UltimateAccuracyResult,\n  type SportsPredictionRequest,\n} from \"../../core/UltimateBrainCentralNervousSystem\";\n\n// Import user-friendly components\nimport MoneyMakerPro from \"./MoneyMakerPro\";\nimport PrizePicksPro from \"./PrizePicksPro\";\nimport PropOllama from \"./PropOllama\";\nimport UserFriendlyDashboard from \"./UserFriendlyDashboard\";\nimport SimpleSettings from \"./SimpleSettings\";\n\n// Import existing components to integrate\nimport { AdvancedIntelligenceHub } from \"../intelligence/AdvancedIntelligenceHub\";\nimport { UltraAccuracyDashboard } from \"../overview/UltraAccuracyOverview\";\nimport { AdminSettings } from \"../admin/AdminSettings\";\n\n// Modal components\nimport SearchModal from \"../modals/SearchModal\";\nimport NotificationsModal from \"../modals/NotificationsModal\";\n\ninterface NavigationItem {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  component: React.ComponentType<{ onNavigate?: (page: string) => void }>;\n  badge?: string;\n}\n\nconst UserFriendlyApp: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [searchModalOpen, setSearchModalOpen] = useState(false);\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n  const [userLoading, setUserLoading] = useState(true);\n  const [isUltimateBrainInitialized, setIsUltimateBrainInitialized] =\n    useState(false);\n\n  const queryClient = useQueryClient();\n\n  // Navigation handler - Fixed to handle navigation properly\n  const handleNavigate = (page: string) => {\n    setActiveTab(page);\n    setSidebarOpen(false);\n  };\n\n  // Initialize user and Ultimate Brain with fallback\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        await initializeSettings();\n\n        // Initialize Ultimate Brain System in background\n        try {\n          const initResult =\n            await ultimateBrainCentralNervousSystem.initialize();\n          setIsUltimateBrainInitialized(initResult.success);\n\n          if (initResult.success) {\n            toast.success(\"🧠 Ultimate Brain System Activated!\");\n          } else {\n            console.warn(\n              \"Ultimate Brain failed to initialize, using autonomous mode\",\n            );\n            setIsUltimateBrainInitialized(false);\n          }\n        } catch (brainError) {\n          console.warn(\n            \"Ultimate Brain initialization failed, using autonomous mode:\",\n            brainError,\n          );\n          // Continue without Ultimate Brain - app should still work\n          setIsUltimateBrainInitialized(false);\n        }\n\n        setUserLoading(false);\n      } catch (error) {\n        console.error(\"App initialization error:\", error);\n        setUserLoading(false);\n      }\n    };\n\n    initializeApp();\n  }, []);\n\n  // Real-time Ultimate Brain health monitoring\n  const { data: ultimateBrainHealth } = useQuery({\n    queryKey: [\"ultimateBrainHealth\"],\n    queryFn: async () => {\n      if (!isUltimateBrainInitialized) return null;\n\n      try {\n        const health =\n          await ultimateBrainCentralNervousSystem.getSystemHealth();\n        return health;\n      } catch (error) {\n        console.warn(\"Ultimate Brain health check failed:\", error);\n        return null;\n      }\n    },\n    refetchInterval: 30000,\n    enabled: isUltimateBrainInitialized,\n  });\n\n  // Streamlined navigation for user-friendly main tools\n  const navigationItems: NavigationItem[] = useMemo(\n    () => [\n      {\n        id: \"dashboard\",\n        label: \"Dashboard\",\n        icon: <Home className=\"w-5 h-5\" />,\n        component: UserFriendlyDashboard,\n        badge: isUltimateBrainInitialized ? \"🧠\" : undefined,\n      },\n      {\n        id: \"prizepicks\",\n        label: \"PrizePicks Pro\",\n        icon: <Trophy className=\"w-5 h-5\" />,\n        component: PrizePicksPro,\n        badge: \"🏆\",\n      },\n      {\n        id: \"moneymaker\",\n        label: \"Money Maker Pro\",\n        icon: <DollarSign className=\"w-5 h-5\" />,\n        component: MoneyMakerPro,\n        badge: \"💰\",\n      },\n      {\n        id: \"propollama\",\n        label: \"propOllama\",\n        icon: <Brain className=\"w-5 h-5\" />,\n        component: PropOllama,\n        badge: \"🤖\",\n      },\n      {\n        id: \"intelligence\",\n        label: \"Intelligence Hub\",\n        icon: <BarChart3 className=\"w-5 h-5\" />,\n        component: AdvancedIntelligenceHub,\n        badge: isUltimateBrainInitialized ? \"🧠\" : \"⚡\",\n      },\n      {\n        id: \"settings\",\n        label: \"Settings\",\n        icon: <SettingsIcon className=\"w-5 h-5\" />,\n        component: SimpleSettings,\n      },\n    ],\n    [isUltimateBrainInitialized, ultimateBrainHealth],\n  );\n\n  const activeComponent = navigationItems.find((item) => item.id === activeTab);\n  const ActiveComponent = activeComponent?.component || UserFriendlyDashboard;\n\n  if (userLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 flex items-center justify-center\">\n        <motion.div\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          className=\"text-center\"\n        >\n          <div className=\"w-16 h-16 border-4 border-cyan-400 border-t-transparent rounded-full animate-spin mx-auto mb-4\" />\n          <div className=\"text-cyan-400 text-xl font-semibold mb-2\">\n            Initializing Autonomous Intelligence...\n          </div>\n          <div className=\"text-gray-400\">Loading advanced AI systems</div>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return (\n    <ApiErrorBoundary>\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 text-white relative overflow-hidden\">\n        {/* Background Effects */}\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-cyan-500/20 rounded-full blur-3xl animate-pulse\" />\n          <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-purple-500/20 rounded-full blur-3xl animate-pulse\" />\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-green-500/10 rounded-full blur-3xl animate-pulse\" />\n        </div>\n\n        {/* Header */}\n        <header className=\"relative z-20 bg-black/20 backdrop-blur-xl border-b border-cyan-500/20 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={() => setSidebarOpen(!sidebarOpen)}\n                className=\"lg:hidden p-2 rounded-lg bg-gray-800/40 hover:bg-gray-700/40 transition-colors\"\n              >\n                <Menu className=\"w-5 h-5\" />\n              </button>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"text-2xl\">🧠</div>\n                <div>\n                  <h1 className=\"text-xl font-bold bg-gradient-to-r from-cyan-400 via-green-400 to-blue-500 bg-clip-text text-transparent\">\n                    A1BETTING AUTONOMOUS AI\n                  </h1>\n                  <div className=\"text-xs text-gray-400\">\n                    {getUserDisplayName()} • {getUserEmail()}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-4\">\n              {/* Status Indicator */}\n              <div className=\"flex items-center gap-2 px-3 py-1 bg-gray-800/40 rounded-full\">\n                <div\n                  className={`w-2 h-2 rounded-full animate-pulse ${\n                    isUltimateBrainInitialized\n                      ? \"bg-green-400\"\n                      : \"bg-orange-400\"\n                  }`}\n                />\n                <span className=\"text-xs\">\n                  {isUltimateBrainInitialized ? \"AI Active\" : \"Autonomous Mode\"}\n                </span>\n              </div>\n\n              <button\n                onClick={() => setSearchModalOpen(true)}\n                className=\"p-2 rounded-lg bg-gray-800/40 hover:bg-gray-700/40 transition-colors\"\n              >\n                <Search className=\"w-5 h-5\" />\n              </button>\n              <button\n                onClick={() => setNotificationsOpen(true)}\n                className=\"p-2 rounded-lg bg-gray-800/40 hover:bg-gray-700/40 transition-colors relative\"\n              >\n                <Bell className=\"w-5 h-5\" />\n                <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full\" />\n              </button>\n            </div>\n          </div>\n        </header>\n\n        {/* Mobile overlay */}\n        <AnimatePresence>\n          {sidebarOpen && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-40 lg:hidden\"\n              onClick={() => setSidebarOpen(false)}\n            />\n          )}\n        </AnimatePresence>\n\n        <div className=\"flex\">\n          {/* Sidebar */}\n          <motion.aside\n            initial={false}\n            animate={{\n              x: sidebarOpen ? 0 : \"-100%\",\n            }}\n            className=\"fixed inset-y-0 left-0 z-50 w-64 bg-gray-900/95 backdrop-blur-2xl border-r border-cyan-500/20 lg:relative lg:translate-x-0 lg:z-auto\"\n          >\n            <div className=\"flex flex-col h-full\">\n              <div className=\"p-6\">\n                <h2 className=\"text-lg font-semibold text-cyan-400 mb-6 flex items-center gap-2\">\n                  <Brain className=\"w-5 h-5\" />\n                  Navigation\n                </h2>\n                <nav className=\"space-y-2\">\n                  {navigationItems.map((item) => (\n                    <button\n                      key={item.id}\n                      onClick={() => handleNavigate(item.id)}\n                      className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg text-left transition-all ${\n                        activeTab === item.id\n                          ? \"bg-gradient-to-r from-cyan-500/20 to-purple-500/20 border border-cyan-500/30 text-cyan-400\"\n                          : \"text-gray-300 hover:bg-gray-800/40 hover:text-white\"\n                      }`}\n                    >\n                      {item.icon}\n                      <span className=\"font-medium\">{item.label}</span>\n                      {item.badge && (\n                        <span className=\"ml-auto text-xs\">{item.badge}</span>\n                      )}\n                    </button>\n                  ))}\n                </nav>\n              </div>\n\n              {/* Autonomous AI Status */}\n              <div className=\"mt-auto p-6 border-t border-gray-800\">\n                <div className=\"bg-gray-800/40 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Brain className=\"w-4 h-4 text-cyan-400\" />\n                    <span className=\"text-sm font-medium text-cyan-400\">\n                      Autonomous AI\n                    </span>\n                  </div>\n                  <div className=\"text-xs text-gray-400 space-y-1\">\n                    <div className=\"flex justify-between\">\n                      <span>Status:</span>\n                      <span className=\"text-green-400\">ACTIVE</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Mode:</span>\n                      <span className=\"text-blue-400\">\n                        {isUltimateBrainInitialized ? \"Enhanced\" : \"Autonomous\"}\n                      </span>\n                    </div>\n                    <div className=\"text-xs text-green-400 mt-2\">\n                      ✅ All tools AI-enhanced\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.aside>\n\n          {/* Main Content */}\n          <main className=\"flex-1 min-h-screen lg:ml-0\">\n            <div className=\"p-6\">\n              <motion.div\n                key={activeTab}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3 }}\n                className=\"w-full\"\n              >\n                <ActiveComponent onNavigate={handleNavigate} />\n              </motion.div>\n            </div>\n          </main>\n        </div>\n\n        {/* Modals */}\n        <SearchModal\n          isOpen={searchModalOpen}\n          onClose={() => setSearchModalOpen(false)}\n        />\n        <NotificationsModal\n          isOpen={notificationsOpen}\n          onClose={() => setNotificationsOpen(false)}\n        />\n\n        {/* Footer */}\n        <footer className=\"relative z-10 bg-black/20 backdrop-blur-xl border-t border-cyan-500/20 p-6 mt-auto\">\n          <div className=\"text-center\">\n            <div className=\"text-cyan-400 bg-gradient-to-r from-cyan-400 via-green-400 to-blue-500 bg-clip-text font-bold mb-2 text-lg drop-shadow-2xl relative\">\n              <span className=\"relative z-10\">\n                A1BETTING AUTONOMOUS INTELLIGENCE\n              </span>\n            </div>\n            <div className=\"text-cyan-300/60 font-medium\">\n              © 2024 Autonomous Sports Intelligence Platform • AI-Enhanced\n              Tools • Real-time Analysis •{\" \"}\n              {isUltimateBrainInitialized\n                ? \"🧠 Enhanced Mode\"\n                : \"⚡ Autonomous Mode\"}\n            </div>\n          </div>\n        </footer>\n      </div>\n    </ApiErrorBoundary>\n  );\n};\n\nexport default UserFriendlyApp;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserFriendlyApp.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserFriendlyApp_Production.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'accuracy' and 'lastSuccessfulCheck'. Either include them or remove the dependency array.","line":175,"column":6,"nodeType":"ArrayExpression","endLine":175,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [accuracy, lastSuccessfulCheck]","fix":{"range":[4878,4880],"text":"[accuracy, lastSuccessfulCheck]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useMemo, useCallback } from \"react\";\nimport React from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport {\n  BarChart3,\n  Bell,\n  Brain,\n  DollarSign,\n  Home,\n  Menu,\n  Search,\n  Settings as SettingsIcon,\n  Trophy,\n  TrendingUp,\n  User,\n} from \"lucide-react\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport OfflineIndicator from \"../ui/OfflineIndicator\";\nimport ApiErrorBoundary from \"../ApiErrorBoundary\";\nimport {\n  initializeSettings,\n  getUserDisplayName,\n  getUserEmail,\n} from \"../../utils/userSettings\";\nimport toast from \"react-hot-toast\";\nimport {\n  logger,\n  logNavigation,\n  logUserAction,\n  logError,\n} from \"../../utils/logger\";\nimport {\n  api,\n  SystemHealth,\n  User as ApiUser,\n} from \"../../services/api/ProductionApiService\";\n\n// Import user-friendly components with enhanced AI\nimport MoneyMakerPro from \"./MoneyMakerPro\";\nimport PrizePicksPro from \"./PrizePicksPro\";\nimport PropOllama from \"./PropOllama\";\nimport UserFriendlyDashboard from \"./UserFriendlyDashboard\";\nimport SimpleSettings from \"./SimpleSettings\";\n\n// Import existing components to integrate\nimport { AdvancedIntelligenceHub } from \"../intelligence/AdvancedIntelligenceHub\";\n\n// Import user profile and handlers\nimport UserProfile from \"./UserProfile\";\nimport {\n  handleSearchClick,\n  handleNotificationClick,\n} from \"./SearchNotificationHandlers\";\n\ninterface NavigationItem {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  component: React.ComponentType<any>;\n  badge?: string;\n}\n\ninterface UserData {\n  name: string;\n  email: string;\n  balance: number;\n  tier: string;\n  winRate: number;\n  totalProfit: number;\n}\n\n// Production health check hook with real API integration and intelligent fallbacks\nconst useHealthCheck = () => {\n  const [isOnline, setIsOnline] = useState(true);\n  const [accuracy, setAccuracy] = useState(85.0);\n  const [systemHealth, setSystemHealth] = useState<SystemHealth | null>(null);\n  const [lastSuccessfulCheck, setLastSuccessfulCheck] = useState<Date | null>(\n    null,\n  );\n\n  useEffect(() => {\n    let isComponentMounted = true;\n\n    const performHealthCheck = async () => {\n      try {\n        // Multiple health check strategies for robustness\n        const [healthResponse, accuracyResponse] = await Promise.allSettled([\n          api.getSystemHealth(),\n          api.getAccuracyMetrics(),\n        ]);\n\n        if (!isComponentMounted) return;\n\n        let currentAccuracy = accuracy;\n        let currentOnlineStatus = navigator.onLine;\n\n        // Process health response\n        if (\n          healthResponse.status === \"fulfilled\" &&\n          healthResponse.value.success\n        ) {\n          const healthData = healthResponse.value.data!;\n          setSystemHealth(healthData);\n          currentOnlineStatus = healthData.status === \"online\";\n          currentAccuracy = healthData.accuracy;\n          setLastSuccessfulCheck(new Date());\n        }\n\n        // Process accuracy response as fallback\n        if (\n          accuracyResponse.status === \"fulfilled\" &&\n          accuracyResponse.value.success\n        ) {\n          const accuracyData = accuracyResponse.value.data!;\n          currentAccuracy =\n            (accuracyData.overall_accuracy || accuracyData.daily_accuracy) *\n            100;\n        }\n\n        // Update state\n        setIsOnline(currentOnlineStatus);\n        setAccuracy(currentAccuracy);\n      } catch (error) {\n        if (!isComponentMounted) return;\n\n        logError(error as Error, \"Health check comprehensive failure\");\n\n        // Graceful degradation - use last known good values or conservative defaults\n        if (\n          lastSuccessfulCheck &&\n          Date.now() - lastSuccessfulCheck.getTime() < 300000\n        ) {\n          // If last successful check was within 5 minutes, maintain previous state\n          return;\n        }\n\n        setIsOnline(false);\n        setAccuracy(0);\n        setSystemHealth(null);\n      }\n    };\n\n    // Initial check\n    performHealthCheck();\n\n    // Periodic health checks with exponential backoff on failures\n    let checkInterval = 30000; // Start with 30 seconds\n    const maxInterval = 300000; // Max 5 minutes\n\n    const scheduleNextCheck = () => {\n      const timerId = setTimeout(() => {\n        performHealthCheck()\n          .then(() => {\n            checkInterval = 30000; // Reset to normal interval on success\n          })\n          .catch(() => {\n            checkInterval = Math.min(checkInterval * 1.5, maxInterval); // Increase interval on failure\n          })\n          .finally(() => {\n            if (isComponentMounted) {\n              scheduleNextCheck();\n            }\n          });\n      }, checkInterval);\n\n      return timerId;\n    };\n\n    const timerId = scheduleNextCheck();\n\n    return () => {\n      isComponentMounted = false;\n      clearTimeout(timerId);\n    };\n  }, []);\n\n  return {\n    isOnline,\n    accuracy,\n    systemHealth,\n    lastCheck: lastSuccessfulCheck,\n  };\n};\n\nconst ProductionUserFriendlyApp: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<string>(\"dashboard\");\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  const queryClient = useQueryClient();\n  const { isOnline, accuracy, systemHealth } = useHealthCheck();\n\n  // Production user data with API integration and intelligent defaults\n  const userData: UserData = useMemo(() => {\n    return {\n      name: getUserDisplayName() || \"Ultimate User\",\n      email: getUserEmail() || \"user@a1betting.com\",\n      balance: 25000,\n      tier: \"Ultimate Brain Pro\",\n      winRate: 0.847,\n      totalProfit: 47350,\n    };\n  }, []);\n\n  // Initialize application with comprehensive error handling\n  useEffect(() => {\n    let isComponentMounted = true;\n\n    const initializeApplication = async () => {\n      try {\n        // Initialize settings with validation\n        await initializeSettings();\n\n        if (!isComponentMounted) return;\n\n        logger.info(\n          \"Application initialized successfully\",\n          {\n            userAgent: navigator.userAgent,\n            timestamp: new Date().toISOString(),\n            userId: userData.name,\n          },\n          \"Application\",\n        );\n\n        setIsInitialized(true);\n        toast.success(\"🧠 Ultimate Brain System Activated!\", {\n          duration: 3000,\n          position: \"top-center\",\n        });\n      } catch (error) {\n        if (!isComponentMounted) return;\n\n        logError(error as Error, \"Application initialization\");\n\n        // Graceful fallback initialization\n        setIsInitialized(true);\n        toast.error(\"⚠️ Some features may be limited\", {\n          duration: 5000,\n          position: \"top-center\",\n        });\n      }\n    };\n\n    initializeApplication();\n\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [userData.name]);\n\n  // Navigation items with production components - memoized for optimal performance\n  const navigationItems: NavigationItem[] = useMemo(\n    () => [\n      {\n        id: \"dashboard\",\n        label: \"Ultimate Dashboard\",\n        icon: <Home className=\"w-5 h-5\" />,\n        component: UserFriendlyDashboard,\n        badge: isOnline ? \"🧠\" : \"⚡\",\n      },\n      {\n        id: \"prizepicks\",\n        label: \"Ultra PrizePicks\",\n        icon: <Trophy className=\"w-5 h-5\" />,\n        component: PrizePicksPro,\n        badge: accuracy > 80 ? \"🎯\" : \"📊\",\n      },\n      {\n        id: \"moneymaker\",\n        label: \"Money Maker Pro\",\n        icon: <DollarSign className=\"w-5 h-5\" />,\n        component: MoneyMakerPro,\n        badge: \"💰\",\n      },\n      {\n        id: \"propollama\",\n        label: \"Prop AI Oracle\",\n        icon: <Brain className=\"w-5 h-5\" />,\n        component: PropOllama,\n        badge: \"🤖\",\n      },\n      {\n        id: \"intelligence\",\n        label: \"Intelligence Hub\",\n        icon: <BarChart3 className=\"w-5 h-5\" />,\n        component: AdvancedIntelligenceHub,\n        badge: isOnline ? \"🧠\" : \"⚡\",\n      },\n      {\n        id: \"settings\",\n        label: \"Settings\",\n        icon: <SettingsIcon className=\"w-5 h-5\" />,\n        component: SimpleSettings,\n      },\n      {\n        id: \"profile\",\n        label: \"My Profile\",\n        icon: <User className=\"w-5 h-5\" />,\n        component: UserProfile,\n        badge: \"👤\",\n      },\n    ],\n    [isOnline, accuracy],\n  );\n\n  const activeComponent = useMemo(\n    () =>\n      navigationItems.find((item) => item.id === activeTab)?.component ||\n      UserFriendlyDashboard,\n    [navigationItems, activeTab],\n  );\n\n  // Enhanced navigation handler with analytics and performance tracking\n  const handleNavigate = useCallback(\n    (page: string) => {\n      const startTime = performance.now();\n      const currentPage = activeTab;\n      const targetLabel =\n        navigationItems.find((item) => item.id === page)?.label || page;\n\n      // Comprehensive logging\n      logNavigation(currentPage, page);\n      logUserAction(\"navigation\", {\n        from: currentPage,\n        to: page,\n        label: targetLabel,\n        timestamp: new Date().toISOString(),\n        sessionDuration: startTime,\n      });\n\n      setActiveTab(page);\n      setSidebarOpen(false);\n\n      // Performance tracking\n      const endTime = performance.now();\n      logger.debug(\n        `Navigation completed in ${(endTime - startTime).toFixed(2)}ms`,\n        {\n          from: currentPage,\n          to: page,\n          duration: endTime - startTime,\n        },\n        \"Performance\",\n      );\n\n      toast.success(`Switched to ${targetLabel}`, {\n        duration: 2000,\n        icon: \"🎯\",\n      });\n    },\n    [navigationItems, activeTab],\n  );\n\n  // Optimized sidebar toggle\n  const toggleSidebar = useCallback(() => {\n    setSidebarOpen((prev) => {\n      const newState = !prev;\n      logUserAction(\"sidebar_toggle\", { open: newState });\n      return newState;\n    });\n  }, []);\n\n  // Enhanced search click handler\n  const handleSearchClickEnhanced = useCallback(() => {\n    logUserAction(\"search_opened\");\n    handleSearchClick();\n  }, []);\n\n  // Enhanced notification click handler\n  const handleNotificationClickEnhanced = useCallback(() => {\n    logUserAction(\"notifications_opened\");\n    handleNotificationClick();\n  }, []);\n\n  const ActiveComponent = activeComponent;\n\n  // Show loading state during initialization\n  if (!isInitialized) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <Brain className=\"w-16 h-16 text-cyan-400 animate-pulse mx-auto mb-4\" />\n          <div className=\"text-xl font-bold text-white mb-2\">\n            Ultimate Brain Initializing...\n          </div>\n          <div className=\"text-gray-400\">\n            Preparing your intelligent betting platform\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ApiErrorBoundary>\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 text-white relative overflow-hidden\">\n        {/* Enhanced Background Effects */}\n        <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-purple-900/20 via-gray-900 to-gray-900\" />\n        <div className=\"absolute inset-0 bg-grid-pattern opacity-5\" />\n\n        {/* Animated particles for premium feel */}\n        <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n          {Array.from({ length: 20 }).map((_, i) => (\n            <div\n              key={i}\n              className=\"absolute w-1 h-1 bg-cyan-400/30 rounded-full animate-pulse\"\n              style={{\n                left: `${Math.random() * 100}%`,\n                top: `${Math.random() * 100}%`,\n                animationDelay: `${Math.random() * 3}s`,\n                animationDuration: `${3 + Math.random() * 2}s`,\n              }}\n            />\n          ))}\n        </div>\n\n        {/* Enhanced Header */}\n        <header className=\"relative z-50 bg-black/20 backdrop-blur-xl border-b border-cyan-500/20\">\n          <div className=\"flex items-center justify-between px-6 py-4\">\n            {/* Logo and Brand */}\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={toggleSidebar}\n                className=\"p-2 hover:bg-gray-800/60 rounded-lg transition-all duration-200 hover:scale-105 lg:hidden\"\n                aria-label=\"Toggle sidebar\"\n              >\n                <Menu className=\"w-6 h-6 text-cyan-400\" />\n              </button>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-cyan-400 to-purple-600 flex items-center justify-center shadow-lg\">\n                  <Brain className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h1 className=\"text-xl font-bold bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\">\n                    A1BETTING\n                  </h1>\n                  <p className=\"text-xs text-gray-400\">\n                    Ultimate Brain {isOnline ? \"🧠 ACTIVE\" : \"⚡ Offline\"}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Enhanced System Health Indicator */}\n            <div className=\"hidden md:flex items-center gap-2 px-3 py-1 bg-gray-800/40 rounded-lg backdrop-blur-sm\">\n              <div\n                className={`w-2 h-2 rounded-full ${\n                  isOnline ? \"bg-green-400 animate-pulse\" : \"bg-red-400\"\n                }`}\n              />\n              <span className=\"text-xs text-gray-300\">\n                Brain {isOnline ? \"OPTIMAL\" : \"OFFLINE\"}\n              </span>\n              <span className=\"text-xs text-cyan-400 font-medium\">\n                {accuracy.toFixed(1)}% ACC\n              </span>\n              {systemHealth && (\n                <span className=\"text-xs text-purple-400\">\n                  {systemHealth.activePredictions} Active\n                </span>\n              )}\n            </div>\n\n            {/* Enhanced Action Buttons */}\n            <div className=\"flex items-center gap-3\">\n              <button\n                onClick={handleSearchClickEnhanced}\n                className=\"p-2 hover:bg-gray-800/60 rounded-lg transition-all duration-200 hover:scale-105\"\n                aria-label=\"Search\"\n              >\n                <Search className=\"w-5 h-5 text-gray-400 hover:text-cyan-400 transition-colors\" />\n              </button>\n\n              <button\n                onClick={handleNotificationClickEnhanced}\n                className=\"relative p-2 hover:bg-gray-800/60 rounded-lg transition-all duration-200 hover:scale-105\"\n                aria-label=\"Notifications\"\n              >\n                <Bell className=\"w-5 h-5 text-gray-400 hover:text-red-400 transition-colors\" />\n                <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full flex items-center justify-center animate-pulse\">\n                  <span className=\"text-xs text-white font-bold\">2</span>\n                </div>\n              </button>\n\n              {/* Enhanced User Info */}\n              <div className=\"hidden md:flex items-center gap-3 pl-3 border-l border-gray-700\">\n                <div className=\"text-right\">\n                  <p className=\"text-sm font-semibold text-white\">\n                    {userData.name}\n                  </p>\n                  <p className=\"text-xs text-gray-400\">{userData.tier}</p>\n                </div>\n                <button\n                  onClick={() => handleNavigate(\"profile\")}\n                  className=\"w-10 h-10 rounded-full bg-gradient-to-br from-cyan-400 to-purple-600 flex items-center justify-center hover:scale-105 transition-transform cursor-pointer shadow-lg\"\n                  aria-label=\"Profile\"\n                >\n                  <span className=\"text-sm font-bold text-white\">\n                    {userData.name.charAt(0)}\n                  </span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Enhanced Stats Bar */}\n          <div className=\"px-6 pb-4\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <div className=\"flex items-center gap-6\">\n                <div className=\"flex items-center gap-2\">\n                  <DollarSign className=\"w-4 h-4 text-green-400\" />\n                  <span className=\"text-gray-400\">Balance:</span>\n                  <span className=\"text-green-400 font-semibold\">\n                    ${userData.balance.toLocaleString()}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <TrendingUp className=\"w-4 h-4 text-cyan-400\" />\n                  <span className=\"text-gray-400\">Win Rate:</span>\n                  <span className=\"text-cyan-400 font-semibold\">\n                    {(userData.winRate * 100).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Trophy className=\"w-4 h-4 text-purple-400\" />\n                  <span className=\"text-gray-400\">Profit:</span>\n                  <span className=\"text-purple-400 font-semibold\">\n                    +${userData.totalProfit.toLocaleString()}\n                  </span>\n                </div>\n              </div>\n              <OfflineIndicator />\n            </div>\n          </div>\n        </header>\n\n        {/* Enhanced Mobile Sidebar Overlay */}\n        <AnimatePresence>\n          {sidebarOpen && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 z-40 bg-black/50 backdrop-blur-sm lg:hidden\"\n              onClick={toggleSidebar}\n            />\n          )}\n        </AnimatePresence>\n\n        <div className=\"flex\">\n          {/* Enhanced Sidebar */}\n          <motion.aside\n            initial={false}\n            animate={{\n              x: sidebarOpen ? 0 : \"-100%\",\n            }}\n            transition={{ type: \"spring\", damping: 25, stiffness: 200 }}\n            className=\"fixed inset-y-0 left-0 z-50 w-64 bg-gray-900/95 backdrop-blur-2xl border-r border-cyan-500/20 lg:relative lg:translate-x-0 lg:z-auto shadow-2xl\"\n          >\n            <div className=\"flex flex-col h-full\">\n              <div className=\"p-6\">\n                <h2 className=\"text-lg font-semibold text-cyan-400 mb-6 flex items-center gap-2\">\n                  <Brain className=\"w-5 h-5\" />\n                  Ultimate Navigation\n                </h2>\n                <nav className=\"space-y-2\">\n                  {navigationItems.map((item) => (\n                    <button\n                      key={item.id}\n                      onClick={() => handleNavigate(item.id)}\n                      className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg text-left transition-all duration-200 ${\n                        activeTab === item.id\n                          ? \"bg-gradient-to-r from-cyan-500/20 to-purple-500/20 border border-cyan-500/30 text-cyan-400 shadow-lg scale-105\"\n                          : \"text-gray-300 hover:bg-gray-800/40 hover:text-white hover:scale-102\"\n                      }`}\n                    >\n                      {item.icon}\n                      <span className=\"font-medium\">{item.label}</span>\n                      {item.badge && (\n                        <span className=\"ml-auto text-xs animate-pulse\">\n                          {item.badge}\n                        </span>\n                      )}\n                    </button>\n                  ))}\n                </nav>\n              </div>\n\n              {/* Enhanced Ultimate Brain Status */}\n              <div className=\"mt-auto p-6 border-t border-gray-800\">\n                <div className=\"bg-gray-800/40 rounded-lg p-4 backdrop-blur-sm\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Brain className=\"w-4 h-4 text-cyan-400\" />\n                    <span className=\"text-sm font-medium text-cyan-400\">\n                      Ultimate Brain\n                    </span>\n                  </div>\n                  <div className=\"text-xs text-gray-400 space-y-1\">\n                    <div className=\"flex justify-between\">\n                      <span>Status:</span>\n                      <span\n                        className={`${\n                          isOnline ? \"text-green-400\" : \"text-red-400\"\n                        }`}\n                      >\n                        {isOnline ? \"ACTIVE\" : \"OFFLINE\"}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Accuracy:</span>\n                      <span className=\"text-cyan-400\">\n                        {accuracy.toFixed(1)}%\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Engines:</span>\n                      <span className=\"text-purple-400\">\n                        {isOnline ? \"6/6\" : \"0/6\"}\n                      </span>\n                    </div>\n                    {systemHealth && (\n                      <div className=\"flex justify-between\">\n                        <span>Uptime:</span>\n                        <span className=\"text-green-400\">\n                          {Math.floor(systemHealth.uptime / 3600)}h\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.aside>\n\n          {/* Enhanced Main Content */}\n          <main className=\"flex-1 min-h-screen lg:ml-0\">\n            <div className=\"p-6\">\n              <motion.div\n                key={activeTab}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\n                className=\"w-full\"\n              >\n                <ActiveComponent onNavigate={handleNavigate} />\n              </motion.div>\n            </div>\n          </main>\n        </div>\n\n        {/* Enhanced Footer */}\n        <footer className=\"relative z-10 bg-black/20 backdrop-blur-xl border-t border-cyan-500/20 p-6 mt-auto\">\n          <div className=\"text-center\">\n            <div className=\"text-cyan-400 bg-gradient-to-r from-cyan-400 via-green-400 to-blue-500 bg-clip-text font-bold mb-2 text-lg drop-shadow-2xl relative\">\n              <span className=\"relative z-10\">\n                A1BETTING ULTIMATE BRAIN INTELLIGENCE\n              </span>\n            </div>\n            <div className=\"text-cyan-300/60 font-medium\">\n              © 2024 Ultimate Sports Intelligence Platform • Maximum Accuracy\n              AI • Real-time Analysis •{\" \"}\n              {isOnline ? \"🧠 Brain Active\" : \"⚡ Offline Mode\"}\n            </div>\n            {systemHealth && (\n              <div className=\"text-xs text-gray-500 mt-2\">\n                Last updated:{\" \"}\n                {new Date(systemHealth.lastUpdate).toLocaleTimeString()}\n              </div>\n            )}\n          </div>\n        </footer>\n      </div>\n    </ApiErrorBoundary>\n  );\n};\n\nexport default ProductionUserFriendlyApp;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserFriendlyApp_backup.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-expressions","severity":2,"message":"Expected an assignment or function call and instead saw an expression.","line":1,"column":1,"nodeType":"ExpressionStatement","messageId":"unusedExpression","endLine":1,"endColumn":16}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"BACKUP_CREATED;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserFriendlyApp_fixed.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserFriendlyDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserFriendlyDashboard_Production.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\UserProfile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\user-friendly\\__tests__\\UserFriendlyApp.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\withErrorBoundary.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\withErrorBoundary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\components\\withErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\api.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\api.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\apiConfig.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\apiConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\apiConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\automation.config.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\automation.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\automation.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\builder.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\builder.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\builder.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\constants.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\constants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\predictionConfig.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\predictionConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\predictionConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\unifiedApiConfig.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\unifiedApiConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\config\\unifiedApiConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\constants\\sports.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\constants\\sports.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\constants\\sports.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\AppContext.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\AppContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\AppContext.tsx","messages":[{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":65,"column":7,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":69,"endColumn":9,"suggestions":[{"messageId":"addBrackets","fix":{"range":[1826,2075],"text":"{ const newNotification: Notification = {\n        ...action.payload,\n        id: Date.now().toString(),\n        timestamp: new Date(),\n      };\n      return {\n        ...state,\n        notifications: [...state.notifications, newNotification],\n      }; }"},"desc":"Add {} brackets around the case block."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { createContext, useContext, useReducer, useEffect } from \"react\";\n\n// State interface\ninterface AppState {\n  darkMode: boolean;\n  connectedSources: number;\n  dataQuality: number;\n  totalSources: number;\n  isLoading: boolean;\n  lastUpdate: Date | null;\n  connectionStatus: \"connected\" | \"connecting\" | \"disconnected\";\n  notifications: Notification[];\n}\n\ninterface Notification {\n  id: string;\n  message: string;\n  type: \"success\" | \"warning\" | \"error\" | \"info\";\n  timestamp: Date;\n}\n\n// Action types\ntype AppAction =\n  | { type: \"TOGGLE_DARK_MODE\" }\n  | { type: \"SET_CONNECTED_SOURCES\"; payload: number }\n  | { type: \"SET_DATA_QUALITY\"; payload: number }\n  | { type: \"SET_LOADING\"; payload: boolean }\n  | {\n      type: \"UPDATE_CONNECTION_STATUS\";\n      payload: \"connected\" | \"connecting\" | \"disconnected\";\n    }\n  | {\n      type: \"ADD_NOTIFICATION\";\n      payload: Omit<Notification, \"id\" | \"timestamp\">;\n    }\n  | { type: \"REMOVE_NOTIFICATION\"; payload: string }\n  | { type: \"REFRESH_DATA\" };\n\n// Initial state\nconst initialState: AppState = {\n  darkMode: false,\n  connectedSources: 12,\n  dataQuality: 0.87,\n  totalSources: 15,\n  isLoading: false,\n  lastUpdate: new Date(),\n  connectionStatus: \"connected\",\n  notifications: [],\n};\n\n// Reducer\nfunction appReducer(state: AppState, action: AppAction): AppState {\n  switch (action.type) {\n    case \"TOGGLE_DARK_MODE\":\n      return { ...state, darkMode: !state.darkMode };\n    case \"SET_CONNECTED_SOURCES\":\n      return { ...state, connectedSources: action.payload };\n    case \"SET_DATA_QUALITY\":\n      return { ...state, dataQuality: action.payload };\n    case \"SET_LOADING\":\n      return { ...state, isLoading: action.payload };\n    case \"UPDATE_CONNECTION_STATUS\":\n      return { ...state, connectionStatus: action.payload };\n    case \"ADD_NOTIFICATION\":\n      const newNotification: Notification = {\n        ...action.payload,\n        id: Date.now().toString(),\n        timestamp: new Date(),\n      };\n      return {\n        ...state,\n        notifications: [...state.notifications, newNotification],\n      };\n    case \"REMOVE_NOTIFICATION\":\n      return {\n        ...state,\n        notifications: state.notifications.filter(\n          (n) => n.id !== action.payload,\n        ),\n      };\n    case \"REFRESH_DATA\":\n      return {\n        ...state,\n        lastUpdate: new Date(),\n        isLoading: true,\n      };\n    default:\n      return state;\n  }\n}\n\n// Context\ninterface AppContextValue {\n  state: AppState;\n  toggleDarkMode: () => void;\n  setConnectedSources: (count: number) => void;\n  setDataQuality: (quality: number) => void;\n  setLoading: (loading: boolean) => void;\n  updateConnectionStatus: (\n    status: \"connected\" | \"connecting\" | \"disconnected\",\n  ) => void;\n  addNotification: (\n    notification: Omit<Notification, \"id\" | \"timestamp\">,\n  ) => void;\n  removeNotification: (id: string) => void;\n  refreshData: () => Promise<void>;\n}\n\nconst AppContext = createContext<AppContextValue | undefined>(undefined);\n\n// Provider component\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Apply dark mode to document\n  useEffect(() => {\n    if (state.darkMode) {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }, [state.darkMode]);\n\n  // Auto-remove notifications after 5 seconds\n  useEffect(() => {\n    state.notifications.forEach((notification) => {\n      const timer = setTimeout(() => {\n        dispatch({ type: \"REMOVE_NOTIFICATION\", payload: notification.id });\n      }, 5000);\n      return () => clearTimeout(timer);\n    });\n  }, [state.notifications]);\n\n  const toggleDarkMode = () => {\n    dispatch({ type: \"TOGGLE_DARK_MODE\" });\n  };\n\n  const setConnectedSources = (count: number) => {\n    dispatch({ type: \"SET_CONNECTED_SOURCES\", payload: count });\n  };\n\n  const setDataQuality = (quality: number) => {\n    dispatch({ type: \"SET_DATA_QUALITY\", payload: quality });\n  };\n\n  const setLoading = (loading: boolean) => {\n    dispatch({ type: \"SET_LOADING\", payload: loading });\n  };\n\n  const updateConnectionStatus = (\n    status: \"connected\" | \"connecting\" | \"disconnected\",\n  ) => {\n    dispatch({ type: \"UPDATE_CONNECTION_STATUS\", payload: status });\n  };\n\n  const addNotification = (\n    notification: Omit<Notification, \"id\" | \"timestamp\">,\n  ) => {\n    dispatch({ type: \"ADD_NOTIFICATION\", payload: notification });\n  };\n\n  const removeNotification = (id: string) => {\n    dispatch({ type: \"REMOVE_NOTIFICATION\", payload: id });\n  };\n\n  const refreshData = async (): Promise<void> => {\n    dispatch({ type: \"REFRESH_DATA\" });\n\n    try {\n      // Simulate data refresh\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // Update data quality and connection status\n      dispatch({\n        type: \"SET_DATA_QUALITY\",\n        payload: Math.random() * 0.3 + 0.7,\n      });\n      dispatch({ type: \"UPDATE_CONNECTION_STATUS\", payload: \"connected\" });\n\n      addNotification({\n        message: \"Data refreshed successfully\",\n        type: \"success\",\n      });\n    } catch (error) {\n      dispatch({ type: \"UPDATE_CONNECTION_STATUS\", payload: \"disconnected\" });\n      addNotification({\n        message: \"Failed to refresh data\",\n        type: \"error\",\n      });\n    } finally {\n      dispatch({ type: \"SET_LOADING\", payload: false });\n    }\n  };\n\n  const value: AppContextValue = {\n    state,\n    toggleDarkMode,\n    setConnectedSources,\n    setDataQuality,\n    setLoading,\n    updateConnectionStatus,\n    addNotification,\n    removeNotification,\n    refreshData,\n  };\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n};\n\n// Hook to use the app context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error(\"useApp must be used within an AppProvider\");\n  }\n  return context;\n};\n\nexport default AppContext;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\AuthContext.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\AuthContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\AuthContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\CyberAppContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\CyberAppContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\LoggerContext.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\LoggerContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\LoggerContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\MetricsContext.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\MetricsContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\MetricsContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\StrategyInputContext.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\StrategyInputContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\StrategyInputContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\ThemeContext.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\ThemeContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\ThemeContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\WebSocketContext.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\WebSocketContext.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\contexts\\WebSocketContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\AdvancedAnalysisEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\AdvancedAnalysisEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\AdvancedAnalysisEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\AnalysisFramework.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\AnalysisFramework.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\AnalysisFramework.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\Analyzer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\Analyzer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\Analyzer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\BestBetSelector\\BestBetSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\BestBetSelector\\BestBetSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\BestBetSelector\\BestBetSelector.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\BestBetSelector\\__tests__\\BestBetSelector.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\BestBetSelector\\__tests__\\BestBetSelector.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\BestBetSelector\\__tests__\\BestBetSelector.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\CacheManager\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\CacheManager\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\CacheManager\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\DataIntegrationHub.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\DataIntegrationHub.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\DataIntegrationHub.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\DataPipeline.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\DataPipeline.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\DataPipeline.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\DataSource.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\DataSource.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\DataSource.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\ErrorHandler.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\ErrorHandler.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\ErrorHandler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\EventBus.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\EventBus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\EventBus.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FeatureComposition.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FeatureComposition.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FeatureComposition.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FeatureFlags.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FeatureFlags.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FeatureFlags.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FinalPredictionEngine\\FinalPredictionEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FinalPredictionEngine\\FinalPredictionEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FinalPredictionEngine\\FinalPredictionEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FinalPredictionEngine\\__tests__\\FinalPredictionEngine.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FinalPredictionEngine\\__tests__\\FinalPredictionEngine.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FinalPredictionEngine\\__tests__\\FinalPredictionEngine.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FinalPredictionEngine\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FinalPredictionEngine\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\FinalPredictionEngine\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\ModelVersioning.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\ModelVersioning.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\ModelVersioning.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PerformanceMonitor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PerformanceMonitor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PerformanceMonitor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PluginSystem.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PluginSystem.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PluginSystem.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PredictionEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PredictionEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PredictionEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PredictionValidator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PredictionValidator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\PredictionValidator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\StrategyComposition.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\StrategyComposition.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\StrategyComposition.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\StrategyEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\StrategyEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\StrategyEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UltimateBrainCentralNervousSystem.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedBettingSystem.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedBettingSystem.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedBettingSystem.ts","messages":[{"ruleId":"no-useless-catch","severity":2,"message":"Unnecessary try/catch wrapper.","line":942,"column":5,"nodeType":"TryStatement","messageId":"unnecessaryCatch","endLine":981,"endColumn":6}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { AnalysisRegistry } from './AnalysisFramework';\nimport { EventBus } from '@/core/EventBus';\nimport { PerformanceMonitor } from './PerformanceMonitor';\nimport { UnifiedPredictionEngine } from './UnifiedPredictionEngine';\nimport { UnifiedStrategyEngine } from './UnifiedStrategyEngine';\nimport { unifiedDataEngine } from './UnifiedDataEngine';\nimport { unifiedState } from './UnifiedState';\nimport {\n  Alert,\n  PerformanceMetrics,\n  MarketUpdate,\n  AnalysisResult,\n  RiskTolerance,\n  BettingContext,\n  BettingDecision,\n  BetRecord,\n  ClvAnalysis,\n  BetType,\n  BetResult,\n  BettingStrategy,\n} from '../types/core';\nimport { BettingOpportunity } from '../types/core';\n\nexport interface BankrollConfig {\n  initialAmount: number;\n  maxRiskPerBet: number;\n  maxDailyLoss: number;\n  maxExposure: number;\n  kellyFraction: number;\n}\n\nexport interface BankrollState {\n  currentAmount: number;\n  totalWagered: number;\n  totalWon: number;\n  totalLost: number;\n  openPositions: number;\n  maxDrawdown: number;\n  lastUpdate: number;\n}\n\nexport interface BetTransaction {\n  id: string;\n  timestamp: number;\n  type: 'bet' | 'win' | 'loss' | 'deposit' | 'withdrawal';\n  amount: number;\n  balance: number;\n  metadata?: Record<string, unknown>;\n}\n\nexport interface ActiveBet {\n  id: string;\n  opportunity: BettingOpportunity;\n  stake: number;\n  placedAt: number;\n  status: 'pending' | 'won' | 'lost';\n  result?: {\n    actualValue: number;\n    profit: number;\n    settledAt: number;\n  };\n}\n\nexport interface BettingPosition {\n  id: string;\n  propId: string;\n  type: 'over' | 'under';\n  stake: number;\n  entryPrice: number;\n  timestamp: number;\n  status: 'open' | 'closed' | 'pending';\n  pnl?: number;\n  closeTimestamp?: number;\n  closePrice?: number;\n}\n\nexport interface BettingMetrics {\n  totalBets: number;\n  winningBets: number;\n  losingBets: number;\n  totalStake: number;\n  totalPnl: number;\n  roi: number;\n  winRate: number;\n  averageStake: number;\n  averagePnl: number;\n  lastUpdate: number;\n}\n\nexport interface RiskProfile {\n  maxExposure: number;\n  maxPositions: number;\n  stopLoss: number;\n  profitTarget: number;\n  riskPerTrade: number;\n  maxDrawdown: number;\n}\n\nexport class UnifiedBettingSystem {\n  private static instance: UnifiedBettingSystem;\n  private readonly eventBus: EventBus;\n  private readonly performanceMonitor: PerformanceMonitor;\n  private readonly dataEngine = unifiedDataEngine;\n  private readonly predictionEngine = UnifiedPredictionEngine.getInstance();\n  private readonly strategyEngine = UnifiedStrategyEngine.getInstance();\n  private readonly analysisRegistry: AnalysisRegistry;\n  private readonly strategies: Map<string, BettingStrategy>;\n  private readonly MIN_CONFIDENCE = 0.7;\n  private readonly MAX_ACTIVE_BETS = 10;\n  private readonly RISK_THRESHOLD = 0.8;\n  private bankrollConfig: BankrollConfig = {\n    initialAmount: 10000,\n    maxRiskPerBet: 0.05,\n    maxDailyLoss: 0.2,\n    maxExposure: 0.1,\n    kellyFraction: 0.5,\n  };\n  private bankrollState: BankrollState = {\n    currentAmount: 10000,\n    totalWagered: 0,\n    totalWon: 0,\n    totalLost: 0,\n    openPositions: 0,\n    maxDrawdown: 0,\n    lastUpdate: Date.now(),\n  };\n  private activeBets: Map<string, ActiveBet>;\n  private transactions: BetTransaction[];\n  private readonly positions: Map<string, BettingPosition>;\n  private readonly metrics: BettingMetrics;\n  private readonly riskProfile: RiskProfile;\n\n  private constructor() {\n    this.eventBus = EventBus.getInstance();\n    this.performanceMonitor = PerformanceMonitor.getInstance();\n    this.analysisRegistry = AnalysisRegistry.getInstance();\n    this.strategies = new Map();\n    this.activeBets = new Map();\n    this.transactions = [];\n    this.positions = new Map();\n    this.metrics = this.initializeMetrics();\n    this.riskProfile = this.initializeRiskProfile();\n\n    this.setupEventListeners();\n  }\n\n  static getInstance(): UnifiedBettingSystem {\n    if (!UnifiedBettingSystem.instance) {\n      UnifiedBettingSystem.instance = new UnifiedBettingSystem();\n    }\n    return UnifiedBettingSystem.instance;\n  }\n  public async initialize(): Promise<void> {\n    const traceId = this.performanceMonitor.startTrace('betting-system-init');\n    await this.predictionEngine.initialize();\n    await this.strategyEngine.initialize();\n    this.performanceMonitor.endTrace(traceId);\n  }\n  public async analyzeBettingOpportunity(context: BettingContext): Promise<BettingDecision> {\n    const historicalTrends = await this.analyzeHistoricalTrends(context);\n    const marketSignals = await this.analyzeMarketSignals(context);\n    const riskFactors = await this.analyzeRiskFactors(context);\n    const { confidence, expectedValue } = this.calculateMetrics(\n      historicalTrends,\n      marketSignals,\n      riskFactors\n    );\n    const type = (expectedValue > 0 ? 'over' : 'under') as BetType;\n    // Fix: stake is not defined in this scope, use a calculated value\n    const stake = this.calculateOptimalStake(expectedValue, confidence);\n    const decision: BettingDecision = {\n      id: `decision_${Date.now()}`,\n      type,\n      odds: 1,\n      confidence,\n      shouldBet: true,\n      stake,\n      metadata: {\n        strategy: '',\n        factors: [],\n        riskScore: 0,\n      },\n    };\n    // this.eventBus.emit('bettingDecision', decision); // Commented out unavailable eventBus usage\n    return decision;\n  }\n  public calculatePerformanceMetrics(bets: BetRecord[]): PerformanceMetrics {\n    const completedBets = bets.filter(\n      bet => bet.result && bet.result !== 'pending'\n    );\n    const wins = completedBets.filter(\n      bet => bet.result === 'win'\n    );\n    const totalStake = completedBets.reduce((sum, bet) => sum + bet.stake, 0);\n    const totalReturn = completedBets.reduce((sum, bet) => {\n      if (bet.result === 'win') {\n        return sum + (bet.profitLoss ?? 0);\n      }\n      return sum - bet.stake;\n    }, 0);\n    const winRate = completedBets.length ? wins.length / completedBets.length : 0;\n    const roi = totalStake ? totalReturn / totalStake : 0;\n    const profitLoss = totalReturn;\n    const returns = completedBets.map(bet =>\n      bet.result === 'win' && bet.stake\n        ? ((bet.profitLoss ?? 0) - bet.stake) / bet.stake\n        : -1\n    );\n    const sharpeRatio = this.calculateSharpeRatio(returns);\n    const clvAnalysis = this.calculateAverageClv(completedBets);\n    return {\n      totalBets: completedBets.length,\n      winRate: winRate * 100,\n      roi: roi * 100,\n      profitLoss,\n      clvAverage: clvAnalysis.clvValue,\n      edgeRetention: clvAnalysis.edgeRetention,\n      kellyMultiplier: this.calculateKellyMultiplier(roi, winRate),\n      marketEfficiencyScore: clvAnalysis.marketEfficiency,\n      averageOdds: this.calculateAverageOdds(completedBets),\n      maxDrawdown: this.calculateMaxDrawdown(completedBets),\n      sharpeRatio,\n      betterThanExpected: this.calculateEdgeRetention(completedBets),\n      timestamp: Date.now(),\n      cpu: { usage: 0, cores: 0, temperature: 0 },\n      memory: { total: 0, used: 0, free: 0, swap: 0 },\n      network: { bytesIn: 0, bytesOut: 0, connections: 0, latency: 0 },\n    } as PerformanceMetrics;\n  }\n\n  public analyzeClv(bet: BetRecord): ClvAnalysis {\n    const clvValue = this.calculateClvValue(bet);\n    const edgeRetention = this.calculateEdgeRetention([bet]);\n    const marketEfficiency = this.calculateMarketEfficiency(bet);\n    const timeValue = this.calculateTimingImpact(bet); // Restored timeValue calculation\n\n    return {\n      clvValue,\n      edgeRetention,\n      marketEfficiency,\n      timeValue,\n      factors: [\n        {\n          name: 'Market Timing',\n          impact: this.calculateTimingImpact(bet),\n          description: 'Impact of bet timing relative to market close',\n        },\n        {\n          name: 'Price Movement',\n          impact: this.calculatePriceMovement(bet),\n          description: 'Magnitude and direction of line movement',\n        },\n        {\n          name: 'Market Efficiency',\n          impact: marketEfficiency,\n          description: 'Overall market pricing efficiency',\n        },\n      ],\n    };\n  }\n\n  private async analyzeHistoricalTrends(context: BettingContext): Promise<string[]> {\n    // Implement historical analysis\n    return [];\n  }\n\n  private async analyzeMarketSignals(context: BettingContext): Promise<string[]> {\n    // Implement market signal analysis\n    return [];\n  }\n\n  private async analyzeRiskFactors(context: BettingContext): Promise<string[]> {\n    // Implement risk factor analysis\n    return [];\n  }\n\n  private calculateMetrics(\n    historicalTrends: string[],\n    marketSignals: string[],\n    riskFactors: string[]\n  ): { confidence: number; expectedValue: number } {\n    // Implement metric calculation\n    return { confidence: 0.7, expectedValue: 0.05 };\n  }\n\n  private calculateOptimalStake(expectedValue: number, confidence: number): number {\n    // TODO: Replace with actual strategyConfig if/when available\n    const kellyFraction = 0.5;\n    const minStake = 10;\n    const maxStakeLimit = 1000;\n    const kellyStake = (expectedValue * confidence) / kellyFraction;\n    return Math.min(Math.max(kellyStake, minStake), maxStakeLimit);\n  }\n\n  private calculateVariance(returns: number[]): number {\n    const mean = returns.reduce((sum, r) => sum + r, 0) / returns.length;\n    return returns.reduce((sum, r) => sum + Math.pow(r - mean, 2), 0) / returns.length;\n  }\n\n  private calculateSharpeRatio(returns: number[]): number {\n    const mean = returns.reduce((sum, r) => sum + r, 0) / returns.length;\n    const stdDev = Math.sqrt(this.calculateVariance(returns));\n    const riskFreeRate = 0.02 / 365; // Daily risk-free rate\n    return (mean - riskFreeRate) / stdDev;\n  }\n\n  private calculateAverageOdds(bets: BetRecord[]): number {\n    return bets.length ? bets.reduce((sum, bet) => sum + (bet.odds ?? 0), 0) / bets.length : 0;\n  }\n\n  private calculateMaxDrawdown(bets: BetRecord[]): number {\n    let maxDrawdown = 0;\n    let peak = 0;\n    let balance = 0;\n    bets.forEach(bet => {\n      if (bet.result && bet.result.toLowerCase() === 'win') {\n        balance += (bet.payout ?? 0) - (bet.stake ?? 0);\n      } else {\n        balance -= bet.stake ?? 0;\n      }\n      if (balance > peak) {\n        peak = balance;\n      }\n      const drawdown = peak ? (peak - balance) / peak : 0;\n      if (drawdown > maxDrawdown) {\n        maxDrawdown = drawdown;\n      }\n    });\n    return maxDrawdown * 100;\n  }\n\n  private calculateClvValue(bet: BetRecord): number {\n    if (!bet.metadata || typeof bet.metadata.closingOdds !== 'number') return 0;\n    return ((bet.metadata.closingOdds - (bet.odds ?? 0)) / (bet.odds ?? 1)) * 100;\n  }\n\n  private calculateEdgeRetention(bets: BetRecord[]): number {\n    const expectedWinRate = bets.length\n      ? bets.reduce((sum, bet) => sum + (bet.metadata?.confidence ?? 0), 0) / bets.length\n      : 0;\n    const actualWinRate = bets.length\n      ? bets.filter(bet => bet.result && bet.result.toUpperCase() === 'WIN').length / bets.length\n      : 0;\n    return expectedWinRate ? (actualWinRate / expectedWinRate) * 100 : 0;\n  }\n\n  private calculateMarketEfficiency(bet: BetRecord): number {\n    if (!bet.metadata || typeof bet.metadata.closingOdds !== 'number') return 1;\n    const movement = Math.abs(bet.metadata.closingOdds - (bet.odds ?? 0));\n    return bet.odds ? 1 - movement / bet.odds : 1;\n  }\n\n  private calculateTimingImpact(bet: BetRecord): number {\n    if (!bet.metadata || typeof bet.metadata.closingLine !== 'number') return 0;\n    const timeToClose = (bet.metadata.closingLine - (bet.timestamp ?? 0)) / 3600000;\n    return 1 - timeToClose / 24;\n  }\n\n  private calculatePriceMovement(bet: BetRecord): number {\n    if (!bet.metadata || typeof bet.metadata.closingOdds !== 'number') return 0;\n    return bet.odds ? (bet.metadata.closingOdds - bet.odds) / bet.odds : 0;\n  }\n\n  private calculateKellyMultiplier(roi: number, winRate: number): number {\n    return roi !== 0 ? (roi * winRate - (1 - winRate)) / roi : 0;\n  }\n\n  private calculateProfitByStrategy(bets: BetRecord[]): Record<string, number> {\n    return bets.reduce(\n      (acc, bet) => {\n        const strategy = (bet as any).metadata?.predictionFactors?.[0] || 'unknown';\n        const profit =\n          (bet as any).result && (bet as any).result.toUpperCase() === 'WIN'\n            ? ((bet as any).payout ?? 0) - ((bet as any).stake ?? 0)\n            : -((bet as any).stake ?? 0);\n        acc[strategy] = (acc[strategy] || 0) + profit;\n        return acc;\n      },\n      {} as Record<string, number>\n    );\n  }\n\n  private calculateSharpnessScore(bets: BetRecord[]): number {\n    const clvScore = this.calculateAverageClv(bets).clvValue;\n    const winRate = bets.length\n      ? bets.filter(bet => (bet as any).result && (bet as any).result.toUpperCase() === 'WIN')\n        .length / bets.length\n      : 0;\n    return clvScore * 0.6 + winRate * 100 * 0.4;\n  }\n\n  private calculateAverageClv(bets: BetRecord[]): ClvAnalysis {\n    const betsWithClv = bets.filter(\n      bet => (bet as any).metadata && typeof (bet as any).metadata.closingOdds === 'number'\n    );\n    if (betsWithClv.length === 0) {\n      return {\n        clvValue: 0,\n        edgeRetention: 0,\n        marketEfficiency: 1,\n      };\n    }\n    const clvValues = betsWithClv.map(bet => this.calculateClvValue(bet as any));\n    const avgClv = clvValues.reduce((sum, clv) => sum + clv, 0) / clvValues.length;\n    return {\n      clvValue: avgClv,\n      edgeRetention: this.calculateEdgeRetention(betsWithClv as any),\n      marketEfficiency:\n        betsWithClv.reduce((sum, bet) => sum + this.calculateMarketEfficiency(bet as any), 0) /\n        betsWithClv.length,\n    };\n  }\n\n  private setupEventListeners(): void {\n    // TODO: Refactor or re-implement event listeners to match available EventBus API\n    // Commenting out broken event bus usage for now\n    /*\n    this.eventBus.on('market:update', async event => { ... });\n    this.eventBus.on('prediction:feedback', async event => { ... });\n    this.eventBus.on('strategy:result', async event => { ... });\n    this.eventBus.on('monitor:alert', event => { ... });\n    this.eventBus.on('metric:recorded', async data => { ... });\n    this.eventBus.on('prediction:update', this.handleOpportunity.bind(this));\n    */\n  }\n\n  private async handleMarketUpdate(update: MarketUpdate): Promise<void> {\n    // Commented out: this.dataEngine.handleMarketUpdate(update);\n    // Commented out: this.eventBus.publish({ ... });\n    // TODO: Implement with available APIs\n  }\n\n  private async handlePredictionFeedback(feedback: {\n    actual: number;\n    predicted: number;\n    confidence: number;\n    factors: Array<{ name: string; source: string }>;\n  }): Promise<void> {\n    // Commented out: this.eventBus.publish({ ... });\n    // TODO: Implement with available APIs\n    // Commented out: unifiedState.getState();\n    // Commented out: unifiedState.updateState({ ... });\n  }\n\n  private async handleStrategyResult(result: {\n    profitLoss: number;\n    exposure: number;\n    confidence: number;\n    factors: Array<{ name: string; source: string }>;\n  }): Promise<void> {\n    // Commented out: this.eventBus.publish({ ... });\n    // TODO: Implement with available APIs\n    // Commented out: unifiedState.getState();\n    // Commented out: unifiedState.updateState({ ... });\n  }\n\n  private async handleCriticalAlert(alert: Alert): Promise<void> {\n    // Commented out: const config = this.configManager.getConfig();\n    // Commented out: const state = unifiedState.getState();\n    try {\n      // Commented out: this.monitor.logError(...)\n      // TODO: Implement error logging if/when monitor is available\n      // Commented out: circuit breaker logic\n      // Commented out: eventBus.publish\n      // Commented out: switch(alert.type) { ... }\n    } catch (error) {\n      // Commented out: this.monitor.logError(...)\n      // Commented out: config.system.emergencyMode = true;\n      // Commented out: await this.configManager.updateConfig({ system: config.system });\n    }\n  }\n\n  private shouldActivateCircuitBreaker(alert: Alert): boolean {\n    // Commented out: configManager, unifiedState, monitor usage\n    return false;\n  }\n\n  private async stopActiveBettingOperations(): Promise<void> {\n    // Commented out: unifiedState.getState();\n    // Commented out: cancelBet logic\n    // Commented out: this.predictionEngine.stopAllPredictions();\n    // Commented out: unifiedState.updateState({ ... });\n  }\n\n  private async cancelBet(betId: string): Promise<void> {\n    // Commented out: unifiedState.getState();\n    // Commented out: bet lookup and update\n    // Commented out: this.eventBus.publish({ ... });\n  }\n\n  private async mitigateOddsRisk(alert: Alert): Promise<void> {\n    // Commented out: configManager, monitor usage\n  }\n  private async mitigateInjuryRisk(alert: Alert): Promise<void> {\n    // Commented out: configManager, monitor usage\n  }\n  private async mitigateWeatherRisk(alert: Alert): Promise<void> {\n    // Commented out: configManager, monitor usage\n  }\n  private async mitigateLineMovementRisk(alert: Alert): Promise<void> {\n    // Commented out: configManager, monitor usage\n  }\n  private async mitigateSystemRisk(alert: Alert): Promise<void> {\n    // Commented out: configManager, monitor usage\n  }\n\n  public registerStrategy(strategy: BettingStrategy): void {\n    if (this.strategies.has(strategy.id)) {\n      throw new Error(`Strategy ${strategy.id} already registered`);\n    }\n    this.strategies.set(strategy.id, strategy);\n    // Commented out: this.eventBus.emit('metric:recorded', ...)\n  }\n\n  public async evaluateBet(\n    prediction: AnalysisResult,\n    odds: number,\n    context?: Partial<BettingContext>\n  ): Promise<BettingDecision> {\n    // Commented out: unifiedState.getState();\n    // Commented out: unifiedState.updateBettingState({ ... });\n    // Commented out: this.eventBus.emit('metric:recorded', ...)\n    // Return a dummy BettingDecision for now\n    return {\n      id: `decision_${Date.now()}`,\n      odds,\n      shouldBet: false,\n      stake: 0,\n      confidence: 0,\n      type: 'single',\n      metadata: {\n        strategy: 'none',\n        factors: ['no_positive_decisions'],\n        riskScore: 0,\n      },\n    };\n  }\n\n  public async settleBet(betId: string, result: BetResult): Promise<void> {\n    // Commented out: unifiedState.getState();\n    // Commented out: unifiedState.updateBettingState({ ... });\n    // Commented out: this.eventBus.emit('betting:result', ...)\n  }\n\n  private createBettingContext(odds: number, context?: Partial<BettingContext>): BettingContext {\n    // Commented out: unifiedState.getState();\n    const defaultContext: BettingContext = {\n      bankroll: 10000,\n      maxRiskPerBet: 0.02,\n      minOdds: 1.5,\n      maxOdds: 10,\n      odds,\n      metrics: {\n        totalBets: 0,\n        winRate: 0,\n        roi: 0,\n        profitLoss: 0,\n        clvAverage: 0,\n        edgeRetention: 0,\n        kellyMultiplier: 1,\n        marketEfficiencyScore: 0,\n        averageOdds: 0,\n        maxDrawdown: 0,\n        sharpeRatio: 0,\n        betterThanExpected: 0,\n        timestamp: Date.now(),\n        cpu: { usage: 0, cores: 0, temperature: 0 },\n        memory: { total: 0, used: 0, free: 0, swap: 0 },\n        network: { bytesIn: 0, bytesOut: 0, connections: 0, latency: 0 },\n      },\n      recentBets: [],\n      timestamp: Date.now(),\n    };\n\n    return { ...defaultContext, ...context };\n  }\n\n  private validateSystemConstraints(state: Record<string, unknown>, context: BettingContext): boolean {\n    // Check number of active bets\n    if (state.betting.activeBets.size >= this.MAX_ACTIVE_BETS) {\n      return false;\n    }\n\n    // Check odds range\n    if (context.odds < context.minOdds || context.odds > context.maxOdds) {\n      return false;\n    }\n\n    // Check system status\n    if (state.status !== 'ready') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private getApplicableStrategies(\n    prediction: AnalysisResult,\n    context: BettingContext\n  ): BettingStrategy[] {\n    return Array.from(this.strategies.values()).filter(strategy => {\n      // Commented out: strategy.metadata.minConfidence, riskLevel checks\n      return true;\n    });\n  }\n\n  private aggregateDecisions(\n    decisions: BettingDecision[],\n    prediction: AnalysisResult\n  ): BettingDecision {\n    const positiveBets = decisions.filter(d => d.shouldBet);\n    if (positiveBets.length === 0) {\n      return {\n        id: `decision_${Date.now()}`,\n        odds: 1,\n        shouldBet: false,\n        stake: 0,\n        confidence: 0,\n        type: 'single',\n        metadata: {\n          strategy: 'none',\n          factors: ['no_positive_decisions'],\n          riskScore: 0,\n        },\n      };\n    }\n\n    // Calculate weighted stake and confidence\n    const totalConfidence = positiveBets.reduce((sum, d) => sum + d.confidence, 0);\n    const weightedStake = positiveBets.reduce(\n      (sum, d) => sum + d.stake * (d.confidence / totalConfidence),\n      0\n    );\n    const averageConfidence = totalConfidence / positiveBets.length;\n\n    // Combine factors and calculate risk\n    const allFactors = Array.from(new Set(positiveBets.flatMap(d => d.metadata.factors)));\n    const averageRisk =\n      positiveBets.reduce((sum, d) => sum + d.metadata.riskScore, 0) / positiveBets.length;\n\n    return {\n      id: `decision_${Date.now()}`,\n      odds: 1,\n      shouldBet: true,\n      stake: weightedStake,\n      confidence: averageConfidence,\n      type: this.determineBetType(positiveBets),\n      metadata: {\n        strategy: positiveBets.map(d => d.metadata.strategy).join(','),\n        factors: allFactors,\n        riskScore: averageRisk,\n      },\n    };\n  }\n\n  private createNoBetDecision(reason: string): BettingDecision {\n    return {\n      shouldBet: false,\n      stake: 0,\n      confidence: 0,\n      type: 'single',\n      metadata: {\n        strategy: 'none',\n        factors: [reason],\n        riskScore: 0,\n      },\n    };\n  }\n\n  private calculateRiskScore(prediction: AnalysisResult, context: BettingContext): number {\n    const weights = {\n      confidence: 0.3,\n      recentPerformance: 0.2,\n      marketEfficiency: 0.2,\n      exposure: 0.3,\n    };\n\n    const confidenceRisk = 1 - prediction.confidence;\n    const recentPerformanceRisk = 1 - (context.metrics.winRate || 0);\n    const marketEfficiencyRisk = 1 - (context.metrics.marketEfficiencyScore || 0);\n    const exposureRisk = this.calculateExposureRisk(context);\n\n    return (\n      confidenceRisk * weights.confidence +\n      recentPerformanceRisk * weights.recentPerformance +\n      marketEfficiencyRisk * weights.marketEfficiency +\n      exposureRisk * weights.exposure\n    );\n  }\n\n  private calculateExposureRisk(context: BettingContext): number {\n    const totalExposure = context.recentBets.reduce((sum, bet) => sum + bet.stake, 0);\n    return Math.min(1, totalExposure / (context.bankroll * context.maxRiskPerBet));\n  }\n\n  private determineBetType(decisions: BettingDecision[]): BetType {\n    const types = decisions.map(d => d.type);\n    return types.includes('parlay') ? 'parlay' : 'single';\n  }\n\n  private calculatePayout(bet: BetRecord, result: BetResult): number {\n    if (result.toLowerCase() === 'win') {\n      return bet.stake * bet.odds;\n    }\n    if (result.toLowerCase() === 'push') {\n      return bet.stake;\n    }\n    return 0;\n  }\n\n  private updatePerformanceMetrics(payout: number): PerformanceMetrics {\n    const state = unifiedState.getState();\n    const currentMetrics = state.betting.performance || {\n      totalBets: 0,\n      winRate: 0,\n      roi: 0,\n      profitLoss: 0,\n      clvAverage: 0,\n      edgeRetention: 0,\n      kellyMultiplier: 1,\n      marketEfficiencyScore: 0,\n      averageOdds: 0,\n      maxDrawdown: 0,\n      sharpeRatio: 0,\n      betterThanExpected: 0,\n    };\n\n    const totalBets = currentMetrics.totalBets + 1;\n    const profitLoss = currentMetrics.profitLoss + payout;\n    const roi = profitLoss / (totalBets * 100); // Assuming average stake of 100\n\n    return {\n      ...currentMetrics,\n      totalBets,\n      profitLoss,\n      roi,\n      winRate: (currentMetrics.winRate * (totalBets - 1) + (payout > 0 ? 1 : 0)) / totalBets,\n    };\n  }\n\n  private initializeMetrics(): BettingMetrics {\n    return {\n      totalBets: 0,\n      winningBets: 0,\n      losingBets: 0,\n      totalStake: 0,\n      totalPnl: 0,\n      roi: 0,\n      winRate: 0,\n      averageStake: 0,\n      averagePnl: 0,\n      lastUpdate: Date.now(),\n    };\n  }\n\n  private initializeRiskProfile(): RiskProfile {\n    return {\n      maxExposure: 1000,\n      maxPositions: 10,\n      stopLoss: 0.1,\n      profitTarget: 0.2,\n      riskPerTrade: 0.02,\n      maxDrawdown: 0.15,\n    };\n  }\n\n  private async handleOpportunity(opportunity: BettingOpportunity): Promise<void> {\n    const traceId = this.performanceMonitor.startTrace('handle-opportunity');\n    try {\n      // Check if we should take this opportunity\n      if (!this.shouldTakeOpportunity(opportunity)) {\n        this.performanceMonitor.endTrace(traceId);\n        return;\n      }\n\n      // Calculate optimal stake\n      const stake = this.calculateOptimalStake(opportunity.expectedValue, opportunity.confidence);\n\n      // Create betting position\n      const position = await this.createPosition(opportunity, stake);\n\n      // Update metrics\n      this.updateMetrics(position);\n\n      this.performanceMonitor.endTrace(traceId);\n    } catch (error) {\n      this.performanceMonitor.endTrace(traceId, error as Error);\n      this.monitor.logError('betting', error as Error);\n    }\n  }\n\n  private shouldTakeOpportunity(opportunity: BettingOpportunity): boolean {\n    // Check confidence threshold\n    if (opportunity.confidence < 0.7) return false;\n\n    // Check current exposure\n    const currentExposure = this.calculateCurrentExposure();\n    if (currentExposure >= this.riskProfile.maxExposure) return false;\n\n    // Check number of open positions\n    if (this.getOpenPositions().length >= this.riskProfile.maxPositions) return false;\n\n    // Check risk factors\n    const riskFactors = opportunity.analysis.riskFactors;\n    if (riskFactors.includes('high_volatility') || riskFactors.includes('low_liquidity')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private async createPosition(\n    opportunity: BettingOpportunity,\n    stake: number\n  ): Promise<BettingPosition> {\n    const position: BettingPosition = {\n      id: `pos_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      propId: opportunity.propId,\n      type: opportunity.type,\n      stake,\n      entryPrice: opportunity.marketState.line,\n      timestamp: Date.now(),\n      status: 'open',\n    };\n\n    this.positions.set(position.id, position);\n    return position;\n  }\n\n  private updateMetrics(position: BettingPosition): void {\n    this.metrics.totalBets++;\n    this.metrics.totalStake += position.stake;\n    this.metrics.averageStake = this.metrics.totalStake / this.metrics.totalBets;\n\n    if (position.status === 'closed' && position.pnl !== undefined) {\n      this.metrics.totalPnl += position.pnl;\n      this.metrics.averagePnl = this.metrics.totalPnl / this.metrics.totalBets;\n      this.metrics.roi = this.metrics.totalPnl / this.metrics.totalStake;\n\n      if (position.pnl > 0) {\n        this.metrics.winningBets++;\n      } else {\n        this.metrics.losingBets++;\n      }\n\n      this.metrics.winRate = this.metrics.winningBets / this.metrics.totalBets;\n    }\n\n    this.metrics.lastUpdate = Date.now();\n  }\n\n  private calculateCurrentExposure(): number {\n    return Array.from(this.positions.values())\n      .filter(p => p.status === 'open')\n      .reduce((sum, p) => sum + p.stake, 0);\n  }\n\n  private getOpenPositions(): BettingPosition[] {\n    return Array.from(this.positions.values()).filter(p => p.status === 'open');\n  }\n\n  public async closePosition(positionId: string, closePrice: number): Promise<void> {\n    const position = this.positions.get(positionId);\n    if (!position || position.status !== 'open') {\n      throw new Error(`Cannot close position ${positionId}`);\n    }\n\n    const pnl = this.calculatePnl(position, closePrice);\n\n    position.status = 'closed';\n    position.closePrice = closePrice;\n    position.closeTimestamp = Date.now();\n    position.pnl = pnl;\n\n    this.updateMetrics(position);\n  }\n\n  private calculatePnl(position: BettingPosition, closePrice: number): number {\n    const priceChange = closePrice - position.entryPrice;\n    const multiplier = position.type === 'over' ? 1 : -1;\n    return position.stake * priceChange * multiplier;\n  }\n\n  public getMetrics(): BettingMetrics {\n    return { ...this.metrics };\n  }\n\n  public getRiskProfile(): RiskProfile {\n    return { ...this.riskProfile };\n  }\n\n  public getPosition(positionId: string): BettingPosition | undefined {\n    return this.positions.get(positionId);\n  }\n\n  public getAllPositions(): BettingPosition[] {\n    return Array.from(this.positions.values());\n  }\n\n  public async evaluatePosition(\n    positionId: string,\n    closePrice: number\n  ): Promise<{\n    currentPnl: number;\n    riskLevel: 'low' | 'medium' | 'high';\n    recommendation: 'hold' | 'close';\n  }> {\n    const position = this.positions.get(positionId);\n    if (!position || position.status !== 'open') {\n      throw new Error(`Invalid position ${positionId}`);\n    }\n    // Use uppercase for BetType if needed\n    // Commented out: this.dataEngine.getMarketData(position.propId);\n    const currentPnl = this.calculatePnl(position, closePrice);\n    const pnlPercent = currentPnl / position.stake;\n\n    // Determine risk level\n    let riskLevel: 'low' | 'medium' | 'high' = 'low';\n    if (pnlPercent <= -this.riskProfile.stopLoss) {\n      riskLevel = 'high';\n    } else if (pnlPercent < 0) {\n      riskLevel = 'medium';\n    }\n\n    // Generate recommendation\n    let recommendation: 'hold' | 'close' = 'hold';\n    if (pnlPercent <= -this.riskProfile.stopLoss || pnlPercent >= this.riskProfile.profitTarget) {\n      recommendation = 'close';\n    }\n\n    return {\n      currentPnl,\n      riskLevel,\n      recommendation,\n    };\n  }\n\n  public async evaluateBettingOpportunity(\n    prediction: AnalysisResult,\n    context: BettingContext\n  ): Promise<BettingStrategy> {\n    try {\n      const opportunity: BettingOpportunity = {\n        id: prediction.id,\n        propId: prediction.id,\n        type: 'OVER', // Use uppercase for BetType\n        confidence: prediction.confidence,\n        expectedValue: 0,\n        timestamp: Date.now(),\n        marketState: {\n          line: 0,\n          volume: 0,\n          movement: 'stable',\n        },\n        analysis: {\n          historicalTrends: prediction.data.historicalTrends,\n          marketSignals: prediction.data.marketSignals,\n          riskFactors: prediction.risk_factors,\n        },\n      };\n      // Commented out: strategyEngine.evaluateOpportunity, generateRecommendation (private)\n      return {\n        id: `strategy-${Date.now()}`,\n        opportunityId: opportunity.id,\n        riskAssessment: {} as any, // Use any for missing fields\n        recommendedStake: 0,\n        entryPoints: [],\n        exitPoints: [],\n        hedgingRecommendations: [],\n        timestamp: Date.now(),\n        status: 'active',\n        metadata: {\n          createdAt: Date.now(),\n          updatedAt: Date.now(),\n          version: '1.0.0',\n        },\n      };\n    } catch (error) {\n      // Commented out: this.eventBus.emit('error', ...)\n      throw error;\n    }\n  }\n\n  public async updateBankrollState(\n    betType: BetType,\n    stake: number,\n    odds: number,\n    result: BetResult\n  ): Promise<void> {\n    const profitLoss = this.calculateProfitLoss(stake, odds, result);\n    this.bankrollState = {\n      ...this.bankrollState,\n      currentAmount: this.bankrollState.currentAmount + profitLoss,\n      totalWagered: this.bankrollState.totalWagered + stake,\n      totalWon:\n        result.toLowerCase() === 'win'\n          ? this.bankrollState.totalWon + profitLoss\n          : this.bankrollState.totalWon,\n      totalLost:\n        result.toLowerCase() === 'loss'\n          ? this.bankrollState.totalLost + stake\n          : this.bankrollState.totalLost,\n      openPositions:\n        result.toLowerCase() === 'pending'\n          ? this.bankrollState.openPositions + 1\n          : this.bankrollState.openPositions,\n      maxDrawdown: Math.min(this.bankrollState.maxDrawdown, profitLoss),\n      lastUpdate: Date.now(),\n    };\n    // TODO: Add event emit if/when eventBus is available\n  }\n\n  private calculateProfitLoss(stake: number, odds: number, result: BetResult): number {\n    if (result.toLowerCase() === 'win') {\n      return stake * (odds - 1);\n    } else if (result.toLowerCase() === 'loss') {\n      return -stake;\n    }\n    return 0;\n  }\n}\n\nexport function toRiskTolerance(level: string): RiskTolerance {\n  switch (level) {\n    case 'LOW':\n      return 'low';\n    case 'MEDIUM':\n      return 'medium';\n    case 'HIGH':\n      return 'high';\n    default:\n      return level as RiskTolerance;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedCache.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedCache.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedCache.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedConfig.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedConfigManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedConfigManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedConfigManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedDataEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedDataEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedDataEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedError.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedError.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedError.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedErrorHandler.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedErrorHandler.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedErrorHandler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedLogger.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedLogger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedLogger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedMetrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedMetrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedMetrics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedMonitor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedMonitor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedMonitor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedPredictionEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedPredictionEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedPredictionEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedPredictionEngineIntegrated.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedPredictionEngineIntegrated.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedPredictionEngineIntegrated.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedPredictionService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedPredictionService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedPredictionService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedRiskManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedRiskManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedRiskManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedState.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedState.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedState.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedStrategyEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedStrategyEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\UnifiedStrategyEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\analytics\\ModelPerformanceTracker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\analytics\\ModelPerformanceTracker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\analytics\\ModelPerformanceTracker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\analytics\\PerformanceMonitor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\analytics\\PerformanceMonitor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\analytics\\PerformanceMonitor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\analytics\\__tests__\\ModelPerformanceTracker.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\analytics\\__tests__\\ModelPerformanceTracker.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\analytics\\__tests__\\ModelPerformanceTracker.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\config\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\config\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\config\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\core.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\core.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\core.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\error\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\error\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\error\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\errors.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\errors.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\errors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\logging\\logger.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\logging\\logger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\logging\\logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\logging\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\logging\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\logging\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\metrics\\metrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\metrics\\metrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\metrics\\metrics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\metrics\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\metrics\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\metrics\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\BaseMLService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\BaseMLService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\BaseMLService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\MLService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\MLService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\MLService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\ModelEvaluator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\ModelEvaluator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\ModelEvaluator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\ModelManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\ModelManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\ModelManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\ModelRegistry.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\ModelRegistry.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\ModelRegistry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\models\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\types\\prediction.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\types\\prediction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\types\\prediction.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\websocket\\WebSocketManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\websocket\\WebSocketManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\websocket\\WebSocketManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\websocket\\handlers\\PredictionHandler.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\websocket\\handlers\\PredictionHandler.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\core\\websocket\\handlers\\PredictionHandler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\data\\dataIntegrationService.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":1,"column":46,"nodeType":"TSTypeLiteral","messageId":"noEmptyObject","endLine":1,"endColumn":48,"suggestions":[{"messageId":"replaceEmptyObjectType","data":{"replacement":"object"},"fix":{"range":[45,47],"text":"object"},"desc":"Replace `{}` with `object`."},{"messageId":"replaceEmptyObjectType","data":{"replacement":"unknown"},"fix":{"range":[45,47],"text":"unknown"},"desc":"Replace `{}` with `unknown`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export declare const dataIntegrationService: {};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\data\\dataIntegrationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\data\\dataIntegrationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\examples\\predictionExample.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\examples\\predictionExample.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\examples\\predictionExample.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\UltimateHooks.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\UltimateHooks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\UniversalHooks.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\UniversalHooks.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'options'. Either include it or remove the dependency array.","line":212,"column":5,"nodeType":"ArrayExpression","endLine":212,"endColumn":31,"suggestions":[{"desc":"Update the dependencies array to be: [options, values]","fix":{"range":[6188,6214],"text":"[options, values]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'initialValue' and 'value'. Either include them or remove the dependency array.","line":598,"column":6,"nodeType":"ArrayExpression","endLine":598,"endColumn":37,"suggestions":[{"desc":"Update the dependencies array to be: [targetValue, duration, easing, initialValue, value]","fix":{"range":[15561,15592],"text":"[targetValue, duration, easing, initialValue, value]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useRef, useCallback, useMemo } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport {\n  UniversalServiceFactory,\n  createQueryKeys,\n  defaultQueryConfig,\n} from \"../services/UniversalServiceLayer\";\nimport { useTheme } from \"../providers/SafeThemeProvider\";\n\n// ============================================================================\n// DATA HOOKS\n// ============================================================================\n\n/**\n * Universal hook for fetching predictions with caching and real-time updates\n */\nexport const usePredictions = (\n  options: { limit?: number; realtime?: boolean } = {},\n) => {\n  const { limit = 10, realtime = false } = options;\n\n  // Mock data to prevent fetch errors\n  const mockPredictions = Array.from({ length: limit }, (_, i) => ({\n    id: `pred-${i + 1}`,\n    game: `Game ${i + 1}`,\n    prediction: Math.random() * 100,\n    confidence: 75 + Math.random() * 20,\n    timestamp: new Date().toISOString(),\n    potentialWin: 100 + Math.random() * 500,\n    odds: 1.5 + Math.random() * 2,\n    status: [\"pending\", \"won\", \"lost\"][Math.floor(Math.random() * 3)] as any,\n  }));\n\n  const query = useQuery({\n    queryKey: createQueryKeys.predictions.recent(limit),\n    queryFn: async () => ({ data: mockPredictions }), // Return mock data\n    ...defaultQueryConfig,\n    refetchInterval: false, // Disable auto-refetch to prevent errors\n  });\n\n  return {\n    predictions: query.data?.data || mockPredictions,\n    isLoading: false, // Set to false since we have mock data\n    error: null,\n    refetch: query.refetch,\n  };\n};\n\n/**\n * Universal hook for fetching engine metrics\n */\nexport const useEngineMetrics = () => {\n  // Mock engine metrics to prevent fetch errors\n  const mockMetrics = {\n    accuracy: 89.3,\n    totalPredictions: 156,\n    winRate: 85.6,\n    avgConfidence: 88.5,\n    profitability: 147.2,\n    status: \"active\",\n  };\n\n  const query = useQuery({\n    queryKey: createQueryKeys.predictions.metrics(),\n    queryFn: async () => ({ data: mockMetrics }),\n    ...defaultQueryConfig,\n    refetchInterval: false, // Disable auto-refetch to prevent errors\n  });\n\n  return {\n    metrics: query.data?.data,\n    isLoading: query.isLoading,\n    error: query.error,\n    refetch: query.refetch,\n  };\n};\n\n/**\n * Universal hook for betting opportunities\n */\nexport const useBettingOpportunities = (\n  options: { limit?: number; sport?: string } = {},\n) => {\n  const { limit = 5, sport } = options;\n\n  // Mock betting opportunities to prevent fetch errors\n  const mockOpportunities = Array.from({ length: limit }, (_, i) => ({\n    id: `opp-${i + 1}`,\n    game: `${sport || \"NBA\"} Game ${i + 1}`,\n    type: [\"Over/Under\", \"Spread\", \"Moneyline\"][i % 3],\n    value: 2.1 + Math.random() * 1.5,\n    confidence: 80 + Math.random() * 15,\n    expectedReturn: 15 + Math.random() * 25,\n    league: sport || \"NBA\",\n    startTime: new Date(Date.now() + (i + 1) * 3600000).toISOString(),\n  }));\n\n  const query = useQuery({\n    queryKey: createQueryKeys.betting.opportunities(sport, limit),\n    queryFn: async () => ({ data: mockOpportunities }),\n    ...defaultQueryConfig,\n    refetchInterval: false, // Disable auto-refetch to prevent errors\n  });\n\n  return {\n    opportunities: query.data?.data || mockOpportunities,\n    isLoading: false,\n    error: null,\n    refetch: query.refetch,\n  };\n};\n\n/**\n * Universal hook for user profile management\n */\nexport const useUserProfile = () => {\n  const userService = UniversalServiceFactory.getUserService();\n  const queryClient = useQueryClient();\n\n  const query = useQuery({\n    queryKey: createQueryKeys.user.profile(),\n    queryFn: () => userService.getProfile(),\n    ...defaultQueryConfig,\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: (data: any) => userService.updateProfile(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: createQueryKeys.user.profile(),\n      });\n    },\n  });\n\n  return {\n    profile: query.data?.data,\n    isLoading: query.isLoading,\n    error: query.error,\n    updateProfile: updateMutation.mutate,\n    isUpdating: updateMutation.isPending,\n    refetch: query.refetch,\n  };\n};\n\n// ============================================================================\n// UI HOOKS\n// ============================================================================\n\n/**\n * Universal theme hook with all theme functionality\n */\nexport const useUniversalTheme = () => {\n  const themeContext = useTheme();\n\n  return {\n    ...themeContext,\n    // Additional utility functions\n    getCSSVariable: (name: string) => {\n      if (typeof window === \"undefined\") return \"\";\n      return getComputedStyle(document.documentElement).getPropertyValue(\n        `--${name}`,\n      );\n    },\n    applyTheme: (variant: string) => {\n      themeContext.setVariant(variant as any);\n    },\n  };\n};\n\n/**\n * Universal form hook with validation and submission\n */\nexport const useUniversalForm = <T extends Record<string, any>>(\n  initialValues: T,\n  options: {\n    validate?: (values: T) => Record<string, string>;\n    onSubmit?: (values: T) => Promise<void> | void;\n  } = {},\n) => {\n  const [values, setValues] = useState<T>(initialValues);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [touched, setTouched] = useState<Record<string, boolean>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = useCallback(\n    (name: keyof T, value: any) => {\n      setValues((prev) => ({ ...prev, [name]: value }));\n\n      // Clear error when user starts typing\n      if (errors[name as string]) {\n        setErrors((prev) => ({ ...prev, [name]: \"\" }));\n      }\n    },\n    [errors],\n  );\n\n  const handleBlur = useCallback(\n    (name: keyof T) => {\n      setTouched((prev) => ({ ...prev, [name]: true }));\n\n      // Validate on blur if validation function is provided\n      if (options.validate) {\n        const validationErrors = options.validate(values);\n        if (validationErrors[name as string]) {\n          setErrors((prev) => ({\n            ...prev,\n            [name]: validationErrors[name as string],\n          }));\n        }\n      }\n    },\n    [values, options.validate],\n  );\n\n  const handleSubmit = useCallback(\n    async (e?: React.FormEvent) => {\n      e?.preventDefault();\n\n      setIsSubmitting(true);\n\n      // Mark all fields as touched\n      const allTouched = Object.keys(values).reduce(\n        (acc, key) => {\n          acc[key] = true;\n          return acc;\n        },\n        {} as Record<string, boolean>,\n      );\n      setTouched(allTouched);\n\n      // Validate all fields\n      if (options.validate) {\n        const validationErrors = options.validate(values);\n        setErrors(validationErrors);\n\n        if (Object.keys(validationErrors).length > 0) {\n          setIsSubmitting(false);\n          return;\n        }\n      }\n\n      try {\n        await options.onSubmit?.(values);\n      } catch (error) {\n        console.error(\"Form submission error:\", error);\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [values, options],\n  );\n\n  const reset = useCallback(() => {\n    setValues(initialValues);\n    setErrors({});\n    setTouched({});\n    setIsSubmitting(false);\n  }, [initialValues]);\n\n  return {\n    values,\n    errors,\n    touched,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    reset,\n    isValid: Object.keys(errors).length === 0,\n  };\n};\n\n/**\n * Universal modal hook\n */\nexport const useModal = (defaultOpen = false) => {\n  const [isOpen, setIsOpen] = useState(defaultOpen);\n\n  const open = useCallback(() => setIsOpen(true), []);\n  const close = useCallback(() => setIsOpen(false), []);\n  const toggle = useCallback(() => setIsOpen((prev) => !prev), []);\n\n  return {\n    isOpen,\n    open,\n    close,\n    toggle,\n  };\n};\n\n/**\n * Universal toast/notification hook\n */\nexport const useToast = () => {\n  const [toasts, setToasts] = useState<\n    Array<{\n      id: string;\n      message: string;\n      type: \"success\" | \"error\" | \"warning\" | \"info\";\n      duration?: number;\n    }>\n  >([]);\n\n  const addToast = useCallback(\n    (\n      message: string,\n      type: \"success\" | \"error\" | \"warning\" | \"info\" = \"info\",\n      duration = 5000,\n    ) => {\n      const id = Math.random().toString(36).substr(2, 9);\n      const toast = { id, message, type, duration };\n\n      setToasts((prev) => [...prev, toast]);\n\n      if (duration > 0) {\n        setTimeout(() => {\n          setToasts((prev) => prev.filter((t) => t.id !== id));\n        }, duration);\n      }\n\n      return id;\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setToasts((prev) => prev.filter((t) => t.id !== id));\n  }, []);\n\n  const clearAll = useCallback(() => {\n    setToasts([]);\n  }, []);\n\n  return {\n    toasts,\n    addToast,\n    removeToast,\n    clearAll,\n    success: (message: string, duration?: number) =>\n      addToast(message, \"success\", duration),\n    error: (message: string, duration?: number) =>\n      addToast(message, \"error\", duration),\n    warning: (message: string, duration?: number) =>\n      addToast(message, \"warning\", duration),\n    info: (message: string, duration?: number) =>\n      addToast(message, \"info\", duration),\n  };\n};\n\n// ============================================================================\n// UTILITY HOOKS\n// ============================================================================\n\n/**\n * Universal debounce hook\n */\nexport const useDebounce = <T>(value: T, delay: number): T => {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\n/**\n * Universal local storage hook\n */\nexport const useLocalStorage = <T>(key: string, initialValue: T) => {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === \"undefined\") return initialValue;\n\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error);\n      return initialValue;\n    }\n  });\n\n  const setValue = useCallback(\n    (value: T | ((val: T) => T)) => {\n      try {\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        setStoredValue(valueToStore);\n\n        if (typeof window !== \"undefined\") {\n          window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        }\n      } catch (error) {\n        console.warn(`Error setting localStorage key \"${key}\":`, error);\n      }\n    },\n    [key, storedValue],\n  );\n\n  const removeValue = useCallback(() => {\n    try {\n      setStoredValue(initialValue);\n      if (typeof window !== \"undefined\") {\n        window.localStorage.removeItem(key);\n      }\n    } catch (error) {\n      console.warn(`Error removing localStorage key \"${key}\":`, error);\n    }\n  }, [key, initialValue]);\n\n  return [storedValue, setValue, removeValue] as const;\n};\n\n/**\n * Universal window size hook\n */\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState(() => {\n    if (typeof window === \"undefined\") return { width: 0, height: 0 };\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n};\n\n/**\n * Universal media query hook\n */\nexport const useMediaQuery = (query: string): boolean => {\n  const [matches, setMatches] = useState(() => {\n    if (typeof window === \"undefined\") return false;\n    return window.matchMedia(query).matches;\n  });\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") return;\n\n    const mediaQuery = window.matchMedia(query);\n    const handleChange = () => setMatches(mediaQuery.matches);\n\n    mediaQuery.addListener(handleChange);\n    return () => mediaQuery.removeListener(handleChange);\n  }, [query]);\n\n  return matches;\n};\n\n/**\n * Universal click outside hook\n */\nexport const useClickOutside = <T extends HTMLElement>(handler: () => void) => {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        handler();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [handler]);\n\n  return ref;\n};\n\n/**\n * Universal WebSocket hook\n */\nexport const useWebSocket = (\n  url: string,\n  options: {\n    onMessage?: (data: any) => void;\n    onOpen?: () => void;\n    onClose?: () => void;\n    onError?: (error: Event) => void;\n    enabled?: boolean;\n  } = {},\n) => {\n  const { onMessage, onOpen, onClose, onError, enabled = true } = options;\n  const [connectionStatus, setConnectionStatus] = useState<\n    \"connecting\" | \"connected\" | \"disconnected\"\n  >(\"disconnected\");\n  const [lastMessage, setLastMessage] = useState<any>(null);\n  const wsRef = useRef<WebSocket | null>(null);\n\n  const sendMessage = useCallback((data: any) => {\n    if (wsRef.current?.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!enabled) return;\n\n    setConnectionStatus(\"connecting\");\n    const ws = new WebSocket(url);\n    wsRef.current = ws;\n\n    ws.onopen = () => {\n      setConnectionStatus(\"connected\");\n      onOpen?.();\n    };\n\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        setLastMessage(data);\n        onMessage?.(data);\n      } catch (error) {\n        console.warn(\"Failed to parse WebSocket message:\", error);\n      }\n    };\n\n    ws.onclose = () => {\n      setConnectionStatus(\"disconnected\");\n      onClose?.();\n    };\n\n    ws.onerror = (error) => {\n      setConnectionStatus(\"disconnected\");\n      onError?.(error);\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [url, enabled, onMessage, onOpen, onClose, onError]);\n\n  return {\n    connectionStatus,\n    lastMessage,\n    sendMessage,\n  };\n};\n\n// ============================================================================\n// PERFORMANCE HOOKS\n// ============================================================================\n\n/**\n * Universal animation hook\n */\nexport const useAnimation = (\n  initialValue: number,\n  targetValue: number,\n  duration = 1000,\n  easing: (t: number) => number = (t) => t,\n) => {\n  const [value, setValue] = useState(initialValue);\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  useEffect(() => {\n    if (initialValue === targetValue) return;\n\n    setIsAnimating(true);\n    const startTime = Date.now();\n    const startValue = value;\n    const difference = targetValue - startValue;\n\n    const animate = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easedProgress = easing(progress);\n\n      setValue(startValue + difference * easedProgress);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        setIsAnimating(false);\n      }\n    };\n\n    requestAnimationFrame(animate);\n  }, [targetValue, duration, easing]);\n\n  return { value, isAnimating };\n};\n\n/**\n * Universal performance monitor hook\n */\nexport const usePerformanceMonitor = () => {\n  const [metrics, setMetrics] = useState({\n    renderTime: 0,\n    memoryUsage: 0,\n    fps: 0,\n  });\n\n  useEffect(() => {\n    let frameCount = 0;\n    let lastTime = performance.now();\n\n    const measurePerformance = () => {\n      const currentTime = performance.now();\n      frameCount++;\n\n      if (currentTime - lastTime >= 1000) {\n        const fps = Math.round((frameCount * 1000) / (currentTime - lastTime));\n        const memoryUsage = (performance as any).memory?.usedJSHeapSize || 0;\n\n        setMetrics({\n          renderTime: currentTime - lastTime,\n          memoryUsage: Math.round(memoryUsage / 1024 / 1024), // MB\n          fps,\n        });\n\n        frameCount = 0;\n        lastTime = currentTime;\n      }\n\n      requestAnimationFrame(measurePerformance);\n    };\n\n    requestAnimationFrame(measurePerformance);\n  }, []);\n\n  return metrics;\n};\n\n// ============================================================================\n// EXPORTS\n// ============================================================================\n\nexport default {\n  // Data hooks\n  usePredictions,\n  useEngineMetrics,\n  useBettingOpportunities,\n  useUserProfile,\n\n  // UI hooks\n  useUniversalTheme,\n  useUniversalForm,\n  useModal,\n  useToast,\n\n  // Utility hooks\n  useDebounce,\n  useLocalStorage,\n  useWindowSize,\n  useMediaQuery,\n  useClickOutside,\n  useWebSocket,\n\n  // Performance hooks\n  useAnimation,\n  usePerformanceMonitor,\n};\n\n// Individual exports for tree shaking\nexport {\n  usePredictions,\n  useEngineMetrics,\n  useBettingOpportunities,\n  useUserProfile,\n  useUniversalTheme,\n  useUniversalForm,\n  useModal,\n  useToast,\n  useDebounce,\n  useLocalStorage,\n  useWindowSize,\n  useMediaQuery,\n  useClickOutside,\n  useWebSocket,\n  useAnimation,\n  usePerformanceMonitor,\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnimatedValue.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnimatedValue.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnimatedValue.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnimation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnimation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnimation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnomalyDetection.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnomalyDetection.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAnomalyDetection.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useApi.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useApi.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useApiRequest.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useApiRequest.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useApiRequest.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAuth.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAuth.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useAuth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBetting.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'valueBets' conditional could make the dependencies of useMemo Hook (at line 92) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'valueBets' in its own useMemo() Hook.","line":78,"column":9,"nodeType":"VariableDeclarator","endLine":78,"endColumn":70},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'arbitrageOpportunities' conditional could make the dependencies of useMemo Hook (at line 176) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'arbitrageOpportunities' in its own useMemo() Hook.","line":153,"column":9,"nodeType":"VariableDeclarator","endLine":155,"endColumn":9}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Custom hooks for betting-related functionality\n * Provides data fetching, caching, and state management for betting features\n */\n\nimport { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { api } from \"../services/integrationService\";\n\n// Define types locally since they're not exported from integrationService\ninterface ValueBet {\n  id: string;\n  sport: string;\n  event: string;\n  market: string;\n  odds: number;\n  probability: number;\n  expected_value: number;\n  confidence: number;\n  recommendation: string;\n  edge?: number;\n  bookmaker?: string;\n}\n\ninterface ArbitrageOpportunity {\n  id: string;\n  sport: string;\n  event: string;\n  bookmaker_a: string;\n  bookmaker_b: string;\n  odds_a: number;\n  odds_b: number;\n  profit_margin: number;\n  guaranteed_profit?: number;\n  profit_percent?: number;\n  stakes?: { [key: string]: number };\n  required_stake?: number;\n}\nimport toast from \"react-hot-toast\";\n\n// Hook for value bets\nexport const useValueBets = (filters?: {\n  sport?: string;\n  minEdge?: number;\n  bookmaker?: string;\n}) => {\n  const {\n    data: valueBetsData = [],\n    isLoading,\n    error,\n    refetch,\n  } = useQuery({\n    queryKey: [\"valueBets\", filters],\n    queryFn: async () => {\n      const opportunities = await api.getBettingOpportunities(\n        filters?.sport,\n        filters?.limit || 10,\n      );\n      // Map betting opportunities to ValueBet format\n      return opportunities.map((opp: any) => ({\n        id: opp.id,\n        sport: opp.sport,\n        event: opp.event,\n        market: opp.market,\n        odds: opp.odds,\n        probability: opp.probability,\n        expected_value: opp.expected_value,\n        confidence: opp.confidence,\n        recommendation: opp.recommendation,\n      })) as ValueBet[];\n    },\n    refetchInterval: 30000, // Refetch every 30 seconds\n    staleTime: 10000, // Data is fresh for 10 seconds\n    retry: false, // Don't retry on error\n  });\n\n  // Ensure we always have an array\n  const valueBets = Array.isArray(valueBetsData) ? valueBetsData : [];\n\n  // Filter value bets based on criteria\n  const filteredValueBets = useMemo(() => {\n    if (!Array.isArray(valueBets)) return [];\n    if (!filters) return valueBets;\n\n    return valueBets.filter((bet: ValueBet) => {\n      if (filters.sport && bet.sport !== filters.sport) return false;\n      if (filters.minEdge && bet.edge < filters.minEdge) return false;\n      if (filters.bookmaker && bet.bookmaker !== filters.bookmaker)\n        return false;\n      return true;\n    });\n  }, [valueBets, filters]);\n\n  // Calculate statistics\n  const stats = useMemo(() => {\n    // Ensure filteredValueBets is an array before using reduce\n    if (!Array.isArray(filteredValueBets) || filteredValueBets.length === 0) {\n      return {\n        count: 0,\n        averageEdge: 0,\n        maximumEdge: 0,\n        totalValue: 0,\n      };\n    }\n\n    const totalEdge = filteredValueBets.reduce(\n      (sum: number, bet: ValueBet) => sum + (bet.edge || 0),\n      0,\n    );\n    const avgEdge = totalEdge / filteredValueBets.length;\n    const maxEdge = filteredValueBets.reduce(\n      (max: number, bet: ValueBet) => Math.max(max, bet.edge || 0),\n      0,\n    );\n\n    return {\n      count: filteredValueBets.length,\n      averageEdge: avgEdge,\n      maximumEdge: maxEdge,\n      totalValue: totalEdge,\n    };\n  }, [filteredValueBets]);\n\n  return {\n    valueBets: filteredValueBets,\n    stats,\n    isLoading,\n    error,\n    refetch,\n  };\n};\n\n// Hook for arbitrage opportunities\nexport const useArbitrageOpportunities = (filters?: {\n  sport?: string;\n  minProfit?: number;\n  maxStake?: number;\n}) => {\n  const {\n    data: arbitrageData = [],\n    isLoading,\n    error,\n    refetch,\n  } = useQuery({\n    queryKey: [\"arbitrageOpportunities\", filters],\n    queryFn: () => api.getArbitrageOpportunities(),\n    refetchInterval: 15000, // Refetch every 15 seconds (arbitrage is time-sensitive)\n    staleTime: 5000, // Data is fresh for 5 seconds\n    retry: false, // Don't retry on error\n  });\n\n  // Ensure we always have an array\n  const arbitrageOpportunities = Array.isArray(arbitrageData)\n    ? arbitrageData\n    : [];\n\n  // Filter arbitrage opportunities\n  const filteredOpportunities = useMemo(() => {\n    // Ensure we always have an array to work with\n    if (!Array.isArray(arbitrageOpportunities)) return [];\n    if (!filters) return arbitrageOpportunities;\n\n    return arbitrageOpportunities.filter((opp: ArbitrageOpportunity) => {\n      if (filters.sport && opp.sport !== filters.sport) return false;\n      if (filters.minProfit && opp.profit_percent < filters.minProfit)\n        return false;\n      if (filters.maxStake && opp.stakes) {\n        const stakes = Object.values(opp.stakes);\n        const totalStake = Array.isArray(stakes)\n          ? stakes.reduce((sum, stake) => sum + (stake || 0), 0)\n          : 0;\n        if (totalStake > filters.maxStake) return false;\n      }\n      return true;\n    });\n  }, [arbitrageOpportunities, filters]);\n\n  // Calculate statistics\n  const stats = useMemo(() => {\n    // Ensure filteredOpportunities is an array before using reduce\n    if (\n      !Array.isArray(filteredOpportunities) ||\n      filteredOpportunities.length === 0\n    ) {\n      return {\n        totalProfit: 0,\n        averageProfitPercent: 0,\n        totalOpportunities: 0,\n      };\n    }\n\n    const totalProfit = filteredOpportunities.reduce(\n      (sum: number, opp: ArbitrageOpportunity) =>\n        sum + (opp.guaranteed_profit || 0),\n      0,\n    );\n    const avgProfitPercent =\n      filteredOpportunities.reduce(\n        (sum: number, opp: ArbitrageOpportunity) =>\n          sum + (opp.profit_percent || 0),\n        0,\n      ) / filteredOpportunities.length;\n\n    return {\n      totalOpportunities: filteredOpportunities.length,\n      totalProfit: totalProfit,\n      averageProfitPercent: avgProfitPercent,\n    };\n  }, [filteredOpportunities]);\n\n  return {\n    arbitrageOpportunities: filteredOpportunities,\n    stats,\n    isLoading,\n    error,\n    refetch,\n  };\n};\n\n// Hook for placing bets\nexport const usePlaceBet = () => {\n  const queryClient = useQueryClient();\n\n  const placeBetMutation = useMutation({\n    mutationFn: (betData: {\n      event: string;\n      outcome: string;\n      bookmaker: string;\n      odds: number;\n      stake: number;\n    }) => Promise.reject(new Error(\"Bet placement not implemented yet\")), // TODO: Implement placeBet in integration service\n    onSuccess: (data) => {\n      toast.success(\"Bet placed successfully!\");\n      // Invalidate relevant queries to refresh data\n      queryClient.invalidateQueries({ queryKey: [\"valueBets\"] });\n      queryClient.invalidateQueries({ queryKey: [\"userAnalytics\"] });\n    },\n    onError: (error: any) => {\n      toast.error(error.response?.data?.detail || \"Failed to place bet\");\n    },\n  });\n\n  return {\n    placeBet: placeBetMutation.mutate,\n    isPlacingBet: placeBetMutation.isPending,\n    error: placeBetMutation.error,\n  };\n};\n\n// Hook for user analytics\nexport const useUserAnalytics = (userId: string) => {\n  const {\n    data: analytics,\n    isLoading,\n    error,\n    refetch,\n  } = useQuery({\n    queryKey: [\"userAnalytics\", userId],\n    queryFn: () => api.getUserAnalytics(userId),\n    enabled: !!userId,\n    staleTime: 60000, // Data is fresh for 1 minute\n  });\n\n  return {\n    analytics,\n    isLoading,\n    error,\n    refetch,\n  };\n};\n\n// Hook for bankroll management\nexport const useBankroll = (userId: string) => {\n  const [bankrollSettings, setBankrollSettings] = useState({\n    totalBankroll: 1000,\n    maxBetPercentage: 5,\n    riskTolerance: \"medium\" as \"low\" | \"medium\" | \"high\",\n  });\n\n  // Calculate recommended bet sizes using Kelly Criterion\n  const calculateKellyBetSize = useCallback(\n    (edge: number, odds: number) => {\n      const { totalBankroll, maxBetPercentage } = bankrollSettings;\n      const kellyFraction = edge / (odds - 1);\n\n      // Apply risk tolerance modifier\n      const riskModifier = {\n        low: 0.25,\n        medium: 0.5,\n        high: 1.0,\n      }[bankrollSettings.riskTolerance];\n\n      const adjustedKelly = kellyFraction * riskModifier;\n      const maxBetAmount = (totalBankroll * maxBetPercentage) / 100;\n\n      // Use smaller of Kelly calculation or max bet amount\n      const recommendedBet = Math.min(\n        totalBankroll * Math.max(0, adjustedKelly),\n        maxBetAmount,\n      );\n\n      return Math.round(recommendedBet * 100) / 100; // Round to 2 decimal places\n    },\n    [bankrollSettings],\n  );\n\n  return {\n    bankrollSettings,\n    setBankrollSettings,\n    calculateKellyBetSize,\n  };\n};\n\n// Hook for bet tracking and history\nexport const useBetHistory = (userId: string) => {\n  const [betHistory, setBetHistory] = useState<any[]>([]);\n  const [filters, setFilters] = useState({\n    sport: \"\",\n    outcome: \"\",\n    dateRange: { start: \"\", end: \"\" },\n  });\n\n  // This would typically fetch from an API\n  useEffect(() => {\n    // Simulate bet history data\n    const mockHistory = [\n      {\n        id: \"1\",\n        event: \"Lakers vs Warriors\",\n        outcome: \"Lakers Win\",\n        odds: 2.5,\n        stake: 50,\n        result: \"won\",\n        profit: 75,\n        date: new Date().toISOString(),\n      },\n      // Add more mock data as needed\n    ];\n    setBetHistory(mockHistory);\n  }, [userId]);\n\n  const filteredHistory = useMemo(() => {\n    return betHistory.filter((bet) => {\n      if (\n        filters.sport &&\n        !bet.event.toLowerCase().includes(filters.sport.toLowerCase())\n      ) {\n        return false;\n      }\n      if (filters.outcome && bet.outcome !== filters.outcome) {\n        return false;\n      }\n      // Add date filtering logic here\n      return true;\n    });\n  }, [betHistory, filters]);\n\n  const stats = useMemo(() => {\n    // Ensure filteredHistory is an array before calculations\n    if (!Array.isArray(filteredHistory) || filteredHistory.length === 0) {\n      return {\n        totalBets: 0,\n        wonBets: 0,\n        winRate: 0,\n        totalProfit: 0,\n        totalStaked: 0,\n        roi: 0,\n      };\n    }\n\n    const totalBets = filteredHistory.length;\n    const wonBets = filteredHistory.filter(\n      (bet) => bet.result === \"won\",\n    ).length;\n    const totalProfit = filteredHistory.reduce(\n      (sum, bet) => sum + (bet.profit || 0),\n      0,\n    );\n    const totalStaked = filteredHistory.reduce(\n      (sum, bet) => sum + (bet.stake || 0),\n      0,\n    );\n    const roi = totalStaked > 0 ? (totalProfit / totalStaked) * 100 : 0;\n\n    return {\n      totalBets,\n      wonBets,\n      winRate: totalBets > 0 ? (wonBets / totalBets) * 100 : 0,\n      totalProfit,\n      totalStaked,\n      roi,\n    };\n  }, [filteredHistory]);\n\n  return {\n    betHistory: filteredHistory,\n    stats,\n    filters,\n    setFilters,\n  };\n};\n\n// Export all hooks\nexport default {\n  useValueBets,\n  useArbitrageOpportunities,\n  usePlaceBet,\n  useUserAnalytics,\n  useBankroll,\n  useBetHistory,\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingCore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingCore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingCore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingData.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingSettings.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingSettings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingSettings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingStateMachine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingStateMachine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBettingStateMachine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBookmakerAnalysis.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBookmakerAnalysis.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useBookmakerAnalysis.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useClickOutside.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useClickOutside.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useClickOutside.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useClipboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useClipboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useClipboard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useConfidenceStats.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useConfigFlags.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useCyberIntegration.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useCyberIntegration.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDarkMode.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDarkMode.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDarkMode.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDataFetching.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDataFetching.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDataFetching.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDataSync.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDataSync.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDataSync.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDebounce.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDebounce.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDebounce.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDeviceMotion.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDeviceMotion.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDeviceMotion.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDeviceOrientation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDeviceOrientation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDeviceOrientation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDriftDetection.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDriftDetection.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useDriftDetection.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEnhancedBettingEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEnhancedBettingEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEnhancedRealDataSources.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEnhancedRealDataSources.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEnhancedRealDataSources_clean.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEnhancedRealDataSources_clean.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useErrorBoundary.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useErrorBoundary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useErrorBoundary.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useErrorHandler.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useErrorHandler.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useErrorHandler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEventAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEventBus.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEvolutionaryAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEvolutionaryAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useEvolutionaryAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useFeatureImportance.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useFeatureImportance.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useFeatureImportance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useFilteredPredictions.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useFilteredPredictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useFilteredPredictions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useForm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useForm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useGeolocation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useGeolocation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useGeolocation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useHealthCheck.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useHealthCheck.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useHealthCheck.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useHyperMLAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useHyperMLAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useHyperMLAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useInfiniteScroll.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useInfiniteScroll.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useInfiniteScroll.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useInitializeApp.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useInitializeApp.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useInitializeApp.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useKeyboardShortcut.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useKeyboardShortcut.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useKeyboardShortcut.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLineupAPI.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLineupAPI.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLineupAPI.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLiveOdds.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLiveOdds.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLiveOdds.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLocalStorage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLocalStorage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLocalStorage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLogger.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLogger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useLogger.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMLAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMLAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMLAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMLSimulation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMLSimulation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMLSimulation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMediaQuery.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMediaQuery.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMediaQuery.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMetrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMetrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useMetrics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useModelCalibration.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useModelCalibration.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useModelCalibration.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchCalibration'. Either include it or remove the dependency array.","line":116,"column":6,"nodeType":"ArrayExpression","endLine":116,"endColumn":13,"suggestions":[{"desc":"Update the dependencies array to be: [fetchCalibration, token]","fix":{"range":[2924,2931],"text":"[fetchCalibration, token]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { useAuth } from './useAuth';\n\ninterface CalibrationPoint {\n  prob_pred: number;\n  prob_true: number;\n  count: number;\n}\n\ninterface ModelCalibration {\n  model: string;\n  calibration_curve: CalibrationPoint[];\n  brier_score: number;\n  timestamp: string;\n}\n\ninterface CalibrationState {\n  calibration: ModelCalibration[];\n  loading: boolean;\n  error: string | null;\n}\n\nexport const useModelCalibration = () => {\n  const [state, setState] = useState<CalibrationState>({\n    calibration: [],\n    loading: true,\n    error: null,\n  });\n\n  const { token } = useAuth();\n\n  const fetchCalibration = async () => {\n    try {\n      const response = await fetch('/api/predictions/model-calibration', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch model calibration');\n      }\n\n      const calibration = await response.json();\n      setState(prev => ({\n        ...prev,\n        calibration,\n        loading: false,\n      }));\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'An error occurred',\n        loading: false,\n      }));\n    }\n  };\n\n  const getLatestCalibration = () => {\n    if (state.calibration.length === 0) return null;\n    return state.calibration[state.calibration.length - 1];\n  };\n\n  const getCalibrationHistory = (model: string) => {\n    return state.calibration\n      .filter(c => c.model === model)\n      .sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n  };\n\n  const getCalibrationTrend = (model: string) => {\n    const history = getCalibrationHistory(model);\n    return history.map(h => ({\n      timestamp: h.timestamp,\n      brier_score: h.brier_score,\n    }));\n  };\n\n  const getCalibrationError = (model: string) => {\n    const latest = getLatestCalibration();\n    if (!latest) return null;\n\n    const calibrationCurve = latest.calibration_curve;\n    let totalError = 0;\n    let totalCount = 0;\n\n    for (const point of calibrationCurve) {\n      const error = Math.abs(point.prob_pred - point.prob_true);\n      totalError += error * point.count;\n      totalCount += point.count;\n    }\n\n    return totalCount > 0 ? totalError / totalCount : null;\n  };\n\n  const getCalibrationReliability = (model: string) => {\n    const latest = getLatestCalibration();\n    if (!latest) return null;\n\n    const calibrationCurve = latest.calibration_curve;\n    let reliability = 0;\n    let totalCount = 0;\n\n    for (const point of calibrationCurve) {\n      const reliabilityScore = 1 - Math.abs(point.prob_pred - point.prob_true);\n      reliability += reliabilityScore * point.count;\n      totalCount += point.count;\n    }\n\n    return totalCount > 0 ? reliability / totalCount : null;\n  };\n\n  useEffect(() => {\n    if (token) {\n      fetchCalibration();\n    }\n  }, [token]);\n\n  return {\n    calibration: state.calibration,\n    loading: state.loading,\n    error: state.error,\n    fetchCalibration,\n    getLatestCalibration,\n    getCalibrationHistory,\n    getCalibrationTrend,\n    getCalibrationError,\n    getCalibrationReliability,\n  };\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useModelPerformance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useNetworkStatus.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useNetworkStatus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useNetworkStatus.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useNotificationCenter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useNotificationCenter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useNotificationCenter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePerformance.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePerformance.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePerformance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePrediction.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePrediction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePrediction.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePredictionService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePredictionService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePredictionService.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has missing dependencies: 'errorHandler', 'eventBus', 'modelVersioning', and 'performanceMonitor'. Either include them or remove the dependency array.","line":76,"column":6,"nodeType":"ArrayExpression","endLine":76,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [errorHandler, eventBus, modelVersioning, performanceMonitor]","fix":{"range":[2441,2443],"text":"[errorHandler, eventBus, modelVersioning, performanceMonitor]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has missing dependencies: 'errorHandler', 'eventBus', and 'performanceMonitor'. Either include them or remove the dependency array.","line":124,"column":5,"nodeType":"ArrayExpression","endLine":124,"endColumn":7,"suggestions":[{"desc":"Update the dependencies array to be: [errorHandler, eventBus, performanceMonitor]","fix":{"range":[3941,3943],"text":"[errorHandler, eventBus, performanceMonitor]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useCallback } from 'react';\nimport { Prediction, RiskProfile } from '../types/core';\nimport { EventBus } from '../unified/EventBus';\nimport { ErrorHandler } from '../core/ErrorHandler';\nimport { PerformanceMonitor } from '../unified/PerformanceMonitor';\nimport { ModelVersioning } from '../unified/ModelVersioning';\n\nexport const usePredictionService = () => {\n  const eventBus = EventBus.getInstance();\n  const errorHandler = ErrorHandler.getInstance();\n  const performanceMonitor = PerformanceMonitor.getInstance();\n  const modelVersioning = ModelVersioning.getInstance();\n\n  const getPredictions = useCallback(async (riskProfile: RiskProfile): Promise<Prediction[]> => {\n    const startTime = performance.now();\n    try {\n      // Get current model version\n      const currentModel = modelVersioning.getCurrentVersion();\n\n      // Emit event to request predictions\n      eventBus.emit('prediction:request', {\n        riskProfile,\n        modelVersion: currentModel.version,\n        timestamp: Date.now(),\n      });\n\n      // Wait for predictions response\n      const response = await new Promise<Prediction[]>((resolve, reject) => {\n        const timeout = setTimeout(() => {\n          reject(new Error('Prediction request timed out'));\n        }, 5000);\n\n        const handler = (predictions: Prediction[]) => {\n          clearTimeout(timeout);\n          eventBus.off('prediction:response', handler);\n          resolve(predictions);\n        };\n\n        eventBus.on('prediction:response', handler);\n      });\n\n      performanceMonitor.updateComponentMetrics('prediction-service', {\n        renderCount: 1,\n        renderTime: performance.now() - startTime,\n        memoryUsage: JSON.stringify(response).length,\n        errorCount: 0,\n        lastUpdate: Date.now(),\n      });\n\n      return response;\n    } catch (error) {\n      const err = error as Error;\n      errorHandler.handleError(err, {\n        code: 'PREDICTION_REQUEST_ERROR',\n        category: 'BUSINESS',\n        severity: 'HIGH',\n        component: 'PredictionService',\n        retryable: true,\n        recoveryStrategy: {\n          type: 'retry',\n          maxRetries: 3,\n          timeout: 1000,\n        },\n      });\n\n      performanceMonitor.updateComponentMetrics('prediction-service', {\n        renderCount: 0,\n        renderTime: 0,\n        memoryUsage: 0,\n        errorCount: 1,\n        lastUpdate: Date.now(),\n      });\n\n      throw err;\n    }\n  }, []);\n\n  const subscribeToUpdates = useCallback(\n    (onUpdate: (prediction: Prediction) => void, onError: (error: Error) => void) => {\n      const startTime = performance.now();\n\n      const handleUpdate = (prediction: Prediction) => {\n        try {\n          onUpdate(prediction);\n          performanceMonitor.updateComponentMetrics('prediction-service', {\n            renderCount: 1,\n            renderTime: performance.now() - startTime,\n            memoryUsage: JSON.stringify(prediction).length,\n            errorCount: 0,\n            lastUpdate: Date.now(),\n          });\n        } catch (error) {\n          const err = error as Error;\n          onError(err);\n          errorHandler.handleError(err, {\n            code: 'PREDICTION_UPDATE_ERROR',\n            category: 'BUSINESS',\n            severity: 'MEDIUM',\n            component: 'PredictionService',\n            retryable: true,\n          });\n        }\n      };\n\n      const handleError = (error: Error) => {\n        onError(error);\n        errorHandler.handleError(error, {\n          code: 'PREDICTION_SUBSCRIPTION_ERROR',\n          category: 'BUSINESS',\n          severity: 'MEDIUM',\n          component: 'PredictionService',\n          retryable: true,\n        });\n      };\n\n      eventBus.on('prediction:update', handleUpdate);\n      eventBus.on('prediction:error', handleError);\n\n      return () => {\n        eventBus.off('prediction:update', handleUpdate);\n        eventBus.off('prediction:error', handleError);\n      };\n    },\n    []\n  );\n\n  return {\n    getPredictions,\n    subscribeToUpdates,\n  };\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePredictions.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePredictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePredictions.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has an unnecessary dependency: 'webSocketService'. Either exclude it or remove the dependency array. Outer scope values like 'webSocketService' aren't valid dependencies because mutating them doesn't re-render the component.","line":138,"column":6,"nodeType":"ArrayExpression","endLine":138,"endColumn":61,"suggestions":[{"desc":"Update the dependencies array to be: [loadPredictions, processModelOutput]","fix":{"range":[4070,4125],"text":"[loadPredictions, processModelOutput]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useCallback } from 'react';\nimport { UnifiedServiceRegistry } from '../services/unified/UnifiedServiceRegistry';\nimport { UnifiedPredictionService } from '../services/unified/UnifiedPredictionService';\nimport { UnifiedAnalyticsService } from '../services/unified/UnifiedAnalyticsService';\nimport { webSocketManager } from '../services/unified/WebSocketManager';\nimport type { PredictionStreamPayload } from '../../shared/webSocket';\n\nexport interface PredictionModelOutput {\n  confidenceScore: number;\n  confidenceColor: 'success' | 'warning' | 'danger';\n  topFeatures: Array<{\n    name: string;\n    value: number;\n    impact: number;\n  }>;\n  modelMeta: {\n    type: string;\n    version: string;\n    lastUpdated: number;\n  };\n}\n\nexport interface PredictionState {\n  predictions: Array<{\n    id: string;\n    event: string;\n    market: string;\n    selection: string;\n    modelOutput: PredictionModelOutput;\n    timestamp: number;\n  }>;\n  loading: boolean;\n  error: string | null;\n}\n\nexport const usePredictions = () => {\n  const serviceRegistry = UnifiedServiceRegistry.getInstance();\n  const predictionService = serviceRegistry.getService<UnifiedPredictionService>('prediction');\n  const analyticsService = serviceRegistry.getService<UnifiedAnalyticsService>('analytics');\n\n\n  const [state, setState] = useState<PredictionState>({\n    predictions: [],\n    loading: true,\n    error: null,\n  });\n\n  const getConfidenceColor = useCallback((score: number): 'success' | 'warning' | 'danger' => {\n    if (score >= 0.8) return 'success';\n    if (score >= 0.6) return 'warning';\n    return 'danger';\n  }, []);\n\n  const processModelOutput = useCallback(\n    (rawOutput: any): PredictionModelOutput => {\n      return {\n        confidenceScore: rawOutput.confidence,\n        confidenceColor: getConfidenceColor(rawOutput.confidence),\n        topFeatures: rawOutput.features.map((f: any) => ({\n          name: f.name,\n          value: f.value,\n          impact: f.impact,\n        })),\n        modelMeta: {\n          type: rawOutput.modelType || 'default',\n          version: rawOutput.modelVersion || '1.0.0',\n          lastUpdated: rawOutput.timestamp || Date.now(),\n        },\n      };\n    },\n    [getConfidenceColor]\n  );\n\n  const loadPredictions = useCallback(async () => {\n    try {\n      setState(prev => ({ ...prev, loading: true, error: null }));\n      const predictions = await predictionService.getPredictions();\n\n      const processedPredictions = predictions.map(pred => ({\n        id: pred.id,\n        event: pred.event,\n        market: pred.market,\n        selection: pred.selection,\n        modelOutput: processModelOutput(pred),\n        timestamp: pred.timestamp,\n      }));\n\n      setState({\n        predictions: processedPredictions,\n        loading: false,\n        error: null,\n      });\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        loading: false,\n        error: 'Failed to load predictions',\n      }));\n    }\n  }, [predictionService, processModelOutput]);\n\n  useEffect(() => {\n    loadPredictions();\n\n    // Setup WebSocket connection for real-time updates\n    let unsub: (() => void) | undefined;\n    let isMounted = true;\n    const reconnectTimeout: NodeJS.Timeout | null = null;\n    const reconnectAttempts = 0;\n    const maxReconnectAttempts = 5;\n    const reconnectInterval = 3000;\n\n    function handlePredictionUpdate(data: PredictionStreamPayload) {\n      if (!isMounted) return;\n      setState(prev => ({\n        ...prev,\n        predictions: [\n          {\n            id: data.id,\n            event: data.eventName,\n            market: data.betType,\n            selection: data.selection || '',\n            modelOutput: processModelOutput(data),\n            timestamp: Date.parse(data.timestamp),\n          },\n          ...prev.predictions,\n        ],\n      }));\n    }\n\n    // Subscribe to predictions event\n    webSocketManager.on('predictions', handlePredictionUpdate);\n\n    return () => {\n      isMounted = false;\n      webSocketManager.off('predictions', handlePredictionUpdate);\n    };\n  }, [loadPredictions, webSocketService, processModelOutput]);\n\n  const getPredictionById = useCallback(\n    (id: string) => {\n      return state.predictions.find(p => p.id === id);\n    },\n    [state.predictions]\n  );\n\n  const getRecentPredictions = useCallback(\n    (limit: number = 5) => {\n      return state.predictions.slice(0, limit);\n    },\n    [state.predictions]\n  );\n\n  return {\n    ...state,\n    loadPredictions,\n    getPredictionById,\n    getRecentPredictions,\n  };\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePrizePicksLiveData.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePrizePicksLiveData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\usePrizePicksLiveData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useProps.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useProps.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useProps.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useQueryBuilder.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useQueryBuilder.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useQueryBuilder.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'mutate'. Either include it or remove the dependency array.","line":160,"column":6,"nodeType":"ArrayExpression","endLine":160,"endColumn":32,"suggestions":[{"desc":"Update the dependencies array to be: [enabled, mutate]","fix":{"range":[3506,3532],"text":"[enabled, mutate]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","line":160,"column":7,"nodeType":"SpreadElement","endLine":160,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useApiRequest } from './useApiRequest';\nimport { useState, useCallback, useRef, useEffect } from 'react';\n\n\n\ninterface QueryConfig<T> {\n  url: string;\n  params?: Record<string, any>;\n  transform?: (data: any) => T;\n  dependencies?: any[];\n  enabled?: boolean;\n  refetchInterval?: number;\n  onSuccess?: (data: T) => void;\n  onError?: (error: Error) => void;\n}\n\ninterface QueryState<T> {\n  data: T | null;\n  error: Error | null;\n  isLoading: boolean;\n  isValidating: boolean;\n  timestamp: number | null;\n}\n\ninterface QueryResult<T> extends QueryState<T> {\n  refetch: () => Promise<void>;\n  setData: (data: T) => void;\n  updateData: (updater: (prev: T | null) => T) => void;\n  reset: () => void;\n}\n\ninterface QueryBuilderOptions {\n  cacheTime?: number;\n  retries?: number;\n  retryDelay?: number;\n  suspense?: boolean;\n}\n\nexport function useQueryBuilder<T>(\n  config: QueryConfig<T>,\n  options: QueryBuilderOptions = {}\n): QueryResult<T> {\n  const {\n    url,\n    params,\n    transform,\n    dependencies = [],\n    enabled = true,\n    refetchInterval,\n    onSuccess,\n    onError\n  } = config;\n\n  const queryUrl = useCallback(() => {\n    const searchParams = new URLSearchParams();\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value != null) {\n          searchParams.append(key, String(value));\n        }\n      });\n    }\n    const queryString = searchParams.toString();\n    return queryString ? `${url}?${queryString}` : url;\n  }, [url, params]);\n\n  const {\n    data: rawData,\n    error,\n    isLoading,\n    isValidating,\n    mutate\n  } = useApiRequest<any>(queryUrl(), {\n    cacheTime: options.cacheTime,\n    retries: options.retries,\n    retryDelay: options.retryDelay,\n    enabled: enabled,\n    onError\n  });\n\n  const [state, setState] = useState<QueryState<T>>({\n    data: null,\n    error: null,\n    isLoading: true,\n    isValidating: false,\n    timestamp: null\n  });\n\n  const transformData = useCallback(\n    (data: any): T => {\n      if (transform) {\n        try {\n          return transform(data);\n        } catch (error) {\n          console.error('Error transforming data:', error);\n          throw error;\n        }\n      }\n      return data;\n    },\n    [transform]\n  );\n\n  // Update state when raw data changes\n  useEffect(() => {\n    if (rawData) {\n      try {\n        const transformedData = transformData(rawData);\n        setState(prev => ({\n          ...prev,\n          data: transformedData,\n          error: null,\n          isLoading: false,\n          isValidating: false,\n          timestamp: Date.now()\n        }));\n        onSuccess?.(transformedData);\n      } catch (error) {\n        if (error instanceof Error) {\n          setState(prev => ({\n            ...prev,\n            error,\n            isLoading: false,\n            isValidating: false\n          }));\n          onError?.(error);\n        }\n      }\n    }\n  }, [rawData, transformData, onSuccess, onError]);\n\n  // Handle error state\n  useEffect(() => {\n    if (error) {\n      setState(prev => ({\n        ...prev,\n        error,\n        isLoading: false,\n        isValidating: false\n      }));\n    }\n  }, [error]);\n\n  // Setup refetch interval\n  useEffect(() => {\n    if (!refetchInterval || !enabled) return;\n\n    const intervalId = setInterval(() => {\n      mutate();\n    }, refetchInterval);\n\n    return () => clearInterval(intervalId);\n  }, [refetchInterval, enabled, mutate]);\n\n  // Refetch when dependencies change\n  useEffect(() => {\n    if (enabled) {\n      mutate();\n    }\n  }, [...dependencies, enabled]);\n\n  const setData = useCallback((data: T) => {\n    setState(prev => ({\n      ...prev,\n      data,\n      error: null,\n      timestamp: Date.now()\n    }));\n  }, []);\n\n  const updateData = useCallback((updater: (prev: T | null) => T) => {\n    setState(prev => ({\n      ...prev,\n      data: updater(prev.data),\n      timestamp: Date.now()\n    }));\n  }, []);\n\n  const reset = useCallback(() => {\n    setState({\n      data: null,\n      error: null,\n      isLoading: true,\n      isValidating: false,\n      timestamp: null\n    });\n  }, []);\n\n  return {\n    ...state,\n    refetch: mutate,\n    setData,\n    updateData,\n    reset\n  };\n}\n\n// Example usage:\n/*\ninterface BetData {\n  id: string;\n  odds: number;\n  line: number;\n  timestamp: string;\n}\n\nfunction BetsList() {\n  const {\n    data: bets,\n    isLoading,\n    error,\n    refetch,\n    updateData\n  } = useQueryBuilder<BetData[]>({\n    url: '/api/bets',\n    params: {\n      sport: 'NFL',\n      status: 'active'\n    },\n    transform: (data) => data.map((bet: any) => ({\n      ...bet,\n      timestamp: new Date(bet.timestamp).toISOString()\n    })),\n    dependencies: [], // Empty array means only fetch once\n    refetchInterval: 30000, // Refetch every 30 seconds\n    onSuccess: (data) => {\n      \n    },\n    onError: (error) => {\n      console.error('Failed to load bets:', error);\n    }\n  }, {\n    cacheTime: 5 * 60 * 1000, // Cache for 5 minutes\n    retries: 3\n  });\n\n  const updateBet = (id: string, updates: Partial<BetData>) => {\n    updateData((prev) => {\n      if (!prev) return prev;\n      return prev.map(bet => \n        bet.id === id ? { ...bet, ...updates } : bet\n      );\n    });\n  };\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error.message}</div>;\n  if (!bets) return null;\n\n  return (\n    <div>\n      <button onClick={() => refetch()}>Refresh</button>\n      {bets.map(bet => (\n        <BetCard\n          key={bet.id}\n          bet={bet}\n          onUpdate={(updates) => updateBet(bet.id, updates)}\n        />\n      ))}\n    </div>\n  );\n}\n*/ ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRealDataValidation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRealDataValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRealtimeData.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRealtimeData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRealtimeData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRealtimePredictions.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRealtimePredictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRealtimePredictions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRiskProfile.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRiskProfile.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useRiskProfile.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'errorHandler' and 'riskProfileService'. Either include them or remove the dependency array.","line":82,"column":6,"nodeType":"ArrayExpression","endLine":82,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [errorHandler, riskProfileService]","fix":{"range":[3133,3135],"text":"[errorHandler, riskProfileService]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'eventBus' and 'riskProfileService'. Either include them or remove the dependency array.","line":110,"column":6,"nodeType":"ArrayExpression","endLine":110,"endColumn":25,"suggestions":[{"desc":"Update the dependencies array to be: [activeProfile?.id, eventBus, riskProfileService]","fix":{"range":[4121,4140],"text":"[activeProfile?.id, eventBus, riskProfileService]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has missing dependencies: 'errorHandler', 'performanceMonitor', and 'riskProfileService'. Either include them or remove the dependency array.","line":124,"column":6,"nodeType":"ArrayExpression","endLine":124,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [errorHandler, performanceMonitor, riskProfileService]","fix":{"range":[4587,4589],"text":"[errorHandler, performanceMonitor, riskProfileService]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has missing dependencies: 'errorHandler', 'performanceMonitor', and 'riskProfileService'. Either include them or remove the dependency array.","line":138,"column":6,"nodeType":"ArrayExpression","endLine":138,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [errorHandler, performanceMonitor, riskProfileService]","fix":{"range":[5051,5053],"text":"[errorHandler, performanceMonitor, riskProfileService]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useCallback, useEffect } from 'react';\nimport { RiskProfile } from '../types/core';\nimport { EventBus } from '../unified/EventBus';\nimport { ErrorHandler } from '../unified/ErrorHandler';\nimport { PerformanceMonitor } from '../unified/PerformanceMonitor';\nimport { RiskProfileService } from '../services/risk/RiskProfileService';\n\nexport function useRiskProfile() {\n  // const [riskProfile, setRiskProfile] = useState<RiskProfile>(); // This state is derived from activeProfile from the service\n  const [activeProfile, setActiveProfile] = useState<RiskProfile | null>(null);\n  const [profiles, setProfiles] = useState<RiskProfile[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  const validateBet = useCallback(\n    (bet: {\n      stake: number;\n      confidence: number;\n      kellyFraction: number; // Retaining for now, though not used in this iteration\n      sport: string; // Retaining for now\n      market: string; // Retaining for now\n      eventId: string; // Retaining for now\n    }) => {\n      const errors: string[] = [];\n\n      if (!activeProfile) {\n        errors.push('No active risk profile found. Cannot validate bet.');\n        return { isValid: false, errors };\n      }\n\n      // Assuming RiskProfile has maxStake and confidenceThreshold from core.ts\n      // These might be optional, so handle potential undefined values\n      const { maxStake, confidenceThreshold } = activeProfile;\n\n      if (typeof maxStake === 'number' && bet.stake > maxStake) {\n        errors.push(`Bet stake (${bet.stake}) exceeds the maximum allowed stake (${maxStake}).`);\n      }\n\n      if (typeof confidenceThreshold === 'number' && bet.confidence < confidenceThreshold) {\n        errors.push(\n          `Bet confidence (${bet.confidence}) is below the minimum required threshold (${confidenceThreshold}).`\n        );\n      }\n\n      // TODO: Add more validation rules based on other RiskProfile properties like:\n      // - activeProfile.allowedSports\n      // - activeProfile.allowedMarkets\n      // - activeProfile.betLimits (e.g., maxDailyLoss, maxExposure)\n      // - activeProfile.kellyMultiplierSettings (related to bet.kellyFraction)\n\n      return { isValid: errors.length === 0, errors };\n    },\n    [activeProfile]\n  );\n\n  const riskProfileService = RiskProfileService.getInstance();\n  const eventBus = EventBus.getInstance();\n  const errorHandler = ErrorHandler.getInstance();\n  const performanceMonitor = PerformanceMonitor.getInstance();\n\n  // Load initial profiles\n  useEffect(() => {\n    const loadProfiles = async () => {\n      try {\n        setIsLoading(true);\n        const allProfiles = riskProfileService.getAllProfiles();\n        const currentProfile = riskProfileService.getActiveProfile();\n\n        setProfiles(allProfiles);\n        setActiveProfile(currentProfile);\n        setError(null);\n      } catch (err) {\n        const error = err as Error;\n        setError(error);\n        errorHandler.handleError(error, 'load_risk_profiles');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadProfiles();\n  }, []);\n\n  // Subscribe to profile updates\n  useEffect(() => {\n    const handleProfileUpdate = (data: { profileId: string }) => {\n      const updatedProfile = riskProfileService.getProfile(data.profileId);\n      if (updatedProfile) {\n        setProfiles(prev => prev.map(p => (p.id === updatedProfile.id ? updatedProfile : p)));\n        if (activeProfile?.id === updatedProfile.id) {\n          setActiveProfile(updatedProfile);\n        }\n      }\n    };\n\n    const handleProfileActivation = (data: { profileId: string }) => {\n      const newActiveProfile = riskProfileService.getProfile(data.profileId);\n      if (newActiveProfile) {\n        setActiveProfile(newActiveProfile);\n      }\n    };\n\n    eventBus.on('risk:profile:updated', handleProfileUpdate);\n    eventBus.on('risk:profile:activated', handleProfileActivation);\n\n    return () => {\n      eventBus.off('risk:profile:updated', handleProfileUpdate);\n      eventBus.off('risk:profile:activated', handleProfileActivation);\n    };\n  }, [activeProfile?.id]);\n\n  const updateProfile = useCallback(async (profile: RiskProfile) => {\n    try {\n      const startTime = Date.now();\n      riskProfileService.updateProfile(profile);\n      performanceMonitor.trackMetric('profile_update_duration', Date.now() - startTime);\n      return true;\n    } catch (err) {\n      const error = err as Error;\n      setError(error);\n      errorHandler.handleError(error, 'update_risk_profile');\n      return false;\n    }\n  }, []);\n\n  const setActiveProfileById = useCallback(async (profileId: string) => {\n    try {\n      const startTime = Date.now();\n      riskProfileService.setActiveProfile(profileId);\n      performanceMonitor.trackMetric('profile_activation_duration', Date.now() - startTime);\n      return true;\n    } catch (err) {\n      const error = err as Error;\n      setError(error);\n      errorHandler.handleError(error, 'activate_risk_profile');\n      return false;\n    }\n  }, []);\n\n  return {\n    activeProfile,\n    profiles,\n    isLoading,\n    error,\n    updateProfile,\n    setActiveProfile: setActiveProfileById,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useScrollPosition.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useScrollPosition.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useScrollPosition.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSettings.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSettings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSettings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useShapData.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useShapData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useShapData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSimpleLogger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSmartAlerts.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSmartAlerts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSmartAlerts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSportsFilter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSportsFilter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSportsFilter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSportsNews.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSportsNews.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useSportsNews.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStateMachine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStateMachine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStateMachine.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","line":117,"column":6,"nodeType":"ArrayExpression","endLine":117,"endColumn":23,"suggestions":[{"desc":"Update the dependencies array to be: [context, initial, states]","fix":{"range":[3161,3178],"text":"[context, initial, states]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useCallback, useRef, useEffect } from 'react';\n\n\n\ntype StateConfig<TState extends string, TEvent extends string> = {\n  [K in TState]: {\n    on?: {\n      [E in TEvent]?: {\n        target: TState;\n        action?: (context: unknown) => void;\n        guard?: (context: unknown) => boolean;\n      };\n    };\n    onEnter?: (context: unknown) => void;\n    onExit?: (context: unknown) => void;\n  };\n};\n\ninterface StateMachineOptions<TState extends string, TEvent extends string> {\n  initial: TState;\n  states: StateConfig<TState, TEvent>;\n  context?: unknown;\n  onTransition?: (from: TState, to: TState, event: TEvent) => void;\n}\n\ninterface StateMachineResult<TState extends string, TEvent extends string> {\n  state: TState;\n  context: unknown;\n  send: (event: TEvent) => void;\n  can: (event: TEvent) => boolean;\n  matches: (state: TState) => boolean;\n  history: Array<{ state: TState; event: TEvent | null }>;\n}\n\nexport function useStateMachine<TState extends string, TEvent extends string>({\n  initial,\n  states,\n  context: initialContext = {},\n  onTransition\n}: StateMachineOptions<TState, TEvent>): StateMachineResult<TState, TEvent> {\n  const [currentState, setCurrentState] = useState<TState>(initial);\n  const [context, setContext] = useState(initialContext);\n  const historyRef = useRef<Array<{ state: TState; event: TEvent | null }>>([\n    { state: initial, event: null }\n  ]);\n\n  const transition = useCallback(\n    (event: TEvent) => {\n      const stateConfig = states[currentState];\n      const eventConfig = stateConfig.on?.[event];\n\n      if (!eventConfig) {\n        console.warn(\n          `No transition defined for event \"${event}\" in state \"${currentState}\"`\n        );\n        return false;\n      }\n\n      if (eventConfig.guard && !eventConfig.guard(context)) {\n        console.warn(\n          `Transition guard prevented event \"${event}\" in state \"${currentState}\"`\n        );\n        return false;\n      }\n\n      // Execute exit action of current state\n      stateConfig.onExit?.(context);\n\n      // Execute transition action\n      if (eventConfig.action) {\n        eventConfig.action(context);\n      }\n\n      const nextState = eventConfig.target;\n\n      // Execute enter action of next state\n      states[nextState].onEnter?.(context);\n\n      // Update state\n      setCurrentState(nextState);\n      historyRef.current.push({ state: nextState, event });\n\n      // Notify transition listeners\n      onTransition?.(currentState, nextState, event);\n\n      return true;\n    },\n    [currentState, states, context, onTransition]\n  );\n\n  const can = useCallback(\n    (event: TEvent): boolean => {\n      const stateConfig = states[currentState];\n      const eventConfig = stateConfig.on?.[event];\n\n      if (!eventConfig) {\n        return false;\n      }\n\n      if (eventConfig.guard && !eventConfig.guard(context)) {\n        return false;\n      }\n\n      return true;\n    },\n    [currentState, states, context]\n  );\n\n  const matches = useCallback(\n    (state: TState): boolean => currentState === state,\n    [currentState]\n  );\n\n  useEffect(() => {\n    // Execute initial state's enter action\n    states[initial].onEnter?.(context);\n  }, [initial, states]);\n\n  return {\n    state: currentState,\n    context,\n    send: transition,\n    can,\n    matches,\n    history: historyRef.current\n  };\n}\n\n// Example usage:\n/*\n// Define your states and events as string literals\ntype BetState = 'idle' | 'selecting' | 'reviewing' | 'confirming' | 'submitted';\ntype BetEvent = 'SELECT' | 'REVIEW' | 'CONFIRM' | 'SUBMIT' | 'RESET';\n\nfunction BettingForm() {\n  const machine = useStateMachine<BetState, BetEvent>({\n    initial: 'idle',\n    states: {\n      idle: {\n        on: {\n          SELECT: { target: 'selecting' }\n        },\n        onEnter: (context) => {\n          // Reset form data\n          context.selectedBets = [];\n        }\n      },\n      selecting: {\n        on: {\n          REVIEW: {\n            target: 'reviewing',\n            guard: (context) => context.selectedBets.length > 0\n          },\n          RESET: { target: 'idle' }\n        }\n      },\n      reviewing: {\n        on: {\n          CONFIRM: { target: 'confirming' },\n          SELECT: { target: 'selecting' }\n        }\n      },\n      confirming: {\n        on: {\n          SUBMIT: {\n            target: 'submitted',\n            action: (context) => {\n              // Submit bets to API\n              submitBets(context.selectedBets);\n            }\n          },\n          REVIEW: { target: 'reviewing' }\n        }\n      },\n      submitted: {\n        on: {\n          RESET: { target: 'idle' }\n        },\n        onEnter: (context) => {\n          // Show success message\n          toast.success('Bets submitted successfully!');\n        }\n      }\n    },\n    context: {\n      selectedBets: [],\n      totalStake: 0\n    },\n    onTransition: (from, to, event) => {\n      \n    }\n  });\n\n  return (\n    <div>\n      <div>Current State: {machine.state}</div>\n      {machine.matches('idle') && (\n        <button\n          onClick={() => machine.send('SELECT')}\n          disabled={!machine.can('SELECT')}\n        >\n          Start Betting\n        </button>\n      )}\n      {machine.matches('selecting') && (\n        <>\n          {/* Bet selection form *//*}\n          <button\n            onClick={() => machine.send('REVIEW')}\n            disabled={!machine.can('REVIEW')}\n          >\n            Review Bets\n          </button>\n        </>\n      )}\n      {/* ... other state-specific UI *//*}\n    </div>\n  );\n}\n*/ ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStorage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStorage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStorage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStore.ts","messages":[{"ruleId":"no-useless-catch","severity":2,"message":"Unnecessary try/catch wrapper.","line":76,"column":11,"nodeType":"TryStatement","messageId":"unnecessaryCatch","endLine":92,"endColumn":12},{"ruleId":"no-useless-catch","severity":2,"message":"Unnecessary try/catch wrapper.","line":96,"column":11,"nodeType":"TryStatement","messageId":"unnecessaryCatch","endLine":112,"endColumn":12}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { PlayerProp, Entry, PerformanceMetrics, BettingOpportunity, Alert, BetRecord } from '../types/core';\nimport { ProcessedPrizePicksProp } from '../types/prizePicks';\nimport { create } from 'zustand';\nimport { devtools } from 'zustand/middleware';\nimport { persist } from 'zustand/middleware';\n\n\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'user' | 'admin';\n}\n\ninterface AppState {\n  // Auth\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n\n  // Props and Entries\n  props: ProcessedPrizePicksProp[];\n  selectedProps: string[];\n  entries: Entry[];\n  \n  // Performance and Analytics\n  metrics: PerformanceMetrics | null;\n  opportunities: BettingOpportunity[];\n  alerts: Alert[];\n  \n  // UI State\n  darkMode: boolean;\n  sidebarOpen: boolean;\n  activeModal: string | null;\n  \n  // Actions\n  setProps: (props: ProcessedPrizePicksProp[]) => void;\n  togglePropSelection: (propId: string) => void;\n  addEntry: (entry: Entry) => void;\n  updateEntry: (entryId: string, updates: Partial<Entry>) => void;\n  setMetrics: (metrics: PerformanceMetrics) => void;\n  addOpportunity: (opportunity: BettingOpportunity) => void;\n  removeOpportunity: (opportunityId: string) => void;\n  addAlert: (alert: Alert) => void;\n  removeAlert: (alertId: string) => void;\n  toggleDarkMode: () => void;\n  toggleSidebar: () => void;\n  setActiveModal: (modalId: string | null) => void;\n  bets: BetRecord[];\n  addBet: (bet: BetRecord) => void;\n  updateBet: (betId: string, updates: Partial<BetRecord>) => void;\n  removeBet: (betId: string) => void;\n}\n\nconst useStore = create<AppState>()(\n  devtools(\n    persist(\n      (set) => ({\n        // Initial State\n        user: null,\n        props: [],\n        selectedProps: [],\n        entries: [],\n        metrics: null,\n        opportunities: [],\n        alerts: [],\n        darkMode: false,\n        sidebarOpen: true,\n        activeModal: null,\n        bets: [],\n\n        // Auth Actions\n        login: async (email: string, password: string) => {\n          try {\n            // TODO: Replace with actual API call\n            const response = await fetch('/api/auth/login', {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ email, password })\n            });\n            \n            if (!response.ok) {\n              throw new Error('Invalid credentials');\n            }\n            \n            const user = await response.json();\n            set({ user });\n          } catch (error) {\n            throw error;\n          }\n        },\n\n        register: async (name: string, email: string, password: string) => {\n          try {\n            // TODO: Replace with actual API call\n            const response = await fetch('/api/auth/register', {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ name, email, password })\n            });\n            \n            if (!response.ok) {\n              throw new Error('Registration failed');\n            }\n            \n            const user = await response.json();\n            set({ user });\n          } catch (error) {\n            throw error;\n          }\n        },\n\n        logout: () => set({ user: null }),\n\n        // Actions\n        setProps: (props) => set({ props }),\n        \n        togglePropSelection: (propId) =>\n          set((state) => ({\n            selectedProps: state.selectedProps.includes(propId)\n              ? state.selectedProps.filter(id => id !== propId)\n              : [...state.selectedProps, propId]\n          })),\n        \n        addEntry: (entry) =>\n          set((state) => ({\n            entries: [...state.entries, entry]\n          })),\n        \n        updateEntry: (entryId, updates) =>\n          set((state) => ({\n            entries: state.entries.map(entry =>\n              entry.id === entryId ? { ...entry, ...updates } : entry\n            )\n          })),\n        \n        setMetrics: (metrics) => set({ metrics }),\n        \n        addOpportunity: (opportunity) =>\n          set((state) => ({\n            opportunities: [...state.opportunities, opportunity]\n          })),\n        \n        removeOpportunity: (opportunityId) =>\n          set((state) => ({\n            opportunities: state.opportunities.filter(opp => opp.id !== opportunityId)\n          })),\n        \n        addAlert: (alert) =>\n          set((state) => ({\n            alerts: [...state.alerts, alert]\n          })),\n        \n        removeAlert: (alertId) =>\n          set((state) => ({\n            alerts: state.alerts.filter(alert => alert.id !== alertId)\n          })),\n        \n        toggleDarkMode: () =>\n          set((state) => ({\n            darkMode: !state.darkMode\n          })),\n        \n        toggleSidebar: () =>\n          set((state) => ({\n            sidebarOpen: !state.sidebarOpen\n          })),\n        \n        setActiveModal: (modalId) => set({ activeModal: modalId }),\n        \n        addBet: (bet) => set((state) => ({\n          bets: [...state.bets, bet]\n        })),\n        \n        updateBet: (betId, updates) => set((state) => ({\n          bets: state.bets.map(bet => \n            bet.id === betId ? { ...bet, ...updates } : bet\n          )\n        })),\n        \n        removeBet: (betId) => set((state) => ({\n          bets: state.bets.filter(bet => bet.id !== betId)\n        })),\n      }),\n      {\n        name: 'sports-betting-store',\n        partialize: (state) => ({\n          user: state.user,\n          props: state.props,\n          selectedProps: state.selectedProps,\n          entries: state.entries,\n          metrics: state.metrics,\n          opportunities: state.opportunities,\n          alerts: state.alerts,\n          darkMode: state.darkMode,\n          sidebarOpen: state.sidebarOpen,\n          activeModal: state.activeModal,\n          bets: state.bets\n        })\n      }\n    )\n  )\n);\n\nexport default useStore; ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStrategyEngineData.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStrategyEngineData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useStrategyEngineData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useTheme.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useTheme.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useThemeStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useThemeStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useThemeStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useTimeSeries.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useTimeSeries.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useTimeSeries.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchTimeSeries'. Either include it or remove the dependency array.","line":138,"column":6,"nodeType":"ArrayExpression","endLine":138,"endColumn":13,"suggestions":[{"desc":"Update the dependencies array to be: [fetchTimeSeries, token]","fix":{"range":[3679,3686],"text":"[fetchTimeSeries, token]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { useAuth } from './useAuth';\n\ninterface TimeSeriesPoint {\n  timestamp: string;\n  value: number;\n  forecast?: number;\n  lower_bound?: number;\n  upper_bound?: number;\n  feature?: string;\n}\n\ninterface TimeSeriesState {\n  timeSeries: TimeSeriesPoint[];\n  loading: boolean;\n  error: string | null;\n}\n\nexport const useTimeSeries = () => {\n  const [state, setState] = useState<TimeSeriesState>({\n    timeSeries: [],\n    loading: true,\n    error: null,\n  });\n\n  const { token } = useAuth();\n\n  const fetchTimeSeries = async () => {\n    try {\n      const response = await fetch('/api/predictions/time-series', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch time series data');\n      }\n\n      const timeSeries = await response.json();\n      setState(prev => ({\n        ...prev,\n        timeSeries,\n        loading: false,\n      }));\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'An error occurred',\n        loading: false,\n      }));\n    }\n  };\n\n  const getLatestTimeSeries = () => {\n    if (state.timeSeries.length === 0) return null;\n    return state.timeSeries[state.timeSeries.length - 1];\n  };\n\n  const getTimeSeriesHistory = (feature?: string) => {\n    return state.timeSeries\n      .filter(ts => !feature || ts.feature === feature)\n      .sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n  };\n\n  const getTimeSeriesTrend = (feature?: string) => {\n    const history = getTimeSeriesHistory(feature);\n    return history.map(h => ({\n      timestamp: h.timestamp,\n      value: h.value,\n      forecast: h.forecast,\n      lower_bound: h.lower_bound,\n      upper_bound: h.upper_bound,\n    }));\n  };\n\n  const getTimeSeriesFeatures = () => {\n    const features = new Set<string>();\n    state.timeSeries.forEach(ts => {\n      if (ts.feature) features.add(ts.feature);\n    });\n    return Array.from(features);\n  };\n\n  const getTimeSeriesSummary = () => {\n    const features = getTimeSeriesFeatures();\n    const summary = {\n      total_points: state.timeSeries.length,\n      features: features.length,\n      time_range: {\n        start: state.timeSeries[0]?.timestamp,\n        end: state.timeSeries[state.timeSeries.length - 1]?.timestamp,\n      },\n      feature_stats: features.map(feature => {\n        const points = state.timeSeries.filter(ts => ts.feature === feature);\n        const values = points.map(p => p.value);\n        return {\n          feature,\n          count: points.length,\n          mean: values.reduce((a, b) => a + b, 0) / values.length,\n          min: Math.min(...values),\n          max: Math.max(...values),\n        };\n      }),\n    };\n    return summary;\n  };\n\n  const getForecastAccuracy = (feature?: string) => {\n    const history = getTimeSeriesHistory(feature);\n    const forecastPoints = history.filter(h => h.forecast !== undefined);\n\n    if (forecastPoints.length === 0) return null;\n\n    let totalError = 0;\n    let totalPoints = 0;\n\n    for (const point of forecastPoints) {\n      if (point.forecast !== undefined) {\n        const error = Math.abs(point.value - point.forecast);\n        totalError += error;\n        totalPoints++;\n      }\n    }\n\n    return totalPoints > 0 ? totalError / totalPoints : null;\n  };\n\n  const getConfidenceIntervals = (feature?: string) => {\n    const history = getTimeSeriesHistory(feature);\n    return history.filter(h => h.lower_bound !== undefined && h.upper_bound !== undefined);\n  };\n\n  useEffect(() => {\n    if (token) {\n      fetchTimeSeries();\n    }\n  }, [token]);\n\n  return {\n    timeSeries: state.timeSeries,\n    loading: state.loading,\n    error: state.error,\n    fetchTimeSeries,\n    getLatestTimeSeries,\n    getTimeSeriesHistory,\n    getTimeSeriesTrend,\n    getTimeSeriesFeatures,\n    getTimeSeriesSummary,\n    getForecastAccuracy,\n    getConfidenceIntervals,\n  };\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useToasts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useToasts.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'removeToast'. Either include it or remove the dependency array.","line":41,"column":5,"nodeType":"ArrayExpression","endLine":41,"endColumn":7,"suggestions":[{"desc":"Update the dependencies array to be: [removeToast]","fix":{"range":[864,866],"text":"[removeToast]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useCallback } from \"react\";\n\nexport interface Toast {\n  id: string;\n  message: string;\n  type: \"success\" | \"error\" | \"warning\" | \"info\";\n  duration?: number;\n  timestamp: Date;\n}\n\nexport function useToasts() {\n  const [toasts, setToasts] = useState<Toast[]>([]);\n\n  const addToast = useCallback(\n    (\n      message: string,\n      type: Toast[\"type\"] = \"info\",\n      duration: number = 5000,\n    ) => {\n      const id = `toast_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n      const newToast: Toast = {\n        id,\n        message,\n        type,\n        duration,\n        timestamp: new Date(),\n      };\n\n      setToasts((prev) => [...prev, newToast]);\n\n      // Auto remove after duration\n      if (duration > 0) {\n        setTimeout(() => {\n          removeToast(id);\n        }, duration);\n      }\n\n      return id;\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setToasts((prev) => prev.filter((toast) => toast.id !== id));\n  }, []);\n\n  const clearAllToasts = useCallback(() => {\n    setToasts([]);\n  }, []);\n\n  const updateToast = useCallback((id: string, updates: Partial<Toast>) => {\n    setToasts((prev) =>\n      prev.map((toast) => (toast.id === id ? { ...toast, ...updates } : toast)),\n    );\n  }, []);\n\n  return {\n    toasts,\n    addToast,\n    removeToast,\n    clearAllToasts,\n    updateToast,\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUltimateSettings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUltimateSettings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUltraMLAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUltraMLAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUltraMLAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUnifiedAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUnifiedAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUnifiedAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUnifiedBetting.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUnifiedBetting.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUnifiedBetting.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useUserStats.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'fetchBackendHealth', 'fetchSystemAccuracy', and 'fetchUserStats'. Either include them or remove the dependency array.","line":365,"column":6,"nodeType":"ArrayExpression","endLine":365,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [fetchBackendHealth, fetchSystemAccuracy, fetchUserStats]","fix":{"range":[10419,10421],"text":"[fetchBackendHealth, fetchSystemAccuracy, fetchUserStats]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Hook for fetching real user statistics from backend\n */\n\nimport { useState, useEffect } from \"react\";\n\nexport interface UserStats {\n  balance: number;\n  winRate: number;\n  totalProfit: number;\n  totalBets: number;\n  activeBets: number;\n  todayProfit: number;\n  weeklyProfit: number;\n  monthlyProfit: number;\n  accuracy: number;\n  lastUpdated: string;\n}\n\nexport interface BackendHealth {\n  status: \"healthy\" | \"degraded\" | \"offline\";\n  uptime: number;\n  accuracy: number;\n  activePredictions: number;\n  apis: {\n    sportsradar: \"healthy\" | \"degraded\" | \"offline\";\n    dailyfantasy: \"healthy\" | \"degraded\" | \"offline\";\n    theodds: \"healthy\" | \"degraded\" | \"offline\";\n  };\n}\n\nconst useUserStats = () => {\n  const [userStats, setUserStats] = useState<UserStats>({\n    balance: 25000, // Default fallback\n    winRate: 0.847,\n    totalProfit: 47350,\n    totalBets: 1247,\n    activeBets: 5,\n    todayProfit: 2150,\n    weeklyProfit: 8750,\n    monthlyProfit: 28350,\n    accuracy: 85.0,\n    lastUpdated: new Date().toISOString(),\n  });\n\n  const [backendHealth, setBackendHealth] = useState<BackendHealth>({\n    status: \"healthy\",\n    uptime: 99.8,\n    accuracy: 85.0,\n    activePredictions: 12,\n    apis: {\n      sportsradar: \"healthy\",\n      dailyfantasy: \"healthy\",\n      theodds: \"healthy\",\n    },\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Test basic connectivity to the backend\n  const testConnectivity = async () => {\n    const testUrl = getApiUrl(\"/health\");\n    console.log(\"Testing connectivity to:\", testUrl);\n\n    try {\n      const response = await fetch(testUrl, {\n        method: \"GET\",\n        signal: AbortSignal.timeout(5000),\n      });\n      console.log(\n        \"Connectivity test result:\",\n        response.status,\n        response.statusText,\n      );\n      return response.ok;\n    } catch (error) {\n      console.error(\"Connectivity test failed:\", error);\n      return false;\n    }\n  };\n\n  // Get the API base URL from environment or use relative path\n  const getApiUrl = (path: string) => {\n    // Check environment variables first\n    const envApiUrl =\n      import.meta.env.VITE_API_URL ||\n      import.meta.env.VITE_BACKEND_URL ||\n      import.meta.env.VITE_API_BASE_URL;\n\n    if (envApiUrl) {\n      return `${envApiUrl}${path.startsWith(\"/\") ? path : `/${path}`}`;\n    }\n\n    // Auto-detect based on current environment\n    if (typeof window !== \"undefined\") {\n      const { protocol, hostname, port } = window.location;\n\n      // In development (localhost), proxy is handled by Vite\n      if (hostname === \"localhost\" || hostname === \"127.0.0.1\") {\n        return `/api${path.startsWith(\"/\") ? path : `/${path}`}`;\n      }\n\n      // In production, try to construct the backend URL\n      // This might need adjustment based on actual deployment setup\n      return `/api${path.startsWith(\"/\") ? path : `/${path}`}`;\n    }\n\n    // Fallback to relative paths\n    return `/api${path.startsWith(\"/\") ? path : `/${path}`}`;\n  };\n\n  // Fetch user statistics from backend\n  const fetchUserStats = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    // First test basic connectivity\n    const isConnected = await testConnectivity();\n    if (!isConnected) {\n      console.warn(\"Backend connectivity test failed, using fallback data\");\n      setError(\"Using offline mode with simulated data\");\n\n      // Set realistic fallback data\n      setUserStats({\n        balance: 3250,\n        winRate: 0.67,\n        totalProfit: 1150,\n        totalBets: 89,\n        activeBets: 3,\n        todayProfit: 125,\n        weeklyProfit: 420,\n        monthlyProfit: 1150,\n        accuracy: 96.5,\n        lastUpdated: new Date().toISOString(),\n      });\n\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      // Try to fetch from multiple endpoints for comprehensive data\n      const endpoints = [\n        getApiUrl(\"/analytics/advanced\"),\n        getApiUrl(\"/active-bets\"),\n        getApiUrl(\"/transactions\"),\n      ];\n\n      console.log(\"Fetching data from endpoints:\", endpoints);\n\n      const requests = endpoints.map((endpoint) =>\n        fetch(endpoint, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          signal: AbortSignal.timeout(10000), // 10 second timeout\n        })\n          .then((res) => {\n            if (res.ok) {\n              return res.json();\n            }\n            console.warn(\n              `API endpoint ${endpoint} returned ${res.status}: ${res.statusText}`,\n            );\n            return null;\n          })\n          .catch((error) => {\n            console.warn(`Failed to fetch from ${endpoint}:`, error.message);\n            return null;\n          }),\n      );\n\n      const [analyticsData, activeBetsData, transactionsData] =\n        await Promise.all(requests);\n\n      // Process analytics data\n      if (analyticsData?.bankroll_metrics) {\n        const metrics = analyticsData.bankroll_metrics;\n        const roiData = analyticsData.roi_analysis;\n\n        setUserStats((prev) => ({\n          ...prev,\n          balance: metrics.current_balance || prev.balance,\n          totalProfit: metrics.profit_loss || prev.totalProfit,\n          winRate: roiData?.win_rate || prev.winRate,\n          todayProfit: Math.round((metrics.profit_loss || 0) * 0.05), // Estimate today's profit\n          weeklyProfit: Math.round((metrics.profit_loss || 0) * 0.2), // Estimate weekly profit\n          monthlyProfit: Math.round((metrics.profit_loss || 0) * 0.6), // Estimate monthly profit\n          accuracy: roiData?.overall_roi\n            ? roiData.overall_roi + 70\n            : prev.accuracy, // Convert ROI to accuracy estimate\n          lastUpdated: new Date().toISOString(),\n        }));\n      }\n\n      // Process active bets data\n      if (activeBetsData?.active_bets) {\n        setUserStats((prev) => ({\n          ...prev,\n          activeBets:\n            activeBetsData.total_count ||\n            activeBetsData.active_bets.length ||\n            prev.activeBets,\n        }));\n      }\n\n      // Process transactions data\n      if (transactionsData?.transactions) {\n        setUserStats((prev) => ({\n          ...prev,\n          totalBets:\n            transactionsData.total_count ||\n            transactionsData.transactions.length ||\n            prev.totalBets,\n        }));\n      }\n    } catch (error) {\n      console.warn(\n        \"Failed to fetch real user stats, using fallback data:\",\n        error,\n      );\n      setError(\"Using offline mode - live data unavailable\");\n\n      // Ensure we have good fallback data even on error\n      setUserStats({\n        balance: 3250,\n        winRate: 0.67,\n        totalProfit: 1150,\n        totalBets: 89,\n        activeBets: 3,\n        todayProfit: 125,\n        weeklyProfit: 420,\n        monthlyProfit: 1150,\n        accuracy: 96.5,\n        lastUpdated: new Date().toISOString(),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch backend health information\n  const fetchBackendHealth = async () => {\n    try {\n      const response = await fetch(getApiUrl(\"/health/all\"), {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        signal: AbortSignal.timeout(8000), // 8 second timeout\n      });\n\n      if (response.ok) {\n        const healthData = await response.json();\n\n        setBackendHealth((prev) => ({\n          ...prev,\n          status: \"healthy\",\n          apis: {\n            sportsradar:\n              healthData.services?.sportsradar?.status === \"healthy\"\n                ? \"healthy\"\n                : \"degraded\",\n            dailyfantasy:\n              healthData.services?.dailyfantasy?.status === \"healthy\"\n                ? \"healthy\"\n                : \"degraded\",\n            theodds:\n              healthData.services?.theodds?.status === \"healthy\"\n                ? \"healthy\"\n                : \"degraded\",\n          },\n        }));\n      } else {\n        console.warn(\n          `Health check failed with status ${response.status}: ${response.statusText}`,\n        );\n        setBackendHealth((prev) => ({ ...prev, status: \"degraded\" }));\n      }\n    } catch (error) {\n      console.warn(\"Backend health check failed:\", error.message || error);\n      setBackendHealth({\n        status: \"offline\",\n        uptime: 0,\n        accuracy: 96.5,\n        activePredictions: 12,\n        apis: {\n          sportsradar: \"offline\",\n          dailyfantasy: \"offline\",\n          theodds: \"offline\",\n        },\n      });\n    }\n  };\n\n  // Get system accuracy from the Ultimate Brain system\n  const fetchSystemAccuracy = async () => {\n    try {\n      const response = await fetch(\n        getApiUrl(\"/ultra-accuracy/model-performance\"),\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          signal: AbortSignal.timeout(8000), // 8 second timeout\n        },\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        const accuracy =\n          data.overall_accuracy * 100 || data.recent_accuracy * 100 || 85.0;\n\n        setBackendHealth((prev) => ({\n          ...prev,\n          accuracy,\n        }));\n\n        setUserStats((prev) => ({\n          ...prev,\n          accuracy,\n        }));\n      } else {\n        console.warn(\n          `System accuracy API failed with status ${response.status}: ${response.statusText}`,\n        );\n      }\n    } catch (error) {\n      console.warn(\"Failed to fetch system accuracy:\", error.message || error);\n      // Set fallback accuracy data\n      const fallbackAccuracy = 96.5;\n\n      setBackendHealth((prev) => ({\n        ...prev,\n        accuracy: fallbackAccuracy,\n      }));\n\n      setUserStats((prev) => ({\n        ...prev,\n        accuracy: fallbackAccuracy,\n      }));\n    }\n  };\n\n  // Auto-refresh data\n  useEffect(() => {\n    // Initial fetch\n    fetchUserStats();\n    fetchBackendHealth();\n    fetchSystemAccuracy();\n\n    // Set up periodic refresh\n    const statsInterval = setInterval(fetchUserStats, 60000); // Every minute\n    const healthInterval = setInterval(fetchBackendHealth, 30000); // Every 30 seconds\n    const accuracyInterval = setInterval(fetchSystemAccuracy, 120000); // Every 2 minutes\n\n    return () => {\n      clearInterval(statsInterval);\n      clearInterval(healthInterval);\n      clearInterval(accuracyInterval);\n    };\n  }, []);\n\n  return {\n    userStats,\n    backendHealth,\n    isLoading,\n    error,\n    refreshStats: fetchUserStats,\n    refreshHealth: fetchBackendHealth,\n  };\n};\n\nexport default useUserStats;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useVirtualList.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useVirtualList.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useVirtualList.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useWebSocket.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useWebSocket.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useWebSocket.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'connect' and 'state.socket'. Either include them or remove the dependency array.","line":248,"column":6,"nodeType":"ArrayExpression","endLine":248,"endColumn":11,"suggestions":[{"desc":"Update the dependencies array to be: [connect, state.socket, url]","fix":{"range":[6838,6843],"text":"[connect, state.socket, url]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Custom WebSocket hook for real-time data streaming\n * Provides connection management, reconnection, and typed message handling\n */\n\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { websocketHealthMonitor } from \"../utils/websocketHealthMonitor\";\n\ninterface WebSocketMessage {\n  type: string;\n  data: any;\n  timestamp: string;\n}\n\ninterface UseWebSocketOptions {\n  reconnectAttempts?: number;\n  reconnectInterval?: number;\n  onConnect?: () => void;\n  onDisconnect?: () => void;\n  onError?: (error: Event) => void;\n  onMessage?: (message: WebSocketMessage) => void;\n  shouldReconnect?: boolean;\n}\n\ninterface WebSocketState {\n  socket: WebSocket | null;\n  isConnected: boolean;\n  isConnecting: boolean;\n  error: string | null;\n  lastMessage: WebSocketMessage | null;\n  connectionAttempts: number;\n}\n\nexport const useWebSocket = (\n  url: string,\n  options: UseWebSocketOptions = {},\n) => {\n  const {\n    reconnectAttempts = 5,\n    reconnectInterval = 3000,\n    onConnect,\n    onDisconnect,\n    onError,\n    onMessage,\n    shouldReconnect = true,\n  } = options;\n\n  const [state, setState] = useState<WebSocketState>({\n    socket: null,\n    isConnected: false,\n    isConnecting: false,\n    error: null,\n    lastMessage: null,\n    connectionAttempts: 0,\n  });\n\n  const reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const shouldReconnectRef = useRef(shouldReconnect);\n\n  // Update shouldReconnect ref when option changes\n  useEffect(() => {\n    shouldReconnectRef.current = shouldReconnect;\n  }, [shouldReconnect]);\n\n  const connect = useCallback(() => {\n    if (state.isConnecting || state.isConnected) {\n      return;\n    }\n\n    setState((prev) => ({ ...prev, isConnecting: true, error: null }));\n\n    try {\n      const wsUrl = url.startsWith(\"ws\")\n        ? url\n        : `ws://${window.location.host}${url}`;\n      const socket = new WebSocket(wsUrl);\n\n      socket.onopen = () => {\n        console.log(\"WebSocket connected\");\n        setState((prev) => ({\n          ...prev,\n          socket,\n          isConnected: true,\n          isConnecting: false,\n          error: null,\n          connectionAttempts: 0,\n        }));\n\n        // Register with health monitor\n        websocketHealthMonitor.registerConnection(wsUrl);\n        websocketHealthMonitor.updateConnectionHealth(wsUrl, true);\n\n        onConnect?.();\n        if (!url.includes(\"localhost\") || shouldReconnectRef.current) {\n          toast.success(\"Connected to real-time data stream\");\n        }\n      };\n\n      socket.onclose = (event) => {\n        console.log(\"WebSocket disconnected:\", event.code, event.reason);\n        setState((prev) => ({\n          ...prev,\n          socket: null,\n          isConnected: false,\n          isConnecting: false,\n        }));\n\n        // Update health monitor\n        const wsUrl = url.startsWith(\"ws\")\n          ? url\n          : `ws://${window.location.host}${url}`;\n        websocketHealthMonitor.updateConnectionHealth(\n          wsUrl,\n          false,\n          `Disconnected: ${event.code} ${event.reason}`,\n        );\n\n        onDisconnect?.();\n\n        // Only show user-facing messages for non-development errors\n        if (event.code !== 1006 && !event.reason?.includes(\"development\")) {\n          // Attempt to reconnect if enabled and within retry limits\n          if (\n            shouldReconnectRef.current &&\n            state.connectionAttempts < reconnectAttempts &&\n            !event.wasClean\n          ) {\n            setState((prev) => ({\n              ...prev,\n              connectionAttempts: prev.connectionAttempts + 1,\n            }));\n\n            reconnectTimeoutRef.current = setTimeout(() => {\n              console.log(\n                `Attempting to reconnect... (${state.connectionAttempts + 1}/${reconnectAttempts})`,\n              );\n              connect();\n            }, reconnectInterval);\n          } else if (state.connectionAttempts >= reconnectAttempts) {\n            toast.error(\"Connection lost - maximum retry attempts reached\");\n          }\n        }\n      };\n\n      socket.onerror = (error) => {\n        console.error(\"WebSocket error:\", error);\n        setState((prev) => ({\n          ...prev,\n          error: \"WebSocket connection error\",\n          isConnecting: false,\n        }));\n        onError?.(error);\n\n        // Only show error toast if it's not a development/HMR related error\n        if (!url.includes(\"localhost\") || shouldReconnectRef.current) {\n          toast.error(\"Connection error occurred\");\n        }\n      };\n\n      socket.onmessage = (event) => {\n        try {\n          const message: WebSocketMessage = JSON.parse(event.data);\n          setState((prev) => ({ ...prev, lastMessage: message }));\n          onMessage?.(message);\n        } catch (error) {\n          console.error(\"Failed to parse WebSocket message:\", error);\n        }\n      };\n    } catch (error) {\n      console.error(\"Failed to create WebSocket connection:\", error);\n      setState((prev) => ({\n        ...prev,\n        error: \"Failed to create connection\",\n        isConnecting: false,\n      }));\n    }\n  }, [\n    url,\n    state.isConnecting,\n    state.isConnected,\n    state.connectionAttempts,\n    reconnectAttempts,\n    reconnectInterval,\n    onConnect,\n    onDisconnect,\n    onError,\n    onMessage,\n  ]);\n\n  const disconnect = useCallback(() => {\n    shouldReconnectRef.current = false;\n\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n      reconnectTimeoutRef.current = null;\n    }\n\n    if (state.socket) {\n      state.socket.close(1000, \"Manual disconnect\");\n    }\n\n    setState((prev) => ({\n      ...prev,\n      socket: null,\n      isConnected: false,\n      isConnecting: false,\n      connectionAttempts: 0,\n    }));\n  }, [state.socket]);\n\n  const sendMessage = useCallback(\n    (message: any) => {\n      if (state.socket && state.isConnected) {\n        try {\n          const messageString =\n            typeof message === \"string\" ? message : JSON.stringify(message);\n          state.socket.send(messageString);\n          return true;\n        } catch (error) {\n          console.error(\"Failed to send WebSocket message:\", error);\n          toast.error(\"Failed to send message\");\n          return false;\n        }\n      } else {\n        console.warn(\"WebSocket is not connected\");\n        toast.warning(\"Connection not available\");\n        return false;\n      }\n    },\n    [state.socket, state.isConnected],\n  );\n\n  // Auto-connect on mount\n  useEffect(() => {\n    connect();\n\n    // Cleanup on unmount\n    return () => {\n      shouldReconnectRef.current = false;\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      if (state.socket) {\n        state.socket.close(1000, \"Component unmount\");\n      }\n    };\n  }, [url]);\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    // Connection state\n    isConnected: state.isConnected,\n    isConnecting: state.isConnecting,\n    error: state.error,\n    connectionAttempts: state.connectionAttempts,\n\n    // Data\n    lastMessage: state.lastMessage,\n\n    // Actions\n    connect,\n    disconnect,\n    sendMessage,\n\n    // Connection info\n    readyState: state.socket?.readyState,\n  };\n};\n\n// Named export only to prevent import confusion\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useWindowResize.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useWindowResize.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useWindowResize.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useWindowSize.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useWindowSize.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\hooks\\useWindowSize.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\interfaces\\SimpleUserInterface\\MainDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\interfaces\\SimpleUserInterface\\index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\jest.setup-env.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\jest.setup-files.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\layouts\\AuthLayout.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\layouts\\AuthLayout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\layouts\\AuthLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\layouts\\MainLayout.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\layouts\\MainLayout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\layouts\\MainLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\lib\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\main.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\main.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\main.minimal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\middleware\\auth.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\middleware\\auth.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\middleware\\auth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\middleware\\rateLimiter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\middleware\\rateLimiter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\middleware\\rateLimiter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\middleware\\security.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\middleware\\security.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\middleware\\security.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\mocks\\browser.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\mocks\\browser.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\mocks\\browser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\BehaviorProfile.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\BehaviorProfile.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\BehaviorProfile.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\Bet.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\Bet.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\Bet.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\Cluster.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\Cluster.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\Cluster.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\LineupSynergyModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\LineupSynergyModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\LineupSynergyModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\PlayerFormModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\PlayerFormModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\PlayerFormModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\Prediction.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\Prediction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\Prediction.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\PvPMatchupModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\PvPMatchupModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\PvPMatchupModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\RefereeImpactModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\RefereeImpactModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\RefereeImpactModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\User.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\User.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\User.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\VenueEffectModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\VenueEffectModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\VenueEffectModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\LineupSynergyModel.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\LineupSynergyModel.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\LineupSynergyModel.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\PlayerFormModel.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\PlayerFormModel.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\PlayerFormModel.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\PvPMatchupModel.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\PvPMatchupModel.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\PvPMatchupModel.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\RefereeImpactModel.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\RefereeImpactModel.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\RefereeImpactModel.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\VenueEffectModel.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\VenueEffectModel.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\models\\__tests__\\VenueEffectModel.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\APITestPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Admin.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Admin.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Admin.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Analytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Analytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Analytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\AnalyticsPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\AnalyticsPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\AnalyticsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\ArbitragePage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\ArbitragePage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\ArbitragePage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\AuthPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\AuthPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\AuthPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BackendStatusPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BankrollPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BankrollPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BankrollPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BetsPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BetsPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BetsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BuilderExample.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BuilderExample.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BuilderExample.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BuilderTest.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BuilderTest.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BuilderTest.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BuilderVisualEditor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BuilderVisualEditor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\BuilderVisualEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberAnalyticsPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberAnalyticsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberDefaultPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberDefaultPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberMoneyMaker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberMoneyMaker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberPremiumDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberPremiumDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberPrizePicksPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\CyberPrizePicksPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Dashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Dashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\DashboardPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\DashboardPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\DashboardPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Dashboard\\Dashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Dashboard\\Dashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Dashboard\\Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Dashboard\\__tests__\\Dashboard.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Dashboard\\__tests__\\Dashboard.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Dashboard\\__tests__\\Dashboard.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\LineupBuilderPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\LineupBuilderPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\LineupBuilderPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\LineupPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\LineupPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\LineupPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\LoginPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\LoginPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\LoginPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\NotFound.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\NotFound.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\NotFound.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Predictions.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Predictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Predictions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PredictionsDashboard.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PredictionsDashboard.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PredictionsDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PrizePicksPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PrizePicksPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PrizePicksPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PrizePicksPageEnhanced.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PrizePicksPageEnhanced.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PrizePicksPageEnhanced.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'filtered' is never reassigned. Use 'const' instead.","line":141,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":141,"endColumn":17,"fix":{"range":[3834,4298],"text":"const filtered = projections.filter((proj) => {\n      const matchesSearch =\n        proj.playerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        proj.team.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesPosition =\n        selectedPosition === \"all\" || proj.position === selectedPosition;\n      const matchesConfidence = proj.confidence >= minConfidence;\n\n      return matchesSearch && matchesPosition && matchesConfidence;\n    });"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport {\n  Search,\n  Filter,\n  TrendingUp,\n  TrendingDown,\n  Clock,\n  Star,\n} from \"lucide-react\";\nimport { useUnifiedStore } from \"../store/unified/UnifiedStoreManager\";\nimport { dataPipeline } from \"../services/data/UnifiedDataPipeline\";\n\ninterface PlayerProjection {\n  id: string;\n  playerName: string;\n  team: string;\n  position: string;\n  statType: string;\n  line: number;\n  over: number;\n  under: number;\n  confidence: number;\n  trend: \"up\" | \"down\" | \"stable\";\n  recent: number[];\n}\n\nconst PrizePicksPageEnhanced: React.FC = () => {\n  const [projections, setProjections] = useState<PlayerProjection[]>([]);\n  const [filteredProjections, setFilteredProjections] = useState<\n    PlayerProjection[]\n  >([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedSport, setSelectedSport] = useState(\"basketball_nba\");\n  const [selectedPosition, setSelectedPosition] = useState(\"all\");\n  const [minConfidence, setMinConfidence] = useState(0.6);\n  const [isLoading, setIsLoading] = useState(true);\n  const { actions } = useUnifiedStore();\n\n  // Mock data - in real app, this would come from PrizePicks API\n  useEffect(() => {\n    const loadProjections = async () => {\n      setIsLoading(true);\n      try {\n        // Simulate API call\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n\n        const mockProjections: PlayerProjection[] = [\n          {\n            id: \"1\",\n            playerName: \"LeBron James\",\n            team: \"LAL\",\n            position: \"SF\",\n            statType: \"Points\",\n            line: 25.5,\n            over: 1.9,\n            under: 1.9,\n            confidence: 0.78,\n            trend: \"up\",\n            recent: [28, 31, 22, 29, 26],\n          },\n          {\n            id: \"2\",\n            playerName: \"Stephen Curry\",\n            team: \"GSW\",\n            position: \"PG\",\n            statType: \"Points\",\n            line: 27.5,\n            over: 1.85,\n            under: 1.95,\n            confidence: 0.82,\n            trend: \"up\",\n            recent: [30, 25, 33, 28, 31],\n          },\n          {\n            id: \"3\",\n            playerName: \"Giannis Antetokounmpo\",\n            team: \"MIL\",\n            position: \"PF\",\n            statType: \"Rebounds\",\n            line: 11.5,\n            over: 1.92,\n            under: 1.88,\n            confidence: 0.73,\n            trend: \"stable\",\n            recent: [12, 14, 9, 13, 11],\n          },\n          {\n            id: \"4\",\n            playerName: \"Luka Dončić\",\n            team: \"DAL\",\n            position: \"PG\",\n            statType: \"Assists\",\n            line: 8.5,\n            over: 1.88,\n            under: 1.92,\n            confidence: 0.85,\n            trend: \"up\",\n            recent: [10, 11, 7, 9, 12],\n          },\n          {\n            id: \"5\",\n            playerName: \"Joel Embiid\",\n            team: \"PHI\",\n            position: \"C\",\n            statType: \"Points\",\n            line: 30.5,\n            over: 1.95,\n            under: 1.85,\n            confidence: 0.69,\n            trend: \"down\",\n            recent: [28, 25, 33, 27, 31],\n          },\n        ];\n\n        setProjections(mockProjections);\n        setFilteredProjections(mockProjections);\n\n        actions.addToast({\n          type: \"success\",\n          title: \"Projections Loaded\",\n          message: `${mockProjections.length} player projections loaded`,\n          duration: 3000,\n        });\n      } catch (error) {\n        actions.addToast({\n          type: \"error\",\n          title: \"Load Failed\",\n          message: \"Failed to load PrizePicks projections\",\n          duration: 5000,\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadProjections();\n  }, [actions]);\n\n  // Filter projections based on search and filters\n  useEffect(() => {\n    let filtered = projections.filter((proj) => {\n      const matchesSearch =\n        proj.playerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        proj.team.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesPosition =\n        selectedPosition === \"all\" || proj.position === selectedPosition;\n      const matchesConfidence = proj.confidence >= minConfidence;\n\n      return matchesSearch && matchesPosition && matchesConfidence;\n    });\n\n    setFilteredProjections(filtered);\n  }, [projections, searchTerm, selectedPosition, minConfidence]);\n\n  const getTrendIcon = (trend: string) => {\n    switch (trend) {\n      case \"up\":\n        return <TrendingUp className=\"w-4 h-4 text-green-500\" />;\n      case \"down\":\n        return <TrendingDown className=\"w-4 h-4 text-red-500\" />;\n      default:\n        return <Clock className=\"w-4 h-4 text-gray-500\" />;\n    }\n  };\n\n  const getConfidenceColor = (confidence: number) => {\n    if (confidence >= 0.8) return \"text-green-600 bg-green-100\";\n    if (confidence >= 0.7) return \"text-yellow-600 bg-yellow-100\";\n    return \"text-red-600 bg-red-100\";\n  };\n\n  const calculateAverage = (values: number[]) => {\n    return values.reduce((a, b) => a + b, 0) / values.length;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n            PrizePicks Enhanced\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            AI-powered player prop analysis with ML predictions\n          </p>\n        </div>\n\n        {/* Filters */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            {/* Search */}\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search players...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n              />\n            </div>\n\n            {/* Position Filter */}\n            <div>\n              <select\n                value={selectedPosition}\n                onChange={(e) => setSelectedPosition(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n              >\n                <option value=\"all\">All Positions</option>\n                <option value=\"PG\">Point Guard</option>\n                <option value=\"SG\">Shooting Guard</option>\n                <option value=\"SF\">Small Forward</option>\n                <option value=\"PF\">Power Forward</option>\n                <option value=\"C\">Center</option>\n              </select>\n            </div>\n\n            {/* Confidence Filter */}\n            <div>\n              <label className=\"block text-sm text-gray-600 dark:text-gray-400 mb-1\">\n                Min Confidence: {(minConfidence * 100).toFixed(0)}%\n              </label>\n              <input\n                type=\"range\"\n                min=\"0.5\"\n                max=\"1\"\n                step=\"0.05\"\n                value={minConfidence}\n                onChange={(e) => setMinConfidence(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n\n            {/* Refresh */}\n            <div className=\"flex items-end\">\n              <button\n                onClick={() => window.location.reload()}\n                className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center space-x-2\"\n              >\n                <Filter className=\"w-4 h-4\" />\n                <span>Refresh</span>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Loading State */}\n        {isLoading && (\n          <div className=\"text-center py-12\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-blue-500 border-t-transparent mx-auto mb-4\"></div>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              Loading projections...\n            </p>\n          </div>\n        )}\n\n        {/* Projections Grid */}\n        {!isLoading && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredProjections.map((projection) => (\n              <div\n                key={projection.id}\n                className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 hover:shadow-md transition-shadow\"\n              >\n                {/* Header */}\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div>\n                    <h3 className=\"font-bold text-gray-900 dark:text-white\">\n                      {projection.playerName}\n                    </h3>\n                    <div className=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400\">\n                      <span>{projection.team}</span>\n                      <span>•</span>\n                      <span>{projection.position}</span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    {getTrendIcon(projection.trend)}\n                    <Star className=\"w-4 h-4 text-yellow-500\" />\n                  </div>\n                </div>\n\n                {/* Stat Info */}\n                <div className=\"text-center mb-4\">\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {projection.line}\n                  </div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {projection.statType}\n                  </div>\n                </div>\n\n                {/* Odds */}\n                <div className=\"grid grid-cols-2 gap-3 mb-4\">\n                  <div className=\"text-center p-2 bg-green-50 dark:bg-green-900/20 rounded\">\n                    <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Over\n                    </div>\n                    <div className=\"font-semibold text-green-600\">\n                      {projection.over}\n                    </div>\n                  </div>\n                  <div className=\"text-center p-2 bg-red-50 dark:bg-red-900/20 rounded\">\n                    <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Under\n                    </div>\n                    <div className=\"font-semibold text-red-600\">\n                      {projection.under}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Recent Performance */}\n                <div className=\"mb-4\">\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                    Last 5 Games (Avg:{\" \"}\n                    {calculateAverage(projection.recent).toFixed(1)})\n                  </div>\n                  <div className=\"flex space-x-1\">\n                    {projection.recent.map((value, index) => (\n                      <div\n                        key={index}\n                        className={`flex-1 h-8 rounded flex items-center justify-center text-xs font-medium ${\n                          value > projection.line\n                            ? \"bg-green-100 text-green-800\"\n                            : \"bg-red-100 text-red-800\"\n                        }`}\n                      >\n                        {value}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Confidence */}\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    ML Confidence\n                  </span>\n                  <span\n                    className={`px-2 py-1 rounded text-xs font-medium ${getConfidenceColor(projection.confidence)}`}\n                  >\n                    {(projection.confidence * 100).toFixed(0)}%\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* No Results */}\n        {!isLoading && filteredProjections.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 text-6xl mb-4\">🔍</div>\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n              No projections found\n            </h3>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              Try adjusting your filters or search terms\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PrizePicksPageEnhanced;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Profile.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Profile.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Profile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PropsPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PropsPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\PropsPage.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadPropPrediction'. Either include it or remove the dependency array.","line":181,"column":6,"nodeType":"ArrayExpression","endLine":181,"endColumn":35,"suggestions":[{"desc":"Update the dependencies array to be: [loadPropPrediction, selectedProp, selectedSport]","fix":{"range":[4520,4549],"text":"[loadPropPrediction, selectedProp, selectedSport]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport GlassCard from '../components/ui/GlassCard';\nimport EnhancedPropCard from '../components/ui/EnhancedPropCard';\nimport GlowButton from '../components/ui/GlowButton';\nimport Tooltip from '../components/ui/Tooltip';\nimport { Container, Typography, Box, Grid, TextField, MenuItem } from '@mui/material';\nimport { notificationService } from '@/services/notification';\nimport { sportsAnalytics, Sport, PropPrediction } from '@/services/sportsAnalytics';\n\n// Sample data for demonstration\nconst samplePlayers = [\n  {\n    player: {\n      name: 'LeBron James',\n      team: 'LAL',\n      position: 'F',\n      imageUrl: 'https://cdn.nba.com/headshots/nba/latest/1040x760/2544.png',\n    },\n    props: [\n      {\n        id: 'points_1',\n        name: 'Points',\n        value: 25.5,\n        overMultiplier: 1.8,\n        underMultiplier: 1.9,\n        confidence: 85,\n        fireCount: 156,\n        winRate: 72,\n      },\n      {\n        id: 'rebounds_1',\n        name: 'Rebounds',\n        value: 7.5,\n        overMultiplier: 1.85,\n        underMultiplier: 1.85,\n        modifier: 'goblin' as const,\n        modifierMultiplier: 2.5,\n        confidence: 65,\n        fireCount: 89,\n        winRate: 68,\n      },\n      {\n        id: 'assists_1',\n        name: 'Assists',\n        value: 8.5,\n        overMultiplier: 1.9,\n        underMultiplier: 1.8,\n        modifier: 'devil' as const,\n        modifierMultiplier: 3.0,\n        confidence: 45,\n        fireCount: 42,\n        winRate: 55,\n      },\n    ],\n  },\n  {\n    player: {\n      name: 'Stephen Curry',\n      team: 'GSW',\n      position: 'G',\n      imageUrl: 'https://cdn.nba.com/headshots/nba/latest/1040x760/201939.png',\n    },\n    props: [\n      {\n        id: 'points_2',\n        name: 'Points',\n        value: 28.5,\n        overMultiplier: 1.85,\n        underMultiplier: 1.85,\n        confidence: 90,\n        fireCount: 234,\n        winRate: 78,\n      },\n      {\n        id: 'threes_2',\n        name: '3-Pointers Made',\n        value: 4.5,\n        overMultiplier: 1.9,\n        underMultiplier: 1.8,\n        modifier: 'goblin' as const,\n        modifierMultiplier: 2.5,\n        confidence: 75,\n        fireCount: 167,\n        winRate: 82,\n      },\n      {\n        id: 'assists_2',\n        name: 'Assists',\n        value: 6.5,\n        overMultiplier: 1.85,\n        underMultiplier: 1.85,\n        confidence: 60,\n        fireCount: 78,\n        winRate: 65,\n      },\n    ],\n  },\n  {\n    player: {\n      name: 'Nikola Jokic',\n      team: 'DEN',\n      position: 'C',\n      imageUrl: 'https://cdn.nba.com/headshots/nba/latest/1040x760/203999.png',\n    },\n    props: [\n      {\n        id: 'points_3',\n        name: 'Points',\n        value: 26.5,\n        overMultiplier: 1.85,\n        underMultiplier: 1.85,\n        confidence: 80,\n        fireCount: 145,\n        winRate: 75,\n      },\n      {\n        id: 'rebounds_3',\n        name: 'Rebounds',\n        value: 12.5,\n        overMultiplier: 1.9,\n        underMultiplier: 1.8,\n        modifier: 'devil' as const,\n        modifierMultiplier: 3.0,\n        confidence: 70,\n        fireCount: 112,\n        winRate: 80,\n      },\n      {\n        id: 'assists_3',\n        name: 'Assists',\n        value: 9.5,\n        overMultiplier: 1.85,\n        underMultiplier: 1.85,\n        confidence: 55,\n        fireCount: 67,\n        winRate: 62,\n      },\n    ],\n  },\n];\n\n// Sample trending props\nconst sampleTrendingProps = [\n  {\n    id: 'trend_1',\n    playerName: 'Stephen Curry',\n    team: 'GSW',\n    propType: '3-Pointers Made',\n    value: 4.5,\n    direction: 'over' as const,\n    modifier: 'goblin' as const,\n    confidence: 90,\n    fireCount: 234,\n    communityStats: {\n      likes: 156,\n      comments: 42,\n      shares: 23,\n    },\n    topComment: {\n      user: 'PropMaster',\n      avatar: 'https://i.pravatar.cc/150?img=1',\n      text: 'Curry has hit this in 8 of his last 10 games. Easy money!',\n      likes: 45,\n    },\n  },\n  // Add more trending props...\n];\n\nexport const PropsPage: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedSport, setSelectedSport] = useState<Sport>('NBA');\n  const [selectedProp, setSelectedProp] = useState<string | null>(null);\n  const [propPrediction, setPropPrediction] = useState<PropPrediction | null>(null);\n  const [minConfidence, setMinConfidence] = useState(60);\n  const [minFireCount, setMinFireCount] = useState(50);\n\n  useEffect(() => {\n    if (selectedProp) {\n      loadPropPrediction(selectedProp);\n    }\n  }, [selectedProp, selectedSport]);\n\n  const loadPropPrediction = async (propId: string) => {\n    setIsLoading(true);\n    try {\n      const prediction = await sportsAnalytics.analyzeProp(selectedSport, propId);\n      setPropPrediction(prediction);\n    } catch (error) {\n      notificationService.notify('error', 'Error loading prediction', 'Please try again later');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePropSelect = (\n    playerName: string,\n    propId: string,\n    selection: 'over' | 'under',\n    modifier?: 'goblin' | 'devil'\n  ) => {\n    setSelectedProp(propId);\n    notificationService.notify(\n      'success',\n      'Prop Selected',\n      `${playerName} - ${selection.toUpperCase()} ${propId}${modifier ? ` (${modifier})` : ''}`\n    );\n  };\n\n  const handleTrendingPropSelect = (propId: string) => {\n    setSelectedProp(propId);\n  };\n\n  const handleBetSelect = (\n    amount: number,\n    type: 'over' | 'under',\n    modifier?: 'goblin' | 'devil'\n  ) => {\n    notificationService.notify(\n      'success',\n      'Bet Placed',\n      `$${amount} on ${type.toUpperCase()}${modifier ? ` (${modifier})` : ''}`\n    );\n  };\n\n  return (\n    <div className=\"p-6 space-y-8 min-h-screen bg-gradient-to-br from-blue-900/80 to-blue-700/80 dark:from-gray-900 dark:to-gray-800 transition-colors\">\n      <GlassCard className=\"mb-8\">\n        <h2 className=\"text-2xl font-bold text-blue-900 dark:text-blue-100 mb-4\">Player Props</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\n          {samplePlayers.map((player, idx) =>\n            player.props.map((prop, pidx) => (\n              <EnhancedPropCard\n                key={prop.id}\n                playerName={player.player.name}\n                team={player.player.team}\n                position={player.player.position}\n                statType={prop.name}\n                line={prop.value}\n                overOdds={prop.overMultiplier}\n                underOdds={prop.underMultiplier}\n                pickType={prop.modifier || 'normal'}\n                trendValue={prop.fireCount}\n                gameInfo={{ opponent: 'TBD', day: 'Fri', time: '7:30pm' }}\n                playerImageUrl={player.player.imageUrl}\n                onSelect={() => {}}\n                onViewDetails={() => {}}\n              />\n            ))\n          )}\n        </div>\n      </GlassCard>\n      {/* Advanced Widgets or analytics can be added here as needed */}\n    </div>\n  );\n};\n\nexport default PropsPage;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\RegisterPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\RegisterPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\RegisterPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\RiskManagerPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\RiskManagerPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\RiskManagerPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\SHAPExplain.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\SHAPExplain.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\SHAPExplain.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Settings.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Settings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Settings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\SettingsPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\SettingsPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\SettingsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\SportsRadarTestPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\StrategiesPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\StrategiesPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\StrategiesPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Trends.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Trends.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\Trends.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\ForgotPasswordPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\ForgotPasswordPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\ForgotPasswordPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\LoginPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\LoginPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\LoginPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\RegisterPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\RegisterPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\RegisterPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\ResetPasswordPage.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\ResetPasswordPage.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\auth\\ResetPasswordPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\pages\\index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\AuthProvider.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\AuthProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\AuthProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\SafeThemeProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\SafeThemeProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\ThemeProvider.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\ThemeProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\ThemeProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\UniversalThemeProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\UniversalThemeProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\useAuth.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\providers\\useAuth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\quantum\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\quantum\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\routes\\CyberRoutes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\routes\\CyberRoutes.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\UniversalCleanup.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\UniversalCleanup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\automate-updates.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\automate-updates.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\automate-updates.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\cleanup-duplicates.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\execute-phase-3.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\migrate-imports.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\runAutomation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\runAutomation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\runAutomation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\start.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\start.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\start.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\updateData.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\updateData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\scripts\\updateData.ts","messages":[{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":11,"column":26,"nodeType":"BlockStatement","messageId":"unexpected","endLine":12,"endColumn":6,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[292,297],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import 'reflect-metadata';\nimport { DataScrapingService } from '../services/dataScrapingService';\n\nasync function main() {\n  try {\n    const service = DataScrapingService.getInstance();\n\n    const data = await service.fetchPlayerData();\n\n    // Log some sample data\n    if (data.length > 0) {\n    }\n  } catch (error) {\n    console.error('Error running data update:', error);\n  }\n}\n\nmain();\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\APIConfigurationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\AnalyticsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\AnalyticsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\AnalyticsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ApiErrorHandler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ApiService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ApiService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ArbitrageService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ArbitrageService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ArbitrageService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\BackendIntegrationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\BackendIntegrationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\BackendIntegrationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ESPNService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ESPNService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ESPNService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\EnhancedDataSourcesService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\IntelligenceOrchestrator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\LLMService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\LLMService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\LLMService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\LiveAPIIntegrationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\MLSimulationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\MLSimulationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\MLSimulationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\PerformanceTrackingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\PerformanceTrackingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\PerformanceTrackingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\PrizePicksAPI.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\PrizePicksAPI.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\PrizePicksAPI.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\PrizePicksApiService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\PrizePicksApiService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\PrizePicksApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\RealDataManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\RealTimeMoneyMakingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\RealTimeMoneyMakingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\RealTimeMoneyMakingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\RiskManagerService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\RiskManagerService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\RiskManagerService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SocialSentimentService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SocialSentimentService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SocialSentimentService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SocialSentimentServiceModern.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SocialSentimentServiceModern.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SocialSentimentServiceModern.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SportradarService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SportradarService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SportradarService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\SportsRadarService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\TheOddsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UltimateServices.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UltimateServices.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UltraAccuracyBackgroundService.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":10,"column":36,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":10,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":12,"column":31,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":12,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":19,"column":32,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":19,"endColumn":40}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Ultra Accuracy Background Service\n * Automatically enhances Money Maker and PrizePicks predictions using Ultra Accuracy engine\n */\n\nimport { backendApi } from \"./backendApi\";\n\n// Simple browser-compatible event emitter\nclass SimpleEventEmitter {\n  private events: { [key: string]: Function[] } = {};\n\n  on(event: string, callback: Function): void {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(callback);\n  }\n\n  off(event: string, callback: Function): void {\n    if (this.events[event]) {\n      this.events[event] = this.events[event].filter((cb) => cb !== callback);\n    }\n  }\n\n  emit(event: string, ...args: any[]): void {\n    if (this.events[event]) {\n      this.events[event].forEach((callback) => callback(...args));\n    }\n  }\n}\n\nexport interface UltraAccuracyEnhancement {\n  originalPrediction: any;\n  enhancedPrediction: any;\n  accuracyBoost: number;\n  confidenceAdjustment: number;\n  riskAdjustment: number;\n  timestamp: string;\n}\n\nexport interface UltraAccuracyConfig {\n  enabled: boolean;\n  targetAccuracy: number;\n  minConfidenceThreshold: number;\n  maxProcessingTime: number;\n  enhanceMoneyMaker: boolean;\n  enhancePrizePicks: boolean;\n  enhanceArbitrage: boolean;\n}\n\nclass UltraAccuracyBackgroundService extends SimpleEventEmitter {\n  private static instance: UltraAccuracyBackgroundService;\n  private config: UltraAccuracyConfig;\n  private processingQueue: Array<any> = [];\n  private isProcessing: boolean = false;\n  private enhancementCache: Map<string, UltraAccuracyEnhancement> = new Map();\n\n  private constructor() {\n    super();\n    this.config = {\n      enabled: true,\n      targetAccuracy: 99.5,\n      minConfidenceThreshold: 0.85,\n      maxProcessingTime: 5000, // 5 seconds max\n      enhanceMoneyMaker: true,\n      enhancePrizePicks: true,\n      enhanceArbitrage: true,\n    };\n\n    // Start background processing\n    this.startBackgroundProcessing();\n  }\n\n  public static getInstance(): UltraAccuracyBackgroundService {\n    if (!UltraAccuracyBackgroundService.instance) {\n      UltraAccuracyBackgroundService.instance =\n        new UltraAccuracyBackgroundService();\n    }\n    return UltraAccuracyBackgroundService.instance;\n  }\n\n  /**\n   * Enhance predictions with Ultra Accuracy\n   */\n  public async enhancePredictions(predictions: any[]): Promise<any[]> {\n    if (!this.config.enabled || !predictions.length) {\n      return predictions;\n    }\n\n    const enhanced = [];\n\n    for (const prediction of predictions) {\n      try {\n        const cacheKey = this.generateCacheKey(prediction);\n        let enhancement = this.enhancementCache.get(cacheKey);\n\n        if (!enhancement) {\n          enhancement = await this.processUltraAccuracyEnhancement(prediction);\n          this.enhancementCache.set(cacheKey, enhancement);\n        }\n\n        // Apply enhancement to the prediction\n        const enhancedPrediction = this.applyEnhancement(\n          prediction,\n          enhancement,\n        );\n        enhanced.push(enhancedPrediction);\n      } catch (error) {\n        console.warn(\n          \"[Ultra Accuracy] Enhancement failed for prediction:\",\n          prediction.id,\n          error,\n        );\n        // Fallback to original prediction\n        enhanced.push(prediction);\n      }\n    }\n\n    return enhanced;\n  }\n\n  /**\n   * Enhance Money Maker recommendations\n   */\n  public async enhanceMoneyMakerRecommendations(\n    recommendations: any,\n  ): Promise<any> {\n    if (!this.config.enhanceMoneyMaker || !recommendations) {\n      return recommendations;\n    }\n\n    try {\n      const ultraAccuracyData = await this.generateUltraAccuracyAnalysis();\n\n      return {\n        ...recommendations,\n        confidence: Math.min(recommendations.confidence * 1.15, 99.9), // Boost confidence by 15%\n        expectedProfit:\n          recommendations.expectedProfit *\n          (1 + ultraAccuracyData.edgeImprovement),\n        riskLevel: this.adjustRiskLevel(\n          recommendations.riskLevel,\n          ultraAccuracyData.riskReduction,\n        ),\n        picks: recommendations.picks?.map((pick: any) => ({\n          ...pick,\n          confidence: Math.min(pick.confidence * 1.12, 99.9), // Boost pick confidence by 12%\n          reasoning: `${pick.reasoning} [Enhanced with Ultra-Accuracy AI achieving ${this.config.targetAccuracy}% prediction accuracy]`,\n          ultraAccuracyScore: ultraAccuracyData.accuracyScore,\n        })),\n        ultraAccuracyEnhanced: true,\n        enhancementDetails: {\n          accuracyBoost: ultraAccuracyData.accuracyBoost,\n          edgeImprovement: ultraAccuracyData.edgeImprovement,\n          riskReduction: ultraAccuracyData.riskReduction,\n          processingTime: ultraAccuracyData.processingTime,\n        },\n      };\n    } catch (error) {\n      console.warn(\"[Ultra Accuracy] Money Maker enhancement failed:\", error);\n      return recommendations;\n    }\n  }\n\n  /**\n   * Enhance PrizePicks player props\n   */\n  public async enhancePrizePicksProps(props: any[]): Promise<any[]> {\n    if (!this.config.enhancePrizePicks || !props.length) {\n      return props;\n    }\n\n    try {\n      const enhanced = [];\n\n      for (const prop of props) {\n        const ultraAccuracyAnalysis = await this.analyzePlayerProp(prop);\n\n        enhanced.push({\n          ...prop,\n          confidence: Math.min(prop.confidence * 1.18, 99.9), // Boost confidence by 18%\n          projectedValue:\n            prop.projectedValue * (1 + ultraAccuracyAnalysis.valueAdjustment),\n          recommendation: this.enhanceRecommendation(\n            prop.recommendation,\n            ultraAccuracyAnalysis,\n          ),\n          ultraAccuracyMetrics: {\n            playerFormScore: ultraAccuracyAnalysis.playerFormScore,\n            matchupAdvantage: ultraAccuracyAnalysis.matchupAdvantage,\n            venueImpact: ultraAccuracyAnalysis.venueImpact,\n            weatherFactor: ultraAccuracyAnalysis.weatherFactor,\n            injuryRisk: ultraAccuracyAnalysis.injuryRisk,\n            marketInefficiency: ultraAccuracyAnalysis.marketInefficiency,\n          },\n          ultraAccuracyEnhanced: true,\n        });\n      }\n\n      return enhanced;\n    } catch (error) {\n      console.warn(\"[Ultra Accuracy] PrizePicks enhancement failed:\", error);\n      return props;\n    }\n  }\n\n  /**\n   * Generate Ultra Accuracy analysis for general use\n   */\n  private async generateUltraAccuracyAnalysis(): Promise<any> {\n    // Simulate ultra-accuracy processing\n    const processingStart = Date.now();\n\n    // Simulate advanced AI processing\n    await new Promise((resolve) =>\n      setTimeout(resolve, 100 + Math.random() * 200),\n    );\n\n    return {\n      accuracyScore: 0.99 + Math.random() * 0.009, // 99.0% - 99.9%\n      accuracyBoost: 0.08 + Math.random() * 0.04, // 8-12% boost\n      edgeImprovement: 0.15 + Math.random() * 0.1, // 15-25% edge improvement\n      riskReduction: 0.2 + Math.random() * 0.15, // 20-35% risk reduction\n      processingTime: Date.now() - processingStart,\n      quantumFeatures: {\n        ensembleConsensus: 0.95 + Math.random() * 0.04,\n        behavioralBiasCorrection: 0.12 + Math.random() * 0.08,\n        marketMicrostructure: 0.08 + Math.random() * 0.05,\n        alternativeDataSignals: 0.18 + Math.random() * 0.12,\n      },\n    };\n  }\n\n  /**\n   * Analyze individual player prop for Ultra Accuracy enhancement\n   */\n  private async analyzePlayerProp(prop: any): Promise<any> {\n    // Simulate player-specific ultra-accuracy analysis\n    await new Promise((resolve) =>\n      setTimeout(resolve, 50 + Math.random() * 100),\n    );\n\n    return {\n      playerFormScore: 0.85 + Math.random() * 0.14, // 85-99%\n      matchupAdvantage: -0.1 + Math.random() * 0.2, // -10% to +10%\n      venueImpact: -0.05 + Math.random() * 0.1, // -5% to +5%\n      weatherFactor: Math.random() * 0.1 - 0.05, // -5% to +5%\n      injuryRisk: Math.random() * 0.15, // 0-15% risk\n      marketInefficiency: Math.random() * 0.2, // 0-20% inefficiency\n      valueAdjustment: 0.05 + Math.random() * 0.15, // 5-20% value boost\n    };\n  }\n\n  /**\n   * Apply enhancement to a prediction\n   */\n  private applyEnhancement(\n    prediction: any,\n    enhancement: UltraAccuracyEnhancement,\n  ): any {\n    return {\n      ...prediction,\n      confidence: Math.min(\n        prediction.confidence * (1 + enhancement.confidenceAdjustment),\n        0.999,\n      ),\n      expected_value:\n        prediction.expected_value * (1 + enhancement.accuracyBoost),\n      ultraAccuracyEnhanced: true,\n      enhancement: {\n        accuracyBoost: enhancement.accuracyBoost,\n        confidenceAdjustment: enhancement.confidenceAdjustment,\n        riskAdjustment: enhancement.riskAdjustment,\n        timestamp: enhancement.timestamp,\n      },\n    };\n  }\n\n  /**\n   * Process Ultra Accuracy enhancement for a single prediction\n   */\n  private async processUltraAccuracyEnhancement(\n    prediction: any,\n  ): Promise<UltraAccuracyEnhancement> {\n    const startTime = Date.now();\n\n    // Simulate ultra-accuracy processing\n    await new Promise((resolve) =>\n      setTimeout(\n        resolve,\n        Math.min(this.config.maxProcessingTime, 200 + Math.random() * 300),\n      ),\n    );\n\n    const accuracyBoost = 0.08 + Math.random() * 0.07; // 8-15% boost\n    const confidenceAdjustment = 0.1 + Math.random() * 0.08; // 10-18% boost\n    const riskAdjustment = -0.15 + Math.random() * 0.1; // 5-15% risk reduction\n\n    return {\n      originalPrediction: prediction,\n      enhancedPrediction: null, // Will be set when applied\n      accuracyBoost,\n      confidenceAdjustment,\n      riskAdjustment,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  /**\n   * Enhance recommendation text with Ultra Accuracy insights\n   */\n  private enhanceRecommendation(originalRec: string, analysis: any): string {\n    const insights = [];\n\n    if (analysis.playerFormScore > 0.9) {\n      insights.push(\"exceptional current form\");\n    }\n    if (analysis.matchupAdvantage > 0.05) {\n      insights.push(\"favorable matchup dynamics\");\n    }\n    if (analysis.marketInefficiency > 0.1) {\n      insights.push(\"significant market value detected\");\n    }\n\n    const enhancementText =\n      insights.length > 0\n        ? ` Ultra-Accuracy AI identifies: ${insights.join(\", \")}.`\n        : \" Enhanced with 99%+ accuracy AI analysis.\";\n\n    return originalRec + enhancementText;\n  }\n\n  /**\n   * Adjust risk level based on Ultra Accuracy analysis\n   */\n  private adjustRiskLevel(originalRisk: string, riskReduction: number): string {\n    if (riskReduction > 0.25) {\n      // Significant risk reduction\n      if (originalRisk === \"high\") return \"medium\";\n      if (originalRisk === \"medium\") return \"low\";\n    }\n    return originalRisk;\n  }\n\n  /**\n   * Generate cache key for prediction\n   */\n  private generateCacheKey(prediction: any): string {\n    return `${prediction.id || prediction.event}_${prediction.sport}_${Date.now()}`;\n  }\n\n  /**\n   * Start background processing loop\n   */\n  private startBackgroundProcessing(): void {\n    setInterval(() => {\n      if (!this.isProcessing && this.processingQueue.length > 0) {\n        this.processQueue();\n      }\n    }, 1000); // Check every second\n\n    // Clean cache every 5 minutes\n    setInterval(\n      () => {\n        this.cleanCache();\n      },\n      5 * 60 * 1000,\n    );\n  }\n\n  /**\n   * Process queued predictions\n   */\n  private async processQueue(): Promise<void> {\n    if (this.isProcessing) return;\n\n    this.isProcessing = true;\n\n    try {\n      while (this.processingQueue.length > 0) {\n        const item = this.processingQueue.shift();\n        if (item) {\n          await this.processUltraAccuracyEnhancement(item);\n        }\n      }\n    } catch (error) {\n      console.error(\"[Ultra Accuracy] Background processing error:\", error);\n    } finally {\n      this.isProcessing = false;\n    }\n  }\n\n  /**\n   * Clean old cache entries\n   */\n  private cleanCache(): void {\n    const now = Date.now();\n    const maxAge = 10 * 60 * 1000; // 10 minutes\n\n    for (const [key, enhancement] of this.enhancementCache.entries()) {\n      const enhancementAge = now - new Date(enhancement.timestamp).getTime();\n      if (enhancementAge > maxAge) {\n        this.enhancementCache.delete(key);\n      }\n    }\n  }\n\n  /**\n   * Update configuration\n   */\n  public updateConfig(newConfig: Partial<UltraAccuracyConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    this.emit(\"configUpdated\", this.config);\n  }\n\n  /**\n   * Get current configuration\n   */\n  public getConfig(): UltraAccuracyConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Get enhancement statistics\n   */\n  public getStats(): any {\n    return {\n      cacheSize: this.enhancementCache.size,\n      queueSize: this.processingQueue.length,\n      isProcessing: this.isProcessing,\n      config: this.config,\n      uptime: Date.now() / 1000, // Browser-compatible uptime simulation\n    };\n  }\n}\n\n// Export singleton instance\nexport const ultraAccuracyBackgroundService =\n  UltraAccuracyBackgroundService.getInstance();\nexport default ultraAccuracyBackgroundService;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UltraAccuracyIntegrationService.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":11,"column":36,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":11,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":13,"column":31,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":13,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":20,"column":32,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":20,"endColumn":40}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Ultra Accuracy Integration Service\n * Ensures Ultra Accuracy is properly integrated across all components\n */\n\nimport { ultraAccuracyBackgroundService } from \"./UltraAccuracyBackgroundService\";\nimport { integrationService } from \"./integrationService\";\n\n// Simple browser-compatible event emitter\nclass SimpleEventEmitter {\n  private events: { [key: string]: Function[] } = {};\n\n  on(event: string, callback: Function): void {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(callback);\n  }\n\n  off(event: string, callback: Function): void {\n    if (this.events[event]) {\n      this.events[event] = this.events[event].filter((cb) => cb !== callback);\n    }\n  }\n\n  emit(event: string, ...args: any[]): void {\n    if (this.events[event]) {\n      this.events[event].forEach((callback) => callback(...args));\n    }\n  }\n\n  removeAllListeners(): void {\n    this.events = {};\n  }\n}\n\ninterface UltraAccuracyStatus {\n  isActive: boolean;\n  accuracyBoost: number;\n  enhancementsCount: number;\n  lastUpdate: string;\n  moneyMakerEnhanced: boolean;\n  prizePicksEnhanced: boolean;\n  predictionQuality: number;\n}\n\nclass UltraAccuracyIntegrationService extends SimpleEventEmitter {\n  private static instance: UltraAccuracyIntegrationService;\n  private status: UltraAccuracyStatus;\n  private integrationCheckInterval: number | null = null;\n\n  private constructor() {\n    super();\n    this.status = {\n      isActive: false,\n      accuracyBoost: 0,\n      enhancementsCount: 0,\n      lastUpdate: new Date().toISOString(),\n      moneyMakerEnhanced: false,\n      prizePicksEnhanced: false,\n      predictionQuality: 0,\n    };\n\n    this.initializeIntegration();\n  }\n\n  public static getInstance(): UltraAccuracyIntegrationService {\n    if (!UltraAccuracyIntegrationService.instance) {\n      UltraAccuracyIntegrationService.instance =\n        new UltraAccuracyIntegrationService();\n    }\n    return UltraAccuracyIntegrationService.instance;\n  }\n\n  /**\n   * Initialize Ultra Accuracy integration\n   */\n  private initializeIntegration(): void {\n    // Enable Ultra Accuracy background service\n    ultraAccuracyBackgroundService.updateConfig({\n      enabled: true,\n      targetAccuracy: 99.5,\n      enhanceMoneyMaker: true,\n      enhancePrizePicks: true,\n      enhanceArbitrage: true,\n    });\n\n    this.status.isActive = true;\n    this.status.lastUpdate = new Date().toISOString();\n\n    // Set up periodic integration checks\n    this.integrationCheckInterval = setInterval(() => {\n      this.performIntegrationCheck();\n    }, 30000); // Check every 30 seconds\n\n    // Listen to background service events\n    ultraAccuracyBackgroundService.on(\"configUpdated\", (config) => {\n      this.status.moneyMakerEnhanced = config.enhanceMoneyMaker;\n      this.status.prizePicksEnhanced = config.enhancePrizePicks;\n      this.emit(\"statusUpdated\", this.status);\n    });\n\n    console.log(\"[Ultra Accuracy] Integration service initialized\");\n  }\n\n  /**\n   * Perform integration health check\n   */\n  private async performIntegrationCheck(): Promise<void> {\n    try {\n      // Check if backend is available\n      const healthStatus = await integrationService.getHealthStatus();\n\n      // Check background service stats\n      const bgStats = ultraAccuracyBackgroundService.getStats();\n\n      // Update status\n      this.status = {\n        ...this.status,\n        isActive: healthStatus.status === \"online\" && bgStats.config.enabled,\n        enhancementsCount: bgStats.cacheSize,\n        accuracyBoost: this.calculateAccuracyBoost(),\n        predictionQuality: this.calculatePredictionQuality(),\n        lastUpdate: new Date().toISOString(),\n      };\n\n      this.emit(\"statusUpdated\", this.status);\n    } catch (error) {\n      console.warn(\"[Ultra Accuracy] Integration check failed:\", error);\n      this.status.isActive = false;\n      this.emit(\"statusUpdated\", this.status);\n    }\n  }\n\n  /**\n   * Calculate current accuracy boost\n   */\n  private calculateAccuracyBoost(): number {\n    // Simulate accuracy boost calculation based on recent enhancements\n    return 8.5 + Math.random() * 3.5; // 8.5% - 12% boost\n  }\n\n  /**\n   * Calculate prediction quality score\n   */\n  private calculatePredictionQuality(): number {\n    // Simulate prediction quality score\n    return 0.985 + Math.random() * 0.014; // 98.5% - 99.9%\n  }\n\n  /**\n   * Get current Ultra Accuracy status\n   */\n  public getStatus(): UltraAccuracyStatus {\n    return { ...this.status };\n  }\n\n  /**\n   * Force refresh of all Ultra Accuracy enhanced data\n   */\n  public async refreshEnhancements(): Promise<void> {\n    try {\n      console.log(\"[Ultra Accuracy] Refreshing enhancements...\");\n\n      // Clear background service cache to force fresh enhancements\n      ultraAccuracyBackgroundService.updateConfig({\n        enabled: false,\n      });\n\n      await new Promise((resolve) => setTimeout(resolve, 100));\n\n      ultraAccuracyBackgroundService.updateConfig({\n        enabled: true,\n      });\n\n      this.status.enhancementsCount = 0;\n      this.status.lastUpdate = new Date().toISOString();\n\n      this.emit(\"enhancementsRefreshed\");\n      console.log(\"[Ultra Accuracy] Enhancements refreshed\");\n    } catch (error) {\n      console.error(\"[Ultra Accuracy] Failed to refresh enhancements:\", error);\n    }\n  }\n\n  /**\n   * Get enhancement metrics for display\n   */\n  public getEnhancementMetrics(): any {\n    return {\n      totalEnhancements: this.status.enhancementsCount,\n      accuracyImprovement: this.status.accuracyBoost,\n      qualityScore: this.status.predictionQuality,\n      moneyMakerActive: this.status.moneyMakerEnhanced,\n      prizePicksActive: this.status.prizePicksEnhanced,\n      lastUpdate: this.status.lastUpdate,\n      isOnline: this.status.isActive,\n    };\n  }\n\n  /**\n   * Test Ultra Accuracy functionality\n   */\n  public async testIntegration(): Promise<{\n    success: boolean;\n    results: Array<{ component: string; status: string; enhanced: boolean }>;\n  }> {\n    const results = [];\n\n    try {\n      // Test Money Maker enhancement\n      try {\n        const mockRecommendations = {\n          investment: 100,\n          confidence: 85,\n          picks: [{ game: \"Test Game\", pick: \"Test Pick\", confidence: 80 }],\n        };\n        const enhanced =\n          await ultraAccuracyBackgroundService.enhanceMoneyMakerRecommendations(\n            mockRecommendations,\n          );\n        results.push({\n          component: \"Money Maker\",\n          status: enhanced.ultraAccuracyEnhanced ? \"Enhanced\" : \"Standard\",\n          enhanced: !!enhanced.ultraAccuracyEnhanced,\n        });\n      } catch (error) {\n        results.push({\n          component: \"Money Maker\",\n          status: \"Error\",\n          enhanced: false,\n        });\n      }\n\n      // Test PrizePicks enhancement\n      try {\n        const mockProps = [\n          {\n            id: \"test1\",\n            player: \"Test Player\",\n            stat: \"Points\",\n            confidence: 0.75,\n          },\n        ];\n        const enhanced =\n          await ultraAccuracyBackgroundService.enhancePrizePicksProps(\n            mockProps,\n          );\n        results.push({\n          component: \"PrizePicks\",\n          status: enhanced[0]?.ultraAccuracyEnhanced ? \"Enhanced\" : \"Standard\",\n          enhanced: !!enhanced[0]?.ultraAccuracyEnhanced,\n        });\n      } catch (error) {\n        results.push({\n          component: \"PrizePicks\",\n          status: \"Error\",\n          enhanced: false,\n        });\n      }\n\n      // Test Prediction enhancement\n      try {\n        const mockPredictions = [\n          {\n            id: \"test_pred\",\n            confidence: 0.8,\n            expected_value: 0.05,\n          },\n        ];\n        const enhanced =\n          await ultraAccuracyBackgroundService.enhancePredictions(\n            mockPredictions,\n          );\n        results.push({\n          component: \"Predictions\",\n          status: enhanced[0]?.ultraAccuracyEnhanced ? \"Enhanced\" : \"Standard\",\n          enhanced: !!enhanced[0]?.ultraAccuracyEnhanced,\n        });\n      } catch (error) {\n        results.push({\n          component: \"Predictions\",\n          status: \"Error\",\n          enhanced: false,\n        });\n      }\n\n      const success = results.every(\n        (r) => r.enhanced || r.status === \"Standard\",\n      );\n      return { success, results };\n    } catch (error) {\n      console.error(\"[Ultra Accuracy] Integration test failed:\", error);\n      return {\n        success: false,\n        results: [\n          {\n            component: \"Integration Service\",\n            status: \"Critical Error\",\n            enhanced: false,\n          },\n        ],\n      };\n    }\n  }\n\n  /**\n   * Update Ultra Accuracy configuration\n   */\n  public updateConfig(config: {\n    enabled?: boolean;\n    targetAccuracy?: number;\n    enhanceMoneyMaker?: boolean;\n    enhancePrizePicks?: boolean;\n  }): void {\n    try {\n      // Update background service config\n      ultraAccuracyBackgroundService.updateConfig(config);\n\n      // Update local status\n      if (typeof config.enabled !== \"undefined\") {\n        this.status.isActive = config.enabled;\n      }\n      if (typeof config.enhanceMoneyMaker !== \"undefined\") {\n        this.status.moneyMakerEnhanced = config.enhanceMoneyMaker;\n      }\n      if (typeof config.enhancePrizePicks !== \"undefined\") {\n        this.status.prizePicksEnhanced = config.enhancePrizePicks;\n      }\n\n      this.status.lastUpdate = new Date().toISOString();\n      this.emit(\"configUpdated\", config);\n      this.emit(\"statusUpdated\", this.status);\n\n      console.log(\"[Ultra Accuracy] Configuration updated:\", config);\n    } catch (error) {\n      console.warn(\"[Ultra Accuracy] Failed to update config:\", error);\n    }\n  }\n\n  /**\n   * Get live Ultra Accuracy stats for dashboard display\n   */\n  public getLiveStats(): any {\n    const bgStats = ultraAccuracyBackgroundService.getStats();\n\n    return {\n      isActive: this.status.isActive,\n      targetAccuracy: bgStats.config.targetAccuracy,\n      currentQuality: this.status.predictionQuality,\n      enhancementsActive: this.status.enhancementsCount,\n      accuracyBoost: this.status.accuracyBoost,\n      processingQueue: bgStats.queueSize,\n      cacheSize: bgStats.cacheSize,\n      lastUpdate: this.status.lastUpdate,\n      components: {\n        moneyMaker: this.status.moneyMakerEnhanced,\n        prizePicks: this.status.prizePicksEnhanced,\n        predictions: bgStats.config.enabled,\n      },\n    };\n  }\n\n  /**\n   * Cleanup resources\n   */\n  public destroy(): void {\n    if (this.integrationCheckInterval) {\n      clearInterval(this.integrationCheckInterval);\n      this.integrationCheckInterval = null;\n    }\n    this.removeAllListeners();\n  }\n}\n\n// Export singleton instance\nexport const ultraAccuracyIntegrationService =\n  UltraAccuracyIntegrationService.getInstance();\nexport default ultraAccuracyIntegrationService;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UltraAccuracyService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UnifiedDataService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UnifiedDataService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UnifiedDataService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UniversalServiceLayer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UniversalServiceLayer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UniversalServiceLayer_backup.js","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: 'return' outside of function","line":4,"column":13}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ============================================================================\n// BASE     async getRecent(limit = 10) {\n        if (this.config.enableMocking) {\n            return this.getMockPredictions(limit);\n        }\n        return this.retryRequest(() => this.request(`/api/predictions?limit=${limit}`));\n    }\n    async getMetrics() {\n        if (this.config.enableMocking) {\n            return this.getMockMetrics();\n        }\n        return this.retryRequest(() => this.request(\"/api/engine/metrics\"));\n    }S\n// ============================================================================\nexport class BaseService {\n    constructor(config = {}) {\n        this.config = {\n            baseURL: import.meta.env.VITE_API_URL || \"http://localhost:8000\",\n            timeout: 10000,\n            retries: 3,\n            retryDelay: 1000,\n            enableCaching: true,\n            enableMocking: import.meta.env.DEV,\n            ...config,\n        };\n    }\n    async request(endpoint, options = {}) {\n        const url = `${this.config.baseURL}${endpoint}`;\n        const controller = new AbortController();\n        // Set timeout\n        const timeoutId = setTimeout(() => controller.abort(), this.config.timeout);\n        try {\n            const response = await fetch(url, {\n                ...options,\n                signal: controller.signal,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: this.getAuthHeader(),\n                    ...this.config.headers,\n                    ...options.headers,\n                },\n            });\n            clearTimeout(timeoutId);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            return {\n                data,\n                success: true,\n                timestamp: new Date().toISOString(),\n            };\n        }\n        catch (error) {\n            clearTimeout(timeoutId);\n            if (error.name === \"AbortError\") {\n                throw new Error(\"Request timeout\");\n            }\n            throw error;\n        }\n    }\n    async retryRequest(requestFn, maxRetries = this.config.retries || 3) {\n        let lastError;\n        for (let i = 0; i <= maxRetries; i++) {\n            try {\n                return await requestFn();\n            }\n            catch (error) {\n                lastError = error;\n                if (i < maxRetries) {\n                    await this.delay(this.config.retryDelay || 1000);\n                }\n            }\n        }\n        throw lastError;\n    }\n    delay(ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n    getAuthHeader() {\n        if (typeof window === \"undefined\")\n            return \"\";\n        const token = localStorage.getItem(\"auth_token\");\n        return token ? `Bearer ${token}` : \"\";\n    }\n    getCacheKey(key, params) {\n        if (!params)\n            return key;\n        const paramString = Object.keys(params)\n            .sort()\n            .map((k) => `${k}:${params[k]}`)\n            .join(\"|\");\n        return `${key}:${paramString}`;\n    }\n}\n// ============================================================================\n// PREDICTION SERVICE\n// ============================================================================\nexport class UniversalPredictionService extends BaseService {\n    async getRecentPredictions(limit = 10) {\n        if (this.config.enableMocking) {\n            return this.getMockPredictions(limit);\n        }\n        return this.retryRequest(() => this.request(`/api/predictions?limit=${limit}`));\n    }\n    async getEngineMetrics() {\n        if (this.config.enableMocking) {\n            return this.getMockMetrics();\n        }\n        return this.retryRequest(() => this.request(\"/api/engine/metrics\"));\n    }\n    async createPrediction(data) {\n        return this.retryRequest(() => this.request(\"/predictions\", {\n            method: \"POST\",\n            body: JSON.stringify(data),\n        }));\n    }\n    async updatePrediction(id, data) {\n        return this.retryRequest(() => this.request(`/predictions/${id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(data),\n        }));\n    }\n    async getMockPredictions(limit) {\n        await this.delay(500); // Simulate network delay\n        const mockPredictions = Array.from({ length: limit }, (_, i) => ({\n            id: `pred_${i + 1}`,\n            game: `Game ${i + 1}`,\n            prediction: Math.random() * 100,\n            confidence: 75 + Math.random() * 25,\n            timestamp: new Date(Date.now() - i * 3600000).toISOString(),\n            potentialWin: 100 + Math.random() * 500,\n            odds: Math.random() > 0.5\n                ? Math.floor(Math.random() * 200) + 100\n                : -(Math.floor(Math.random() * 200) + 100),\n            status: [\"pending\", \"won\", \"lost\"][Math.floor(Math.random() * 3)],\n        }));\n        return {\n            data: mockPredictions,\n            success: true,\n            timestamp: new Date().toISOString(),\n        };\n    }\n    async getMockMetrics() {\n        await this.delay(300);\n        return {\n            data: {\n                totalPredictions: 1247,\n                accuracy: 89.3,\n                totalProfit: 47230,\n                winRate: 85.6,\n                dataQuality: 94.2,\n            },\n            success: true,\n            timestamp: new Date().toISOString(),\n        };\n    }\n}\n// ============================================================================\n// BETTING SERVICE\n// ============================================================================\nexport class UniversalBettingService extends BaseService {\n    async getOpportunities() {\n        if (this.config.enableMocking) {\n            return this.getMockOpportunities();\n        }\n        return this.retryRequest(() => this.request(\"/api/betting/opportunities\"));\n    }\n    async placeBet(opportunity) {\n        return this.retryRequest(() => this.request(\"/betting/place\", {\n            method: \"POST\",\n            body: JSON.stringify(opportunity),\n        }));\n    }\n    async getBetHistory(userId) {\n        return this.retryRequest(() => this.request(`/betting/history/${userId}`));\n    }\n    async getMockOpportunities() {\n        await this.delay(400);\n        const mockOpportunities = Array.from({ length: 5 }, (_, i) => ({\n            id: `opp_${i + 1}`,\n            sport: [\"NFL\", \"NBA\", \"MLB\", \"NHL\"][Math.floor(Math.random() * 4)],\n            game: `Team A vs Team B ${i + 1}`,\n            type: [\"spread\", \"total\", \"moneyline\"][Math.floor(Math.random() * 3)],\n            odds: Math.random() > 0.5\n                ? Math.floor(Math.random() * 200) + 100\n                : -(Math.floor(Math.random() * 200) + 100),\n            confidence: 70 + Math.random() * 30,\n            expectedValue: Math.random() * 0.2,\n            stake: 100,\n            potentialReturn: 150 + Math.random() * 300,\n            book: [\"DraftKings\", \"FanDuel\", \"BetMGM\"][Math.floor(Math.random() * 3)],\n        }));\n        return {\n            data: mockOpportunities,\n            success: true,\n            timestamp: new Date().toISOString(),\n        };\n    }\n}\n// ============================================================================\n// USER SERVICE\n// ============================================================================\nexport class UniversalUserService extends BaseService {\n    async getProfile() {\n        if (this.config.enableMocking) {\n            return this.getMockProfile();\n        }\n        return this.retryRequest(() => this.request(\"/user/profile\"));\n    }\n    async updateProfile(data) {\n        return this.retryRequest(() => this.request(\"/user/profile\", {\n            method: \"PUT\",\n            body: JSON.stringify(data),\n        }));\n    }\n    async updatePreferences(preferences) {\n        return this.retryRequest(() => this.request(\"/user/preferences\", {\n            method: \"PUT\",\n            body: JSON.stringify({ preferences }),\n        }));\n    }\n    async getMockProfile() {\n        await this.delay(300);\n        return {\n            data: {\n                id: \"user_1\",\n                name: \"Alex Chen\",\n                email: \"alex@example.com\",\n                tier: \"Pro\",\n                balance: 127430.5,\n                totalProfit: 47230,\n                accuracy: 89.3,\n                winRate: 85.6,\n                preferences: {\n                    notifications: true,\n                    autobet: false,\n                    riskLevel: \"medium\",\n                },\n            },\n            success: true,\n            timestamp: new Date().toISOString(),\n        };\n    }\n}\n// ============================================================================\n// ANALYTICS SERVICE\n// ============================================================================\nexport class UniversalAnalyticsService extends BaseService {\n    async getPerformanceMetrics(timeRange = \"7d\") {\n        return this.retryRequest(() => this.request(`/analytics/performance?range=${timeRange}`));\n    }\n    async getMLInsights() {\n        return this.retryRequest(() => this.request(\"/analytics/ml-insights\"));\n    }\n    async getMarketAnalysis() {\n        return this.retryRequest(() => this.request(\"/analytics/market\"));\n    }\n}\n// ============================================================================\n// SERVICE FACTORY\n// ============================================================================\nexport class UniversalServiceFactory {\n    static configure(config) {\n        this.config = { ...this.config, ...config };\n    }\n    static getPredictionService() {\n        if (!this.instances.has(\"prediction\")) {\n            this.instances.set(\"prediction\", new UniversalPredictionService(this.config));\n        }\n        return this.instances.get(\"prediction\");\n    }\n    static getBettingService() {\n        if (!this.instances.has(\"betting\")) {\n            this.instances.set(\"betting\", new UniversalBettingService(this.config));\n        }\n        return this.instances.get(\"betting\");\n    }\n    static getUserService() {\n        if (!this.instances.has(\"user\")) {\n            this.instances.set(\"user\", new UniversalUserService(this.config));\n        }\n        return this.instances.get(\"user\");\n    }\n    static getAnalyticsService() {\n        if (!this.instances.has(\"analytics\")) {\n            this.instances.set(\"analytics\", new UniversalAnalyticsService(this.config));\n        }\n        return this.instances.get(\"analytics\");\n    }\n    static clearInstances() {\n        this.instances.clear();\n    }\n}\nUniversalServiceFactory.instances = new Map();\nUniversalServiceFactory.config = {};\n// ============================================================================\n// REACT QUERY INTEGRATION\n// ============================================================================\nexport const createQueryKeys = {\n    predictions: {\n        all: [\"predictions\"],\n        recent: (limit) => [\"predictions\", \"recent\", limit],\n        metrics: () => [\"predictions\", \"metrics\"],\n    },\n    betting: {\n        all: [\"betting\"],\n        opportunities: () => [\"betting\", \"opportunities\"],\n        history: (userId) => [\"betting\", \"history\", userId],\n    },\n    user: {\n        all: [\"user\"],\n        profile: () => [\"user\", \"profile\"],\n    },\n    analytics: {\n        all: [\"analytics\"],\n        performance: (range) => [\"analytics\", \"performance\", range],\n        insights: () => [\"analytics\", \"ml-insights\"],\n        market: () => [\"analytics\", \"market\"],\n    },\n};\n// Default query configurations\nexport const defaultQueryConfig = {\n    staleTime: 30000, // 30 seconds\n    cacheTime: 300000, // 5 minutes\n    refetchOnWindowFocus: false,\n    retry: 2,\n};\n// ============================================================================\n// EXPORTS\n// ============================================================================\nexport default UniversalServiceFactory;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\UniversalServiceLayer_fixed.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\SocialSentimentService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\SocialSentimentService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\SocialSentimentService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\UnifiedPredictionService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\UnifiedPredictionService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\UnifiedPredictionService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\advancedPredictionService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\advancedPredictionService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\advancedPredictionService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\bettingOpportunityService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\bettingOpportunityService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\bettingOpportunityService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\marketAnalysisService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\marketAnalysisService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\marketAnalysisService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\predictionService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\predictionService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\predictionService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\prizePicksService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\prizePicksService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\__tests__\\prizePicksService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\adapters\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\adapters\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\adapters\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\adapters\\prizepicks.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\adapters\\prizepicks.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\adapters\\prizepicks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\adminService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\adminService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\adminService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\advancedAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\advancedAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\AnalyticsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\AnalyticsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\AnalyticsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\BacktestingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\BacktestingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\BacktestingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\BookmakerAnalysisService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\BookmakerAnalysisService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\BookmakerAnalysisService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\ModelPerformanceTracker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\ModelPerformanceTracker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\ModelPerformanceTracker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\PatternRecognitionService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\PatternRecognitionService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\PatternRecognitionService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\PerformanceHistoryService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\PerformanceHistoryService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\PerformanceHistoryService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\RiskAssessmentService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\RiskAssessmentService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\RiskAssessmentService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\ShapExplainerService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\ShapExplainerService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\ShapExplainerService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\UnifiedFeatureService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\UnifiedFeatureService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\UnifiedFeatureService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\advancedMLService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\advancedMLService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\advancedMLService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\bankrollService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\bankrollService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\bankrollService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\clusteringService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\clusteringService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\clusteringService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\confidenceService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\confidenceService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\confidenceService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\evolutionaryMLService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\evolutionaryMLService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\evolutionaryMLService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureCache.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureCache.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureCache.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureEngineeringService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureEngineeringService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureEngineeringService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureLogging.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureLogging.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureLogging.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureMonitor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureMonitor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureMonitor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureRegistry.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureRegistry.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureRegistry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureSelection.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureSelection.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureSelection.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureSelector.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureTransformation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureTransformation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureTransformation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureValidation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureValidation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\featureValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\hyperAdvancedMLService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\hyperAdvancedMLService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\hyperAdvancedMLService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\mlService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\mlService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\mlService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\mlService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\mlService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\mlService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\modelPerformanceService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\modelPerformanceService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\modelPerformanceService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\modelTrainingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\modelTrainingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\modelTrainingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\predictionOptimizationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\predictionOptimizationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\predictionOptimizationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\riskModelingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\riskModelingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\riskModelingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\timeSeriesService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\timeSeriesService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\timeSeriesService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\ultraMLService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\ultraMLService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\ultraMLService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\userPersonalizationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\userPersonalizationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\analytics\\userPersonalizationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api-fix.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\ApiService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\ApiService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\ApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\EnhancedApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\ProductionApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\client.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\client.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\client.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\api\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\audit\\AuditLogger.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\audit\\AuditLogger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\audit\\AuditLogger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\auth.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\auth.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\auth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\authService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\authService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\authService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\automation\\BettingAutomationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\automation\\BettingAutomationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\automation\\BettingAutomationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\backendApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bankroll.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bankroll.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bankroll.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bettingOpportunityService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bettingOpportunityService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bettingOpportunityService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bettingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bettingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bettingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bettingStrategy.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bettingStrategy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\bettingStrategy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\betting\\PlayerPropService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\betting\\PlayerPropService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\betting\\PlayerPropService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\betting\\sportsBettingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\betting\\sportsBettingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\betting\\sportsBettingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\cache.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\cache.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\cache.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\cloudMockService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\configService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\configService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\configService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\core\\UnifiedErrorService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\core\\UnifiedErrorService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\core\\UnifiedErrorService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\core\\UnifiedNotificationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\core\\UnifiedNotificationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\core\\UnifiedNotificationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\core\\UnifiedSettingsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\core\\UnifiedSettingsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\core\\UnifiedSettingsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dailyFantasy.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dailyFantasy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dailyFantasy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dailyFantasyService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dailyFantasyService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dailyFantasyService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dataOrchestrator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dataOrchestrator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dataOrchestrator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dataProcessor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dataProcessor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dataScrapingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dataScrapingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\dataScrapingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\DataIntegrationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\DataIntegrationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\DataIntegrationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\DataService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\DataService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\DataService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\HistoricalDataService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\HistoricalDataService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\HistoricalDataService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\UnifiedDataPipeline.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\UnifiedDataPipeline.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\data\\UnifiedDataPipeline.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhancedDataSources.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhancedDataSources.ts","messages":[{"ruleId":"no-useless-catch","severity":2,"message":"Unnecessary try/catch wrapper.","line":87,"column":5,"nodeType":"TryStatement","messageId":"unnecessaryCatch","endLine":110,"endColumn":6}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface EnhancedDataSource {\n  id: string;\n  name: string;\n  category: string;\n  connected: boolean;\n  quality: number;\n  reliability: number;\n  lastUpdate: Date;\n  data: any;\n  error: string | null;\n  metrics: {\n    latency: number;\n    uptime: number;\n    errorRate: number;\n  };\n}\n\nexport class EnhancedDataSourceManager {\n  private sources: Map<string, EnhancedDataSource> = new Map();\n  private updateInterval: NodeJS.Timeout | null = null;\n\n  async initializeAllSources(): Promise<Map<string, EnhancedDataSource>> {\n    const sourceConfigs = [\n      {\n        id: \"espn_api\",\n        name: \"ESPN API\",\n        category: \"sports_data\",\n        endpoint: \"https://site.api.espn.com/apis/site/v2/sports\",\n      },\n      {\n        id: \"prizepicks_props\",\n        name: \"PrizePicks Props\",\n        category: \"prizepicks\",\n        endpoint: \"https://api.prizepicks.com/projections\",\n      },\n      {\n        id: \"odds_api\",\n        name: \"Odds API\",\n        category: \"odds\",\n        endpoint: \"https://api.the-odds-api.com/v4/sports\",\n      },\n      {\n        id: \"reddit_sentiment\",\n        name: \"Reddit Sentiment\",\n        category: \"sentiment\",\n        endpoint: \"https://www.reddit.com/r/sportsbook/hot.json\",\n      },\n      {\n        id: \"weather_api\",\n        name: \"Weather API\",\n        category: \"weather\",\n        endpoint: \"https://api.open-meteo.com/v1/forecast\",\n      },\n    ];\n\n    for (const config of sourceConfigs) {\n      try {\n        const source = await this.initializeSource(config);\n        this.sources.set(config.id, source);\n      } catch (error) {\n        console.warn(`Failed to initialize ${config.name}:`, error);\n        // Add as disconnected source\n        this.sources.set(config.id, {\n          id: config.id,\n          name: config.name,\n          category: config.category,\n          connected: false,\n          quality: 0,\n          reliability: 0,\n          lastUpdate: new Date(),\n          data: null,\n          error: error.message,\n          metrics: { latency: 0, uptime: 0, errorRate: 1 },\n        });\n      }\n    }\n\n    // Start periodic updates\n    this.startPeriodicUpdates();\n\n    return this.sources;\n  }\n\n  private async initializeSource(config: any): Promise<EnhancedDataSource> {\n    const startTime = Date.now();\n\n    try {\n      // Simulate API call with timeout\n      const data = await this.fetchSourceData(config.endpoint, config.category);\n      const latency = Date.now() - startTime;\n\n      return {\n        id: config.id,\n        name: config.name,\n        category: config.category,\n        connected: true,\n        quality: 0.85 + Math.random() * 0.1, // Simulate quality score\n        reliability: 0.9 + Math.random() * 0.08,\n        lastUpdate: new Date(),\n        data,\n        error: null,\n        metrics: {\n          latency,\n          uptime: 0.99 + Math.random() * 0.01,\n          errorRate: Math.random() * 0.05,\n        },\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private async fetchSourceData(\n    endpoint: string,\n    category: string,\n  ): Promise<any> {\n    // Simulate different data based on category\n    switch (category) {\n      case \"sports_data\":\n        return this.generateSportsData();\n      case \"prizepicks\":\n        return this.generatePrizePicksData();\n      case \"odds\":\n        return this.generateOddsData();\n      case \"sentiment\":\n        return this.generateSentimentData();\n      case \"weather\":\n        return this.generateWeatherData();\n      default:\n        return { message: \"Mock data\", timestamp: new Date() };\n    }\n  }\n\n  private generateSportsData(): any {\n    return {\n      games: [\n        {\n          id: \"game_1\",\n          sport: \"NBA\",\n          homeTeam: \"Lakers\",\n          awayTeam: \"Warriors\",\n          gameTime: new Date(Date.now() + 3600000).toISOString(),\n          status: \"Scheduled\",\n        },\n      ],\n      players: [\n        {\n          id: \"player_1\",\n          name: \"LeBron James\",\n          team: \"Lakers\",\n          position: \"SF\",\n          sport: \"NBA\",\n          stats: { points: 25.4, rebounds: 7.8, assists: 6.2 },\n        },\n      ],\n    };\n  }\n\n  private generatePrizePicksData(): any {\n    return {\n      projections: [\n        {\n          id: \"proj_1\",\n          player_name: \"LeBron James\",\n          stat_type: \"Points\",\n          line: 25.5,\n          sport: \"NBA\",\n          confidence_score: 0.85,\n          expected_value: 3.2,\n        },\n      ],\n    };\n  }\n\n  private generateOddsData(): any {\n    return {\n      events: [\n        {\n          id: \"event_1\",\n          sport_title: \"NBA\",\n          commence_time: new Date(Date.now() + 3600000).toISOString(),\n          bookmakers: [\n            {\n              title: \"DraftKings\",\n              markets: [\n                {\n                  key: \"h2h\",\n                  outcomes: [\n                    { name: \"Lakers\", price: 1.85 },\n                    { name: \"Warriors\", price: 1.95 },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    };\n  }\n\n  private generateSentimentData(): any {\n    return {\n      posts: [\n        {\n          title: \"Lakers looking strong tonight\",\n          sentiment_score: 0.7,\n          upvotes: 156,\n          comments: 43,\n        },\n      ],\n      overall_sentiment: 0.6,\n    };\n  }\n\n  private generateWeatherData(): any {\n    return {\n      current_weather: {\n        temperature: 72,\n        windspeed: 8,\n        precipitation: 0,\n      },\n      game_impact_score: 0.1,\n    };\n  }\n\n  private startPeriodicUpdates(): void {\n    this.updateInterval = setInterval(async () => {\n      await this.refreshAllSources();\n    }, 300000); // Update every 5 minutes\n  }\n\n  async refreshAllSources(): Promise<void> {\n    const updatePromises = Array.from(this.sources.keys()).map(\n      async (sourceId) => {\n        try {\n          await this.refreshSource(sourceId);\n        } catch (error) {\n          console.warn(`Failed to refresh source ${sourceId}:`, error);\n        }\n      },\n    );\n\n    await Promise.all(updatePromises);\n  }\n\n  private async refreshSource(sourceId: string): Promise<void> {\n    const source = this.sources.get(sourceId);\n    if (!source) return;\n\n    const startTime = Date.now();\n\n    try {\n      const data = await this.fetchSourceData(\"\", source.category);\n      const latency = Date.now() - startTime;\n\n      // Update source\n      this.sources.set(sourceId, {\n        ...source,\n        connected: true,\n        lastUpdate: new Date(),\n        data,\n        error: null,\n        metrics: {\n          ...source.metrics,\n          latency,\n        },\n      });\n    } catch (error) {\n      this.sources.set(sourceId, {\n        ...source,\n        connected: false,\n        error: error.message,\n        metrics: {\n          ...source.metrics,\n          errorRate: Math.min(1, source.metrics.errorRate + 0.1),\n        },\n      });\n    }\n  }\n\n  getConnectedSources(): EnhancedDataSource[] {\n    return Array.from(this.sources.values()).filter(\n      (source) => source.connected,\n    );\n  }\n\n  getSourcesByCategory(category: string): EnhancedDataSource[] {\n    return Array.from(this.sources.values()).filter(\n      (source) => source.category === category,\n    );\n  }\n\n  getOverallDataQuality(): number {\n    const connectedSources = this.getConnectedSources();\n    if (connectedSources.length === 0) return 0;\n\n    return (\n      connectedSources.reduce((sum, source) => sum + source.quality, 0) /\n      connectedSources.length\n    );\n  }\n\n  getSourceReliability(): number {\n    const connectedSources = this.getConnectedSources();\n    if (connectedSources.length === 0) return 0;\n\n    return (\n      connectedSources.reduce((sum, source) => sum + source.reliability, 0) /\n      connectedSources.length\n    );\n  }\n\n  getAllSources(): Map<string, EnhancedDataSource> {\n    return new Map(this.sources);\n  }\n\n  getDataSourceMetrics(): any {\n    const connectedSources = this.getConnectedSources();\n\n    return {\n      totalSources: this.sources.size,\n      connectedSources: connectedSources.length,\n      averageLatency:\n        connectedSources.reduce((sum, s) => sum + s.metrics.latency, 0) /\n        connectedSources.length,\n      averageUptime:\n        connectedSources.reduce((sum, s) => sum + s.metrics.uptime, 0) /\n        connectedSources.length,\n      averageErrorRate:\n        connectedSources.reduce((sum, s) => sum + s.metrics.errorRate, 0) /\n        connectedSources.length,\n      dataQuality: this.getOverallDataQuality(),\n      reliability: this.getSourceReliability(),\n    };\n  }\n\n  disconnect(): void {\n    if (this.updateInterval) {\n      clearInterval(this.updateInterval);\n      this.updateInterval = null;\n    }\n  }\n}\n\nexport const enhancedDataSourceManager = new EnhancedDataSourceManager();\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhancedIntegrationBridge.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhanced\\AutonomousSportsbookService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhanced\\DailyFantasyService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhanced\\OptimizedSportsRadarService.ts","messages":[{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":252,"column":11,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":252,"endColumn":41,"suggestions":[{"messageId":"addBrackets","fix":{"range":[6552,6664],"text":"{ const currentWeek = week || 1;\n          path = `/games/2024/REG/${currentWeek}/schedule.json`;\n          break; }"},"desc":"Add {} brackets around the case block."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Optimized SportsRadar Service - Production Ready\n * Leverages all available SportsRadar trial APIs for comprehensive sports data\n * Quota: 1,000 requests per API, 1 QPS limit\n */\n\ninterface SportsRadarConfig {\n  apiKey: string;\n  baseUrl: string;\n  quotaLimit: number;\n  qpsLimit: number;\n  availableAPIs: string[];\n}\n\ninterface SportsRadarOdds {\n  sport: string;\n  event_id: string;\n  commence_time: string;\n  home_team: string;\n  away_team: string;\n  bookmakers: Array<{\n    bookmaker: string;\n    moneyline_home: number;\n    moneyline_away: number;\n    spread_home: number;\n    spread_away: number;\n    spread_line: number;\n    total_over: number;\n    total_under: number;\n    total_line: number;\n    last_updated: string;\n  }>;\n}\n\ninterface SportsRadarPlayerProps {\n  player_id: string;\n  player_name: string;\n  position: string;\n  team: string;\n  props: Array<{\n    prop_type: string;\n    line: number;\n    over_odds: number;\n    under_odds: number;\n    bookmaker: string;\n  }>;\n}\n\nexport class OptimizedSportsRadarService {\n  private readonly config: SportsRadarConfig;\n  private readonly cache: Map<string, { data: any; timestamp: number }>;\n  private readonly cacheTTL: number = 300000; // 5 minutes to conserve API quota\n  private lastRequestTime: number = 0;\n  private readonly rateLimitMs: number = 1100; // 1.1 seconds to stay under 1 QPS\n\n  // Available SportsRadar APIs based on trial access\n  private readonly apiEndpoints = {\n    // Odds Comparison APIs\n    odds_comparison_prematch: \"/odds-comparison/trial/v2/en/us\",\n    odds_comparison_player_props:\n      \"/odds-comparison-player-props/trial/v1/en/us\",\n    odds_comparison_futures: \"/odds-comparison-futures/trial/v1/en/us\",\n    odds_comparison_regular: \"/odds-comparison/trial/v2/en/us\",\n\n    // Sports APIs\n    nba: \"/nba/trial/v8/en\",\n    nfl: \"/nfl/trial/v7/en\",\n    nhl: \"/nhl/trial/v7/en\",\n    mlb: \"/mlb/trial/v7/en\",\n    wnba: \"/wnba/trial/v8/en\",\n    mma: \"/mma/trial/v2/en\",\n    soccer: \"/soccer/trial/v4/en\",\n    golf: \"/golf/trial/v3/en\",\n    tennis: \"/tennis/trial/v3/en\",\n  };\n\n  constructor() {\n    this.config = {\n      apiKey: import.meta.env.VITE_SPORTRADAR_API_KEY || \"\",\n      baseUrl:\n        import.meta.env.VITE_SPORTRADAR_API_ENDPOINT ||\n        \"https://api.sportradar.com\",\n      quotaLimit: 1000,\n      qpsLimit: 1,\n      availableAPIs: Object.keys(this.apiEndpoints),\n    };\n    this.cache = new Map();\n\n    if (this.config.apiKey) {\n      console.log(\n        \"✓ SportsRadar API configured with comprehensive trial access\",\n      );\n      console.log(`✓ Available APIs: ${this.config.availableAPIs.join(\", \")}`);\n    } else {\n      console.warn(\"⚠ SportsRadar API key not configured\");\n    }\n  }\n\n  private async enforceRateLimit(): Promise<void> {\n    const now = Date.now();\n    const timeSinceLastRequest = now - this.lastRequestTime;\n    if (timeSinceLastRequest < this.rateLimitMs) {\n      await new Promise((resolve) =>\n        setTimeout(resolve, this.rateLimitMs - timeSinceLastRequest),\n      );\n    }\n    this.lastRequestTime = Date.now();\n  }\n\n  private async makeRequest<T>(\n    endpoint: string,\n    params: Record<string, string> = {},\n    useCache: boolean = true,\n  ): Promise<T> {\n    const queryParams = new URLSearchParams({\n      api_key: this.config.apiKey,\n      ...params,\n    });\n\n    const url = `${this.config.baseUrl}${endpoint}?${queryParams}`;\n    const cacheKey = url;\n\n    // Check cache first to conserve quota\n    if (useCache) {\n      const cached = this.cache.get(cacheKey);\n      if (cached && Date.now() - cached.timestamp < this.cacheTTL) {\n        return cached.data;\n      }\n    }\n\n    await this.enforceRateLimit();\n\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"User-Agent\": \"A1Betting-SportsRadar/1.0\",\n          Accept: \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\n          `SportsRadar API error: ${response.status} ${response.statusText}`,\n        );\n      }\n\n      const data = await response.json();\n\n      // Cache to conserve quota\n      if (useCache) {\n        this.cache.set(cacheKey, {\n          data,\n          timestamp: Date.now(),\n        });\n      }\n\n      return data;\n    } catch (error) {\n      console.error(\"SportsRadar API request failed:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get comprehensive odds from Odds Comparison APIs\n   */\n  async getOddsComparison(\n    sport: string,\n    market: string = \"prematch\",\n  ): Promise<SportsRadarOdds[]> {\n    try {\n      const endpoint =\n        market === \"player_props\"\n          ? this.apiEndpoints.odds_comparison_player_props\n          : this.apiEndpoints.odds_comparison_prematch;\n\n      const data = await this.makeRequest(\n        `${endpoint}/sports/${sport}/events.json`,\n      );\n\n      return this.transformOddsData(data, sport);\n    } catch (error) {\n      console.error(\"Error fetching odds comparison:\", error);\n      return [];\n    }\n  }\n\n  /**\n   * Get player props from SportsRadar\n   */\n  async getPlayerProps(\n    sport: string,\n    eventId?: string,\n  ): Promise<SportsRadarPlayerProps[]> {\n    try {\n      const endpoint = this.apiEndpoints.odds_comparison_player_props;\n      const path = eventId\n        ? `${endpoint}/sports/${sport}/events/${eventId}/markets.json`\n        : `${endpoint}/sports/${sport}/events.json`;\n\n      const data = await this.makeRequest(path);\n\n      return this.transformPlayerPropsData(data);\n    } catch (error) {\n      console.error(\"Error fetching player props:\", error);\n      return [];\n    }\n  }\n\n  /**\n   * Get NBA data using NBA API\n   */\n  async getNBAData(\n    dataType: \"games\" | \"standings\" | \"players\" = \"games\",\n    date?: string,\n  ): Promise<any> {\n    try {\n      const currentDate = date || new Date().toISOString().split(\"T\")[0];\n      let path = \"\";\n\n      switch (dataType) {\n        case \"games\":\n          path = `/games/${currentDate}/schedule.json`;\n          break;\n        case \"standings\":\n          path = \"/standings.json\";\n          break;\n        case \"players\":\n          path = \"/players/active.json\";\n          break;\n      }\n\n      return await this.makeRequest(`${this.apiEndpoints.nba}${path}`);\n    } catch (error) {\n      console.error(\"Error fetching NBA data:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Get NFL data using NFL API\n   */\n  async getNFLData(\n    dataType: \"games\" | \"standings\" | \"teams\" = \"games\",\n    week?: number,\n  ): Promise<any> {\n    try {\n      let path = \"\";\n\n      switch (dataType) {\n        case \"games\":\n          const currentWeek = week || 1;\n          path = `/games/2024/REG/${currentWeek}/schedule.json`;\n          break;\n        case \"standings\":\n          path = \"/standings.json\";\n          break;\n        case \"teams\":\n          path = \"/teams.json\";\n          break;\n      }\n\n      return await this.makeRequest(`${this.apiEndpoints.nfl}${path}`);\n    } catch (error) {\n      console.error(\"Error fetching NFL data:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Get multi-sport data efficiently\n   */\n  async getMultiSportData(sports: string[]): Promise<Record<string, any>> {\n    const results: Record<string, any> = {};\n\n    // Process sports in batches to respect rate limits\n    for (const sport of sports) {\n      try {\n        if (this.apiEndpoints[sport as keyof typeof this.apiEndpoints]) {\n          results[sport] = await this.getSportData(sport);\n        } else {\n          console.warn(`Sport ${sport} not available in SportsRadar trial`);\n        }\n      } catch (error) {\n        console.error(`Error fetching ${sport} data:`, error);\n        results[sport] = null;\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Get specific sport data\n   */\n  private async getSportData(sport: string): Promise<any> {\n    const endpoint = this.apiEndpoints[sport as keyof typeof this.apiEndpoints];\n    if (!endpoint) return null;\n\n    try {\n      // Try to get current games/schedule\n      const currentDate = new Date().toISOString().split(\"T\")[0];\n      return await this.makeRequest(\n        `${endpoint}/games/${currentDate}/schedule.json`,\n      );\n    } catch (error) {\n      // Fallback to league info\n      try {\n        return await this.makeRequest(`${endpoint}/league/hierarchy.json`);\n      } catch (fallbackError) {\n        console.error(`Failed to get ${sport} data:`, fallbackError);\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Transform odds data to unified format\n   */\n  private transformOddsData(data: any, sport: string): SportsRadarOdds[] {\n    if (!data || !data.events) return [];\n\n    return data.events.map((event: any) => ({\n      sport,\n      event_id: event.id,\n      commence_time: event.scheduled,\n      home_team:\n        event.competitors?.find((c: any) => c.qualifier === \"home\")?.name ||\n        \"Unknown\",\n      away_team:\n        event.competitors?.find((c: any) => c.qualifier === \"away\")?.name ||\n        \"Unknown\",\n      bookmakers:\n        event.markets?.map((market: any) => ({\n          bookmaker: market.books?.[0]?.name || \"SportsRadar\",\n          moneyline_home:\n            market.outcomes?.find((o: any) => o.type === \"home\")?.odds || 0,\n          moneyline_away:\n            market.outcomes?.find((o: any) => o.type === \"away\")?.odds || 0,\n          spread_home:\n            market.outcomes?.find((o: any) => o.type === \"home\")?.spread_odds ||\n            0,\n          spread_away:\n            market.outcomes?.find((o: any) => o.type === \"away\")?.spread_odds ||\n            0,\n          spread_line:\n            market.outcomes?.find((o: any) => o.type === \"home\")?.spread || 0,\n          total_over:\n            market.outcomes?.find((o: any) => o.type === \"over\")?.odds || 0,\n          total_under:\n            market.outcomes?.find((o: any) => o.type === \"under\")?.odds || 0,\n          total_line:\n            market.outcomes?.find((o: any) => o.type === \"over\")?.total || 0,\n          last_updated: event.last_updated || new Date().toISOString(),\n        })) || [],\n    }));\n  }\n\n  /**\n   * Transform player props data\n   */\n  private transformPlayerPropsData(data: any): SportsRadarPlayerProps[] {\n    if (!data || !data.markets) return [];\n\n    const playerPropsMap = new Map<string, SportsRadarPlayerProps>();\n\n    data.markets.forEach((market: any) => {\n      if (market.player) {\n        const playerId = market.player.id;\n\n        if (!playerPropsMap.has(playerId)) {\n          playerPropsMap.set(playerId, {\n            player_id: playerId,\n            player_name: market.player.name,\n            position: market.player.position || \"Unknown\",\n            team: market.player.team || \"Unknown\",\n            props: [],\n          });\n        }\n\n        const playerProp = playerPropsMap.get(playerId)!;\n        playerProp.props.push({\n          prop_type: market.specifier || \"Unknown\",\n          line: market.handicap || 0,\n          over_odds:\n            market.outcomes?.find((o: any) => o.type === \"over\")?.odds || 0,\n          under_odds:\n            market.outcomes?.find((o: any) => o.type === \"under\")?.odds || 0,\n          bookmaker: market.books?.[0]?.name || \"SportsRadar\",\n        });\n      }\n    });\n\n    return Array.from(playerPropsMap.values());\n  }\n\n  /**\n   * Get quota usage and remaining requests\n   */\n  getQuotaUsage(): {\n    used_requests: number;\n    remaining_requests: number;\n    cache_hits: number;\n    recommendations: string[];\n  } {\n    const cacheHits = this.cache.size;\n    const estimatedUsedRequests = Math.max(0, cacheHits - 50); // Estimate based on cache\n    const remainingRequests = Math.max(\n      0,\n      this.config.quotaLimit - estimatedUsedRequests,\n    );\n\n    const recommendations = [];\n    if (remainingRequests < 100) {\n      recommendations.push(\"⚠ Low quota remaining - increase cache usage\");\n    }\n    if (cacheHits < 50) {\n      recommendations.push(\"💡 Consider longer cache TTL to conserve quota\");\n    }\n\n    return {\n      used_requests: estimatedUsedRequests,\n      remaining_requests: remainingRequests,\n      cache_hits: cacheHits,\n      recommendations,\n    };\n  }\n\n  /**\n   * Health check for all available APIs\n   */\n  async healthCheck(): Promise<{\n    overall: string;\n    apis: Record<string, { status: string; message: string }>;\n    quota: any;\n  }> {\n    const apiResults: Record<string, { status: string; message: string }> = {};\n\n    // Test core APIs\n    const coreAPIs = [\"odds_comparison_prematch\", \"nba\", \"nfl\"];\n\n    for (const api of coreAPIs) {\n      try {\n        const endpoint =\n          this.apiEndpoints[api as keyof typeof this.apiEndpoints];\n        await this.makeRequest(`${endpoint}/sports.json`, {}, false);\n        apiResults[api] = { status: \"healthy\", message: \"API responsive\" };\n      } catch (error) {\n        apiResults[api] = {\n          status: \"degraded\",\n          message: error instanceof Error ? error.message : \"Unknown error\",\n        };\n      }\n    }\n\n    const healthyAPIs = Object.values(apiResults).filter(\n      (r) => r.status === \"healthy\",\n    ).length;\n    const overall = healthyAPIs > 0 ? \"healthy\" : \"degraded\";\n\n    return {\n      overall,\n      apis: apiResults,\n      quota: this.getQuotaUsage(),\n    };\n  }\n\n  /**\n   * Clear cache to free memory\n   */\n  clearCache(): void {\n    this.cache.clear();\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getCacheStats(): {\n    size: number;\n    apis_covered: string[];\n    cache_efficiency: number;\n  } {\n    const apisCovered = Array.from(this.cache.keys())\n      .map((key) => key.split(\"/\")[3]) // Extract API name from URL\n      .filter((api, index, arr) => arr.indexOf(api) === index);\n\n    return {\n      size: this.cache.size,\n      apis_covered: apisCovered,\n      cache_efficiency: Math.min(\n        (this.cache.size / this.config.quotaLimit) * 100,\n        100,\n      ),\n    };\n  }\n}\n\n// Export singleton instance\nexport const optimizedSportsRadarService = new OptimizedSportsRadarService();\nexport default optimizedSportsRadarService;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhanced\\PrizePicksProjectionsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhanced\\ProductionValidationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhanced\\SportsbookDataService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhanced\\TheOddsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\enhanced\\UnifiedDataIntegrationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\espn\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\espn\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\espn\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\injuryService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\injuryService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\injuryService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\apiBase.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\apiBase.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\apiBase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\injuryApi.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\injuryApi.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\injuryApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\liveDataLogger.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\liveDataLogger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\liveDataLogger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\newsApi.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\newsApi.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\newsApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\normalizeExternalData.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\normalizeExternalData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\normalizeExternalData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\oddsDataApi.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\oddsDataApi.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\oddsDataApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\sentimentApi.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\sentimentApi.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\sentimentApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\sportsDataApi.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\sportsDataApi.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\sportsDataApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\weatherApi.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\weatherApi.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\integrations\\weatherApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\lineShoppingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\lineShoppingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\lineShoppingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\live\\LiveDataOrchestrator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\live\\LiveDataOrchestrator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\live\\LiveDataOrchestrator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\logger.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\logger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\marketAnalysisService.d.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":3,"column":33,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":3,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":4,"column":34,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":4,"endColumn":42}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"declare class EventEmitter {\n    private events;\n    on(event: string, listener: Function): void;\n    off(event: string, listener: Function): void;\n    emit(event: string, ...args: any[]): void;\n}\nimport { BettingOdds, MarketMetrics, MarketEfficiencyMetrics, MarketAnomaly } from \"../types/betting\";\nexport declare class MarketAnalysisService extends EventEmitter {\n    private static instance;\n    private marketMetrics;\n    private anomalies;\n    private readonly ANOMALY_THRESHOLD;\n    private readonly EFFICIENCY_WINDOW;\n    private readonly VOLUME_WINDOW;\n    private readonly TREND_WINDOW;\n    private readonly advancedML;\n    private readonly hyperAdvancedML;\n    private readonly ultraML;\n    private constructor();\n    static getInstance(): MarketAnalysisService;\n    updateMarketMetrics(eventId: string, odds: BettingOdds[]): void;\n    private updateVolumeMetrics;\n    private updateLiquidityMetrics;\n    private updateVolatilityMetrics;\n    private updateTrendMetrics;\n    private detectAnomalies;\n    private detectPriceAnomaly;\n    private detectSpreadAnomaly;\n    private detectLiquidityAnomaly;\n    private getAnomalySeverity;\n    private calculateMarketEfficiency;\n    private calculateSpreadEfficiency;\n    private calculateVolumeEfficiency;\n    private calculatePriceDiscovery;\n    private calculateMarketDepth;\n    getMarketMetrics(eventId: string): MarketMetrics | undefined;\n    getAnomalies(eventId: string): MarketAnomaly[];\n    getMarketEfficiency(eventId: string): MarketEfficiencyMetrics | undefined;\n    getOddsMovements(eventId: string, timeRange: string): Promise<any>;\n    getVolumeAnalysis(eventId: string, timeRange: string): Promise<any>;\n    getSentimentData(eventId: string): Promise<any>;\n    getArbitrageOpportunities(eventId: string): Promise<any[]>;\n    getMarketDepth(eventId: string): Promise<any>;\n    getLiquidityMetrics(eventId: string): Promise<any>;\n    getVolatilityData(eventId: string, timeRange: string): Promise<any>;\n    private cache;\n}\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\marketAnalysisService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\marketAnalysisService.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":3,"column":36,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":3,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":5,"column":31,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":5,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":12,"column":32,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":12,"endColumn":40}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Browser-compatible EventEmitter replacement\nclass EventEmitter {\n  private events: { [key: string]: Function[] } = {};\n\n  on(event: string, listener: Function) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  off(event: string, listener: Function) {\n    if (!this.events[event]) return;\n    this.events[event] = this.events[event].filter((l) => l !== listener);\n  }\n\n  emit(event: string, ...args: any[]) {\n    if (!this.events[event]) return;\n    this.events[event].forEach((listener) => listener(...args));\n  }\n}\nimport {\n  BettingOdds,\n  MarketMetrics,\n  MarketEfficiencyMetrics,\n  MarketAnomaly,\n} from \"../types/betting\";\nimport { MarketContext } from \"../types/core\";\nimport { AdvancedMLService } from \"./analytics/advancedMLService\";\nimport { HyperAdvancedMLService } from \"./analytics/hyperAdvancedMLService\";\nimport { UltraMLService } from \"./analytics/ultraMLService\";\n\nexport class MarketAnalysisService extends EventEmitter {\n  private static instance: MarketAnalysisService;\n  private marketMetrics: Map<string, MarketMetrics> = new Map();\n  private anomalies: Map<string, MarketAnomaly[]> = new Map();\n  private readonly ANOMALY_THRESHOLD = 2.0;\n  private readonly EFFICIENCY_WINDOW = 24 * 60 * 60 * 1000;\n  private readonly VOLUME_WINDOW = 60 * 60 * 1000; // 1 hour\n  private readonly TREND_WINDOW = 5; // Number of data points for trend analysis\n  private readonly advancedML: AdvancedMLService;\n  private readonly hyperAdvancedML: HyperAdvancedMLService;\n  private readonly ultraML: UltraMLService;\n\n  private constructor() {\n    super();\n    this.advancedML = AdvancedMLService.getInstance();\n    this.hyperAdvancedML = HyperAdvancedMLService.getInstance();\n    this.ultraML = UltraMLService.getInstance();\n  }\n\n  public static getInstance(): MarketAnalysisService {\n    if (!MarketAnalysisService.instance) {\n      MarketAnalysisService.instance = new MarketAnalysisService();\n    }\n    return MarketAnalysisService.instance;\n  }\n\n  public updateMarketMetrics(eventId: string, odds: BettingOdds[]): void {\n    const currentMetrics = this.marketMetrics.get(eventId) || {\n      volume: {\n        totalVolume: 0,\n        lastUpdate: Date.now(),\n        volumeHistory: [],\n      },\n      liquidity: 0,\n      volatility: 0,\n      trend: 0,\n    };\n\n    // Update metrics with advanced analysis\n    this.updateVolumeMetrics(currentMetrics, odds);\n    this.updateLiquidityMetrics(currentMetrics, odds);\n    this.updateVolatilityMetrics(currentMetrics);\n    this.updateTrendMetrics(currentMetrics);\n\n    // Store updated metrics\n    this.marketMetrics.set(eventId, currentMetrics);\n\n    // Enhanced anomaly detection with ML\n    this.detectAnomalies(eventId, currentMetrics, odds);\n\n    // Calculate market efficiency with advanced metrics\n    const efficiencyMetrics = this.calculateMarketEfficiency(eventId, odds);\n    this.emit(\"marketEfficiency\", { eventId, metrics: efficiencyMetrics });\n\n    // Emit real-time market updates\n    this.emit(\"marketUpdate\", { eventId, metrics: currentMetrics });\n  }\n\n  private updateVolumeMetrics(\n    metrics: MarketMetrics,\n    odds: BettingOdds[],\n  ): void {\n    const currentTime = Date.now();\n    const recentVolume = odds.reduce((sum, odd) => sum + (odd.volume || 0), 0);\n\n    // Update volume history with time-based window\n    metrics.volume.volumeHistory = metrics.volume.volumeHistory\n      .filter((v) => currentTime - v.timestamp <= this.VOLUME_WINDOW)\n      .concat({ timestamp: currentTime, volume: recentVolume });\n\n    metrics.volume.totalVolume = metrics.volume.volumeHistory.reduce(\n      (sum, v) => sum + v.volume,\n      0,\n    );\n    metrics.volume.lastUpdate = currentTime;\n  }\n\n  private updateLiquidityMetrics(\n    metrics: MarketMetrics,\n    odds: BettingOdds[],\n  ): void {\n    if (odds.length < 2) return;\n\n    const bestBack = Math.max(...odds.map((o) => o.odds));\n    const bestLay = Math.min(...odds.map((o) => o.odds));\n    const spread = bestBack - bestLay;\n    const totalStake = odds.reduce((sum, odd) => sum + (odd.maxStake || 0), 0);\n\n    // Enhanced liquidity calculation considering market depth\n    const depthWeightedStake = odds.reduce((sum, odd) => {\n      const depth = (odd.maxStake || 0) / (spread || 1);\n      return sum + depth;\n    }, 0);\n\n    metrics.liquidity = depthWeightedStake / (spread || 1);\n  }\n\n  private updateVolatilityMetrics(metrics: MarketMetrics): void {\n    if (metrics.volume.volumeHistory.length < 2) return;\n\n    const volumes = metrics.volume.volumeHistory.map((v) => v.volume);\n    const returns = volumes.slice(1).map((v, i) => Math.log(v / volumes[i]));\n\n    const mean = returns.reduce((sum, r) => sum + r, 0) / returns.length;\n    const variance =\n      returns.reduce((sum, r) => sum + Math.pow(r - mean, 2), 0) /\n      returns.length;\n\n    metrics.volatility = Math.sqrt(variance) * Math.sqrt(252); // Annualized volatility\n  }\n\n  private updateTrendMetrics(metrics: MarketMetrics): void {\n    if (metrics.volume.volumeHistory.length < 2) return;\n\n    const recentVolumes = metrics.volume.volumeHistory.slice(\n      -this.TREND_WINDOW,\n    );\n    const xMean = (recentVolumes.length - 1) / 2;\n    const yMean =\n      recentVolumes.reduce((sum, v) => sum + v.volume, 0) /\n      recentVolumes.length;\n\n    let numerator = 0;\n    let denominator = 0;\n\n    recentVolumes.forEach((v, i) => {\n      const xDiff = i - xMean;\n      const yDiff = v.volume - yMean;\n      numerator += xDiff * yDiff;\n      denominator += xDiff * xDiff;\n    });\n\n    metrics.trend = denominator === 0 ? 0 : numerator / denominator;\n  }\n\n  private async detectAnomalies(\n    eventId: string,\n    metrics: MarketMetrics,\n    odds: BettingOdds[],\n  ): Promise<void> {\n    const anomalies: MarketAnomaly[] = [];\n\n    // Volume anomaly detection with ML enhancement\n    if (metrics.volume.volumeHistory.length >= 5) {\n      const recentVolumes = metrics.volume.volumeHistory\n        .slice(-5)\n        .map((v) => v.volume);\n      const mlPrediction =\n        await this.advancedML.predictVolumeAnomaly(recentVolumes);\n\n      if (mlPrediction.isAnomaly) {\n        anomalies.push({\n          type: \"volume\",\n          severity: this.getAnomalySeverity(mlPrediction.deviation),\n          description: `ML-detected volume anomaly: ${mlPrediction.deviation.toFixed(2)} standard deviations from expected`,\n          timestamp: Date.now(),\n          metrics: {\n            current: recentVolumes[recentVolumes.length - 1],\n            expected: mlPrediction.expectedValue,\n            deviation: mlPrediction.deviation,\n          },\n        });\n      }\n    }\n\n    // Price anomaly detection\n    if (odds.length >= 2) {\n      const priceAnomaly = await this.detectPriceAnomaly(odds);\n      if (priceAnomaly) {\n        anomalies.push(priceAnomaly);\n      }\n    }\n\n    // Spread anomaly detection\n    const spreadAnomaly = await this.detectSpreadAnomaly(odds);\n    if (spreadAnomaly) {\n      anomalies.push(spreadAnomaly);\n    }\n\n    // Liquidity anomaly detection\n    const liquidityAnomaly = await this.detectLiquidityAnomaly(metrics, odds);\n    if (liquidityAnomaly) {\n      anomalies.push(liquidityAnomaly);\n    }\n\n    // Store and emit anomalies\n    if (anomalies.length > 0) {\n      this.anomalies.set(eventId, anomalies);\n      this.emit(\"marketAnomaly\", { eventId, anomalies });\n    }\n  }\n\n  private async detectPriceAnomaly(\n    odds: BettingOdds[],\n  ): Promise<MarketAnomaly | null> {\n    const pricePrediction =\n      await this.hyperAdvancedML.predictPriceAnomaly(odds);\n\n    if (pricePrediction.isAnomaly) {\n      return {\n        type: \"price\",\n        severity: this.getAnomalySeverity(pricePrediction.deviation),\n        description: `ML-detected price anomaly: ${pricePrediction.deviation.toFixed(2)} standard deviations from expected`,\n        timestamp: Date.now(),\n        metrics: {\n          current: pricePrediction.currentPrice,\n          expected: pricePrediction.expectedPrice,\n          deviation: pricePrediction.deviation,\n        },\n      };\n    }\n    return null;\n  }\n\n  private async detectSpreadAnomaly(\n    odds: BettingOdds[],\n  ): Promise<MarketAnomaly | null> {\n    const spreadPrediction = await this.ultraML.predictSpreadAnomaly(odds);\n\n    if (spreadPrediction.isAnomaly) {\n      return {\n        type: \"spread\",\n        severity: this.getAnomalySeverity(spreadPrediction.deviation),\n        description: `ML-detected spread anomaly: ${spreadPrediction.deviation.toFixed(2)} standard deviations from expected`,\n        timestamp: Date.now(),\n        metrics: {\n          current: spreadPrediction.currentSpread,\n          expected: spreadPrediction.expectedSpread,\n          deviation: spreadPrediction.deviation,\n        },\n      };\n    }\n    return null;\n  }\n\n  private async detectLiquidityAnomaly(\n    metrics: MarketMetrics,\n    odds: BettingOdds[],\n  ): Promise<MarketAnomaly | null> {\n    const liquidityPrediction = await this.advancedML.predictLiquidityAnomaly(\n      metrics,\n      odds,\n    );\n\n    if (liquidityPrediction.isAnomaly) {\n      return {\n        type: \"liquidity\",\n        severity: this.getAnomalySeverity(liquidityPrediction.deviation),\n        description: `ML-detected liquidity anomaly: ${liquidityPrediction.deviation.toFixed(2)} standard deviations from expected`,\n        timestamp: Date.now(),\n        metrics: {\n          current: liquidityPrediction.currentLiquidity,\n          expected: liquidityPrediction.expectedLiquidity,\n          deviation: liquidityPrediction.deviation,\n        },\n      };\n    }\n    return null;\n  }\n\n  private getAnomalySeverity(deviation: number): \"low\" | \"medium\" | \"high\" {\n    if (deviation >= 3.0) return \"high\";\n    if (deviation >= 2.0) return \"medium\";\n    return \"low\";\n  }\n\n  private calculateMarketEfficiency(\n    eventId: string,\n    odds: BettingOdds[],\n  ): MarketEfficiencyMetrics {\n    const metrics = this.marketMetrics.get(eventId);\n    if (!metrics) {\n      return {\n        spreadEfficiency: 0,\n        volumeEfficiency: 0,\n        priceDiscovery: 0,\n        marketDepth: 0,\n      };\n    }\n\n    // Enhanced market efficiency calculations\n    const spreadEfficiency = this.calculateSpreadEfficiency(odds);\n    const volumeEfficiency = this.calculateVolumeEfficiency(metrics, odds);\n    const priceDiscovery = this.calculatePriceDiscovery(metrics);\n    const marketDepth = this.calculateMarketDepth(metrics, odds);\n\n    return {\n      spreadEfficiency,\n      volumeEfficiency,\n      priceDiscovery,\n      marketDepth,\n    };\n  }\n\n  private calculateSpreadEfficiency(odds: BettingOdds[]): number {\n    if (odds.length < 2) return 0;\n\n    const bestBack = Math.max(...odds.map((o) => o.odds));\n    const bestLay = Math.min(...odds.map((o) => o.odds));\n    const spread = bestBack - bestLay;\n    const midPrice = (bestBack + bestLay) / 2;\n\n    // Normalize spread efficiency (0-1 scale)\n    return Math.max(0, 1 - spread / midPrice);\n  }\n\n  private calculateVolumeEfficiency(\n    metrics: MarketMetrics,\n    odds: BettingOdds[],\n  ): number {\n    if (odds.length < 2) return 0;\n\n    const spread =\n      Math.max(...odds.map((o) => o.odds)) -\n      Math.min(...odds.map((o) => o.odds));\n    const volume = metrics.volume.totalVolume;\n\n    // Higher volume relative to spread indicates higher efficiency\n    return volume / (spread * 1000); // Normalize to reasonable range\n  }\n\n  private calculatePriceDiscovery(metrics: MarketMetrics): number {\n    if (metrics.volume.volumeHistory.length < 2) return 0;\n\n    // Calculate how quickly prices adjust to new information\n    const recentVolumes = metrics.volume.volumeHistory.slice(-5);\n    const volumeChanges = recentVolumes\n      .slice(1)\n      .map((v, i) => Math.abs(v.volume - recentVolumes[i].volume));\n    const avgChange =\n      volumeChanges.reduce((sum, change) => sum + change, 0) /\n      volumeChanges.length;\n\n    return avgChange / metrics.volume.totalVolume;\n  }\n\n  private calculateMarketDepth(\n    metrics: MarketMetrics,\n    odds: BettingOdds[],\n  ): number {\n    if (odds.length < 2) return 0;\n\n    const totalStake = odds.reduce((sum, odd) => sum + (odd.maxStake || 0), 0);\n    const spread =\n      Math.max(...odds.map((o) => o.odds)) -\n      Math.min(...odds.map((o) => o.odds));\n\n    // Higher total stake relative to spread indicates deeper market\n    return totalStake / (spread * 1000); // Normalize to reasonable range\n  }\n\n  public getMarketMetrics(eventId: string): MarketMetrics | undefined {\n    return this.marketMetrics.get(eventId);\n  }\n\n  public getAnomalies(eventId: string): MarketAnomaly[] {\n    return this.anomalies.get(eventId) || [];\n  }\n\n  public getMarketEfficiency(\n    eventId: string,\n  ): MarketEfficiencyMetrics | undefined {\n    const metrics = this.marketMetrics.get(eventId);\n    if (!metrics) return undefined;\n\n    return this.calculateMarketEfficiency(eventId, []);\n  }\n\n  // Missing methods required by MarketAnalysisDashboard\n  public async getOddsMovements(\n    eventId: string,\n    timeRange: string,\n  ): Promise<any> {\n    const cacheKey = `odds_movements_${eventId}_${timeRange}`;\n    const cached = this.cache?.get(cacheKey);\n    if (cached) return cached;\n\n    // Mock implementation - replace with actual API call\n    const movements = {\n      eventId,\n      timeRange,\n      movements: [\n        { timestamp: Date.now() - 3600000, odds: 1.85, direction: \"up\" },\n        { timestamp: Date.now() - 1800000, odds: 1.9, direction: \"up\" },\n        { timestamp: Date.now(), odds: 1.88, direction: \"down\" },\n      ],\n      totalChange: 0.03,\n      volatility: 0.15,\n    };\n\n    this.cache?.set(cacheKey, movements, 300000); // 5 minutes cache\n    return movements;\n  }\n\n  public async getVolumeAnalysis(\n    eventId: string,\n    timeRange: string,\n  ): Promise<any> {\n    const metrics = this.marketMetrics.get(eventId);\n    if (!metrics) {\n      return {\n        eventId,\n        totalVolume: 0,\n        averageVolume: 0,\n        peakVolume: 0,\n        volumeGrowth: 0,\n      };\n    }\n\n    return {\n      eventId,\n      totalVolume: metrics.volume.totalVolume,\n      averageVolume:\n        metrics.volume.totalVolume / (metrics.volume.volumeHistory.length || 1),\n      peakVolume: Math.max(\n        ...metrics.volume.volumeHistory.map((v) => v.volume),\n      ),\n      volumeGrowth: metrics.trend || 0,\n    };\n  }\n\n  public async getSentimentData(eventId: string): Promise<any> {\n    // Mock sentiment data - replace with actual sentiment analysis\n    return {\n      eventId,\n      sentiment: \"positive\",\n      score: 0.65,\n      confidence: 0.8,\n      sources: [\"twitter\", \"reddit\", \"news\"],\n      breakdown: {\n        positive: 65,\n        neutral: 25,\n        negative: 10,\n      },\n    };\n  }\n\n  public async getArbitrageOpportunities(eventId: string): Promise<any[]> {\n    // Mock arbitrage opportunities - replace with actual detection\n    return [\n      {\n        id: `arb_${eventId}_1`,\n        eventId,\n        bookmakers: [\"bookmaker1\", \"bookmaker2\"],\n        profit: 0.025,\n        stake: 1000,\n        confidence: 0.9,\n      },\n    ];\n  }\n\n  public async getMarketDepth(eventId: string): Promise<any> {\n    const metrics = this.marketMetrics.get(eventId);\n    if (!metrics) {\n      return {\n        eventId,\n        depth: 0,\n        liquidityScore: 0,\n      };\n    }\n\n    return {\n      eventId,\n      depth: metrics.liquidity || 0,\n      liquidityScore: Math.min(metrics.liquidity / 1000, 1), // Normalized score\n    };\n  }\n\n  public async getLiquidityMetrics(eventId: string): Promise<any> {\n    const metrics = this.marketMetrics.get(eventId);\n    if (!metrics) {\n      return {\n        eventId,\n        liquidity: 0,\n        spread: 0,\n        marketDepth: 0,\n      };\n    }\n\n    return {\n      eventId,\n      liquidity: metrics.liquidity,\n      spread: 0.02, // Mock spread\n      marketDepth: metrics.liquidity,\n    };\n  }\n\n  public async getVolatilityData(\n    eventId: string,\n    timeRange: string,\n  ): Promise<any> {\n    const metrics = this.marketMetrics.get(eventId);\n    if (!metrics) {\n      return {\n        eventId,\n        volatility: 0,\n        historicalVolatility: 0,\n        impliedVolatility: 0,\n      };\n    }\n\n    return {\n      eventId,\n      volatility: metrics.volatility,\n      historicalVolatility: metrics.volatility * 0.9,\n      impliedVolatility: metrics.volatility * 1.1,\n    };\n  }\n\n  // Add cache property for the methods above\n  private cache = new Map<string, any>();\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\market\\MarketDepthService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\market\\MarketDepthService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\market\\MarketDepthService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\metricsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\metricsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\metricsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\UnifiedMLEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\UnifiedMLEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\UnifiedMLEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\config\\modelConfig.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\config\\modelConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\config\\modelConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\ensemble\\EnsembleManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\ensemble\\EnsembleManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\ensemble\\EnsembleManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\ensemble\\EnsemblePredictor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\ensemble\\EnsemblePredictor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\ensemble\\EnsemblePredictor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\evaluation\\ModelEvaluator.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\evaluation\\ModelEvaluator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\evaluation\\ModelEvaluator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\factory\\ModelFactory.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\factory\\ModelFactory.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\factory\\ModelFactory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\featureEngineering\\AdvancedFeatureEngineeringService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\featureEngineering\\AdvancedFeatureEngineeringService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\featureEngineering\\AdvancedFeatureEngineeringService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\manager\\ModelManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\manager\\ModelManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\manager\\ModelManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\AdvancedEnsembleModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\AdvancedEnsembleModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\AdvancedEnsembleModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\AdvancedModelArchitectureService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\AdvancedModelArchitectureService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\AdvancedModelArchitectureService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\AlternativeDataModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\AlternativeDataModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\AlternativeDataModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\BaseModel.d.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":6,"column":27,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":6,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":7,"column":28,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":7,"endColumn":36}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Base model type definitions for ML models.\n */\ndeclare class EventEmitter {\n    private listeners;\n    on(event: string, fn: Function): void;\n    off(event: string, fn: Function): void;\n    emit(event: string, ...args: any[]): void;\n}\nimport { ModelConfig, ModelMetrics, ModelPrediction, ModelType } from '@/types';\nimport { UnifiedLogger } from '../../../core/UnifiedLogger';\nimport { UnifiedErrorHandler } from '../../../core/UnifiedErrorHandler';\nimport { ResourceManager } from '../resources/ResourceManager';\nexport interface TrainingConfig {\n    data: any;\n    validationSplit?: number;\n    batchSize?: number;\n    epochs?: number;\n    callbacks?: any[];\n}\nexport interface ModelUpdate {\n    timestamp: string;\n    type: 'training' | 'prediction' | 'evaluation';\n    metrics?: ModelMetrics;\n    metadata?: Record<string, any>;\n}\nexport interface ModelError {\n    code: string;\n    message: string;\n    details?: any;\n}\nexport declare abstract class BaseModel extends EventEmitter {\n    protected readonly modelId: string;\n    protected readonly config: ModelConfig;\n    protected isTrained: boolean;\n    protected lastUpdate: string;\n    protected metadata: Record<string, any>;\n    protected readonly logger: UnifiedLogger;\n    protected readonly errorHandler: UnifiedErrorHandler;\n    protected metrics: ModelMetrics;\n    protected model: any;\n    protected isTraining: boolean;\n    protected resourceManager: ResourceManager;\n    constructor(config: ModelConfig);\n    abstract predict(input: any): Promise<ModelPrediction>;\n    abstract train(data: any): Promise<void>;\n    abstract evaluate(data: any): Promise<ModelMetrics>;\n    abstract save(path: string): Promise<void>;\n    abstract load(path: string): Promise<void>;\n    getModelId(): string;\n    getConfig(): ModelConfig;\n    isModelTrained(): boolean;\n    getLastUpdate(): string;\n    getMetadata(): Record<string, any>;\n    getModelInfo(): Record<string, any>;\n    protected updateLastUpdate(): void;\n    protected createPrediction(output: any, confidence?: number): {\n        output: any;\n        confidence?: number;\n    };\n    protected createError(message: string, error: Error): Error;\n    protected preprocessFeatures(data: any): Promise<any>;\n    protected validateFeatures(data: any): Promise<boolean>;\n    protected calculateMSE(actual: number[], predicted: number[]): number;\n    protected calculateMAE(actual: number[], predicted: number[]): number;\n    protected calculateMAPE(actual: number[], predicted: number[]): number;\n    protected calculateF1Score(predictions: number[], actuals: number[]): number;\n    protected ensureGPU(): Promise<void>;\n    protected calculateMetrics(predictions: number[], actuals: number[]): ModelMetrics;\n    protected isClassification(): boolean;\n    protected calculateAccuracy(predictions: number[], actuals: number[]): number;\n    protected calculatePrecision(predictions: number[], actuals: number[]): number;\n    protected calculateRecall(predictions: number[], actuals: number[]): number;\n    protected calculateRMSE(predictions: number[], actuals: number[]): number;\n    protected calculateR2(predictions: number[], actuals: number[]): number;\n    getMetrics(): ModelMetrics;\n    getType(): ModelType;\n    getName(): string;\n    isModelTraining(): boolean;\n}\nexport type { ModelConfig, ModelPrediction };\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\BaseModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\BaseModel.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":7,"column":41,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":7,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":8,"column":25,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":8,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":12,"column":26,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":12,"endColumn":34}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Base model type definitions for ML models.\n */\n\n// Minimal browser-compatible EventEmitter\nclass EventEmitter {\n  private listeners: { [event: string]: Function[] } = {};\n  on(event: string, fn: Function) {\n    this.listeners[event] = this.listeners[event] || [];\n    this.listeners[event].push(fn);\n  }\n  off(event: string, fn: Function) {\n    if (!this.listeners[event]) return;\n    this.listeners[event] = this.listeners[event].filter(f => f !== fn);\n  }\n  emit(event: string, ...args: any[]) {\n    (this.listeners[event] || []).forEach(fn => fn(...args));\n  }\n}\nimport * as tf from '@tensorflow/tfjs-node';\nimport { ModelConfig, ModelMetrics, ModelPrediction, ModelType } from '@/types';\nimport { UnifiedLogger } from '../../../core/UnifiedLogger';\nimport { UnifiedErrorHandler } from '../../../core/UnifiedErrorHandler';\n// Removed named imports from '../../../core/UnifiedError' as they do not exist.\nimport { ResourceManager } from '../resources/ResourceManager';\n\nexport interface TrainingConfig {\n  data: any;\n  validationSplit?: number;\n  batchSize?: number;\n  epochs?: number;\n  callbacks?: any[];\n}\n\nexport interface ModelUpdate {\n  timestamp: string;\n  type: 'training' | 'prediction' | 'evaluation';\n  metrics?: ModelMetrics;\n  metadata?: Record<string, any>;\n}\n\nexport interface ModelError {\n  code: string;\n  message: string;\n  details?: any;\n}\n\nexport abstract class BaseModel extends EventEmitter {\n  protected readonly modelId: string;\n  protected readonly config: ModelConfig;\n  protected isTrained: boolean;\n  protected lastUpdate: string;\n  protected metadata: Record<string, any>;\n  protected readonly logger: UnifiedLogger;\n  protected readonly errorHandler: UnifiedErrorHandler;\n  protected metrics: ModelMetrics = {};\n  protected model: any;\n  protected isTraining: boolean = false;\n  protected resourceManager: ResourceManager;\n\n  constructor(config: ModelConfig) {\n    super();\n    this.modelId = config.name;\n    this.config = config;\n    this.isTrained = false;\n    this.lastUpdate = new Date().toISOString();\n    this.metadata = {};\n    this.logger = UnifiedLogger.getInstance();\n    this.errorHandler = UnifiedErrorHandler.getInstance();\n    this.resourceManager = ResourceManager.getInstance();\n  }\n\n  public abstract predict(input: any): Promise<ModelPrediction>;\n\n  public abstract train(data: any): Promise<void>;\n\n  public abstract evaluate(data: any): Promise<ModelMetrics>;\n\n  public abstract save(path: string): Promise<void>;\n\n  public abstract load(path: string): Promise<void>;\n\n  public getModelId(): string {\n    return this.modelId;\n  }\n\n  public getConfig(): ModelConfig {\n    return this.config;\n  }\n\n  public isModelTrained(): boolean {\n    return this.isTrained;\n  }\n\n  public getLastUpdate(): string {\n    return this.lastUpdate;\n  }\n\n  public getMetadata(): Record<string, any> {\n    return { ...this.metadata };\n  }\n\n  getModelInfo(): Record<string, any> {\n    return {\n      modelId: this.modelId,\n      type: this.config.type,\n      isTrained: this.isTrained,\n      lastUpdate: this.lastUpdate,\n      metadata: this.metadata,\n    };\n  }\n\n  protected updateLastUpdate(): void {\n    this.lastUpdate = new Date().toISOString();\n  }\n\n  protected createPrediction(\n    output: any,\n    confidence?: number\n  ): {\n    output: any;\n    confidence?: number;\n  } {\n    return {\n      output,\n      confidence,\n    };\n  }\n\n  protected createError(message: string, error: Error): Error {\n    if (error instanceof CoreModelError) {\n      return error;\n    }\n    return new CoreModelError(message, { originalError: error });\n  }\n\n  protected async preprocessFeatures(data: any): Promise<any> {\n    // Implement common preprocessing logic\n    return data;\n  }\n\n  protected async validateFeatures(data: any): Promise<boolean> {\n    // Implement common validation logic\n    return true;\n  }\n\n  protected calculateMSE(actual: number[], predicted: number[]): number {\n    return actual.reduce((acc, val, i) => acc + Math.pow(val - predicted[i], 2), 0) / actual.length;\n  }\n\n  protected calculateMAE(actual: number[], predicted: number[]): number {\n    return actual.reduce((acc, val, i) => acc + Math.abs(val - predicted[i]), 0) / actual.length;\n  }\n\n  protected calculateMAPE(actual: number[], predicted: number[]): number {\n    return (\n      (actual.reduce((acc, val, i) => acc + Math.abs((val - predicted[i]) / val), 0) /\n        actual.length) *\n      100\n    );\n  }\n\n  protected calculateF1Score(predictions: number[], actuals: number[]): number {\n    const precision = this.calculatePrecision(predictions, actuals);\n    const recall = this.calculateRecall(predictions, actuals);\n    return (2 * (precision * recall)) / (precision + recall);\n  }\n\n  async evaluate(testData: any[]): Promise<ModelMetrics> {\n    const startTime = Date.now();\n    const predictions = await Promise.all(testData.map(d => this.predict(d)));\n\n    const actual = testData.map(d => Object.values(this.preprocessFeatures(d))[0] as number);\n    const predicted = predictions.map(p => p.probability);\n\n    this.metrics.mse = this.calculateMSE(actual, predicted);\n    this.metrics.mae = this.calculateMAE(actual, predicted);\n    this.metrics.mape = this.calculateMAPE(actual, predicted);\n    this.metrics.responseTime = Date.now() - startTime;\n\n    return this.metrics;\n  }\n\n  protected async ensureGPU(): Promise<void> {\n    await this.resourceManager.allocateResources(this);\n  }\n\n  protected calculateMetrics(predictions: number[], actuals: number[]): ModelMetrics {\n    const metrics: ModelMetrics = {};\n\n    // Calculate common metrics\n    if (this.isClassification()) {\n      metrics.accuracy = this.calculateAccuracy(predictions, actuals);\n      metrics.precision = this.calculatePrecision(predictions, actuals);\n      metrics.recall = this.calculateRecall(predictions, actuals);\n      metrics.f1Score = this.calculateF1Score(predictions, actuals);\n    } else {\n      metrics.rmse = this.calculateRMSE(predictions, actuals);\n      metrics.mae = this.calculateMAE(predictions, actuals);\n      metrics.r2 = this.calculateR2(predictions, actuals);\n    }\n\n    return metrics;\n  }\n\n  protected isClassification(): boolean {\n    return this.config.type === 'traditional' || this.config.type === 'deepLearning';\n  }\n\n  protected calculateAccuracy(predictions: number[], actuals: number[]): number {\n    let correct = 0;\n    for (let i = 0; i < predictions.length; i++) {\n      if (predictions[i] === actuals[i]) correct++;\n    }\n    return correct / predictions.length;\n  }\n\n  protected calculatePrecision(predictions: number[], actuals: number[]): number {\n    let truePositives = 0;\n    let falsePositives = 0;\n    for (let i = 0; i < predictions.length; i++) {\n      if (predictions[i] === 1 && actuals[i] === 1) truePositives++;\n      if (predictions[i] === 1 && actuals[i] === 0) falsePositives++;\n    }\n    return truePositives / (truePositives + falsePositives);\n  }\n\n  protected calculateRecall(predictions: number[], actuals: number[]): number {\n    let truePositives = 0;\n    let falseNegatives = 0;\n    for (let i = 0; i < predictions.length; i++) {\n      if (predictions[i] === 1 && actuals[i] === 1) truePositives++;\n      if (predictions[i] === 0 && actuals[i] === 1) falseNegatives++;\n    }\n    return truePositives / (truePositives + falseNegatives);\n  }\n\n  protected calculateRMSE(predictions: number[], actuals: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < predictions.length; i++) {\n      sum += Math.pow(predictions[i] - actuals[i], 2);\n    }\n    return Math.sqrt(sum / predictions.length);\n  }\n\n  protected calculateR2(predictions: number[], actuals: number[]): number {\n    const mean = actuals.reduce((a, b) => a + b, 0) / actuals.length;\n    const ssTotal = actuals.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0);\n    const ssResidual = predictions.reduce(\n      (sum, pred, i) => sum + Math.pow(pred - actuals[i], 2),\n      0\n    );\n    return 1 - ssResidual / ssTotal;\n  }\n\n  public getMetrics(): ModelMetrics {\n    return this.metrics;\n  }\n\n  public getType(): ModelType {\n    return this.config.type;\n  }\n\n  public getName(): string {\n    return this.config.name;\n  }\n\n  public isModelTraining(): boolean {\n    return this.isTraining;\n  }\n}\n\n// Only export BaseModel once to avoid duplicate export errors\n// Only export BaseModel once to avoid duplicate export errors\nexport type { ModelConfig, ModelPrediction };\n// export { BaseModel }; // Removed duplicate export\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\DeepLearningModels.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\DeepLearningModels.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\DeepLearningModels.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\EnsembleMLService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\EnsembleMLService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\EnsembleMLService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\EnsembleModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\EnsembleModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\EnsembleModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\GameTheoryModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\GameTheoryModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\GameTheoryModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\GaussianProcess.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\GaussianProcess.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\GaussianProcess.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\LSTMModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\LSTMModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\LSTMModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\MarketIntelligenceModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\MarketIntelligenceModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\MarketIntelligenceModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\MetaModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\MetaModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\MetaModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\ModelMetadata.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\ModelMetadata.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\ModelMetadata.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\ModelVersion.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\ModelVersion.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\ModelVersion.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\OptimizationModels.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\OptimizationModels.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\OptimizationModels.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\QuantumProbabilityModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\QuantumProbabilityModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\QuantumProbabilityModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\RealityExploitationEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\RealityExploitationEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\RealityExploitationEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TemporalPatternModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TemporalPatternModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TemporalPatternModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TimeSeriesModels.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TimeSeriesModels.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TimeSeriesModels.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TraditionalModels.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TraditionalModels.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TraditionalModels.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TransformerModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TransformerModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\TransformerModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\XGBoostModel.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\XGBoostModel.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\models\\XGBoostModel.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\AntColony.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\AntColony.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\AntColony.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\BayesianOptimization.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\BayesianOptimization.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\BayesianOptimization.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\DifferentialEvolution.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\DifferentialEvolution.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\DifferentialEvolution.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\EvolutionaryStrategy.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\EvolutionaryStrategy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\EvolutionaryStrategy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\Firefly.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\Firefly.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\Firefly.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\GeneticAlgorithm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\GeneticAlgorithm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\GeneticAlgorithm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\GradientDescent.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\GradientDescent.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\GradientDescent.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\HarmonySearch.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\HarmonySearch.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\HarmonySearch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\NelderMead.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\NelderMead.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\NelderMead.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\OptimizationStrategy.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\OptimizationStrategy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\OptimizationStrategy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\ParticleSwarm.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\ParticleSwarm.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\ParticleSwarm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\SimulatedAnnealing.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\SimulatedAnnealing.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\SimulatedAnnealing.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\TabuSearch.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\TabuSearch.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\optimization\\TabuSearch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\prediction.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\prediction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\prediction.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\registry\\ModelRegistry.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\registry\\ModelRegistry.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\registry\\ModelRegistry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\resources\\ResourceManager.d.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":4,"column":27,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":4,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":5,"column":28,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":5,"endColumn":36}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { BaseModel } from '../models/BaseModel';\ndeclare class EventEmitter {\n    private listeners;\n    on(event: string, fn: Function): void;\n    off(event: string, fn: Function): void;\n    emit(event: string, ...args: any[]): void;\n}\nexport declare class ResourceManager extends EventEmitter {\n    private static instance;\n    private allocations;\n    private totalGPUMemory;\n    private totalCPUMemory;\n    private gpuMemoryLimit;\n    private cpuMemoryLimit;\n    private constructor();\n    static getInstance(): ResourceManager;\n    private initializeResources;\n    allocateResources(model: BaseModel): Promise<void>;\n    releaseResources(modelId: string): Promise<void>;\n    private getModelRequirements;\n    private checkResourceAvailability;\n    private getCurrentGPUUsage;\n    private getCurrentCPUUsage;\n    getResourceUtilization(): {\n        gpu: {\n            used: number;\n            total: number;\n            percentage: number;\n        };\n        cpu: {\n            used: number;\n            total: number;\n            percentage: number;\n        };\n    };\n    cleanup(): Promise<void>;\n}\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\resources\\ResourceManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\resources\\ResourceManager.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":4,"column":41,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":4,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":5,"column":25,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":5,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":9,"column":26,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":9,"endColumn":34}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { BaseModel } from '../models/BaseModel';\n// Minimal browser-compatible EventEmitter\nclass EventEmitter {\n  private listeners: { [event: string]: Function[] } = {};\n  on(event: string, fn: Function) {\n    this.listeners[event] = this.listeners[event] || [];\n    this.listeners[event].push(fn);\n  }\n  off(event: string, fn: Function) {\n    if (!this.listeners[event]) return;\n    this.listeners[event] = this.listeners[event].filter(f => f !== fn);\n  }\n  emit(event: string, ...args: any[]) {\n    (this.listeners[event] || []).forEach(fn => fn(...args));\n  }\n}\n// import * as tf from '@tensorflow/tfjs-node'; // Disabled for browser compatibility\n\ninterface ResourceAllocation {\n  modelId: string;\n  gpuMemory: number;\n  cpuMemory: number;\n  startTime: number;\n}\n\nexport class ResourceManager extends EventEmitter {\n  private static instance: ResourceManager;\n  private allocations: Map<string, ResourceAllocation> = new Map();\n  private totalGPUMemory: number = 0;\n  private totalCPUMemory: number = 0;\n  private gpuMemoryLimit: number = 0;\n  private cpuMemoryLimit: number = 0;\n\n  private constructor() {\n    super();\n    this.initializeResources();\n  }\n\n  public static getInstance(): ResourceManager {\n    if (!ResourceManager.instance) {\n      ResourceManager.instance = new ResourceManager();\n    }\n    return ResourceManager.instance;\n  }\n\n  private async initializeResources(): Promise<void> {\n    try {\n      // GPU/CPU info collection disabled for browser build\n      this.totalGPUMemory = 0;\n      this.gpuMemoryLimit = 0;\n      this.totalCPUMemory = 0;\n      this.cpuMemoryLimit = 0;\n    } catch (error) {\n      console.error('Failed to initialize resources:', error);\n      // Fallback to conservative limits\n      this.totalGPUMemory = 4 * 1024 * 1024 * 1024; // 4GB\n      this.gpuMemoryLimit = this.totalGPUMemory * 0.5;\n      this.totalCPUMemory = 8 * 1024 * 1024 * 1024; // 8GB\n      this.cpuMemoryLimit = this.totalCPUMemory * 0.5;\n    }\n  }\n\n  public async allocateResources(model: BaseModel): Promise<void> {\n    const modelId = model.config.name;\n\n    if (this.allocations.has(modelId)) {\n      throw new Error(`Resources already allocated for model ${modelId}`);\n    }\n\n    try {\n      // Get model resource requirements\n      const requirements = await this.getModelRequirements(model);\n\n      // Check if resources are available\n      await this.checkResourceAvailability(requirements);\n\n      // Allocate resources\n      this.allocations.set(modelId, {\n        modelId,\n        gpuMemory: requirements.gpuMemory,\n        cpuMemory: requirements.cpuMemory,\n        startTime: Date.now(),\n      });\n\n      this.emit('resourcesAllocated', {\n        modelId,\n        allocation: this.allocations.get(modelId),\n      });\n    } catch (error) {\n      this.emit('allocationError', { modelId, error });\n      throw error;\n    }\n  }\n\n  public async releaseResources(modelId: string): Promise<void> {\n    const allocation = this.allocations.get(modelId);\n    if (allocation) {\n      this.allocations.delete(modelId);\n      this.emit('resourcesReleased', { modelId, allocation });\n    }\n  }\n\n  private async getModelRequirements(model: BaseModel): Promise<{\n    gpuMemory: number;\n    cpuMemory: number;\n  }> {\n    // Estimate resource requirements based on model type and configuration\n    const baseMemory = 100 * 1024 * 1024; // 100MB base memory\n\n    let gpuMemory = baseMemory;\n    let cpuMemory = baseMemory;\n\n    switch (model.config.type) {\n      case 'deepLearning':\n        gpuMemory *= 4; // Deep learning models need more GPU memory\n        break;\n      case 'timeSeries':\n        cpuMemory *= 2; // Time series models need more CPU memory\n        break;\n      case 'optimization':\n        cpuMemory *= 3; // Optimization models need more CPU memory\n        break;\n    }\n\n    return { gpuMemory, cpuMemory };\n  }\n\n  private async checkResourceAvailability(requirements: {\n    gpuMemory: number;\n    cpuMemory: number;\n  }): Promise<void> {\n    const currentGPUUsage = this.getCurrentGPUUsage();\n    const currentCPUUsage = this.getCurrentCPUUsage();\n\n    if (currentGPUUsage + requirements.gpuMemory > this.gpuMemoryLimit) {\n      throw new Error('Insufficient GPU memory available');\n    }\n\n    if (currentCPUUsage + requirements.cpuMemory > this.cpuMemoryLimit) {\n      throw new Error('Insufficient CPU memory available');\n    }\n  }\n\n  private getCurrentGPUUsage(): number {\n    return Array.from(this.allocations.values()).reduce(\n      (total, allocation) => total + allocation.gpuMemory,\n      0\n    );\n  }\n\n  private getCurrentCPUUsage(): number {\n    return Array.from(this.allocations.values()).reduce(\n      (total, allocation) => total + allocation.cpuMemory,\n      0\n    );\n  }\n\n  public getResourceUtilization(): {\n    gpu: { used: number; total: number; percentage: number };\n    cpu: { used: number; total: number; percentage: number };\n  } {\n    const gpuUsed = this.getCurrentGPUUsage();\n    const cpuUsed = this.getCurrentCPUUsage();\n\n    return {\n      gpu: {\n        used: gpuUsed,\n        total: this.totalGPUMemory,\n        percentage: (gpuUsed / this.totalGPUMemory) * 100,\n      },\n      cpu: {\n        used: cpuUsed,\n        total: this.totalCPUMemory,\n        percentage: (cpuUsed / this.totalCPUMemory) * 100,\n      },\n    };\n  }\n\n  public async cleanup(): Promise<void> {\n    // Release all allocated resources\n    const modelIds = Array.from(this.allocations.keys());\n    await Promise.all(modelIds.map(id => this.releaseResources(id)));\n\n    // Clear GPU memory\n    await tf.disposeVariables();\n\n    this.emit('cleanupComplete');\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\service\\ModelService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\service\\ModelService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\service\\ModelService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\strategies\\BestBetSelector.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\strategies\\BestBetSelector.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\strategies\\BestBetSelector.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\strategies\\KellyCriterion.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\strategies\\KellyCriterion.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\strategies\\KellyCriterion.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\training\\ModelTrainer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\training\\ModelTrainer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\training\\ModelTrainer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\types\\ModelMetrics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\types\\ModelMetrics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml\\types\\ModelMetrics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml_service.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml_service.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ml_service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\newsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\newsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\newsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\notification.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\notification.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\notification.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\notification\\notificationManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\notification\\notificationManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\notification\\notificationManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\odds.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\odds.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\odds.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\oddsModern.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\oddsModern.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\oddsModern.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\oddsjam.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\oddsjam.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\oddsjam.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\ollamaLLMService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\partner\\AffiliateService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\partner\\AffiliateService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\partner\\AffiliateService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\partner\\__tests__\\AffiliateService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\partner\\__tests__\\AffiliateService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\partner\\__tests__\\AffiliateService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\performanceService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\performanceService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\performanceService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\performanceTracking.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\performanceTracking.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\performanceTracking.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictionService.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":7,"column":18,"nodeType":"Identifier","messageId":"noEmptyInterfaceWithSuper","endLine":7,"endColumn":43,"suggestions":[{"messageId":"replaceEmptyInterfaceWithSuper","fix":{"range":[193,257],"text":"type PredictionServiceResponse = PredictionUpdate"},"desc":"Replace empty interface with a type alias."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { PredictionUpdate } from '@/types';\nexport interface PredictionRequestData {\n    features: Record<string, number>;\n    modelId?: string;\n    context?: Record<string, unknown>;\n}\nexport interface PredictionServiceResponse extends PredictionUpdate {\n}\nexport interface GeneralInsight {\n    id: string;\n    text: string;\n    source: string;\n    confidence?: number;\n    type?: 'opportunity' | 'risk' | 'observation';\n    relatedEntities?: Array<{\n        id: string;\n        type: string;\n    }>;\n}\nexport interface PredictionFeatureInput {\n    features: {\n        [key: string]: number;\n    };\n}\nexport interface PredictionRequest {\n    propId?: string;\n    modelId?: string;\n    context?: Record<string, unknown>;\n    prediction_input: PredictionFeatureInput;\n}\nexport interface PredictionResponse {\n    propId?: string;\n    predictedOutcome: string | number;\n    confidence?: number;\n    modelUsed?: string;\n    insights?: {\n        confidence: number;\n        feature_contributions: {\n            [key: string]: number;\n        };\n        model_metrics: {\n            [key: string]: number | number[][];\n        };\n        prediction_timestamp: string;\n    };\n}\ndeclare class PredictionService {\n    private baseUrl;\n    constructor();\n    predict(request: PredictionRequest): Promise<PredictionResponse>;\n    getGeneralInsights(): Promise<GeneralInsight[]>;\n    createPredictionRequest(features: {\n        [key: string]: number;\n    }, propId?: string, context?: Record<string, unknown>): PredictionRequest;\n    getPrediction(requestData: PredictionRequestData): Promise<PredictionServiceResponse>;\n    getPredictionDetails(predictionId: string): Promise<Record<string, unknown>>;\n    fetchGeneralInsights(): Promise<GeneralInsight[]>;\n}\nexport declare const predictionService: PredictionService;\n/**\n * Fetches ML-based predictions for a given set of inputs.\n * Calls backend POST /api/v1/predictions/predict.\n * Frontend PredictionRequestData is sent.\n * Backend expects PredictionRequest (see backend/app/api/v1/endpoints/prediction.py):\n * {\n *   \"propId\": \"string\" (optional),\n *   \"modelId\": \"string\" (optional),\n *   \"context\": {} (optional),\n *   \"prediction_input\": {\n *      \"features\": { \"feature1\": value1, ... } // Must match FEATURE_ORDER in backend\n *   }\n * }\n * Backend returns PredictionResponse (see backend/app/api/v1/endpoints/prediction.py):\n * {\n *   \"propId\": \"string\" (optional),\n *   \"predictedOutcome\": any, // string or number\n *   \"confidence\": number (optional),\n *   \"modelUsed\": \"string\" (optional)\n * }\n * This is mapped to frontend PredictionServiceResponse.\n */\nexport declare const getPrediction: (requestData: PredictionRequestData) => Promise<PredictionServiceResponse>;\n/**\n * Fetches detailed analytics or explanations for a past prediction.\n * @param predictionId The ID of the prediction to get details for.\n */\nexport declare const getPredictionDetails: (predictionId: string) => Promise<Record<string, unknown>>;\n/**\n * Fetches general ML insights not tied to a specific immediate prediction request.\n * Calls backend GET /api/v1/predictions/insights/general.\n * Expected backend response is a list of GeneralInsightResponse (see backend/app/api/v1/endpoints/prediction.py):\n * [\n *   {\n *     \"id\": \"string\",\n *     \"text\": \"string\",\n *     \"source\": \"string\",\n *     \"confidence\": number (optional),\n *     \"type\": \"string (e.g., opportunity, risk)\" (optional),\n *     \"relatedEntities\": [ { \"id\": \"string\", \"type\": \"string\" } ] (optional)\n *   },\n *   ...\n * ]\n * This is mapped to frontend GeneralInsight[].\n */\nexport declare const fetchGeneralInsights: () => Promise<GeneralInsight[]>;\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictionService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictionService.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":17,"column":18,"nodeType":"Identifier","messageId":"noEmptyInterfaceWithSuper","endLine":17,"endColumn":43,"suggestions":[{"messageId":"replaceEmptyInterfaceWithSuper","fix":{"range":[775,839],"text":"type PredictionServiceResponse = PredictionUpdate"},"desc":"Replace empty interface with a type alias."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios';\nimport { API_BASE_URL } from '../config/constants';\nimport { APIError, AppError } from '../core/UnifiedError';\nimport { unifiedMonitor } from '../core/UnifiedMonitor';\nimport type { PredictionUpdate } from '../types/core'; // Assuming PredictionUpdate can serve as response type\n\n\n// Define more specific request/response types for predictions if needed\nexport interface PredictionRequestData {\n    features: Record<string, number>; // Input features for the model\n    modelId?: string; // Optional: specify a model to use\n    context?: Record<string, unknown>; // Optional: additional context for prediction\n}\n\n// Assuming PredictionUpdate from ../types can be used as a base for TResponse\n// Or define a specific PredictionServiceResponse\nexport interface PredictionServiceResponse extends PredictionUpdate { }\n\nexport interface GeneralInsight {\n    id: string;\n    text: string;\n    source: string; // e.g., 'TrendAnalysisModel', 'SocialSentimentAI'\n    confidence?: number;\n    type?: 'opportunity' | 'risk' | 'observation';\n    relatedEntities?: Array<{ id: string, type: string }>; // e.g., [{id: 'player123', type: 'player'}]\n}\n\nexport interface PredictionFeatureInput {\n    features: {\n        [key: string]: number;\n    };\n}\n\nexport interface PredictionRequest {\n    propId?: string;\n    modelId?: string;\n    context?: Record<string, unknown>;\n    prediction_input: PredictionFeatureInput;\n}\n\nexport interface PredictionResponse {\n    propId?: string;\n    predictedOutcome: string | number;\n    confidence?: number;\n    modelUsed?: string;\n    insights?: {\n        confidence: number;\n        feature_contributions: { [key: string]: number };\n        model_metrics: { [key: string]: number | number[][] };\n        prediction_timestamp: string;\n    };\n}\n\nclass PredictionService {\n    private baseUrl: string;\n\n    constructor() {\n        this.baseUrl = `${API_BASE_URL}/api/v1/predictions`;\n    }\n\n    async predict(request: PredictionRequest): Promise<PredictionResponse> {\n        const trace = unifiedMonitor.startTrace('predictionService.predict', 'http.client.ml');\n        try {\n            const response = await axios.post<PredictionResponse>(\n                `${this.baseUrl}/predict`,\n                request\n            );\n            if (trace) {\n                trace.setHttpStatus(response.status);\n                unifiedMonitor.endTrace(trace);\n            }\n            return response.data;\n        } catch (error: unknown) {\n            const errContext = {\n                service: 'predictionService',\n                operation: 'predict',\n                modelId: request.modelId || 'default',\n                context: request.context || {}\n            };\n            unifiedMonitor.reportError(error, errContext);\n            if (trace) {\n                trace.setHttpStatus(error.response?.status || 500);\n                unifiedMonitor.endTrace(trace);\n            }\n            if (error instanceof APIError || error instanceof AppError) throw error;\n            throw new AppError('Failed to get prediction from backend', errContext);\n        }\n    }\n\n    async getGeneralInsights(): Promise<GeneralInsight[]> {\n        const trace = unifiedMonitor.startTrace('predictionService.getGeneralInsights', 'http.client');\n        try {\n            const response = await axios.get<GeneralInsight[]>(\n                `${this.baseUrl}/insights/general`\n            );\n            if (trace) {\n                trace.setHttpStatus(response.status);\n                unifiedMonitor.endTrace(trace);\n            }\n            return response.data || [];\n        } catch (error: unknown) {\n            const errContext = {\n                service: 'predictionService',\n                operation: 'getGeneralInsights'\n            };\n            unifiedMonitor.reportError(error, errContext);\n            if (trace) {\n                trace.setHttpStatus(error.response?.status || 500);\n                unifiedMonitor.endTrace(trace);\n            }\n            if (error instanceof APIError || error instanceof AppError) throw error;\n            throw new AppError('Failed to fetch general insights from backend', errContext);\n        }\n    }\n\n    // Helper method to create a prediction request\n    createPredictionRequest(\n        features: { [key: string]: number },\n        propId?: string,\n        context?: Record<string, unknown>\n    ): PredictionRequest {\n        return {\n            propId,\n            modelId: 'default_v1',\n            context: context || {},\n            prediction_input: {\n                features\n            }\n        };\n    }\n\n    async getPrediction(requestData: PredictionRequestData): Promise<PredictionServiceResponse> {\n        const trace = unifiedMonitor.startTrace('predictionService.getPrediction', 'http.client.ml');\n        try {\n            const endpoint = `${this.baseUrl}/predict`;\n            const response = await axios.post<PredictionServiceResponse>(endpoint, requestData);\n\n            if (trace) {\n                trace.setHttpStatus(response.status);\n                unifiedMonitor.endTrace(trace);\n            }\n            return response.data;\n        } catch (error: unknown) {\n            const errContext = {\n                service: 'predictionService',\n                operation: 'getPrediction',\n                modelId: requestData.modelId,\n                context: requestData.context\n            };\n            unifiedMonitor.reportError(error, errContext);\n            if (trace) {\n                trace.setHttpStatus(error.response?.status || 500);\n                unifiedMonitor.endTrace(trace);\n            }\n            if (error instanceof APIError || error instanceof AppError) throw error;\n            throw new AppError('Failed to get prediction from backend', errContext);\n        }\n    }\n\n    async getPredictionDetails(predictionId: string): Promise<Record<string, unknown>> {\n        const trace = unifiedMonitor.startTrace('predictionService.getPredictionDetails', 'http.client');\n        try {\n            const endpoint = `${this.baseUrl}/details/${predictionId}`;\n            const response = await axios.get<Record<string, unknown>>(endpoint);\n            if (trace) trace.setHttpStatus(response.status);\n            unifiedMonitor.endTrace(trace);\n            return response.data;\n        } catch (error: unknown) {\n            const errContext = {\n                service: 'predictionService',\n                operation: 'getPredictionDetails',\n                predictionId\n            };\n            unifiedMonitor.reportError(error, errContext);\n            if (trace) {\n                trace.setHttpStatus(error.response?.status || 500);\n                unifiedMonitor.endTrace(trace);\n            }\n            throw new AppError('Failed to fetch prediction details', errContext);\n        }\n    }\n\n    async fetchGeneralInsights(): Promise<GeneralInsight[]> {\n        const trace = unifiedMonitor.startTrace('predictionService.fetchGeneralInsights', 'http.client');\n        try {\n            const response = await axios.get<GeneralInsight[]>(`${this.baseUrl}/insights/general`);\n\n            if (trace) {\n                trace.setHttpStatus(response.status);\n                unifiedMonitor.endTrace(trace);\n            }\n            return response.data || [];\n        } catch (error: unknown) {\n            const errContext = {\n                service: 'predictionService',\n                operation: 'fetchGeneralInsights'\n            };\n            unifiedMonitor.reportError(error, errContext);\n            if (trace) {\n                trace.setHttpStatus(error.response?.status || 500);\n                unifiedMonitor.endTrace(trace);\n            }\n            if (error instanceof APIError || error instanceof AppError) throw error;\n            throw new AppError('Failed to fetch general insights from backend', errContext);\n        }\n    }\n\n    async getModelPerformance(modelType: string): Promise<any> {\n        // TODO: Implement actual model performance retrieval\n        return {\n            accuracy: 0.85,\n            precision: 0.82,\n            recall: 0.88,\n            f1Score: 0.85,\n            modelType\n        };\n    }\n\n    clearCaches(): void {\n        // TODO: Implement cache clearing\n        console.log('Caches cleared');\n    }\n}\n\n// Export singleton instance\nexport const predictionService = new PredictionService();\n\n/**\n * Fetches ML-based predictions for a given set of inputs.\n * Calls backend POST /api/v1/predictions/predict.\n * Frontend PredictionRequestData is sent.\n * Backend expects PredictionRequest (see backend/app/api/v1/endpoints/prediction.py):\n * {\n *   \"propId\": \"string\" (optional),\n *   \"modelId\": \"string\" (optional),\n *   \"context\": {} (optional),\n *   \"prediction_input\": {\n *      \"features\": { \"feature1\": value1, ... } // Must match FEATURE_ORDER in backend\n *   }\n * }\n * Backend returns PredictionResponse (see backend/app/api/v1/endpoints/prediction.py):\n * {\n *   \"propId\": \"string\" (optional),\n *   \"predictedOutcome\": any, // string or number\n *   \"confidence\": number (optional),\n *   \"modelUsed\": \"string\" (optional)\n * }\n * This is mapped to frontend PredictionServiceResponse.\n */\nexport const getPrediction = async (requestData: PredictionRequestData): Promise<PredictionServiceResponse> => {\n    return predictionService.getPrediction(requestData);\n};\n\n/**\n * Fetches detailed analytics or explanations for a past prediction.\n * @param predictionId The ID of the prediction to get details for.\n */\nexport const getPredictionDetails = async (predictionId: string): Promise<Record<string, unknown>> => {\n    return predictionService.getPredictionDetails(predictionId);\n};\n\n/**\n * Fetches general ML insights not tied to a specific immediate prediction request.\n * Calls backend GET /api/v1/predictions/insights/general.\n * Expected backend response is a list of GeneralInsightResponse (see backend/app/api/v1/endpoints/prediction.py):\n * [\n *   {\n *     \"id\": \"string\",\n *     \"text\": \"string\",\n *     \"source\": \"string\",\n *     \"confidence\": number (optional),\n *     \"type\": \"string (e.g., opportunity, risk)\" (optional),\n *     \"relatedEntities\": [ { \"id\": \"string\", \"type\": \"string\" } ] (optional)\n *   },\n *   ...\n * ]\n * This is mapped to frontend GeneralInsight[].\n */\nexport const fetchGeneralInsights = async (): Promise<GeneralInsight[]> => {\n    return predictionService.fetchGeneralInsights();\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\AdvancedEnsemble.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\AdvancedEnsemble.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\AdvancedEnsemble.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\DailyFantasyService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\DailyFantasyService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\DailyFantasyService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\EnvironmentalService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\EnvironmentalService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\EnvironmentalService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\MarketIntelligenceService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\MarketIntelligenceService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\MarketIntelligenceService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\ModelComparisonService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\ModelComparisonService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\ModelComparisonService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\ModelEvaluationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\ModelEvaluationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\ModelEvaluationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PerformanceAnalyticsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PerformanceAnalyticsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PerformanceAnalyticsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PredictionIntegrationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PredictionIntegrationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PredictionIntegrationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PredictionService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PredictionService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PredictionService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PsychologicalAnalyticsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PsychologicalAnalyticsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\PsychologicalAnalyticsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\RealityExploitationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\RealityExploitationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\RealityExploitationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\SocialDynamicsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\SocialDynamicsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\SocialDynamicsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\TechnologicalAnalyticsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\TechnologicalAnalyticsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\TechnologicalAnalyticsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prediction\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictions.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictions\\algorithms.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictions\\algorithms.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictions\\algorithms.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictions\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictions\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\predictions\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizePicks.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizePicks.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizePicks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizePicksService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizePicksService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizePicksService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizepicks\\MultiplierService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizepicks\\MultiplierService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizepicks\\MultiplierService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizepicks\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizepicks\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\prizepicks\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\proxyService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\proxyService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\proxyService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\rateLimit\\wrapWithRateLimit.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\rateLimit\\wrapWithRateLimit.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\rateLimit\\wrapWithRateLimit.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realDataService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realDataService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimeDataAggregator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimeDataAggregator.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":48,"column":40,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":48,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":631,"column":48,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":631,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":638,"column":50,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":638,"endColumn":58}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\nimport { RealDataSource } from \"./realDataService\";\n\nexport interface LiveOdds {\n  sportsbook: string;\n  moneyline: { home: number; away: number };\n  spread: { line: number; home: number; away: number };\n  total: { line: number; over: number; under: number };\n  lastUpdate: Date;\n}\n\nexport interface PlayerProps {\n  playerId: string;\n  playerName: string;\n  props: {\n    statType: string;\n    line: number;\n    over: number;\n    under: number;\n    sportsbook: string;\n  }[];\n}\n\nexport interface LiveGameData {\n  gameId: string;\n  sport: string;\n  homeTeam: string;\n  awayTeam: string;\n  score: { home: number; away: number };\n  quarter: string;\n  timeRemaining: string;\n  possession: string;\n  lastPlay: string;\n  momentum: number;\n}\n\nexport interface MarketMovement {\n  timestamp: Date;\n  lineChange: number;\n  volumeChange: number;\n  direction: \"up\" | \"down\" | \"stable\";\n  significance: \"minor\" | \"moderate\" | \"major\";\n}\n\nexport class RealTimeDataAggregator {\n  private wsConnections: Map<string, WebSocket> = new Map();\n  private dataCache: Map<string, any> = new Map();\n  private updateCallbacks: Map<string, Function[]> = new Map();\n\n  // Additional real-time data sources\n  private additionalSources = {\n    // Odds comparison sites\n    ODDS_API: \"https://api.the-odds-api.com/v4/sports\",\n    ODDS_SHARK: \"https://www.oddsshark.com/api\",\n\n    // Live scores and stats\n    LIVE_SCORES: \"https://api.sportradar.com/nba/trial/v7/en/games\",\n    ESPN_LIVE: \"https://site.api.espn.com/apis/site/v2/sports\",\n\n    // Social media and sentiment\n    TWITTER_API: \"https://api.twitter.com/2/tweets/search/recent\",\n    REDDIT_LIVE: \"https://www.reddit.com/r/sportsbook/new.json\",\n\n    // Weather and conditions\n    WEATHER_LIVE: \"https://api.openweathermap.org/data/2.5/weather\",\n\n    // Injury and news\n    ROTOWORLD: \"https://www.rotoworld.com/api\",\n    FANTASY_LABS: \"https://api.fantasylabs.com\",\n\n    // Advanced stats\n    NBA_STATS: \"https://stats.nba.com/stats\",\n    BASKETBALL_REF: \"https://www.basketball-reference.com/api\",\n\n    // Betting market data\n    PINNACLE: \"https://api.pinnacle.com/v1\",\n    BETFAIR: \"https://api.betfair.com/exchange/betting/rest/v1.0\",\n\n    // Cryptocurrency for market patterns\n    BINANCE: \"https://api.binance.com/api/v3/ticker/24hr\",\n    COINBASE: \"https://api.coinbase.com/v2/exchange-rates\",\n  };\n\n  async initializeRealTimeFeeds(): Promise<void> {\n    await Promise.all([\n      this.connectToOddsFeeds(),\n      this.connectToLiveScores(),\n      this.connectToSocialFeeds(),\n      this.connectToWeatherFeeds(),\n      this.connectToNewsFeeds(),\n      this.connectToMarketFeeds(),\n      this.connectToCryptoFeeds(),\n    ]);\n  }\n\n  private async connectToOddsFeeds(): Promise<void> {\n    try {\n      // Connect to multiple odds providers\n      const oddsProviders = [\n        \"draftkings\",\n        \"fanduel\",\n        \"betmgm\",\n        \"caesars\",\n        \"pointsbet\",\n        \"barstool\",\n        \"unibet\",\n      ];\n\n      for (const provider of oddsProviders) {\n        try {\n          const response = await this.makeSecureRequest(\n            `${this.additionalSources.ODDS_API}/${provider}/odds`,\n          );\n          this.dataCache.set(`odds_${provider}`, {\n            data: response,\n            timestamp: new Date(),\n            provider,\n          });\n        } catch (error) {\n          console.warn(`Failed to connect to ${provider} odds feed`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error connecting to odds feeds:\", error);\n    }\n  }\n\n  private async connectToLiveScores(): Promise<void> {\n    const sports = [\n      \"nba\",\n      \"nfl\",\n      \"mlb\",\n      \"nhl\",\n      \"wnba\",\n      \"soccer\",\n      \"pga\",\n      \"tennis\",\n      \"esports\",\n      \"mma\",\n    ];\n\n    for (const sport of sports) {\n      try {\n        const liveGames = await this.fetchLiveGames(sport);\n        this.dataCache.set(`live_${sport}`, {\n          games: liveGames,\n          timestamp: new Date(),\n        });\n\n        // Set up real-time updates\n        this.setupLiveGameUpdates(sport);\n      } catch (error) {\n        console.warn(`Failed to connect to ${sport} live scores`);\n      }\n    }\n  }\n\n  private async connectToSocialFeeds(): Promise<void> {\n    try {\n      // Reddit live feeds\n      const subreddits = [\n        \"sportsbook\",\n        \"nba\",\n        \"nfl\",\n        \"mlb\",\n        \"nhl\",\n        \"fantasyfootball\",\n      ];\n\n      for (const subreddit of subreddits) {\n        try {\n          const posts = await this.fetchRedditPosts(subreddit);\n          this.dataCache.set(`reddit_${subreddit}`, {\n            posts,\n            sentiment: this.analyzeSentiment(posts),\n            timestamp: new Date(),\n          });\n        } catch (error) {\n          console.warn(`Failed to fetch ${subreddit} posts`);\n        }\n      }\n\n      // Twitter sentiment (if available)\n      await this.fetchTwitterSentiment();\n    } catch (error) {\n      console.error(\"Error connecting to social feeds:\", error);\n    }\n  }\n\n  private async connectToWeatherFeeds(): Promise<void> {\n    const stadiumLocations = [\n      { name: \"MetLife Stadium\", lat: 40.8135, lon: -74.0745 },\n      { name: \"Lambeau Field\", lat: 44.5013, lon: -88.0622 },\n      { name: \"Soldier Field\", lat: 41.8623, lon: -87.6167 },\n      { name: \"Fenway Park\", lat: 42.3467, lon: -71.0972 },\n    ];\n\n    for (const stadium of stadiumLocations) {\n      try {\n        const weather = await this.fetchWeatherData(stadium.lat, stadium.lon);\n        this.dataCache.set(`weather_${stadium.name}`, {\n          weather,\n          impact: this.calculateWeatherImpact(weather),\n          timestamp: new Date(),\n        });\n      } catch (error) {\n        console.warn(`Failed to fetch weather for ${stadium.name}`);\n      }\n    }\n  }\n\n  private async connectToNewsFeeds(): Promise<void> {\n    const newsSources = [\n      \"espn.com/nba/rss\",\n      \"espn.com/nfl/rss\",\n      \"espn.com/mlb/rss\",\n      \"espn.com/nhl/rss\",\n      \"rotoworld.com/rss\",\n      \"fantasypros.com/rss\",\n    ];\n\n    for (const source of newsSources) {\n      try {\n        const news = await this.fetchNewsData(source);\n        this.dataCache.set(`news_${source}`, {\n          articles: news,\n          sentiment: this.analyzeNewsSentiment(news),\n          timestamp: new Date(),\n        });\n      } catch (error) {\n        console.warn(`Failed to fetch news from ${source}`);\n      }\n    }\n  }\n\n  private async connectToMarketFeeds(): Promise<void> {\n    try {\n      // Fetch cryptocurrency data for market pattern analysis\n      const cryptoData = await this.fetchCryptoData();\n      this.dataCache.set(\"crypto_patterns\", {\n        data: cryptoData,\n        volatility: this.calculateCryptoVolatility(cryptoData),\n        timestamp: new Date(),\n      });\n\n      // Fetch forex data for economic indicators\n      const forexData = await this.fetchForexData();\n      this.dataCache.set(\"forex_indicators\", {\n        data: forexData,\n        trends: this.analyzeForexTrends(forexData),\n        timestamp: new Date(),\n      });\n    } catch (error) {\n      console.error(\"Error connecting to market feeds:\", error);\n    }\n  }\n\n  private async connectToCryptoFeeds(): Promise<void> {\n    try {\n      const cryptoSymbols = [\"BTCUSDT\", \"ETHUSDT\", \"ADAUSDT\", \"DOTUSDT\"];\n\n      for (const symbol of cryptoSymbols) {\n        const data = await this.fetchCryptoSymbolData(symbol);\n        this.dataCache.set(`crypto_${symbol}`, {\n          price: data.price,\n          volume: data.volume,\n          volatility: data.priceChangePercent,\n          timestamp: new Date(),\n        });\n      }\n    } catch (error) {\n      console.error(\"Error connecting to crypto feeds:\", error);\n    }\n  }\n\n  private async makeSecureRequest(\n    url: string,\n    options: any = {},\n  ): Promise<any> {\n    try {\n      const response = await axios.get(url, {\n        timeout: 10000,\n        headers: {\n          \"User-Agent\":\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\",\n          Accept: \"application/json\",\n          ...options.headers,\n        },\n        ...options,\n      });\n      return response.data;\n    } catch (error) {\n      throw new Error(`Request failed: ${error}`);\n    }\n  }\n\n  private async fetchLiveGames(sport: string): Promise<LiveGameData[]> {\n    try {\n      const url = `https://site.api.espn.com/apis/site/v2/sports/${this.getSportPath(sport)}/scoreboard`;\n      const data = await this.makeSecureRequest(url);\n\n      return (\n        data.events?.map((event: any) => ({\n          gameId: event.id,\n          sport: sport.toUpperCase(),\n          homeTeam:\n            event.competitions[0]?.competitors?.find(\n              (c: any) => c.homeAway === \"home\",\n            )?.team?.displayName || \"Unknown\",\n          awayTeam:\n            event.competitions[0]?.competitors?.find(\n              (c: any) => c.homeAway === \"away\",\n            )?.team?.displayName || \"Unknown\",\n          score: {\n            home: parseInt(\n              event.competitions[0]?.competitors?.find(\n                (c: any) => c.homeAway === \"home\",\n              )?.score || \"0\",\n            ),\n            away: parseInt(\n              event.competitions[0]?.competitors?.find(\n                (c: any) => c.homeAway === \"away\",\n              )?.score || \"0\",\n            ),\n          },\n          quarter: event.status?.period?.toString() || \"1\",\n          timeRemaining: event.status?.displayClock || \"12:00\",\n          possession: \"Unknown\",\n          lastPlay: \"Game in progress\",\n          momentum: Math.random() * 2 - 1,\n        })) || []\n      );\n    } catch (error) {\n      return [];\n    }\n  }\n\n  private getSportPath(sport: string): string {\n    const paths: { [key: string]: string } = {\n      nba: \"basketball/nba\",\n      nfl: \"football/nfl\",\n      mlb: \"baseball/mlb\",\n      nhl: \"hockey/nhl\",\n    };\n    return paths[sport] || \"basketball/nba\";\n  }\n\n  private async fetchRedditPosts(subreddit: string): Promise<any[]> {\n    try {\n      const url = `https://www.reddit.com/r/${subreddit}/hot.json?limit=50`;\n      const data = await this.makeSecureRequest(url);\n      return data.data?.children?.map((post: any) => post.data) || [];\n    } catch (error) {\n      return [];\n    }\n  }\n\n  private async fetchTwitterSentiment(): Promise<void> {\n    // Twitter API requires authentication, so we'll simulate this\n    const simulatedTweets = [\n      { text: \"LeBron looking great tonight!\", sentiment: 0.8 },\n      { text: \"This game is going over for sure\", sentiment: 0.6 },\n      { text: \"Terrible performance by the defense\", sentiment: -0.7 },\n    ];\n\n    this.dataCache.set(\"twitter_sentiment\", {\n      tweets: simulatedTweets,\n      overallSentiment:\n        simulatedTweets.reduce((sum, tweet) => sum + tweet.sentiment, 0) /\n        simulatedTweets.length,\n      timestamp: new Date(),\n    });\n  }\n\n  private async fetchWeatherData(lat: number, lon: number): Promise<any> {\n    try {\n      const url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current_weather=true&hourly=temperature_2m,precipitation,windspeed_10m,visibility`;\n      return await this.makeSecureRequest(url);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  private async fetchNewsData(source: string): Promise<any[]> {\n    try {\n      const url = `https://api.rss2json.com/v1/api.json?rss_url=https://${source}`;\n      const data = await this.makeSecureRequest(url);\n      return data.items || [];\n    } catch (error) {\n      return [];\n    }\n  }\n\n  private async fetchCryptoData(): Promise<any> {\n    try {\n      const url = \"https://api.coindesk.com/v1/bpi/currentprice.json\";\n      return await this.makeSecureRequest(url);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  private async fetchForexData(): Promise<any> {\n    try {\n      const url = \"https://api.exchangerate-api.com/v4/latest/USD\";\n      return await this.makeSecureRequest(url);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  private async fetchCryptoSymbolData(symbol: string): Promise<any> {\n    try {\n      const url = `https://api.binance.com/api/v3/ticker/24hr?symbol=${symbol}`;\n      return await this.makeSecureRequest(url);\n    } catch (error) {\n      return { price: 0, volume: 0, priceChangePercent: 0 };\n    }\n  }\n\n  private setupLiveGameUpdates(sport: string): void {\n    setInterval(async () => {\n      try {\n        const liveGames = await this.fetchLiveGames(sport);\n        this.dataCache.set(`live_${sport}`, {\n          games: liveGames,\n          timestamp: new Date(),\n        });\n\n        // Notify subscribers\n        this.notifySubscribers(`live_${sport}`, liveGames);\n      } catch (error) {\n        console.warn(`Failed to update live ${sport} games`);\n      }\n    }, 30000); // Update every 30 seconds\n  }\n\n  private analyzeSentiment(posts: any[]): number {\n    if (!posts.length) return 0;\n\n    let totalSentiment = 0;\n    let count = 0;\n\n    posts.forEach((post) => {\n      const title = post.title?.toLowerCase() || \"\";\n      let sentiment = 0;\n\n      // Positive keywords\n      const positiveWords = [\n        \"win\",\n        \"great\",\n        \"amazing\",\n        \"best\",\n        \"good\",\n        \"excellent\",\n        \"perfect\",\n        \"love\",\n      ];\n      const negativeWords = [\n        \"lose\",\n        \"bad\",\n        \"worst\",\n        \"terrible\",\n        \"awful\",\n        \"hate\",\n        \"sucks\",\n        \"disappointing\",\n      ];\n\n      positiveWords.forEach((word) => {\n        if (title.includes(word)) sentiment += 0.1;\n      });\n\n      negativeWords.forEach((word) => {\n        if (title.includes(word)) sentiment -= 0.1;\n      });\n\n      totalSentiment += sentiment;\n      count++;\n    });\n\n    return count > 0 ? totalSentiment / count : 0;\n  }\n\n  private analyzeNewsSentiment(articles: any[]): number {\n    if (!articles.length) return 0;\n\n    let totalSentiment = 0;\n    let count = 0;\n\n    articles.forEach((article) => {\n      const text = `${article.title} ${article.description}`.toLowerCase();\n      let sentiment = 0;\n\n      // Advanced sentiment analysis\n      const positivePatterns = [\n        /\\b(win|victory|success|record|best|great|excellent|outstanding|dominant)\\b/g,\n        /\\b(comeback|clutch|amazing|spectacular|brilliant)\\b/g,\n      ];\n\n      const negativePatterns = [\n        /\\b(lose|loss|injury|suspended|worst|terrible|disappointing)\\b/g,\n        /\\b(struggle|concern|doubt|question|problem)\\b/g,\n      ];\n\n      positivePatterns.forEach((pattern) => {\n        const matches = text.match(pattern);\n        if (matches) sentiment += matches.length * 0.2;\n      });\n\n      negativePatterns.forEach((pattern) => {\n        const matches = text.match(pattern);\n        if (matches) sentiment -= matches.length * 0.2;\n      });\n\n      totalSentiment += sentiment;\n      count++;\n    });\n\n    return count > 0 ? totalSentiment / count : 0;\n  }\n\n  private calculateWeatherImpact(weather: any): number {\n    if (!weather?.current_weather) return 0;\n\n    const temp = weather.current_weather.temperature;\n    const wind = weather.current_weather.windspeed;\n    const precipitation = weather.hourly?.precipitation?.[0] || 0;\n\n    let impact = 0;\n\n    // Temperature impact\n    if (temp < 32 || temp > 90) impact += 0.1;\n    if (temp < 20 || temp > 100) impact += 0.2;\n\n    // Wind impact\n    if (wind > 15) impact += 0.1;\n    if (wind > 25) impact += 0.2;\n\n    // Precipitation impact\n    if (precipitation > 0.1) impact += 0.15;\n    if (precipitation > 0.5) impact += 0.25;\n\n    return Math.min(impact, 0.5); // Cap at 50% impact\n  }\n\n  private calculateCryptoVolatility(cryptoData: any): number {\n    if (!cryptoData?.bpi?.USD?.rate_float) return 0;\n\n    // Simulate volatility calculation\n    return Math.random() * 0.1;\n  }\n\n  private analyzeForexTrends(forexData: any): any {\n    if (!forexData?.rates) return {};\n\n    return {\n      usdStrength: Math.random() * 2 - 1,\n      volatility: Math.random() * 0.1,\n      trend: Math.random() > 0.5 ? \"up\" : \"down\",\n    };\n  }\n\n  private notifySubscribers(dataType: string, data: any): void {\n    const callbacks = this.updateCallbacks.get(dataType) || [];\n    callbacks.forEach((callback) => {\n      try {\n        callback(data);\n      } catch (error) {\n        console.error(\"Error in subscriber callback:\", error);\n      }\n    });\n  }\n\n  // Public methods for accessing real-time data\n  public getLiveOdds(gameId: string): LiveOdds[] {\n    const odds: LiveOdds[] = [];\n\n    [\"draftkings\", \"fanduel\", \"betmgm\", \"caesars\"].forEach((provider) => {\n      const data = this.dataCache.get(`odds_${provider}`);\n      if (data) {\n        odds.push({\n          sportsbook: provider,\n          moneyline: {\n            home: -110 + Math.random() * 40,\n            away: -110 + Math.random() * 40,\n          },\n          spread: { line: Math.random() * 10 - 5, home: -110, away: -110 },\n          total: { line: 220 + Math.random() * 20, over: -110, under: -110 },\n          lastUpdate: data.timestamp,\n        });\n      }\n    });\n\n    return odds;\n  }\n\n  public getLiveGameData(sport: string): LiveGameData[] {\n    const data = this.dataCache.get(`live_${sport}`);\n    return data?.games || [];\n  }\n\n  public getSentimentData(topic: string): any {\n    const redditData = this.dataCache.get(`reddit_${topic}`);\n    const twitterData = this.dataCache.get(\"twitter_sentiment\");\n\n    return {\n      reddit: redditData?.sentiment || 0,\n      twitter: twitterData?.overallSentiment || 0,\n      combined:\n        ((redditData?.sentiment || 0) + (twitterData?.overallSentiment || 0)) /\n        2,\n    };\n  }\n\n  public getWeatherImpact(location: string): any {\n    return this.dataCache.get(`weather_${location}`);\n  }\n\n  public getMarketIndicators(): any {\n    const crypto = this.dataCache.get(\"crypto_patterns\");\n    const forex = this.dataCache.get(\"forex_indicators\");\n\n    return {\n      cryptoVolatility: crypto?.volatility || 0,\n      forexTrends: forex?.trends || {},\n      marketSentiment: Math.random() * 2 - 1,\n    };\n  }\n\n  public subscribe(dataType: string, callback: Function): void {\n    if (!this.updateCallbacks.has(dataType)) {\n      this.updateCallbacks.set(dataType, []);\n    }\n    this.updateCallbacks.get(dataType)!.push(callback);\n  }\n\n  public unsubscribe(dataType: string, callback: Function): void {\n    const callbacks = this.updateCallbacks.get(dataType) || [];\n    const index = callbacks.indexOf(callback);\n    if (index > -1) {\n      callbacks.splice(index, 1);\n    }\n  }\n\n  public getAllCachedData(): Map<string, any> {\n    return new Map(this.dataCache);\n  }\n}\n\nexport const realTimeDataAggregator = new RealTimeDataAggregator();\n\n// Mock implementation for missing service\nexport interface RealDataSource {\n  connected: boolean;\n  quality: number;\n  lastUpdate: Date;\n  data: any;\n  error: string | null;\n  source: string;\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimePredictionEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimePredictionEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimePredictionEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimeUpdateService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimeUpdateService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimeUpdateService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimeUpdates.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimeUpdates.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\realTimeUpdates.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\referee\\RefereeService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\referee\\RefereeService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\referee\\RefereeService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\referee\\__tests__\\RefereeService.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\referee\\__tests__\\RefereeService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\referee\\__tests__\\RefereeService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\riskManagement.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\riskManagement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\riskManagement.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\risk\\RiskProfileService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\risk\\RiskProfileService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\risk\\RiskProfileService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sentiment.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sentiment.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sentiment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sentimentService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sentimentService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sentimentService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\socialFeatures.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\socialFeatures.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\socialFeatures.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sportradar.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sportradar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sportradar.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sportsAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sportsAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sportsAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sportsradar\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sportsradar\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\sportsradar\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\strategy.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\strategy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\strategy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\twitter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\twitter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\twitter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\types\\validation.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\types\\validation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\types\\validation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\ApiService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\ApiService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\ApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\BaseService.d.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":8,"column":33,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":8,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":9,"column":34,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":9,"endColumn":42}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { AxiosInstance } from \"axios\";\nimport { UnifiedServiceRegistry } from \"./UnifiedServiceRegistry\";\nimport { UnifiedConfig } from \"../unified/UnifiedConfig\";\nimport { UnifiedLogger } from \"../unified/UnifiedLogger\";\nimport { UnifiedCache } from \"../unified/UnifiedCache\";\ndeclare class EventEmitter {\n    private events;\n    on(event: string, listener: Function): void;\n    off(event: string, listener: Function): void;\n    emit(event: string, ...args: any[]): void;\n}\nexport interface ServiceError {\n    code: string;\n    source: string;\n    details?: any;\n}\nexport declare abstract class BaseService extends EventEmitter {\n    protected readonly name: string;\n    protected readonly serviceRegistry: UnifiedServiceRegistry;\n    protected config: UnifiedConfig;\n    protected logger: UnifiedLogger;\n    protected api: AxiosInstance;\n    protected cache: UnifiedCache;\n    constructor(name: string, serviceRegistry: UnifiedServiceRegistry);\n    private setupInterceptors;\n    protected handleError(error: any, serviceError: ServiceError): void;\n    protected retry<T>(operation: () => Promise<T>, maxRetries?: number, delay?: number): Promise<T>;\n    protected getCacheKey(...parts: (string | number)[]): string;\n    protected withCache<T>(key: string, operation: () => Promise<T>, ttl?: number): Promise<T>;\n    initialize(): Promise<void>;\n    cleanup(): Promise<void>;\n    protected handleRequest<T>(request: () => Promise<T>): Promise<T>;\n}\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\BaseService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\BaseService.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":15,"column":36,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":15,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":17,"column":31,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":17,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":24,"column":32,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":24,"endColumn":40}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type {\n  AxiosError,\n  AxiosInstance,\n  AxiosResponse,\n  InternalAxiosRequestConfig,\n} from \"axios\";\nimport axios from \"axios\";\nimport { UnifiedLogger } from \"../../core/UnifiedLogger\";\nimport { UnifiedCache } from \"../unified/UnifiedCache\";\nimport { UnifiedConfig } from \"../unified/UnifiedConfig\";\nimport { UnifiedServiceRegistry } from \"./UnifiedServiceRegistry\";\n\n// Browser-compatible EventEmitter\nclass EventEmitter {\n  private events: { [key: string]: Function[] } = {};\n\n  on(event: string, listener: Function) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  off(event: string, listener: Function) {\n    if (!this.events[event]) return;\n    this.events[event] = this.events[event].filter((l) => l !== listener);\n  }\n\n  emit(event: string, ...args: any[]) {\n    if (!this.events[event]) return;\n    this.events[event].forEach((listener) => listener(...args));\n  }\n}\n\nexport interface ServiceError {\n  code: string;\n  source: string;\n  details?: any;\n}\n\nexport abstract class BaseService extends EventEmitter {\n  protected config: UnifiedConfig;\n  protected logger: UnifiedLogger;\n  protected api: AxiosInstance;\n  protected cache: UnifiedCache;\n\n  constructor(\n    protected readonly name: string,\n    protected readonly serviceRegistry: UnifiedServiceRegistry,\n  ) {\n    super();\n    this.config = UnifiedConfig.getInstance();\n    this.logger = new UnifiedLogger(this.name);\n    this.cache = UnifiedCache.getInstance();\n\n    // Initialize API client\n    this.api = axios.create({\n      baseURL: this.config.getApiUrl(),\n      timeout: 10000,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    this.setupInterceptors();\n  }\n\n  private setupInterceptors(): void {\n    this.api.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        const token = this.config.getAuthToken();\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error: AxiosError) => {\n        this.logger.error(\"Request error:\", error);\n        return Promise.reject(error);\n      },\n    );\n\n    this.api.interceptors.response.use(\n      (response: AxiosResponse) => {\n        return response;\n      },\n      (error: AxiosError) => {\n        this.logger.error(\"Response error:\", error);\n        return Promise.reject(error);\n      },\n    );\n  }\n\n  protected handleError(error: any, serviceError: ServiceError): void {\n    this.logger.error(\n      `Error in ${serviceError.source}: ${error.message}`,\n      this.name,\n      {\n        error,\n        serviceError,\n      },\n    );\n\n    // Emit error event\n    this.serviceRegistry.emit(\"error\", {\n      ...serviceError,\n      error: error.message,\n      timestamp: Date.now(),\n    });\n  }\n\n  protected async retry<T>(\n    operation: () => Promise<T>,\n    maxRetries: number = 3,\n    delay: number = 1000,\n  ): Promise<T> {\n    let lastError: any;\n    for (let i = 0; i < maxRetries; i++) {\n      try {\n        return await operation();\n      } catch (error) {\n        lastError = error;\n        if (i < maxRetries - 1) {\n          await new Promise((resolve) => setTimeout(resolve, delay * (i + 1)));\n        }\n      }\n    }\n    throw lastError;\n  }\n\n  protected getCacheKey(...parts: (string | number)[]): string {\n    return `${this.name}:${parts.join(\":\")}`;\n  }\n\n  protected async withCache<T>(\n    key: string,\n    operation: () => Promise<T>,\n    ttl?: number,\n  ): Promise<T> {\n    const cached = this.cache.get<T>(key);\n    if (cached) return cached;\n\n    const result = await operation();\n    this.cache.set(key, result, ttl);\n    return result;\n  }\n\n  // Lifecycle methods\n  async initialize(): Promise<void> {\n    this.logger.info(`Initializing ${this.name} service`, this.name);\n    // Override in derived classes if needed\n  }\n\n  async cleanup(): Promise<void> {\n    this.logger.info(`Cleaning up ${this.name} service`, this.name);\n    // Override in derived classes if needed\n  }\n\n  protected async handleRequest<T>(request: () => Promise<T>): Promise<T> {\n    try {\n      return await request();\n    } catch (error) {\n      this.logger.error(\"Request failed:\", error);\n      throw error;\n    }\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\BettingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\BettingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\BettingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\CacheService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\CacheService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\CacheService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\EnhancedBackendApiService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\EnhancedBackendApiService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\EnhancedBackendApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\ExternalApiService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\ExternalApiService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\ExternalApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\PerformanceTrackingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\PerformanceTrackingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\PerformanceTrackingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\PrizePicksApiService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\PrizePicksApiService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\PrizePicksApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\SecurityService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\SecurityService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\SecurityService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedAnalyticsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedAnalyticsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedAnalyticsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBackupService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBackupService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBackupService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBettingAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBettingAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBettingAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBettingCore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBettingCore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBettingCore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBettingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBettingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedBettingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedCache.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedCache.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedCache.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedConfig.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedDataService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedDataService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedDataService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedEnhancedPredictionService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedEnhancedPredictionService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedEnhancedPredictionService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedErrorService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedErrorService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedErrorService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedLogger.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedLogger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedLogger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedNotificationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedNotificationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedNotificationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedPredictionService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedPredictionService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedPredictionService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedRecoveryService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedRecoveryService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedRecoveryService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedServiceBase.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedServiceBase.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedServiceBase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedServiceRegistry.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedServiceRegistry.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedServiceRegistry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedSettingsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedSettingsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedSettingsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedStateService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedStateService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedStateService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedWebSocketService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedWebSocketService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\UnifiedWebSocketService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\WebSocketManager.d.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":3,"column":27,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":3,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":4,"column":28,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":4,"endColumn":36}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"declare class EventEmitter {\n    private listeners;\n    on(event: string, fn: Function): void;\n    off(event: string, fn: Function): void;\n    emit(event: string, ...args: any[]): void;\n}\nimport { WSMessage, WebSocketConfig } from \"../../types/core\";\nexport declare class WebSocketManager extends EventEmitter {\n    private static instance;\n    private connections;\n    private readonly defaultConfig;\n    private constructor();\n    static getInstance(): WebSocketManager;\n    connect(config?: Partial<WebSocketConfig>): void;\n    private setupSocketHandlers;\n    private setupHeartbeat;\n    private clearHeartbeat;\n    private handleReconnect;\n    private processMessageQueue;\n    send(url: string, message: WSMessage): void;\n    disconnect(url: string): void;\n    isConnected(url: string): boolean;\n    getConnectionStatus(): Record<string, boolean>;\n}\nexport declare const webSocketManager: WebSocketManager;\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\WebSocketManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\WebSocketManager.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":3,"column":41,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":3,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":4,"column":25,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":4,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-function-type","severity":2,"message":"The `Function` type accepts any function-like value.\nPrefer explicitly defining any function parameters and return type.","line":8,"column":26,"nodeType":"Identifier","messageId":"bannedFunctionType","endLine":8,"endColumn":34}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Minimal browser-compatible EventEmitter\nclass EventEmitter {\n  private listeners: { [event: string]: Function[] } = {};\n  on(event: string, fn: Function) {\n    this.listeners[event] = this.listeners[event] || [];\n    this.listeners[event].push(fn);\n  }\n  off(event: string, fn: Function) {\n    if (!this.listeners[event]) return;\n    this.listeners[event] = this.listeners[event].filter((f) => f !== fn);\n  }\n  emit(event: string, ...args: any[]) {\n    (this.listeners[event] || []).forEach((fn) => fn(...args));\n  }\n}\nimport { useAppStore } from \"../../stores/appStore\";\nimport { WSMessage, WebSocketConfig } from \"../../types/core\";\n\ninterface WebSocketConnection {\n  socket: WebSocket;\n  messageQueue: WSMessage[];\n  isConnected: boolean;\n  reconnectAttempts: number;\n  heartbeatTimer?: NodeJS.Timeout;\n}\n\nexport class WebSocketManager extends EventEmitter {\n  private static instance: WebSocketManager;\n  private connections: Map<string, WebSocketConnection>;\n  private readonly defaultConfig: Required<WebSocketConfig>;\n\n  private constructor() {\n    super();\n    this.connections = new Map();\n    this.defaultConfig = {\n      url:\n        typeof import.meta !== \"undefined\" &&\n        import.meta.env &&\n        import.meta.env.VITE_WS_URL\n          ? import.meta.env.VITE_WS_URL\n          : \"\",\n      reconnectInterval: 1000,\n      maxRetries: 5,\n    };\n  }\n\n  public static getInstance(): WebSocketManager {\n    if (!WebSocketManager.instance) {\n      WebSocketManager.instance = new WebSocketManager();\n    }\n    return WebSocketManager.instance;\n  }\n\n  public connect(config: Partial<WebSocketConfig> = {}): void {\n    console.log(\"WebSocketManager.connect() called with config:\", config);\n    const fullConfig = { ...this.defaultConfig, ...config };\n    console.log(\"Full WebSocket config:\", fullConfig);\n\n    // Skip connection if WebSocket is disabled or no valid URL is configured\n    if (\n      !fullConfig.url ||\n      fullConfig.url === \"\" ||\n      fullConfig.url === \"wss://api.betproai.com/ws\" ||\n      fullConfig.url.includes(\"api.betproai.com\") ||\n      import.meta.env.VITE_ENABLE_WEBSOCKET === \"false\"\n    ) {\n      console.log(\n        \"WebSocket connection disabled. To enable: set VITE_WS_URL and VITE_ENABLE_WEBSOCKET=true in environment variables.\",\n      );\n      return;\n    }\n\n    const userId = useAppStore.getState().user?.id;\n    const clientId =\n      userId || `anon_client_${Math.random().toString(36).substring(2, 10)}`;\n    const wsUrl = `${fullConfig.url}?client_id=${encodeURIComponent(clientId)}`;\n\n    if (this.connections.has(wsUrl)) {\n      return;\n    }\n\n    const connection: WebSocketConnection = {\n      socket: new WebSocket(wsUrl),\n      messageQueue: [],\n      isConnected: false,\n      reconnectAttempts: 0,\n    };\n\n    this.setupSocketHandlers(connection, fullConfig);\n    this.connections.set(wsUrl, connection);\n  }\n\n  private setupSocketHandlers(\n    connection: WebSocketConnection,\n    config: Required<WebSocketConfig>,\n  ): void {\n    const { socket } = connection;\n\n    socket.onopen = () => {\n      connection.isConnected = true;\n      connection.reconnectAttempts = 0;\n      this.processMessageQueue(connection);\n      this.setupHeartbeat(connection, config);\n      this.emit(\"connected\", config.url);\n    };\n\n    socket.onclose = () => {\n      connection.isConnected = false;\n      this.clearHeartbeat(connection);\n      this.emit(\"disconnected\", config.url);\n      this.handleReconnect(connection, config);\n    };\n\n    socket.onerror = (error) => {\n      console.warn(`WebSocket error for ${config.url}:`, error);\n      this.emit(\"error\", { url: config.url, error });\n    };\n\n    socket.onmessage = (event) => {\n      try {\n        const message = JSON.parse(event.data);\n        this.emit(\"message\", { url: config.url, message });\n      } catch (error) {\n        this.emit(\"error\", {\n          url: config.url,\n          error: new Error(\"Failed to parse WebSocket message\"),\n        });\n      }\n    };\n  }\n\n  private setupHeartbeat(\n    connection: WebSocketConnection,\n    config: Required<WebSocketConfig>,\n  ): void {\n    connection.heartbeatTimer = setInterval(() => {\n      if (connection.isConnected) {\n        this.send(config.url, {\n          type: \"ping\",\n          data: {},\n          timestamp: Date.now(),\n        });\n      }\n    }, config.reconnectInterval);\n  }\n\n  private clearHeartbeat(connection: WebSocketConnection): void {\n    if (connection.heartbeatTimer) {\n      clearInterval(connection.heartbeatTimer);\n      connection.heartbeatTimer = undefined;\n    }\n  }\n\n  private handleReconnect(\n    connection: WebSocketConnection,\n    config: Required<WebSocketConfig>,\n  ): void {\n    if (connection.reconnectAttempts < config.maxRetries) {\n      connection.reconnectAttempts++;\n      console.log(\n        `WebSocket reconnection attempt ${connection.reconnectAttempts}/${config.maxRetries} for ${config.url}`,\n      );\n      setTimeout(\n        () => {\n          this.connect(config);\n        },\n        config.reconnectInterval *\n          Math.pow(2, connection.reconnectAttempts - 1),\n      );\n    } else {\n      console.warn(\n        `Max WebSocket reconnection attempts reached for ${config.url}`,\n      );\n      this.emit(\"reconnect_failed\", config.url);\n    }\n  }\n\n  private processMessageQueue(connection: WebSocketConnection): void {\n    while (connection.messageQueue.length > 0) {\n      const message = connection.messageQueue.shift();\n      if (message) {\n        connection.socket.send(JSON.stringify(message));\n      }\n    }\n  }\n\n  public send(url: string, message: WSMessage): void {\n    const connection = this.connections.get(url);\n    if (!connection) {\n      throw new Error(`No WebSocket connection found for URL: ${url}`);\n    }\n\n    if (connection.isConnected) {\n      connection.socket.send(JSON.stringify(message));\n    } else {\n      connection.messageQueue.push(message);\n    }\n  }\n\n  public disconnect(url: string): void {\n    const connection = this.connections.get(url);\n    if (connection) {\n      this.clearHeartbeat(connection);\n      connection.socket.close();\n      this.connections.delete(url);\n    }\n  }\n\n  public isConnected(url: string): boolean {\n    return this.connections.get(url)?.isConnected ?? false;\n  }\n\n  public getConnectionStatus(): Record<string, boolean> {\n    const status: Record<string, boolean> = {};\n    Array.from(this.connections.entries()).forEach(([url, connection]) => {\n      status[url] = connection.isConnected;\n    });\n    return status;\n  }\n}\n\nexport const webSocketManager = WebSocketManager.getInstance();\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\__tests__\\UnifiedBettingAnalytics.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\__tests__\\UnifiedBettingAnalytics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\__tests__\\UnifiedBettingAnalytics.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\analyticsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\analyticsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\analyticsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\errorService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\errorService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\errorService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\loggingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\loggingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\loggingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\notificationService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\notificationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\notificationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\predictionService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\predictionService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\predictionService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\settingsService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\settingsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\settingsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\stateService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\stateService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\unified\\stateService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\userService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\userService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\userService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\user\\BetTrackingService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\user\\BetTrackingService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\user\\BetTrackingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\utils\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\utils\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\utils\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\venue\\VenueService.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\venue\\VenueService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\venue\\VenueService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\weather.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\weather.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\weather.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\weatherModern.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\weatherModern.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\services\\weatherModern.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\setupTests.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\setupTests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\setupTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\shared.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\shared\\prizePicks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\ml-predictions\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\ml-predictions\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\ml-predictions\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\modelStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\modelStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\modelStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\predictionStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\predictionStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\predictionStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\__tests__\\confidenceSlice.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\__tests__\\confidenceSlice.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\__tests__\\confidenceSlice.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\authSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\authSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\authSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\bankrollSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\bankrollSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\bankrollSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\betHistorySlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\betHistorySlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\betHistorySlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\betSlipSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\betSlipSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\betSlipSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\confidenceSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\confidenceSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\confidenceSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\dynamicDataSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\dynamicDataSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\dynamicDataSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\notificationSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\notificationSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\notificationSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\prizePicksSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\prizePicksSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\prizePicksSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\simulationSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\simulationSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\slices\\simulationSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\themeStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\themeStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\themeStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\unified\\UnifiedStoreManager.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\unified\\UnifiedStoreManager.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\unified\\UnifiedStoreManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\useAppStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\useAppStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\useAppStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\useStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\useStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\useStore.ts","messages":[{"ruleId":"no-useless-catch","severity":2,"message":"Unnecessary try/catch wrapper.","line":96,"column":11,"nodeType":"TryStatement","messageId":"unnecessaryCatch","endLine":112,"endColumn":12},{"ruleId":"no-useless-catch","severity":2,"message":"Unnecessary try/catch wrapper.","line":116,"column":11,"nodeType":"TryStatement","messageId":"unnecessaryCatch","endLine":132,"endColumn":12}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { create } from 'zustand';\nimport { devtools } from 'zustand/middleware';\nimport {\n  PlayerProp,\n  Entry,\n  PerformanceMetrics,\n  BettingOpportunity,\n  Alert,\n  BetRecord,\n} from '../types/core';\nimport { ProcessedPrizePicksProp } from '../types/prizePicks';\nimport { persist } from 'zustand/middleware';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'user' | 'admin';\n}\n\ninterface AppState {\n  // Auth\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n\n  // Props and Entries\n  props: ProcessedPrizePicksProp[];\n  selectedProps: string[];\n  entries: Entry[];\n\n  // Performance and Analytics\n  metrics: PerformanceMetrics | null;\n  opportunities: BettingOpportunity[];\n  alerts: Alert[];\n\n  // UI State\n  darkMode: boolean;\n  sidebarOpen: boolean;\n  activeModal: string | null;\n\n  // Actions\n  setProps: (props: ProcessedPrizePicksProp[]) => void;\n  togglePropSelection: (propId: string) => void;\n  addEntry: (entry: Entry) => void;\n  updateEntry: (entryId: string, updates: Partial<Entry>) => void;\n  setMetrics: (metrics: PerformanceMetrics) => void;\n  addOpportunity: (opportunity: BettingOpportunity) => void;\n  removeOpportunity: (opportunityId: string) => void;\n  addAlert: (alert: Alert) => void;\n  removeAlert: (alertId: string) => void;\n  toggleDarkMode: () => void;\n  toggleSidebar: () => void;\n  setActiveModal: (modalId: string | null) => void;\n  bets: BetRecord[];\n  addBet: (bet: BetRecord) => void;\n  updateBet: (betId: string, updates: Partial<BetRecord>) => void;\n  removeBet: (betId: string) => void;\n\n  // Toasts (global notifications)\n  toasts: any[];\n  addToast: (toast: any) => void;\n  removeToast: (id: string) => void;\n  clearToasts: () => void;\n\n  // Error state (optional, for global error handling)\n  isLoading: boolean;\n  error: Error | null;\n  setError: (error: Error) => void;\n  clearError: () => void;\n}\n\nconst useStore = create<AppState>()(\n  devtools(\n    persist(\n      set => ({\n        // Initial State\n        user: null,\n        props: [],\n        selectedProps: [],\n        entries: [],\n        metrics: null,\n        opportunities: [],\n        alerts: [],\n        darkMode: false,\n        sidebarOpen: true,\n        activeModal: null,\n        bets: [],\n        toasts: [],\n        isLoading: false,\n        error: null,\n\n        // Auth Actions\n        login: async (email: string, password: string) => {\n          try {\n            // TODO: Replace with actual API call\n            const response = await fetch('/api/auth/login', {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ email, password }),\n            });\n\n            if (!response.ok) {\n              throw new Error('Invalid credentials');\n            }\n\n            const user = await response.json();\n            set({ user });\n          } catch (error) {\n            throw error;\n          }\n        },\n\n        register: async (name: string, email: string, password: string) => {\n          try {\n            // TODO: Replace with actual API call\n            const response = await fetch('/api/auth/register', {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ name, email, password }),\n            });\n\n            if (!response.ok) {\n              throw new Error('Registration failed');\n            }\n\n            const user = await response.json();\n            set({ user });\n          } catch (error) {\n            throw error;\n          }\n        },\n\n        logout: () => set({ user: null }),\n\n        // Actions\n        setProps: props => set({ props }),\n\n        togglePropSelection: propId =>\n          set(state => ({\n            selectedProps: state.selectedProps.includes(propId)\n              ? state.selectedProps.filter(id => id !== propId)\n              : [...state.selectedProps, propId],\n          })),\n\n        addEntry: entry =>\n          set(state => ({\n            entries: [...state.entries, entry],\n          })),\n\n        updateEntry: (entryId, updates) =>\n          set(state => ({\n            entries: state.entries.map(entry =>\n              entry.id === entryId ? { ...entry, ...updates } : entry\n            ),\n          })),\n\n        setMetrics: metrics => set({ metrics }),\n\n        addOpportunity: opportunity =>\n          set(state => ({\n            opportunities: [...state.opportunities, opportunity],\n          })),\n\n        removeOpportunity: opportunityId =>\n          set(state => ({\n            opportunities: state.opportunities.filter(opp => opp.id !== opportunityId),\n          })),\n\n        addAlert: alert =>\n          set(state => ({\n            alerts: [...state.alerts, alert],\n          })),\n\n        removeAlert: alertId =>\n          set(state => ({\n            alerts: state.alerts.filter(alert => alert.id !== alertId),\n          })),\n\n        toggleDarkMode: () =>\n          set(state => ({\n            darkMode: !state.darkMode,\n          })),\n\n        toggleSidebar: () =>\n          set(state => ({\n            sidebarOpen: !state.sidebarOpen,\n          })),\n\n        setActiveModal: modalId => set({ activeModal: modalId }),\n\n        addBet: bet =>\n          set(state => ({\n            bets: [...state.bets, bet],\n          })),\n\n        updateBet: (betId, updates) =>\n          set(state => ({\n            bets: state.bets.map(bet => (bet.id === betId ? { ...bet, ...updates } : bet)),\n          })),\n\n        removeBet: betId =>\n          set(state => ({\n            bets: state.bets.filter(bet => bet.id !== betId),\n          })),\n\n        addToast: toast =>\n          set(state => ({\n            toasts: [...(state.toasts || []), toast],\n          })),\n\n        removeToast: id =>\n          set(state => ({\n            toasts: (state.toasts || []).filter(t => t.id !== id),\n          })),\n\n        clearToasts: () => set({ toasts: [] }),\n\n        setError: error => set({ error }),\n\n        clearError: () => set({ error: null }),\n      }),\n      {\n        name: 'sports-betting-store',\n        partialize: state => ({\n          user: state.user,\n          props: state.props,\n          selectedProps: state.selectedProps,\n          entries: state.entries,\n          metrics: state.metrics,\n          opportunities: state.opportunities,\n          alerts: state.alerts,\n          darkMode: state.darkMode,\n          sidebarOpen: state.sidebarOpen,\n          activeModal: state.activeModal,\n          bets: state.bets,\n          toasts: state.toasts,\n          isLoading: state.isLoading,\n          error: state.error,\n        }),\n      }\n    )\n  )\n);\n\nexport default useStore;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\useThemeStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\useThemeStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\store\\useThemeStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\__tests__\\enhanced.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\__tests__\\enhanced.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\__tests__\\enhanced.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\appStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\appStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\appStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\bettingStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\bettingStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\bettingStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\enhanced.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\enhanced.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\enhanced.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\filterStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\filterStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\filterStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\mlStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\mlStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\mlStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\moneyMakerStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\moneyMakerStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\moneyMakerStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\monitoring.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\monitoring.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\monitoring.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\oddsStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\oddsStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\oddsStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\payoutStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\payoutStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\payoutStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\predictionStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\predictionStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\predictionStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\riskProfileStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\riskProfileStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\riskProfileStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\slices\\bettingSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\slices\\bettingSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\slices\\bettingSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\slices\\mlSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\slices\\mlSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\slices\\mlSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\slices\\toastSlice.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\slices\\toastSlice.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\slices\\toastSlice.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\themeStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\themeStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\themeStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\useAppStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\useAppStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\useAppStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\useStore.d.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":2,"column":11,"nodeType":"Identifier","messageId":"noEmptyInterfaceWithSuper","endLine":2,"endColumn":21,"suggestions":[{"messageId":"replaceEmptyInterfaceWithSuper","fix":{"range":[50,93],"text":"type StoreState = ToastSlice"},"desc":"Replace empty interface with a type alias."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ToastSlice } from './slices/toastSlice';\ninterface StoreState extends ToastSlice {\n}\nexport declare const useStore: import(\"zustand\").UseBoundStore<import(\"zustand\").StoreApi<StoreState>>;\nexport {};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\useStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\useStore.ts","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":4,"column":11,"nodeType":"Identifier","messageId":"noEmptyInterfaceWithSuper","endLine":4,"endColumn":21,"suggestions":[{"messageId":"replaceEmptyInterfaceWithSuper","fix":{"range":[103,183],"text":"type StoreState = ToastSlice"},"desc":"Replace empty interface with a type alias."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { create } from 'zustand';\nimport { ToastSlice, createToastSlice } from './slices/toastSlice';\n\ninterface StoreState extends ToastSlice {\n  // Add other slices here as needed\n}\n\nexport const useStore = create<StoreState>()((...args) => ({\n  ...createToastSlice(...args),\n  // Add other slices here as needed\n}));\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\websocketStore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\websocketStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stores\\websocketStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stories\\PredictionSummaryCard.stories.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stories\\PredictionSummaryCard.stories.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\stories\\PredictionSummaryCard.stories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\strategies\\ProjectionBettingStrategy.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\strategies\\ProjectionBettingStrategy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\strategies\\ProjectionBettingStrategy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\strategies\\bettingStrategy.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\strategies\\bettingStrategy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\strategies\\bettingStrategy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\styles\\advanced-theme.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\styles\\advanced-theme.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\styles\\advanced-theme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\styles\\theme.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\styles\\theme.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\styles\\theme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\tests\\PredictionPipelineTest.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\tests\\e2e\\prediction.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\tests\\e2e\\prediction.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\tests\\e2e\\prediction.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\tests\\example.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\tests\\optimization.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\theme.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\theme.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\theme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\theme\\PurpleGradientTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\theme\\ThemeProvider.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\theme\\ThemeProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\theme\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\theme\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\theme\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\analytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\bankroll.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\betting.new.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\betting.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\common.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\components.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\confidence.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\core.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\explainability.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\fantasy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\filters.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\history.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\lineup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\market.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\ml.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\model.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\models.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\money-maker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\news.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\performance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\prediction.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\predictions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\prizePicks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\sentiment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\shared.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\simulation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\sports.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\strategy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\types\\webSocket.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\Analyzer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\DataSource.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\DataSource.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\DataSource.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\ErrorHandler.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\ErrorHandler.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\ErrorHandler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\EventBus.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\EventBus.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\EventBus.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\ModelVersioning.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\ModelVersioning.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\ModelVersioning.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\PerformanceMonitor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\PerformanceMonitor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\PerformanceMonitor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\UnifiedConfig.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\UnifiedConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\unified\\UnifiedConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\APIEndpoints.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\APIEndpoints.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\APIEndpoints.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\APITestSuite.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\AdvancedAnalysisEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\AdvancedAnalysisEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\AdvancedAnalysisEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\AnalysisFramework.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\AnalysisFramework.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\AnalysisFramework.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\Analyzer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\Analyzer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\Analyzer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DailyFantasyAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DailyFantasyAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DailyFantasyAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DataIntegrationHub.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DataIntegrationHub.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DataIntegrationHub.ts","messages":[{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":609,"column":71,"nodeType":"BlockStatement","messageId":"unexpected","endLine":611,"endColumn":8,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21620,21636],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { DailyFantasyAdapter, DailyFantasyData } from '../adapters/DailyFantasyAdapter';\nimport { DataSource } from './DataSource';\nimport { ESPNAdapter } from '../adapters/ESPNAdapter';\nimport { EventBus } from '@/core/EventBus';\nimport { PerformanceMonitor } from './PerformanceMonitor';\nimport { PrizePicksAdapter, PrizePicksData } from '../betaTest4/src/adapters/PrizePicksAdapter';\nimport { SocialSentimentAdapter, SocialSentimentData } from '../adapters/SocialSentimentAdapter';\nimport { SportsRadarAdapter, SportsRadarData } from '../adapters/SportsRadarAdapter';\nimport { TheOddsAdapter, TheOddsData } from '../adapters/TheOddsAdapter';\n\n\n\nexport interface IntegratedData {\n  timestamp: number;\n  projections: {\n    [playerId: string]: {\n      stats: Record<string, number>;\n      confidence: number;\n      lastUpdated: number;\n    };\n  };\n  sentiment: {\n    [playerId: string]: SocialSentimentData;\n  };\n  odds: {\n    [eventId: string]: {\n      markets: Record<string, number>;\n      movement: {\n        direction: 'up' | 'down' | 'stable';\n        magnitude: number;\n      };\n    };\n  };\n  injuries: {\n    [playerId: string]: {\n      status: string;\n      details: string;\n      impact: number;\n      timeline: string;\n    };\n  };\n  trends: {\n    [metric: string]: {\n      value: number;\n      change: number;\n      significance: number;\n    };\n  };\n}\n\nexport interface DataSourceMetrics {\n  latency: number;\n  reliability: number;\n  accuracy: number;\n  lastSync: number;\n}\n\ninterface DataCorrelation {\n  sourceA: string;\n  sourceB: string;\n  correlation: number;\n  significance: number;\n  timestamp: number;\n}\n\ninterface CacheEntry<T> {\n  data: T;\n  timestamp: number;\n  correlations: DataCorrelation[];\n  confidence: number;\n}\n\nexport class DataIntegrationHub {\n  private static instance: DataIntegrationHub;\n  private readonly eventBus: EventBus;\n  private readonly performanceMonitor: PerformanceMonitor;\n  private readonly dataSources: Map<string, DataSource<any>>;\n  private readonly sourceMetrics: Map<string, DataSourceMetrics>;\n  private integratedData: IntegratedData;\n  private correlationCache: Map<string, DataCorrelation[]>;\n  private dataCache: Map<string, CacheEntry<any>>;\n  private syncInterval: number;\n  private isRealTimeEnabled: boolean;\n\n  private constructor() {\n    this.eventBus = EventBus.getInstance();\n    this.performanceMonitor = PerformanceMonitor.getInstance();\n    this.dataSources = new Map<string, DataSource<any>>();\n    this.sourceMetrics = new Map();\n    this.correlationCache = new Map();\n    this.dataCache = new Map();\n    this.integratedData = this.initializeIntegratedData();\n    this.syncInterval = 30000; // 30 seconds default\n    this.isRealTimeEnabled = false;\n\n    // Register all adapters\n    const espnAdapter = new ESPNAdapter();\n    this.registerDataSource(espnAdapter);\n\n    const socialSentimentAdapter = new SocialSentimentAdapter();\n    this.registerDataSource(socialSentimentAdapter);\n\n    // Configure and register TheOddsAdapter\n    const theOddsApiKey = import.meta.env.VITE_THEODDS_API_KEY;\n    if (theOddsApiKey) {\n      const theOddsAdapter = new TheOddsAdapter({\n        apiKey: theOddsApiKey,\n        baseUrl: 'https://api.the-odds-api.com/v4',\n        cacheTimeout: 300000 \n      });\n      this.registerDataSource(theOddsAdapter);\n    } else {\n      console.warn('TheOddsAdapter not initialized: VITE_THEODDS_API_KEY is missing.');\n    }\n\n    // Configure and register SportsRadarAdapter\n    const sportsRadarApiKey = import.meta.env.VITE_SPORTRADAR_API_KEY;\n    if (sportsRadarApiKey) {\n      const sportsRadarAdapter = new SportsRadarAdapter({\n        apiKey: sportsRadarApiKey,\n        baseUrl: 'https://api.sportradar.us',\n        cacheTimeout: 300000 \n      });\n      this.registerDataSource(sportsRadarAdapter);\n    } else {\n      console.warn('SportsRadarAdapter not initialized: VITE_SPORTRADAR_API_KEY is missing.');\n    }\n\n    // Configure and register DailyFantasyAdapter\n    const dailyFantasyApiKey = import.meta.env.VITE_DAILYFANTASY_API_KEY;\n    if (dailyFantasyApiKey) {\n      const dailyFantasyAdapter = new DailyFantasyAdapter({\n        apiKey: dailyFantasyApiKey,\n        baseUrl: 'https://api.example.com/dailyfantasy', \n        cacheTimeout: 300000\n      });\n      this.registerDataSource(dailyFantasyAdapter);\n    } else {\n      console.warn('DailyFantasyAdapter not initialized: VITE_DAILYFANTASY_API_KEY is missing.');\n    }\n\n    // Configure and register PrizePicksAdapter\n    const prizePicksApiKey = import.meta.env.VITE_PRIZEPICKS_API_KEY;\n    if (prizePicksApiKey) {\n      const prizePicksAdapter = new PrizePicksAdapter({\n        apiKey: prizePicksApiKey,\n        // baseUrl can be omitted to use default from PrizePicksAdapter\n        // defaultLeagueId can be set here if there's a global default, e.g., 'NBA'\n        cacheTimeout: 300000 // 5 minutes cache\n      });\n      this.registerDataSource(prizePicksAdapter);\n    } else {\n      console.warn('PrizePicksAdapter not initialized: VITE_PRIZEPICKS_API_KEY is missing.');\n    }\n\n    this.setupEventListeners();\n  }\n\n  static getInstance(): DataIntegrationHub {\n    if (!DataIntegrationHub.instance) {\n      DataIntegrationHub.instance = new DataIntegrationHub();\n    }\n    return DataIntegrationHub.instance;\n  }\n\n  private initializeIntegratedData(): IntegratedData {\n    return {\n      timestamp: Date.now(),\n      projections: {},\n      sentiment: {},\n      odds: {},\n      injuries: {},\n      trends: {}\n    };\n  }\n\n  public registerDataSource(source: DataSource<any>): void {\n    this.dataSources.set(source.id, source);\n    this.sourceMetrics.set(source.id, {\n      latency: 0,\n      reliability: 1,\n      accuracy: 1,\n      lastSync: 0\n    });\n  }\n\n  public async startRealTimeSync(): Promise<void> {\n    this.isRealTimeEnabled = true;\n    await this.synchronizeAll();\n  }\n\n  public stopRealTimeSync(): void {\n    this.isRealTimeEnabled = false;\n  }\n\n  public setSyncInterval(milliseconds: number): void {\n    this.syncInterval = milliseconds;\n  }\n\n  private async synchronizeAll(): Promise<void> {\n    const traceId = this.performanceMonitor.startTrace('data-sync');\n\n    try {\n      const syncPromises = Array.from(this.dataSources.entries()).map(\n        async ([id, source]) => {\n          const startTime = Date.now();\n          try {\n            const data = await source.fetch();\n            this.updateSourceMetrics(id, startTime, true, (data as any)?.accuracy);\n            return { id, data, error: null } as const;\n          } catch (error) {\n            this.updateSourceMetrics(id, startTime, false);\n            return { id, data: null, error: error instanceof Error ? error : new Error(String(error)) } as const;\n          }\n        }\n      );\n\n      const results = await Promise.all(syncPromises);\n      await this.integrateData(results);\n\n      if (this.isRealTimeEnabled) {\n        setTimeout(() => this.synchronizeAll(), this.syncInterval);\n      }\n\n      this.performanceMonitor.endTrace(traceId);\n    } catch (error) {\n      this.performanceMonitor.endTrace(traceId, error as Error);\n      throw error;\n    }\n  }\n\n  private updateSourceMetrics(\n    sourceId: string,\n    startTime: number,\n    success: boolean,\n    accuracy?: number\n  ): void {\n    const metrics = this.sourceMetrics.get(sourceId)!;\n    const latency = Date.now() - startTime;\n\n    metrics.latency = (metrics.latency * 0.8 + latency * 0.2);\n    metrics.reliability = success\n      ? Math.min(1, metrics.reliability * 0.95 + 0.05)\n      : metrics.reliability * 0.9;\n    if (accuracy !== undefined) {\n      metrics.accuracy = (metrics.accuracy * 0.9 + accuracy * 0.1);\n    }\n    metrics.lastSync = Date.now();\n\n    this.sourceMetrics.set(sourceId, metrics);\n    this.eventBus.emit('data-source-metric-updated', {\n      sourceId,\n      latency: metrics.latency,\n      reliability: metrics.reliability,\n      accuracy: metrics.accuracy,\n      lastSync: metrics.lastSync,\n    });\n  }\n\n  private async integrateData(results: Array<{ id: string; data: any; error: Error | null }>): Promise<void> {\n    const newData = this.initializeIntegratedData();\n    const correlations: DataCorrelation[] = [];\n\n    for (const result of results) {\n      if (result.error) continue;\n\n      // Cache the raw data with metadata\n      const confidence = this.calculateDataConfidence(result.data);\n      this.dataCache.set(result.id, { \n        data: result.data, \n        timestamp: Date.now(), \n        correlations: [], // Placeholder, to be updated later if correlation analysis is run on this source\n        confidence \n      });\n\n      this.updateIntegratedDataSource(newData, result);\n    }\n\n    // After all individual sources are processed and cached, perform cross-source analysis\n    // For example, calculate correlations if multiple projection sources exist\n    // this.analyzeAndCacheCorrelations(results.filter(r => !r.error).map(r => ({id: r.id, data: r.data })));\n\n    this.integratedData = newData;\n    this.eventBus.emit('data:integrated', { integratedData: this.integratedData, timestamp: Date.now() });\n  }\n\n  private calculateDataConfidence(data: any): number {\n    // Basic confidence: presence of data and key fields\n    if (!data) return 0;\n    if (data.projections && Array.isArray(data.projections) && data.projections.length > 0) return 0.75;\n    if (data.sentiment && Object.keys(data.sentiment).length > 0) return 0.7;\n    // Add more sophisticated checks based on data quality, recency, etc.\n    return 0.5; // Default baseline confidence\n  }\n\n  // Placeholder for a more sophisticated correlation analysis if needed\n  // private analyzeAndCacheCorrelations(activeDataSources: Array<{id: string, data: any }>): void {\n  //   // ... implementation ...\n  // }\n\n  private updateIntegratedDataSource(newData: IntegratedData, result: { id: string; data: any; error: Error | null }): void {\n    if (result.error || !result.data) return;\n\n    switch (result.id) {\n      case 'daily-fantasy': // Assuming DailyFantasyAdapter.id is 'daily-fantasy'\n        this.integrateProjections(newData, result.data as DailyFantasyData);\n        break;\n      case 'prize-picks': // Assuming PrizePicksAdapter.id is 'prize-picks'\n        this.integratePrizePicksProjections(newData, result.data as PrizePicksData);\n        break;\n      case 'social-sentiment': // Assuming SocialSentimentAdapter.id is 'social-sentiment'\n        this.integrateSentiment(newData, result.data as SocialSentimentData[]); // Assuming it's an array\n        break;\n      case 'sports-radar': // Assuming SportsRadarAdapter.id is 'sports-radar'\n        this.integrateSportsData(newData, result.data as SportsRadarData);\n        break;\n      case 'the-odds': // Assuming TheOddsAdapter.id is 'the-odds'\n        this.integrateOdds(newData, result.data as TheOddsData);\n        break;\n      // Add cases for other adapters like ESPN if they have specific integration logic\n      default:\n        console.warn(`DataIntegrationHub: No specific integration logic for source ID: ${result.id}`);\n        // Attempt a generic integration or log/ignore\n        break;\n    }\n  }\n\n  private integrateProjections(newData: IntegratedData, projectionData: DailyFantasyData): void {\n    if (!projectionData || !projectionData.projections) return;\n\n    projectionData.projections.forEach(proj => {\n      if (!proj.playerId || !proj.stats) return;\n\n      newData.projections[proj.playerId] = {\n        stats: proj.stats,\n        confidence: proj.confidence !== undefined ? proj.confidence : 0.7, // Default confidence for DF projections\n        lastUpdated: proj.lastUpdated || Date.now(),\n      };\n    });\n  }\n\n  // New method to integrate PrizePicks projection data\n  private integratePrizePicksProjections(newData: IntegratedData, prizePicksData: PrizePicksData): void {\n    if (!prizePicksData || !prizePicksData.projections) return;\n\n    prizePicksData.projections.forEach(proj => {\n      if (!proj.playerId || !proj.statType || proj.line === undefined) return;\n\n      // Initialize player in projections if not already present\n      if (!newData.projections[proj.playerId]) {\n        newData.projections[proj.playerId] = {\n          stats: {},\n          confidence: 0, // Will be updated\n          lastUpdated: Date.now() // Will be updated\n        };\n      }\n\n      // Add/update the specific stat from PrizePicks\n      // Note: PrizePicks gives one stat_type per projection object (e.g., 'Points', 'Rebounds')\n      // This structure is slightly different from DailyFantasyData which might have a general 'stats' object\n      newData.projections[proj.playerId].stats[proj.statType] = proj.line;\n      \n      // Update confidence and lastUpdated for this player\n      // A more sophisticated confidence model could be used here, considering data freshness, source reliability etc.\n      // For now, let's use a simple model. If multiple sources contribute, confidence could be averaged or maximized.\n      const existingConfidence = newData.projections[proj.playerId].confidence || 0;\n      newData.projections[proj.playerId].confidence = Math.max(existingConfidence, 0.75); // PrizePicks might be considered high confidence\n      newData.projections[proj.playerId].lastUpdated = Date.now();\n    });\n  }\n\n  private integrateSentiment(newData: IntegratedData, sentimentDataArray: SocialSentimentData[]): void {\n    sentimentDataArray.forEach(data => {\n      newData.sentiment[data.player] = data;\n    });\n  }\n\n  private integrateSportsData(newData: IntegratedData, sportsData: SportsRadarData): void {\n    sportsData.games.forEach(game => {\n      game.players.forEach(player => {\n        if (player.injuries.length > 0) {\n          newData.injuries[player.id] = {\n            status: player.injuries[0].status,\n            details: player.injuries[0].type,\n            impact: this.calculateInjuryImpact(player.injuries[0]),\n            timeline: player.injuries[0].startDate\n          };\n        }\n      });\n    });\n  }\n\n  private integrateOdds(newData: IntegratedData, oddsData: TheOddsData): void {\n    oddsData.events.forEach(event => {\n      const markets: Record<string, number> = {};\n      event.bookmakers.forEach(bookmaker => {\n        bookmaker.markets.forEach(market => {\n          market.outcomes.forEach(outcome => {\n            markets[`${market.key}_${outcome.name}`] = outcome.price;\n          });\n        });\n      });\n\n      newData.odds[event.id] = {\n        markets,\n        movement: this.calculateOddsMovement(event.id, markets)\n      };\n    });\n  }\n\n  private calculateInjuryImpact(injury: { status: string; type: string }): number {\n    const statusImpact = {\n      out: 1,\n      doubtful: 0.75,\n      questionable: 0.5,\n      probable: 0.25\n    }[injury.status.toLowerCase()] ?? 0;\n\n    return statusImpact;\n  }\n\n  private calculateOddsMovement(\n    eventId: string,\n    currentMarkets: Record<string, number>\n  ): { direction: 'up' | 'down' | 'stable'; magnitude: number } {\n    const previousData = this.integratedData.odds[eventId];\n    if (!previousData) {\n      return { direction: 'stable', magnitude: 0 };\n    }\n\n    const avgCurrentPrice = Object.values(currentMarkets).reduce((a, b) => a + b, 0) / Object.values(currentMarkets).length;\n    const avgPreviousPrice = Object.values(previousData.markets).reduce((a, b) => a + b, 0) / Object.values(previousData.markets).length;\n    \n    const difference = avgCurrentPrice - avgPreviousPrice;\n    const magnitude = Math.abs(difference);\n    \n    if (magnitude < 0.05) return { direction: 'stable', magnitude };\n    return {\n      direction: difference > 0 ? 'up' : 'down',\n      magnitude\n    };\n  }\n\n  private analyzeTrendsWithCorrelations(newData: IntegratedData, correlations: DataCorrelation[]): void {\n    // Analyze projection trends\n    this.analyzeProjectionTrends(newData);\n    \n    // Analyze sentiment trends\n    this.analyzeSentimentTrends(newData);\n    \n    // Analyze market trends\n    this.analyzeMarketTrends(newData);\n    \n    // Analyze correlation trends\n    this.analyzeCorrelationTrends(newData, correlations);\n  }\n\n  private analyzeProjectionTrends(newData: IntegratedData): void {\n    Object.entries(newData.projections).forEach(([playerId, projection]) => {\n      Object.entries(projection.stats).forEach(([metric, value]) => {\n        const trendKey = `${playerId}_${metric}`;\n        const previousValue = this.integratedData.projections[playerId]?.stats[metric];\n        \n        if (previousValue !== undefined) {\n          const change = value - previousValue;\n          const significance = this.calculateTrendSignificance(change, previousValue);\n          \n          newData.trends[trendKey] = {\n            value,\n            change,\n            significance\n          };\n        }\n      });\n    });\n  }\n\n  private analyzeSentimentTrends(newData: IntegratedData): void {\n    Object.entries(newData.sentiment).forEach(([playerId, sentiment]) => {\n      const trendKey = `${playerId}_sentiment`;\n      const previousSentiment = this.integratedData.sentiment[playerId];\n      \n      if (previousSentiment) {\n        const change = sentiment.sentiment.score - previousSentiment.sentiment.score;\n        const volumeChange = sentiment.sentiment.volume - previousSentiment.sentiment.volume;\n        const significance = this.calculateTrendSignificance(change, previousSentiment.sentiment.score);\n        \n        newData.trends[trendKey] = {\n          value: sentiment.sentiment.score,\n          change,\n          significance: significance * (1 + Math.min(1, volumeChange / 1000))\n        };\n      }\n    });\n  }\n\n  private analyzeMarketTrends(newData: IntegratedData): void {\n    Object.entries(newData.odds).forEach(([eventId, odds]) => {\n      Object.entries(odds.markets).forEach(([market, price]) => {\n        const trendKey = `${eventId}_${market}`;\n        const previousPrice = this.integratedData.odds[eventId]?.markets[market];\n        \n        if (previousPrice !== undefined) {\n          const change = price - previousPrice;\n          const significance = this.calculateTrendSignificance(change, previousPrice);\n          \n          newData.trends[trendKey] = {\n            value: price,\n            change,\n            significance\n          };\n        }\n      });\n    });\n  }\n\n  private analyzeCorrelationTrends(newData: IntegratedData, correlations: DataCorrelation[]): void {\n    // Analyze correlations between different data points\n    Object.entries(newData.projections).forEach(([playerId, projection]) => {\n      const sentiment = newData.sentiment[playerId];\n      const injuries = newData.injuries[playerId];\n      \n      if (sentiment && projection) {\n        const correlationKey = `${playerId}_sentiment_correlation`;\n        const sentimentImpact = sentiment.sentiment.score * (sentiment.sentiment.volume / 1000);\n        const performanceCorrelation = this.calculateCorrelation(\n          Object.values(projection.stats),\n          [sentimentImpact]\n        );\n        \n        newData.trends[correlationKey] = {\n          value: performanceCorrelation,\n          change: 0, // We don't track change for correlations\n          significance: Math.abs(performanceCorrelation)\n        };\n      }\n      \n      if (injuries) {\n        const injuryKey = `${playerId}_injury_impact`;\n        newData.trends[injuryKey] = {\n          value: injuries.impact,\n          change: 0,\n          significance: injuries.impact\n        };\n      }\n    });\n\n    // Analyze correlations with other data sources\n    for (const correlation of correlations) {\n      const sourceA = correlation.sourceA;\n      const sourceB = correlation.sourceB;\n      const correlationValue = correlation.correlation;\n      const significance = correlation.significance;\n\n      const trendKey = `${sourceA}_${sourceB}_correlation`;\n      newData.trends[trendKey] = {\n        value: correlationValue,\n        change: 0,\n        significance: significance\n      };\n    }\n  }\n\n  private calculateTrendSignificance(change: number, baseValue: number): number {\n    if (baseValue === 0) return change === 0 ? 0 : 1;\n    const percentageChange = Math.abs(change / baseValue);\n    return Math.min(1, percentageChange);\n  }\n\n  private calculateCorrelation(series1: number[], series2: number[]): number {\n    if (series1.length !== series2.length || series1.length === 0) return 0;\n    \n    const mean1 = series1.reduce((a, b) => a + b, 0) / series1.length;\n    const mean2 = series2.reduce((a, b) => a + b, 0) / series2.length;\n    \n    const variance1 = series1.reduce((a, b) => a + Math.pow(b - mean1, 2), 0);\n    const variance2 = series2.reduce((a, b) => a + Math.pow(b - mean2, 2), 0);\n    \n    if (variance1 === 0 || variance2 === 0) return 0;\n    \n    const covariance = series1.reduce((a, b, i) => {\n      return a + ((b - mean1) * (series2[i] - mean2));\n    }, 0);\n    \n    return covariance / Math.sqrt(variance1 * variance2);\n  }\n\n  private setupEventListeners(): void {\n    this.eventBus.on('dataSource:error', async (event) => {\n      const sourceId = event.sourceId;\n      const metrics = this.sourceMetrics.get(sourceId);\n      if (metrics) {\n        metrics.reliability *= 0.9;\n        this.sourceMetrics.set(sourceId, metrics);\n      }\n    });\n\n    this.eventBus.on('cache:clear', (event) => {\n      if (event.source === 'all' || event.source === 'dataHub') {\n        this.dataCache.clear();\n        this.correlationCache.clear();\n        this.integratedData = this.initializeIntegratedData();\n        \n        this.eventBus.emit('cache:cleared', { source: 'dataHub' });\n      }\n    });\n\n    this.eventBus.on('config:updated', (event) => {\n      if (event.section === 'dataSources' || event.section === 'all') {\n        \n      }\n    });\n  }\n\n  public getIntegratedData(): IntegratedData {\n    return this.integratedData;\n  }\n\n  public getSourceMetrics(): Map<string, DataSourceMetrics> {\n    return new Map(this.sourceMetrics);\n  }\n} ","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DataPipeline.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DataPipeline.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DataPipeline.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DataSource.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DataSource.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\DataSource.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ESPNAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ESPNAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ESPNAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\FeatureComposition.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\FeatureComposition.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\FeatureComposition.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\FeatureFlags.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\FeatureFlags.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\FeatureFlags.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\PerformanceMonitor.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\PerformanceMonitor.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\PerformanceMonitor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\PredictionEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\PredictionEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\PredictionEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ProjectionAnalyzer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ProjectionAnalyzer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ProjectionAnalyzer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ProjectionBettingStrategy.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ProjectionBettingStrategy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ProjectionBettingStrategy.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ProjectionBettingStrategy.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ProjectionBettingStrategy.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\ProjectionBettingStrategy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\SentimentEnhancedAnalyzer.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\SentimentEnhancedAnalyzer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\SentimentEnhancedAnalyzer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\SocialSentimentAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\SocialSentimentAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\SocialSentimentAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\StateSync.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\StateSync.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\StateSync.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\StrategyComposition.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\StrategyComposition.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\StrategyComposition.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\StrategyEngine.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\StrategyEngine.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\StrategyEngine.ts","messages":[{"ruleId":"prefer-const","severity":2,"message":"'rec' is never reassigned. Use 'const' instead.","line":621,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":621,"endColumn":12,"fix":{"range":[18969,19005],"text":"const rec = { ...baseRecommendation };"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { AdvancedAnalysisEngine, AnalysisResult as AdvancedAnalysisResult } from './AdvancedAnalysisEngine.js';\nimport { DataIntegrationHub, IntegratedData } from './DataIntegrationHub.js';\nimport { EventBus } from '../core/EventBus';\nimport { PerformanceMetrics, StrategyRecommendation, RiskTolerance } from '../types/core';\nimport { PerformanceMonitor } from './PerformanceMonitor.js';\nimport FeatureFlags from './FeatureFlags';\nimport { PredictionEngine } from './PredictionEngine.js';\n\n\n\n// All imports and usages of missing modules (AnalysisEngine, SentimentEngine) have been removed. Fallback logic is implemented where needed. See roadmap for tracking.\n\n\ninterface StrategyConfig {\n  maxExposure: number;\n  minStake: number;\n  maxStake: number;\n  kellyFraction: number;\n  volatilityThreshold: number;\n  liquidityThreshold: number;\n  depthThreshold: number;\n  momentumThreshold: number;\n  marginOfError: number;\n  stopLossPercentage: number;\n  takeProfitPercentage: number;\n  hedgingThreshold: number;\n  maxVolatility: number;\n  minLiquidity: number;\n  minValueGap: number;\n  sentimentThreshold: number;\n  minConfidence: number;\n  maxRiskLevel: RiskTolerance;\n  requiredDataQuality: number;\n  marketEfficiencyThreshold: number;\n}\n\ninterface StrategyPerformance {\n  totalExecutions: number;\n  successRate: number;\n  averageReturn: number;\n  riskProfile: {\n    level: RiskTolerance;\n    factors: string[];\n  };\n  lastUpdated: number;\n}\n\ninterface CompositeStrategy {\n  id: string;\n  name: string;\n  strategies: string[];\n  weights: number[];\n  performance: StrategyPerformance;\n  conditions: {\n    minConfidence: number;\n    maxRisk: RiskTolerance;\n    marketStates: string[];\n  };\n}\n\ninterface StrategyState {\n  bankroll: number;\n  activeBets: Map<string, BettingPosition>;\n  performance: PerformanceMetrics;\n}\n\ninterface BettingPosition {\n  id: string;\n  type: 'OVER' | 'UNDER';\n  stake: number;\n  odds: number;\n  timestamp: number;\n  status: 'pending' | 'active' | 'closed';\n}\n\ninterface MarketData {\n  playerId: string;\n  metric: string;\n  currentLine: number;\n  movement: string;\n  valueGap: number;\n  volatility: number;\n  liquidity: number;\n  marketDepth: number;\n  momentum: number;\n}\n\ninterface SentimentAnalysis {\n  score: number;\n  trend: string;\n  keyFactors: string[];\n}\n\ninterface StrategyEvaluatedPayload {\n  strategyId: string;\n  result: StrategyRecommendation;\n}\n\nfunction toRiskTolerance(level: string): RiskTolerance {\n  switch (level) {\n    case 'LOW': return 'low';\n    case 'MEDIUM': return 'medium';\n    case 'HIGH': return 'high';\n    default: return level as RiskTolerance;\n  }\n}\n\nexport class StrategyEngine {\n  /**\n   * [ROADMAP] Feature flag manager for gating experimental/ensemble logic.\n   * Use for toggling advanced strategies, data sources, or ML models.\n   */\n  private readonly featureManager: FeatureFlags;\n  /**\n   * [ROADMAP] Prediction engine for ensembling and orchestrating prediction modules.\n   * Use for ultimate prediction output surfaced to UI/UX.\n   */\n  private readonly predictionEngine: PredictionEngine;\n  private static instance: StrategyEngine;\n  private readonly eventBus: EventBus;\n  private readonly performanceMonitor: PerformanceMonitor;\n  // Removed unused: featureManager (see roadmap)\n  private readonly analysisEngine: AdvancedAnalysisEngine;\n  private readonly dataHub: DataIntegrationHub;\n  private readonly config: StrategyConfig;\n  private readonly state: StrategyState;\n  // Removed unused: predictionEngine (see roadmap)\n  private readonly strategyPerformance: Map<string, StrategyPerformance>;\n  private readonly PERFORMANCE_UPDATE_INTERVAL = 1000 * 60 * 60; // 1 hour\n  private compositeStrategies: Map<string, CompositeStrategy>;\n\n  private constructor() {\n    // [ROADMAP] Wire up featureManager and predictionEngine for future extensibility/ensembling\n    this.featureManager = FeatureFlags.getInstance();\n    this.predictionEngine = PredictionEngine.getInstance();\n    this.eventBus = EventBus.getInstance();\n    this.performanceMonitor = PerformanceMonitor.getInstance();\n    // Removed unused: featureManager (see roadmap)\n    this.analysisEngine = AdvancedAnalysisEngine.getInstance();\n    this.dataHub = DataIntegrationHub.getInstance();\n    this.config = this.getDefaultConfig();\n    this.state = this.getDefaultState();\n    this.compositeStrategies = new Map();\n    this.strategyPerformance = new Map();\n    // Removed unused: predictionEngine (see roadmap)\n    this.setupPerformanceTracking();\n  }\n\n  static getInstance(): StrategyEngine {\n    if (!StrategyEngine.instance) {\n      StrategyEngine.instance = new StrategyEngine();\n    }\n    return StrategyEngine.instance;\n  }\n\n  private getDefaultConfig(): StrategyConfig {\n    return {\n      maxExposure: 100,\n      minStake: 10,\n      maxStake: 100,\n      kellyFraction: 0.5,\n      volatilityThreshold: 0.5,\n      liquidityThreshold: 0.5,\n      depthThreshold: 0.5,\n      momentumThreshold: 0.5,\n      marginOfError: 0.05,\n      stopLossPercentage: 0.1,\n      takeProfitPercentage: 0.2,\n      hedgingThreshold: 0.1,\n      maxVolatility: 1.5,\n      minLiquidity: 0.5,\n      minValueGap: 0.1,\n      sentimentThreshold: 0.6,\n      minConfidence: 0.7,\n      maxRiskLevel: 'medium',\n      requiredDataQuality: 0.8,\n      marketEfficiencyThreshold: 0.85\n    };\n  }\n\n  private getDefaultState(): StrategyState {\n    return {\n      bankroll: 1000,\n      activeBets: new Map(),\n      performance: {\n        totalBets: 0,\n        winRate: 0,\n        roi: 0,\n        profitLoss: 0,\n        clvAverage: 0,\n        edgeRetention: 0,\n        kellyMultiplier: 0,\n        marketEfficiencyScore: 0,\n        averageOdds: 0,\n        maxDrawdown: 0,\n        sharpeRatio: 0,\n        betterThanExpected: 0,\n        timestamp: Date.now(),\n        cpu: { usage: 0, cores: 0, temperature: 0 },\n        memory: { total: 0, used: 0, free: 0, swap: 0 },\n        network: { bytesIn: 0, bytesOut: 0, connections: 0, latency: 0 },\n        disk: { total: 0, used: 0, free: 0, iops: 0 },\n        responseTime: { avg: 0, p95: 0, p99: 0 },\n        throughput: { requestsPerSecond: 0, transactionsPerSecond: 0 },\n        errorRate: 0,\n        uptime: 0,\n        predictionId: '',\n        confidence: 0,\n        riskScore: 0\n      },\n    };\n  }\n\n  private setupPerformanceTracking(): void {\n    setInterval(() => this.updateStrategyPerformance(), this.PERFORMANCE_UPDATE_INTERVAL);\n\n    this.eventBus.on('strategy:execution-completed', (event: any) => {\n      const { strategyId, result } = event.payload as StrategyEvaluatedPayload;\n      this.updateStrategyResult(strategyId, result);\n    });\n  }\n\n  public createCompositeStrategy(\n    name: string,\n    strategies: string[],\n    weights: number[],\n    conditions: CompositeStrategy['conditions']\n  ): string {\n    if (strategies.length !== weights.length) {\n      throw new Error('Strategies and weights arrays must have the same length');\n    }\n\n    if (Math.abs(weights.reduce((a, b) => a + b, 0) - 1) > 0.0001) {\n      throw new Error('Weights must sum to 1');\n    }\n\n    const id = `composite-${Date.now()}`;\n    this.compositeStrategies.set(id, {\n      id,\n      name,\n      strategies,\n      weights,\n      conditions,\n      performance: {\n        totalExecutions: 0,\n        successRate: 0,\n        averageReturn: 0,\n        riskProfile: {\n          level: 'low',\n          factors: []\n        },\n        lastUpdated: Date.now()\n      }\n    });\n\n    return id;\n  }\n\n  public async analyzeOpportunity(\n    playerId: string,\n    metric: string\n  ): Promise<StrategyRecommendation | null> {\n    const traceId = this.performanceMonitor.startTrace('strategy-analysis');\n\n    try {\n      const analysis = await this.analysisEngine.analyzePlayer(playerId);\n      if (!this.meetsQualityThresholds(analysis)) {\n        return null;\n      }\n\n      const data = this.dataHub.getIntegratedData();\n      const baseRecommendation = await this.generateRecommendation(\n        playerId,\n        metric,\n        analysis,\n        data\n      );\n\n      if (!baseRecommendation) {\n        return null;\n      }\n\n      // Apply composite strategies if available\n      const enhancedRecommendation = await this.applyCompositeStrategies(\n        baseRecommendation,\n        analysis,\n        data\n      );\n\n      this.performanceMonitor.endTrace(traceId);\n      return enhancedRecommendation;\n    } catch (error) {\n      this.performanceMonitor.endTrace(traceId, error as Error);\n      throw error;\n    }\n  }\n\n  private meetsQualityThresholds(analysis: AdvancedAnalysisResult): boolean {\n    return (\n      analysis.meta_analysis.data_quality >= this.config.requiredDataQuality &&\n      analysis.meta_analysis.market_efficiency >= this.config.marketEfficiencyThreshold\n    );\n  }\n\n  private async generateRecommendation(\n    playerId: string,\n    metric: string,\n    analysis: AdvancedAnalysisResult,\n    data: IntegratedData\n  ): Promise<StrategyRecommendation | null> {\n    const prediction = analysis.predictions[metric];\n    if (!prediction || prediction.confidence < this.config.minConfidence) {\n      return null;\n    }\n\n    const marketData = this.analyzeMarketData(playerId, metric, data);\n    const sentiment = this.analyzeSentiment(playerId, data);\n    const valueGap = this.calculateValueGap(marketData);\n\n    if (Math.abs(valueGap) < this.config.minValueGap) {\n      return null;\n    }\n\n    const position = valueGap > 0 ? 'over' : 'under';\n    const riskAssessment = this.assessRisk(marketData, analysis);\n\n    if (this.getRiskLevel(toRiskTolerance(String(riskAssessment.riskLevel))) > this.getRiskLevel(toRiskTolerance(this.config.maxRiskLevel))) {\n      return null;\n    }\n\n    return {\n      id: `strategy-${Date.now()}`,\n      type: position.toUpperCase() as 'OVER' | 'UNDER',\n      confidence: prediction.confidence,\n      parameters: {\n        stake: 0, // TODO: Calculate recommended stake\n        expectedValue: this.calculateExpectedValue(valueGap, prediction.confidence),\n      },\n      riskAssessment,\n      analysis: {\n        historicalTrends: this.analyzeHistoricalTrends(playerId, metric, data),\n        marketSignals: this.analyzeMarketSignals(playerId, metric, data),\n        riskFactors: this.analyzeRiskFactors(playerId, metric, data),\n      },\n      propId: `${playerId}:${metric}`\n    };\n  }\n\n  private analyzeMarketData(\n    playerId: string,\n    metric: string,\n    data: IntegratedData\n  ): MarketData {\n    const relevantMarkets = this.findRelevantMarkets(playerId, metric, data);\n    let currentLine = 0;\n    let movement = 'stable';\n    let valueGap = 0;\n    if (relevantMarkets && Object.keys(relevantMarkets).length > 0) {\n      currentLine = this.calculateWeightedLine(relevantMarkets);\n      movement = this.analyzeMarketMovement(relevantMarkets, data);\n      valueGap = this.calculateMarketValueGap(currentLine, data.projections[playerId]?.stats[metric]);\n    }\n    return {\n      playerId,\n      metric,\n      currentLine,\n      movement,\n      valueGap,\n      volatility: 0,\n      liquidity: 0,\n      marketDepth: 0,\n      momentum: 0\n    };\n  }\n\n  private findRelevantMarkets(\n    playerId: string,\n    metric: string,\n    data: IntegratedData\n  ): Record<string, number> | null {\n    const markets: Record<string, number> = {};\n    \n    Object.entries(data.odds).forEach(([eventId, odds]) => {\n      Object.entries(odds.markets).forEach(([market, price]) => {\n        if (this.isMarketRelevant(market, playerId, metric)) {\n          markets[market] = price;\n        }\n      });\n    });\n\n    return Object.keys(markets).length > 0 ? markets : null;\n  }\n\n  private isMarketRelevant(market: string, playerId: string, metric: string): boolean {\n    const marketLower = market.toLowerCase();\n    const metricLower = metric.toLowerCase();\n    const playerLower = playerId.toLowerCase();\n\n    return (\n      marketLower.includes(playerLower) &&\n      marketLower.includes(metricLower)\n    );\n  }\n\n  private calculateWeightedLine(markets: Record<string, number>): number {\n    const prices = Object.values(markets);\n    if (prices.length === 0) return 0;\n    \n    // Simple average for now, could be enhanced with volume-weighted average\n    return prices.reduce((a, b) => a + b, 0) / prices.length;\n  }\n\n  private analyzeMarketMovement(\n    markets: Record<string, number>,\n    data: IntegratedData\n  ): string {\n    const movements = Object.keys(markets).map(market => {\n      const eventId = this.findEventIdForMarket(market, data);\n      if (!eventId) return 'stable';\n      \n      const odds = data.odds[eventId];\n      return odds?.movement.direction ?? 'stable';\n    });\n\n    const upCount = movements.filter(m => m === 'up').length;\n    const downCount = movements.filter(m => m === 'down').length;\n\n    if (Math.abs(upCount - downCount) < 2) return 'stable';\n    return upCount > downCount ? 'increasing' : 'decreasing';\n  }\n\n  private findEventIdForMarket(market: string, data: IntegratedData): string | null {\n    for (const [eventId, odds] of Object.entries(data.odds)) {\n      if (market in odds.markets) {\n        return eventId;\n      }\n    }\n    return null;\n  }\n\n  private calculateMarketValueGap(currentLine: number, projectedValue?: number): number {\n    if (!projectedValue) return 0;\n    return projectedValue - currentLine;\n  }\n\n  private analyzeSentiment(\n    playerId: string,\n    data: IntegratedData\n  ): string {\n    const sentiment = data.sentiment[playerId];\n    if (!sentiment) {\n      return `${playerId}:unknown:0:neutral:[]`;\n    }\n    return `${playerId}:${sentiment.sentiment.score}:${this.determineSentimentTrend(sentiment)}:${sentiment.keywords.join(',')}`;\n  }\n\n  private calculateValueGap(marketData: MarketData): number {\n    return marketData.valueGap;\n  }\n\n  private assessRisk(\n    marketData: MarketData,\n    analysis: AdvancedAnalysisResult\n  ): StrategyRecommendation['riskAssessment'] {\n    const riskLevel = this.calculateRiskLevel(marketData, analysis);\n    const riskFactors = this.identifyRiskFactors(marketData, analysis);\n\n    return {\n      level: riskLevel as unknown,\n      factors: riskFactors\n    };\n  }\n\n  private calculateRiskLevel(marketData: MarketData, analysis: AdvancedAnalysisResult): RiskTolerance {\n    const volatility = marketData.volatility;\n    const liquidity = marketData.liquidity;\n    const marketDepth = marketData.marketDepth;\n\n    const riskScore = (volatility * 0.4) + ((1 - liquidity) * 0.3) + ((1 - marketDepth) * 0.3);\n\n    if (riskScore < 0.3) return 'low';\n    if (riskScore < 0.7) return 'medium';\n    return 'high';\n  }\n\n  private identifyRiskFactors(marketData: MarketData, analysis: AdvancedAnalysisResult): string[] {\n    const factors: string[] = [];\n\n    if (marketData.volatility > this.config.volatilityThreshold) {\n      factors.push('High market volatility');\n    }\n    if (marketData.liquidity < this.config.liquidityThreshold) {\n      factors.push('Low market liquidity');\n    }\n    if (marketData.marketDepth < this.config.depthThreshold) {\n      factors.push('Insufficient market depth');\n    }\n    if (marketData.momentum < this.config.momentumThreshold) {\n      factors.push('Weak market momentum');\n    }\n\n    // Add risks from analysis\n    Object.entries(analysis.risks).forEach(([type, risk]) => {\n      if (toRiskTolerance(risk.level) !== 'low') {\n        factors.push(...risk.factors);\n      }\n    });\n\n    return factors;\n  }\n\n  private calculateExpectedValue(valueGap: number, confidence: number): number {\n    return Math.abs(valueGap) * confidence * (1 - this.config.marginOfError);\n  }\n\n  private determineSentimentTrend(\n    sentiment: IntegratedData['sentiment'][string]\n  ): string {\n    const score = sentiment.sentiment.score;\n    const volume = sentiment.sentiment.volume;\n    \n    if (volume < 100) return 'insufficient data';\n    \n    if (Math.abs(score) < 0.2) return 'neutral';\n    if (Math.abs(score) < 0.5) return score > 0 ? 'slightly positive' : 'slightly negative';\n    if (Math.abs(score) < 0.8) return score > 0 ? 'positive' : 'negative';\n    return score > 0 ? 'strongly positive' : 'strongly negative';\n  }\n\n  private getRiskLevel(level: RiskTolerance): number {\n    switch (level) {\n      case 'low': return 1;\n      case 'medium': return 2;\n      case 'high': return 3;\n    }\n  }\n\n  private async applyCompositeStrategies(\n    baseRecommendation: StrategyRecommendation,\n    analysis: AdvancedAnalysisResult,\n    data: IntegratedData\n  ): Promise<StrategyRecommendation> {\n    const finalRecommendation = { ...baseRecommendation };\n    const totalConfidence = 0;\n    let totalWeight = 0;\n\n    for (const [, composite] of this.compositeStrategies) {\n      if (this.shouldApplyStrategy(composite, analysis, data)) {\n        const strategyResults = await Promise.all(\n          composite.strategies.map(async (strategyId, index) => {\n            const result = await this.executeStrategy(\n              strategyId,\n              baseRecommendation,\n              analysis,\n              data\n            );\n            return {\n              result,\n              weight: composite.weights[index]\n            };\n          })\n        );\n\n        // Combine strategy results\n        strategyResults.forEach(({ result, weight }) => {\n          if (result) {\n            finalRecommendation.confidence =\n              (finalRecommendation.confidence * totalWeight + result.confidence * weight) /\n              (totalWeight + weight);\n            const resultEV = result.parameters?.expectedValue ?? 0;\n            const finalEV = finalRecommendation.parameters?.expectedValue ?? 0;\n            if (!finalRecommendation.parameters) finalRecommendation.parameters = { stake: 0, expectedValue: 0 };\n            finalRecommendation.parameters.expectedValue =\n              (finalEV * totalWeight + resultEV * weight) /\n              (totalWeight + weight);\n            totalWeight += weight;\n          }\n        });\n      }\n    }\n\n    return finalRecommendation;\n  }\n\n  private shouldApplyStrategy(\n    strategy: CompositeStrategy,\n    analysis: AdvancedAnalysisResult,\n    data: IntegratedData\n  ): boolean {\n    // Check confidence threshold\n    if (analysis.meta_analysis.prediction_stability < strategy.conditions.minConfidence) {\n      return false;\n    }\n\n    // Check risk level\n    const maxRiskLevel = this.getRiskLevel(toRiskTolerance(strategy.conditions.maxRisk));\n    const currentRisk = Object.values(analysis.risks).some(\n      risk => this.getRiskLevel(toRiskTolerance(risk.level)) > maxRiskLevel\n    );\n    if (currentRisk) {\n      return false;\n    }\n\n    // Check market state conditions\n    const marketState = this.determineMarketState(data);\n    if (!strategy.conditions.marketStates.includes(marketState)) {\n      return false;\n    }\n\n    return true;\n  }\n\n\n  private async executeStrategy(\n    strategyId: string,\n    baseRecommendation: StrategyRecommendation,\n    analysis: AdvancedAnalysisResult,\n    data: IntegratedData\n  ): Promise<StrategyRecommendation | null> {\n    // Example: Adjust recommendation based on risk and market signals\n    let rec = { ...baseRecommendation };\n    // Type guard: only act if riskAssessment exists and has a 'level' property\n    if ((analysis as any).riskAssessment && (analysis as any).riskAssessment.level === 'high') {\n      rec.confidence *= 0.8;\n      // rec.parameters = { ...rec.parameters, adjusted: true }; // 'adjusted' not in type, skip or document for roadmap\n    }\n    // Type guard: only act if analysis property exists and has marketSignals\n    if ((analysis as any).analysis && Array.isArray((analysis as any).analysis.marketSignals) && (analysis as any).analysis.marketSignals.includes('sharp_move')) {\n      rec.confidence *= 0.9;\n    }\n    // Add more logic as needed\n    return rec;\n  }\n\n\n  private determineMarketState(data: IntegratedData): string {\n    // Simple example: use volatility and trend\n    // volatility and trend not present on IntegratedData; skip or document for roadmap\n    return 'stable';\n  }\n\n  private analyzeHistoricalTrends(playerId: string, metric: string, data: IntegratedData): string[] {\n    // Example: return trend signals based on data\n    // trend property not present on IntegratedData; skip or document for roadmap\n    return [];\n    return ['flat'];\n  }\n\n  private analyzeMarketSignals(playerId: string, metric: string, data: IntegratedData): string[] {\n    // Example: detect sharp moves or volume spikes\n    const signals = [];\n    // volume and priceChange not present on IntegratedData; skip or document for roadmap\n    return signals;\n  }\n\n  private analyzeRiskFactors(playerId: string, metric: string, data: IntegratedData): string[] {\n    // Example: flag high volatility or missing data\n    const factors = [];\n    if (!data /* || !data.history */) factors.push('missing_data');\n    // volatility not present on IntegratedData; skip or document for roadmap\n    return factors;\n  }\n\n  private updateStrategyResult(strategyId: string, result: StrategyRecommendation): void {\n    const performance = this.strategyPerformance.get(strategyId) || {\n      totalExecutions: 0,\n      successRate: 0,\n      averageReturn: 0,\n      riskProfile: {\n        level: 'low',\n        factors: []\n      },\n      lastUpdated: Date.now()\n    };\n\n    // Update performance metrics\n    performance.totalExecutions++;\n    performance.lastUpdated = Date.now();\n\n    this.strategyPerformance.set(strategyId, performance);\n\n    // Adjust composite strategy weights based on performance\n    this.adjustStrategyWeights();\n  }\n\n  private adjustStrategyWeights(): void {\n    for (const [id, composite] of this.compositeStrategies) {\n      const performances = composite.strategies.map(\n        strategyId => this.strategyPerformance.get(strategyId)\n      );\n\n      if (performances.some(p => !p)) continue;\n\n      // Calculate new weights based on relative performance\n      const totalPerformance = performances.reduce(\n        (sum, p) => sum + (p!.averageReturn * p!.successRate),\n        0\n      );\n\n      const newWeights = performances.map(\n        p => (p!.averageReturn * p!.successRate) / totalPerformance\n      );\n\n      // Update weights\n      this.compositeStrategies.set(id, {\n        ...composite,\n        weights: newWeights\n      });\n    }\n  }\n\n  private updateStrategyPerformance(): void {\n    for (const [strategyId, performance] of this.strategyPerformance) {\n      if (Date.now() - performance.lastUpdated > this.PERFORMANCE_UPDATE_INTERVAL) {\n        // Recalculate long-term performance metrics\n        this.recalculatePerformanceMetrics(strategyId);\n      }\n    }\n  }\n\n  private recalculatePerformanceMetrics(strategyId: string): void {\n    // Implementation for recalculating long-term performance metrics\n    // This would typically involve fetching historical data and updating the metrics\n  }\n\n  private validateRecommendation(recommendation: StrategyRecommendation): void {\n    if (!recommendation.id) {\n      throw new Error('Strategy recommendation must have an ID');\n    }\n    if (!recommendation.type) {\n      throw new Error('Strategy recommendation must have a type');\n    }\n    if (typeof recommendation.confidence !== 'number' || recommendation.confidence < 0 || recommendation.confidence > 1) {\n      throw new Error('Invalid confidence value');\n    }\n    if (typeof recommendation.expectedValue !== 'number' || recommendation.expectedValue <= 0) {\n      throw new Error('Invalid expected value');\n    }\n    if (!recommendation.riskAssessment || !recommendation.riskAssessment.level) {\n      throw new Error('Invalid risk assessment');\n    }\n  }\n\n  private async generateStrategy(marketData: MarketData): Promise<StrategyRecommendation> {\n    const traceId = this.performanceMonitor.startTrace('strategy-generation');\n\n    try {\n      const analysis = await this.analysisEngine.analyzePlayer(marketData.playerId);\n      const valueGap = this.calculateValueGap(marketData);\n\n      if (Math.abs(valueGap) < this.config.minValueGap) {\n        throw new Error('Value gap below minimum threshold');\n      }\n\n      if (!this.meetsQualityThresholds(analysis)) {\n        throw new Error('Analysis quality below required threshold');\n      }\n\n      const position = this.determinePosition(valueGap);\n      const riskAssessment = this.assessRisk(marketData, analysis);\n\n      if (this.getRiskLevel(toRiskTolerance(riskAssessment.level)) > this.getRiskLevel(toRiskTolerance(this.config.maxRiskLevel))) {\n        throw new Error('Risk level exceeds maximum threshold');\n      }\n\n      const prediction = analysis.predictions[marketData.metric];\n      if (!prediction || prediction.confidence < this.config.minConfidence) {\n        throw new Error('Prediction confidence below minimum threshold');\n      }\n\n      const historicalTrends = Object.entries(analysis.trends).map(([metric, trend]) => {\n        const trendData = trend as { direction: string; strength: number; supporting_data: string[] };\n        return [\n          `${metric}: ${trendData.direction} (${trendData.strength})`,\n          ...(trendData.supporting_data || [])\n        ];\n      }).flat();\n\n      const recommendation: StrategyRecommendation = {\n        id: `strategy-${Date.now()}`,\n        type: position.toUpperCase() as 'OVER' | 'UNDER',\n        confidence: prediction.confidence,\n        expectedValue: this.calculateExpectedValue(valueGap, prediction.confidence),\n        riskAssessment,\n        analysis: {\n          historicalTrends,\n          marketSignals: analysis.opportunities.map(opp => opp.rationale).flat(),\n          riskFactors: Object.entries(analysis.risks)\n            .map(([type, risk]) => [`${type}: ${risk.level}`, ...risk.factors])\n            .flat()\n        },\n        propId: `${marketData.playerId}:${marketData.metric}`\n      };\n\n      this.validateRecommendation(recommendation);\n      this.performanceMonitor.endTrace(traceId);\n      return recommendation;\n    } catch (error) {\n      this.performanceMonitor.endTrace(traceId, error as Error);\n      throw error;\n    }\n  }\n\n  private calculateExposure(valueGap: number, confidence: number): number {\n    return Math.min(valueGap * confidence, this.config.maxExposure);\n  }\n\n  private calculateStake(valueGap: number, confidence: number): number {\n    const kellyFraction = this.config.kellyFraction;\n    const bankroll = this.state.bankroll;\n    const odds = 1 + valueGap;\n    \n    const kellyStake = bankroll * ((odds * confidence - (1 - confidence)) / odds) * kellyFraction;\n    \n    return Math.min(\n      Math.max(kellyStake, this.config.minStake),\n      this.config.maxStake\n    );\n  }\n\n  private determineExecutionTiming(marketData: MarketData, sentiment: SentimentAnalysis): 'immediate' | 'wait' | 'monitor' {\n    if (marketData.volatility > this.config.volatilityThreshold) {\n      return 'monitor';\n    }\n    if (sentiment.score < this.config.sentimentThreshold) {\n      return 'wait';\n    }\n    return 'immediate';\n  }\n\n  private determineExecutionConditions(marketData: MarketData): string[] {\n    const conditions: string[] = [];\n\n    if (marketData.volatility > this.config.volatilityThreshold) {\n      conditions.push(`Wait for volatility to drop below ${this.config.volatilityThreshold}`);\n    }\n    if (marketData.liquidity < this.config.liquidityThreshold) {\n      conditions.push(`Wait for liquidity to increase above ${this.config.liquidityThreshold}`);\n    }\n    if (marketData.valueGap < this.config.minValueGap) {\n      conditions.push(`Wait for value gap to increase above ${this.config.minValueGap}`);\n    }\n\n    return conditions;\n  }\n\n  private determineExitCriteria(marketData: MarketData): string[] {\n    return [\n      `Stop loss at ${this.calculateStopLoss(marketData)}`,\n      `Take profit at ${this.calculateTakeProfit(marketData)}`,\n      `Exit if volatility exceeds ${this.config.maxVolatility}`,\n      `Exit if liquidity drops below ${this.config.minLiquidity}`\n    ];\n  }\n\n  private findHedgingOpportunities(marketData: MarketData): string[] {\n    return [\n      `Consider opposite position if value gap reverses by ${this.config.hedgingThreshold}%`,\n      `Look for correlated markets with inverse movement`,\n      `Monitor alternative betting lines for arbitrage`\n    ];\n  }\n\n  private calculateStopLoss(marketData: MarketData): number {\n    return marketData.currentLine * (1 - this.config.stopLossPercentage);\n  }\n\n  private calculateTakeProfit(marketData: MarketData): number {\n    return marketData.currentLine * (1 + this.config.takeProfitPercentage);\n  }\n\n  private determinePosition(valueGap: number): 'over' | 'under' {\n    return valueGap > 0 ? 'over' : 'under';\n  }\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\TheOddsAdapter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\TheOddsAdapter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\TheOddsAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UltimateUtils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UltimateUtils.ts","messages":[{"ruleId":"prefer-const","severity":2,"message":"'currentType' is never reassigned. Use 'const' instead.","line":239,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":239,"endColumn":20,"fix":{"range":[6802,6865],"text":"const currentType = results[results.length - 1] ? \"win\" : \"loss\";"}},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\(.","line":366,"column":36,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":366,"endColumn":37,"suggestions":[{"messageId":"removeEscape","fix":{"range":[10515,10516],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[10515,10515],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\).","line":366,"column":38,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":366,"endColumn":39,"suggestions":[{"messageId":"removeEscape","fix":{"range":[10517,10518],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[10517,10517],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-async-promise-executor","severity":2,"message":"Promise executor functions should not be async.","line":590,"column":24,"nodeType":"Identifier","messageId":"async","endLine":590,"endColumn":29}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"/**\n * 🚀 A1BETTING QUANTUM PLATFORM - ULTIMATE UTILITIES CONSOLIDATION\n *\n * Consolidates 200+ scattered utilities into organized categories\n * Preserves all functionality while maintaining cyber theme integration\n */\n\n// ===============================\n// 🎯 CORE UTILITIES\n// ===============================\n\nexport const CoreUtils = {\n  // Unique ID generation\n  generateId: (prefix = \"id\"): string => {\n    return `${prefix}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  },\n\n  // Debounce function\n  debounce: <T extends (...args: any[]) => any>(\n    func: T,\n    wait: number,\n  ): ((...args: Parameters<T>) => void) => {\n    let timeout: NodeJS.Timeout;\n    return (...args: Parameters<T>) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func(...args), wait);\n    };\n  },\n\n  // Throttle function\n  throttle: <T extends (...args: any[]) => any>(\n    func: T,\n    limit: number,\n  ): ((...args: Parameters<T>) => void) => {\n    let inThrottle: boolean;\n    return (...args: Parameters<T>) => {\n      if (!inThrottle) {\n        func(...args);\n        inThrottle = true;\n        setTimeout(() => (inThrottle = false), limit);\n      }\n    };\n  },\n\n  // Deep clone object\n  deepClone: <T>(obj: T): T => {\n    if (obj === null || typeof obj !== \"object\") return obj;\n    if (obj instanceof Date) return new Date(obj.getTime()) as unknown as T;\n    if (obj instanceof Array)\n      return obj.map((item) => CoreUtils.deepClone(item)) as unknown as T;\n    if (typeof obj === \"object\") {\n      const cloned = {} as T;\n      Object.keys(obj).forEach((key) => {\n        (cloned as any)[key] = CoreUtils.deepClone((obj as any)[key]);\n      });\n      return cloned;\n    }\n    return obj;\n  },\n\n  // Safe JSON parse\n  safeJsonParse: <T = any>(json: string, fallback: T): T => {\n    try {\n      return JSON.parse(json);\n    } catch {\n      return fallback;\n    }\n  },\n\n  // Format currency\n  formatCurrency: (amount: number, currency = \"USD\"): string => {\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency,\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(amount);\n  },\n\n  // Format percentage\n  formatPercentage: (value: number, decimals = 1): string => {\n    return `${value.toFixed(decimals)}%`;\n  },\n\n  // Clamp number between min and max\n  clamp: (value: number, min: number, max: number): number => {\n    return Math.min(Math.max(value, min), max);\n  },\n\n  // Generate random number in range\n  // WARNING: This should NOT be used for generating mock/fake data in production\n  // Only for legitimate randomization needs (e.g., noise reduction, UI animations)\n  randomInRange: (min: number, max: number): number => {\n    return Math.random() * (max - min) + min;\n  },\n};\n\n// ===============================\n// 🎲 ODDS & BETTING UTILITIES\n// ===============================\n\nexport const OddsUtils = {\n  // Convert American odds to decimal\n  americanToDecimal: (odds: number): number => {\n    if (odds > 0) {\n      return odds / 100 + 1;\n    } else {\n      return 100 / Math.abs(odds) + 1;\n    }\n  },\n\n  // Convert decimal odds to American\n  decimalToAmerican: (decimal: number): number => {\n    if (decimal >= 2) {\n      return Math.round((decimal - 1) * 100);\n    } else {\n      return Math.round(-100 / (decimal - 1));\n    }\n  },\n\n  // Convert odds to implied probability\n  oddsToImpliedProbability: (odds: number): number => {\n    const decimal =\n      typeof odds === \"number\" && odds > 0\n        ? OddsUtils.americanToDecimal(odds)\n        : odds;\n    return (1 / decimal) * 100;\n  },\n\n  // Calculate potential payout\n  calculatePayout: (stake: number, odds: number): number => {\n    const decimal = OddsUtils.americanToDecimal(odds);\n    return stake * decimal;\n  },\n\n  // Calculate profit\n  calculateProfit: (stake: number, odds: number): number => {\n    return OddsUtils.calculatePayout(stake, odds) - stake;\n  },\n\n  // Calculate parlay odds\n  calculateParlayOdds: (odds: number[]): number => {\n    const decimals = odds.map(OddsUtils.americanToDecimal);\n    const combinedDecimal = decimals.reduce((acc, decimal) => acc * decimal, 1);\n    return OddsUtils.decimalToAmerican(combinedDecimal);\n  },\n\n  // Kelly Criterion calculator\n  kellyStake: (\n    bankroll: number,\n    odds: number,\n    winProbability: number,\n  ): number => {\n    const decimal = OddsUtils.americanToDecimal(odds);\n    const kellyFraction = (winProbability * decimal - 1) / (decimal - 1);\n    return Math.max(0, kellyFraction * bankroll);\n  },\n\n  // Calculate arbitrage opportunity\n  calculateArbitrage: (\n    odds1: number,\n    odds2: number,\n  ): {\n    isArbitrage: boolean;\n    profit: number;\n    stakes: { bet1: number; bet2: number };\n  } => {\n    const decimal1 = OddsUtils.americanToDecimal(odds1);\n    const decimal2 = OddsUtils.americanToDecimal(odds2);\n\n    const totalImplied = 1 / decimal1 + 1 / decimal2;\n    const isArbitrage = totalImplied < 1;\n    const profit = isArbitrage ? (1 - totalImplied) * 100 : 0;\n\n    const totalStake = 100; // Example $100 total\n    const stake1 = totalStake / decimal1 / totalImplied;\n    const stake2 = totalStake / decimal2 / totalImplied;\n\n    return {\n      isArbitrage,\n      profit,\n      stakes: { bet1: stake1, bet2: stake2 },\n    };\n  },\n};\n\n// ===============================\n// 📊 ANALYTICS UTILITIES\n// ===============================\n\nexport const AnalyticsUtils = {\n  // Calculate win rate\n  calculateWinRate: (wins: number, total: number): number => {\n    return total > 0 ? (wins / total) * 100 : 0;\n  },\n\n  // Calculate ROI\n  calculateROI: (profit: number, investment: number): number => {\n    return investment > 0 ? (profit / investment) * 100 : 0;\n  },\n\n  // Calculate Sharpe ratio\n  calculateSharpeRatio: (returns: number[], riskFreeRate = 0.02): number => {\n    const avgReturn = returns.reduce((sum, r) => sum + r, 0) / returns.length;\n    const variance =\n      returns.reduce((sum, r) => sum + Math.pow(r - avgReturn, 2), 0) /\n      returns.length;\n    const standardDeviation = Math.sqrt(variance);\n\n    return standardDeviation > 0\n      ? (avgReturn - riskFreeRate) / standardDeviation\n      : 0;\n  },\n\n  // Calculate maximum drawdown\n  calculateMaxDrawdown: (values: number[]): number => {\n    let maxDrawdown = 0;\n    let peak = values[0];\n\n    for (const value of values) {\n      if (value > peak) {\n        peak = value;\n      }\n      const drawdown = (peak - value) / peak;\n      maxDrawdown = Math.max(maxDrawdown, drawdown);\n    }\n\n    return maxDrawdown * 100;\n  },\n\n  // Calculate streak (winning or losing)\n  calculateStreak: (\n    results: boolean[],\n  ): { current: number; max: number; type: \"win\" | \"loss\" } => {\n    if (results.length === 0) return { current: 0, max: 0, type: \"win\" };\n\n    let currentStreak = 1;\n    let maxStreak = 1;\n    let currentType = results[results.length - 1] ? \"win\" : \"loss\";\n\n    for (let i = results.length - 2; i >= 0; i--) {\n      if (results[i] === results[i + 1]) {\n        currentStreak++;\n        maxStreak = Math.max(maxStreak, currentStreak);\n      } else {\n        break;\n      }\n    }\n\n    return { current: currentStreak, max: maxStreak, type: currentType };\n  },\n\n  // Calculate confidence interval\n  calculateConfidenceInterval: (\n    data: number[],\n    confidence = 0.95,\n  ): { lower: number; upper: number; mean: number } => {\n    const sorted = [...data].sort((a, b) => a - b);\n    const mean = data.reduce((sum, val) => sum + val, 0) / data.length;\n    const alpha = 1 - confidence;\n    const lowerIndex = Math.floor((alpha / 2) * data.length);\n    const upperIndex = Math.ceil((1 - alpha / 2) * data.length) - 1;\n\n    return {\n      lower: sorted[lowerIndex],\n      upper: sorted[upperIndex],\n      mean,\n    };\n  },\n};\n\n// ===============================\n// 🕒 DATE & TIME UTILITIES\n// ===============================\n\nexport const DateUtils = {\n  // Format date for display\n  formatDate: (date: Date | string, format = \"MMM dd, yyyy\"): string => {\n    const d = new Date(date);\n\n    const formats: { [key: string]: string } = {\n      \"MMM dd, yyyy\": d.toLocaleDateString(\"en-US\", {\n        month: \"short\",\n        day: \"2-digit\",\n        year: \"numeric\",\n      }),\n      \"dd/MM/yyyy\": d.toLocaleDateString(\"en-GB\"),\n      \"yyyy-MM-dd\": d.toISOString().split(\"T\")[0],\n      full: d.toLocaleDateString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      }),\n    };\n\n    return formats[format] || d.toLocaleDateString();\n  },\n\n  // Format time\n  formatTime: (date: Date | string, includeSeconds = false): string => {\n    const d = new Date(date);\n    const options: Intl.DateTimeFormatOptions = {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      ...(includeSeconds && { second: \"2-digit\" }),\n    };\n    return d.toLocaleTimeString(\"en-US\", options);\n  },\n\n  // Get relative time (e.g., \"2 hours ago\")\n  getRelativeTime: (date: Date | string): string => {\n    const now = new Date();\n    const target = new Date(date);\n    const diffMs = now.getTime() - target.getTime();\n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMinutes / 60);\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffMinutes < 1) return \"Just now\";\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n    return DateUtils.formatDate(target);\n  },\n\n  // Check if date is today\n  isToday: (date: Date | string): boolean => {\n    const d = new Date(date);\n    const today = new Date();\n    return d.toDateString() === today.toDateString();\n  },\n\n  // Get business days between dates\n  getBusinessDays: (startDate: Date, endDate: Date): number => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    let businessDays = 0;\n\n    while (start <= end) {\n      const dayOfWeek = start.getDay();\n      if (dayOfWeek !== 0 && dayOfWeek !== 6) {\n        // Not Sunday or Saturday\n        businessDays++;\n      }\n      start.setDate(start.getDate() + 1);\n    }\n\n    return businessDays;\n  },\n};\n\n// ===============================\n// 🔒 VALIDATION UTILITIES\n// ===============================\n\nexport const ValidationUtils = {\n  // Email validation\n  isValidEmail: (email: string): boolean => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  },\n\n  // Phone validation\n  isValidPhone: (phone: string): boolean => {\n    const phoneRegex = /^\\+?[\\d\\s\\-\\(\\)]{10,}$/;\n    return phoneRegex.test(phone);\n  },\n\n  // Password strength validation\n  getPasswordStrength: (\n    password: string,\n  ): {\n    score: number;\n    feedback: string[];\n    isStrong: boolean;\n  } => {\n    const feedback: string[] = [];\n    let score = 0;\n\n    if (password.length >= 8) score += 1;\n    else feedback.push(\"At least 8 characters\");\n\n    if (/[a-z]/.test(password)) score += 1;\n    else feedback.push(\"Include lowercase letters\");\n\n    if (/[A-Z]/.test(password)) score += 1;\n    else feedback.push(\"Include uppercase letters\");\n\n    if (/\\d/.test(password)) score += 1;\n    else feedback.push(\"Include numbers\");\n\n    if (/[!@#$%^&*(),.?\":{}|<>]/.test(password)) score += 1;\n    else feedback.push(\"Include special characters\");\n\n    return {\n      score,\n      feedback,\n      isStrong: score >= 4,\n    };\n  },\n\n  // URL validation\n  isValidUrl: (url: string): boolean => {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  },\n\n  // Credit card validation (Luhn algorithm)\n  isValidCreditCard: (cardNumber: string): boolean => {\n    const clean = cardNumber.replace(/\\D/g, \"\");\n    if (clean.length < 13 || clean.length > 19) return false;\n\n    let sum = 0;\n    let isEven = false;\n\n    for (let i = clean.length - 1; i >= 0; i--) {\n      let digit = parseInt(clean[i]);\n\n      if (isEven) {\n        digit *= 2;\n        if (digit > 9) digit -= 9;\n      }\n\n      sum += digit;\n      isEven = !isEven;\n    }\n\n    return sum % 10 === 0;\n  },\n};\n\n// ===============================\n// 🎨 UI & STYLING UTILITIES\n// ===============================\n\nexport const UIUtils = {\n  // Class name combiner\n  cn: (...classes: (string | undefined | null | false)[]): string => {\n    return classes.filter(Boolean).join(\" \");\n  },\n\n  // Generate cyber theme colors\n  getCyberColor: (\n    type: \"primary\" | \"secondary\" | \"accent\" | \"danger\" | \"warning\" | \"success\",\n  ): string => {\n    const colors = {\n      primary: \"#06ffa5\",\n      secondary: \"#00ff88\",\n      accent: \"#00d4ff\",\n      danger: \"#ff4757\",\n      warning: \"#ffc107\",\n      success: \"#06ffa5\",\n    };\n    return colors[type];\n  },\n\n  // Generate gradient backgrounds\n  getCyberGradient: (type: \"background\" | \"button\" | \"card\"): string => {\n    const gradients = {\n      background:\n        \"linear-gradient(135deg, rgb(15, 23, 42) 0%, rgb(124, 58, 237) 50%, rgb(15, 23, 42) 100%)\",\n      button:\n        \"linear-gradient(135deg, rgba(6, 255, 165, 0.8), rgba(0, 255, 136, 0.6))\",\n      card: \"linear-gradient(45deg, #00ff88, #00d4ff)\",\n    };\n    return gradients[type];\n  },\n\n  // Generate glass morphism styles\n  getGlassStyles: (\n    intensity: \"light\" | \"medium\" | \"heavy\" = \"medium\",\n  ): React.CSSProperties => {\n    const styles = {\n      light: {\n        backdropFilter: \"blur(10px) saturate(150%)\",\n        backgroundColor: \"rgba(255, 255, 255, 0.02)\",\n        border: \"1px solid rgba(255, 255, 255, 0.05)\",\n      },\n      medium: {\n        backdropFilter: \"blur(20px) saturate(180%)\",\n        backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n        border: \"1px solid rgba(255, 255, 255, 0.1)\",\n      },\n      heavy: {\n        backdropFilter: \"blur(40px) saturate(200%)\",\n        backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n        border: \"1px solid rgba(255, 255, 255, 0.2)\",\n      },\n    };\n    return styles[intensity];\n  },\n\n  // Animate element entrance\n  animateEntrance: (\n    element: HTMLElement,\n    type: \"fade\" | \"slide\" | \"scale\" = \"fade\",\n  ): void => {\n    const animations = {\n      fade: [{ opacity: 0 }, { opacity: 1 }],\n      slide: [\n        { transform: \"translateY(20px)\", opacity: 0 },\n        { transform: \"translateY(0)\", opacity: 1 },\n      ],\n      scale: [\n        { transform: \"scale(0.9)\", opacity: 0 },\n        { transform: \"scale(1)\", opacity: 1 },\n      ],\n    };\n\n    element.animate(animations[type], {\n      duration: 300,\n      easing: \"ease-out\",\n      fill: \"forwards\",\n    });\n  },\n\n  // Generate responsive breakpoint styles\n  getBreakpointStyles: (breakpoint: \"sm\" | \"md\" | \"lg\" | \"xl\"): string => {\n    const breakpoints = {\n      sm: \"@media (min-width: 640px)\",\n      md: \"@media (min-width: 768px)\",\n      lg: \"@media (min-width: 1024px)\",\n      xl: \"@media (min-width: 1280px)\",\n    };\n    return breakpoints[breakpoint];\n  },\n};\n\n// ===============================\n// 🚀 PERFORMANCE UTILITIES\n// ===============================\n\nexport const PerformanceUtils = {\n  // Measure function execution time\n  measureTime: async <T>(\n    fn: () => Promise<T> | T,\n    label?: string,\n  ): Promise<{ result: T; time: number }> => {\n    const start = performance.now();\n    const result = await fn();\n    const end = performance.now();\n    const time = end - start;\n\n    if (label) {\n      console.log(`${label}: ${time.toFixed(2)}ms`);\n    }\n\n    return { result, time };\n  },\n\n  // Memory usage tracking\n  getMemoryUsage: (): {\n    used: number;\n    total: number;\n    percentage: number;\n  } | null => {\n    if (\"memory\" in performance) {\n      const memory = (performance as any).memory;\n      return {\n        used: memory.usedJSHeapSize,\n        total: memory.totalJSHeapSize,\n        percentage: (memory.usedJSHeapSize / memory.totalJSHeapSize) * 100,\n      };\n    }\n    return null;\n  },\n\n  // Lazy loading utility\n  lazyLoad: <T>(factory: () => Promise<T>): (() => Promise<T>) => {\n    let promise: Promise<T> | null = null;\n    return () => {\n      if (!promise) {\n        promise = factory();\n      }\n      return promise;\n    };\n  },\n\n  // Batch operations\n  batch: <T, R>(\n    items: T[],\n    batchSize: number,\n    processor: (batch: T[]) => Promise<R[]>,\n  ): Promise<R[]> => {\n    return new Promise(async (resolve) => {\n      const results: R[] = [];\n\n      for (let i = 0; i < items.length; i += batchSize) {\n        const batch = items.slice(i, i + batchSize);\n        const batchResults = await processor(batch);\n        results.push(...batchResults);\n      }\n\n      resolve(results);\n    });\n  },\n};\n\n// ===============================\n// 🔧 ERROR HANDLING UTILITIES\n// ===============================\n\nexport const ErrorUtils = {\n  // Safe function execution\n  safeExecute: <T>(\n    fn: () => T,\n    fallback: T,\n    onError?: (error: Error) => void,\n  ): T => {\n    try {\n      return fn();\n    } catch (error) {\n      if (onError) {\n        onError(error as Error);\n      }\n      return fallback;\n    }\n  },\n\n  // Async safe execution\n  safeExecuteAsync: async <T>(\n    fn: () => Promise<T>,\n    fallback: T,\n    onError?: (error: Error) => void,\n  ): Promise<T> => {\n    try {\n      return await fn();\n    } catch (error) {\n      if (onError) {\n        onError(error as Error);\n      }\n      return fallback;\n    }\n  },\n\n  // Error message extraction\n  getErrorMessage: (error: unknown): string => {\n    if (typeof error === \"string\") return error;\n    if (error instanceof Error) return error.message;\n    if (error && typeof error === \"object\" && \"message\" in error) {\n      return String(error.message);\n    }\n    return \"An unknown error occurred\";\n  },\n\n  // Retry mechanism\n  retry: async <T>(\n    fn: () => Promise<T>,\n    maxAttempts = 3,\n    delay = 1000,\n  ): Promise<T> => {\n    for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n      try {\n        return await fn();\n      } catch (error) {\n        if (attempt === maxAttempts) {\n          throw error;\n        }\n        await new Promise((resolve) => setTimeout(resolve, delay * attempt));\n      }\n    }\n    throw new Error(\"Retry failed\");\n  },\n};\n\n// ===============================\n// 📦 EXPORT ALL UTILITIES\n// ===============================\n\nexport const UltimateUtils = {\n  Core: CoreUtils,\n  Odds: OddsUtils,\n  Analytics: AnalyticsUtils,\n  Date: DateUtils,\n  Validation: ValidationUtils,\n  UI: UIUtils,\n  Performance: PerformanceUtils,\n  Error: ErrorUtils,\n};\n\nexport default UltimateUtils;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingAnalytics-MyPC.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingAnalytics-MyPC.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingAnalytics-MyPC.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingAnalytics.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingAnalytics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingCore.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingCore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingCore.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingCore.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingCore.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedBettingCore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedCache.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedCache.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedCache.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedPredictionEngine.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedPredictionEngine.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UnifiedPredictionEngine.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UniversalUtils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\UniversalUtils.ts","messages":[{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\(.","line":108,"column":31,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":108,"endColumn":32,"suggestions":[{"messageId":"removeEscape","fix":{"range":[3057,3058],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[3057,3057],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\).","line":108,"column":33,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":108,"endColumn":34,"suggestions":[{"messageId":"removeEscape","fix":{"range":[3059,3060],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[3059,3059],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ============================================================================\n// UNIVERSAL UTILITIES - Consolidated helper functions\n// ============================================================================\n\n// Format utilities\nexport const formatters = {\n  currency: (amount: number, currency = \"USD\") => {\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency,\n    }).format(amount);\n  },\n\n  percentage: (value: number, decimals = 1) => {\n    return `${(value * 100).toFixed(decimals)}%`;\n  },\n\n  number: (value: number, decimals = 0) => {\n    return new Intl.NumberFormat(\"en-US\", {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals,\n    }).format(value);\n  },\n\n  date: (date: Date | string, format = \"short\") => {\n    const d = typeof date === \"string\" ? new Date(date) : date;\n    return new Intl.DateTimeFormat(\"en-US\", {\n      dateStyle: format as any,\n      timeStyle: format === \"full\" ? \"short\" : undefined,\n    }).format(d);\n  },\n\n  time: (date: Date | string) => {\n    const d = typeof date === \"string\" ? new Date(date) : date;\n    return new Intl.DateTimeFormat(\"en-US\", {\n      timeStyle: \"short\",\n    }).format(d);\n  },\n\n  compact: (value: number) => {\n    return new Intl.NumberFormat(\"en-US\", {\n      notation: \"compact\",\n      compactDisplay: \"short\",\n    }).format(value);\n  },\n};\n\n// Analytics utilities\nexport const analytics = {\n  calculateWinRate: (wins: number, total: number) => {\n    return total > 0 ? wins / total : 0;\n  },\n\n  calculateProfit: (bets: Array<{ amount: number; outcome: string }>) => {\n    return bets.reduce((total, bet) => {\n      return total + (bet.outcome === \"won\" ? bet.amount : -bet.amount);\n    }, 0);\n  },\n\n  calculateROI: (profit: number, investment: number) => {\n    return investment > 0 ? profit / investment : 0;\n  },\n\n  calculateConfidenceInterval: (\n    value: number,\n    confidence = 0.95,\n    sampleSize = 100,\n  ) => {\n    const zScore = confidence === 0.95 ? 1.96 : 2.58;\n    const margin = zScore * Math.sqrt((value * (1 - value)) / sampleSize);\n    return {\n      lower: Math.max(0, value - margin),\n      upper: Math.min(1, value + margin),\n    };\n  },\n\n  calculateSharpeRatio: (returns: number[], riskFreeRate = 0.02): number => {\n    if (returns.length === 0) return 0;\n\n    const meanReturn = returns.reduce((sum, r) => sum + r, 0) / returns.length;\n    const variance =\n      returns.reduce((sum, r) => sum + Math.pow(r - meanReturn, 2), 0) /\n      returns.length;\n    const stdDev = Math.sqrt(variance);\n\n    return stdDev === 0 ? 0 : (meanReturn - riskFreeRate) / stdDev;\n  },\n\n  calculateKellyCriterion: (\n    winRate: number,\n    avgWin: number,\n    avgLoss: number,\n  ) => {\n    if (avgLoss === 0) return 0;\n    const b = avgWin / avgLoss;\n    return (winRate * (b + 1) - 1) / b;\n  },\n};\n\n// Validation utilities\nexport const validators = {\n  email: (email: string) => {\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return regex.test(email);\n  },\n\n  phone: (phone: string) => {\n    const regex = /^\\+?[\\d\\s\\-\\(\\)]+$/;\n    return regex.test(phone) && phone.replace(/\\D/g, \"\").length >= 10;\n  },\n\n  password: (password: string) => {\n    return {\n      minLength: password.length >= 8,\n      hasUpper: /[A-Z]/.test(password),\n      hasLower: /[a-z]/.test(password),\n      hasNumber: /\\d/.test(password),\n      hasSpecial: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\n    };\n  },\n\n  betAmount: (amount: number, balance: number, maxBet = 1000) => {\n    return {\n      isPositive: amount > 0,\n      hasBalance: amount <= balance,\n      withinLimit: amount <= maxBet,\n      isValid: amount > 0 && amount <= balance && amount <= maxBet,\n    };\n  },\n};\n\n// Color utilities\nexport const colors = {\n  getConfidenceColor: (confidence: number) => {\n    if (confidence >= 80) return \"#06ffa5\";\n    if (confidence >= 60) return \"#fbbf24\";\n    return \"#ff4757\";\n  },\n\n  getProfitColor: (value: number) => {\n    if (value > 0) return \"#06ffa5\";\n    if (value < 0) return \"#ff4757\";\n    return \"#94a3b8\";\n  },\n\n  getStatusColor: (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"won\":\n      case \"success\":\n      case \"active\":\n        return \"#06ffa5\";\n      case \"lost\":\n      case \"error\":\n      case \"failed\":\n        return \"#ff4757\";\n      case \"pending\":\n      case \"waiting\":\n        return \"#fbbf24\";\n      default:\n        return \"#94a3b8\";\n    }\n  },\n};\n\n// Storage utilities\nexport const storage = {\n  set: (key: string, value: any) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n      return true;\n    } catch (error) {\n      console.warn(\"Failed to save to localStorage:\", error);\n      return false;\n    }\n  },\n\n  get: (key: string, defaultValue: any = null) => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : defaultValue;\n    } catch (error) {\n      console.warn(\"Failed to read from localStorage:\", error);\n      return defaultValue;\n    }\n  },\n\n  remove: (key: string) => {\n    try {\n      localStorage.removeItem(key);\n      return true;\n    } catch (error) {\n      console.warn(\"Failed to remove from localStorage:\", error);\n      return false;\n    }\n  },\n\n  clear: () => {\n    try {\n      localStorage.clear();\n      return true;\n    } catch (error) {\n      console.warn(\"Failed to clear localStorage:\", error);\n      return false;\n    }\n  },\n};\n\n// Debounce utility\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number,\n): ((...args: Parameters<T>) => void) => {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n// Throttle utility\nexport const throttle = <T extends (...args: any[]) => any>(\n  func: T,\n  limit: number,\n): ((...args: Parameters<T>) => void) => {\n  let inThrottle: boolean;\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n};\n\n// Array utilities\nexport const arrayUtils = {\n  chunk: <T>(array: T[], size: number): T[][] => {\n    const chunks: T[][] = [];\n    for (let i = 0; i < array.length; i += size) {\n      chunks.push(array.slice(i, i + size));\n    }\n    return chunks;\n  },\n\n  unique: <T>(array: T[]): T[] => {\n    return [...new Set(array)];\n  },\n\n  groupBy: <T>(array: T[], key: keyof T): Record<string, T[]> => {\n    return array.reduce(\n      (groups, item) => {\n        const group = String(item[key]);\n        return {\n          ...groups,\n          [group]: [...(groups[group] || []), item],\n        };\n      },\n      {} as Record<string, T[]>,\n    );\n  },\n\n  sortBy: <T>(\n    array: T[],\n    key: keyof T,\n    direction: \"asc\" | \"desc\" = \"asc\",\n  ): T[] => {\n    return [...array].sort((a, b) => {\n      const aVal = a[key];\n      const bVal = b[key];\n\n      if (aVal < bVal) return direction === \"asc\" ? -1 : 1;\n      if (aVal > bVal) return direction === \"asc\" ? 1 : -1;\n      return 0;\n    });\n  },\n};\n\n// URL utilities\nexport const url = {\n  getParams: (): Record<string, string> => {\n    const params = new URLSearchParams(window.location.search);\n    const result: Record<string, string> = {};\n    params.forEach((value, key) => {\n      result[key] = value;\n    });\n    return result;\n  },\n\n  setParam: (key: string, value: string) => {\n    const url = new URL(window.location.href);\n    url.searchParams.set(key, value);\n    window.history.replaceState({}, \"\", url.toString());\n  },\n\n  removeParam: (key: string) => {\n    const url = new URL(window.location.href);\n    url.searchParams.delete(key);\n    window.history.replaceState({}, \"\", url.toString());\n  },\n};\n\n// Device utilities\nexport const device = {\n  isMobile: () => window.innerWidth <= 768,\n  isTablet: () => window.innerWidth > 768 && window.innerWidth <= 1024,\n  isDesktop: () => window.innerWidth > 1024,\n\n  getBreakpoint: () => {\n    const width = window.innerWidth;\n    if (width <= 640) return \"sm\";\n    if (width <= 768) return \"md\";\n    if (width <= 1024) return \"lg\";\n    if (width <= 1280) return \"xl\";\n    return \"2xl\";\n  },\n};\n\n// Export everything as default object for convenience\nexport default {\n  formatters,\n  analytics,\n  validators,\n  colors,\n  storage,\n  debounce,\n  throttle,\n  arrayUtils,\n  url,\n  device,\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\__tests__\\cacheUtils.test.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\__tests__\\cacheUtils.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\__tests__\\cacheUtils.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\aiSearch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\analytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\analyticsHelpers.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\analyticsHelpers.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\analyticsHelpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\animations.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\animations.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\animations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\api.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\api.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\apiHealthCheck.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\apiUtils.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\apiUtils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\apiUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\apifix.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\app.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\app.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\app.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\backendStarter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\betting.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\betting.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\betting.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\browser.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\browser.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\browser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\businessRules.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\businessRules.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\businessRules.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\cacheUtils.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\cacheUtils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\cacheUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\chart.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\chart.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\chart.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\chartSetup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\chartjs-safe.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\classNames.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\classNames.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\classNames.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\clickHandlerUtils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\clickHandlerUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\combinationsWorker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\combinationsWorker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\combinationsWorker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\common.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\common.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\common.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\componentRegistry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\consoleUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\constants.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\constants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\cyberIntegration.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\cyberIntegration.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\dataGenerator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\dataGenerator.ts","messages":[{"ruleId":"prefer-const","severity":2,"message":"'trend' is never reassigned. Use 'const' instead.","line":116,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":116,"endColumn":14,"fix":{"range":[3442,3482],"text":"const trend = (Math.random() - 0.5) * 0.4;"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"export class DataGenerator {\n  static generateConfidence(context: any): number {\n    const baseConfidence = 75;\n    let adjustment = 0;\n\n    // Adjust based on player/game context\n    if (context.recentForm) {\n      const avgForm =\n        context.recentForm\n          .slice(-5)\n          .reduce((sum: number, val: number) => sum + val, 0) / 5;\n      adjustment += (avgForm - 0.5) * 20; // ±10 points based on form\n    }\n\n    if (context.choice === \"over\" && context.statType) {\n      // Slightly favor over for offensive stats\n      if (\n        [\"Points\", \"Passing Yards\", \"Receiving Yards\"].includes(\n          context.statType,\n        )\n      ) {\n        adjustment += 2;\n      }\n    }\n\n    if (context.choice === \"under\" && context.statType) {\n      // Slightly favor under for defensive stats\n      if ([\"Turnovers\", \"Fouls\", \"Strikeouts\"].includes(context.statType)) {\n        adjustment += 2;\n      }\n    }\n\n    // Add some randomness\n    adjustment += (Math.random() - 0.5) * 15;\n\n    return Math.max(55, Math.min(95, baseConfidence + adjustment));\n  }\n\n  static generateExpectedValue(context: any): number {\n    const baseEV = 0;\n    let adjustment = 0;\n\n    // Adjust based on context\n    if (context.recentForm) {\n      const avgForm =\n        context.recentForm\n          .slice(-3)\n          .reduce((sum: number, val: number) => sum + val, 0) / 3;\n      adjustment += (avgForm - 0.5) * 8; // ±4 EV based on recent form\n    }\n\n    if (context.confidence) {\n      // Higher confidence = higher potential EV\n      adjustment += (context.confidence - 75) * 0.1;\n    }\n\n    // Add randomness\n    adjustment += (Math.random() - 0.5) * 10;\n\n    return baseEV + adjustment;\n  }\n\n  static generateStatLine(\n    sport: string,\n    statType: string,\n    playerName?: string,\n  ): number {\n    const baseLines = {\n      NBA: {\n        Points: { min: 12, max: 35, avg: 20 },\n        Rebounds: { min: 3, max: 15, avg: 7 },\n        Assists: { min: 2, max: 12, avg: 5 },\n        \"3-Pointers Made\": { min: 1, max: 6, avg: 2.5 },\n        Steals: { min: 0.5, max: 3, avg: 1.2 },\n        Blocks: { min: 0.5, max: 3, avg: 1.0 },\n      },\n      NFL: {\n        \"Passing Yards\": { min: 180, max: 350, avg: 240 },\n        \"Rushing Yards\": { min: 40, max: 150, avg: 75 },\n        Receptions: { min: 3, max: 12, avg: 6 },\n        \"Receiving Yards\": { min: 40, max: 120, avg: 70 },\n        Touchdowns: { min: 0.5, max: 3, avg: 1.2 },\n      },\n      MLB: {\n        Hits: { min: 0.5, max: 3, avg: 1.2 },\n        RBIs: { min: 0.5, max: 4, avg: 1.5 },\n        Runs: { min: 0.5, max: 3, avg: 1.0 },\n        \"Home Runs\": { min: 0.5, max: 2, avg: 0.8 },\n        Strikeouts: { min: 0.5, max: 12, avg: 6 },\n      },\n      NHL: {\n        Goals: { min: 0.5, max: 2, avg: 0.8 },\n        Assists: { min: 0.5, max: 3, avg: 1.2 },\n        Shots: { min: 2, max: 8, avg: 4 },\n        Points: { min: 0.5, max: 4, avg: 2 },\n      },\n    };\n\n    const sportLines = baseLines[sport];\n    if (!sportLines || !sportLines[statType]) {\n      return 10 + Math.random() * 10; // Fallback\n    }\n\n    const { min, max, avg } = sportLines[statType];\n\n    // Generate line around average with some variation\n    const variation = (max - min) * 0.3;\n    const line = avg + (Math.random() - 0.5) * variation;\n\n    // Ensure within bounds\n    return Math.max(min, Math.min(max, line));\n  }\n\n  static generateRecentForm(games: number = 10): number[] {\n    const form: number[] = [];\n    let trend = (Math.random() - 0.5) * 0.4; // Overall trend\n    let currentLevel = 0.5;\n\n    for (let i = 0; i < games; i++) {\n      // Add trend and some noise\n      const noise = (Math.random() - 0.5) * 0.3;\n      currentLevel = Math.max(\n        0.1,\n        Math.min(0.9, currentLevel + trend * 0.1 + noise),\n      );\n      form.push(currentLevel);\n    }\n\n    return form;\n  }\n\n  static generateGameData(sport: string): any {\n    const teams = this.getTeamsForSport(sport);\n    const homeTeam = teams[Math.floor(Math.random() * teams.length)];\n    let awayTeam = teams[Math.floor(Math.random() * teams.length)];\n\n    // Ensure different teams\n    while (awayTeam === homeTeam) {\n      awayTeam = teams[Math.floor(Math.random() * teams.length)];\n    }\n\n    return {\n      id: `${sport.toLowerCase()}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      sport,\n      homeTeam,\n      awayTeam,\n      gameTime: new Date(\n        Date.now() + Math.random() * 7 * 24 * 60 * 60 * 1000,\n      ).toISOString(),\n      status: \"Scheduled\",\n      venue: `${homeTeam} Stadium`,\n      spread: (Math.random() - 0.5) * 14, // ±7 point spread\n      total: this.generateGameTotal(sport),\n      moneyline: {\n        home: -110 + Math.random() * 60,\n        away: -110 + Math.random() * 60,\n      },\n    };\n  }\n\n  static generateGameTotal(sport: string): number {\n    const totals = {\n      NBA: { min: 210, max: 240, avg: 225 },\n      NFL: { min: 42, max: 58, avg: 47 },\n      MLB: { min: 7, max: 12, avg: 9 },\n      NHL: { min: 5.5, max: 7.5, avg: 6.5 },\n    };\n\n    const sportTotal = totals[sport];\n    if (!sportTotal) return 100;\n\n    const { min, max, avg } = sportTotal;\n    const variation = (max - min) * 0.3;\n\n    return avg + (Math.random() - 0.5) * variation;\n  }\n\n  static getTeamsForSport(sport: string): string[] {\n    const teams = {\n      NBA: [\n        \"LAL\",\n        \"BOS\",\n        \"GSW\",\n        \"MIL\",\n        \"PHI\",\n        \"DAL\",\n        \"PHX\",\n        \"DEN\",\n        \"MIA\",\n        \"ATL\",\n        \"CHI\",\n        \"NYK\",\n      ],\n      NFL: [\n        \"BUF\",\n        \"KC\",\n        \"SF\",\n        \"LAR\",\n        \"NE\",\n        \"MIA\",\n        \"NYJ\",\n        \"PIT\",\n        \"DAL\",\n        \"PHI\",\n        \"SEA\",\n        \"GB\",\n      ],\n      MLB: [\n        \"LAD\",\n        \"NYY\",\n        \"HOU\",\n        \"ATL\",\n        \"NYM\",\n        \"PHI\",\n        \"SD\",\n        \"TOR\",\n        \"BOS\",\n        \"STL\",\n        \"SF\",\n        \"CLE\",\n      ],\n      NHL: [\n        \"EDM\",\n        \"COL\",\n        \"TOR\",\n        \"BOS\",\n        \"NYR\",\n        \"TB\",\n        \"CAR\",\n        \"VGK\",\n        \"FLA\",\n        \"NJ\",\n        \"DAL\",\n        \"SEA\",\n      ],\n    };\n\n    return teams[sport] || [\"TEAM1\", \"TEAM2\", \"TEAM3\", \"TEAM4\"];\n  }\n\n  static generatePlayerData(sport: string, name?: string): any {\n    const teams = this.getTeamsForSport(sport);\n    const team = teams[Math.floor(Math.random() * teams.length)];\n    const positions = this.getPositionsForSport(sport);\n    const position = positions[Math.floor(Math.random() * positions.length)];\n\n    return {\n      id: `${sport.toLowerCase()}_${(name || \"player\").replace(/\\s+/g, \"_\").toLowerCase()}_${Date.now()}`,\n      name: name || this.generatePlayerName(),\n      team,\n      position,\n      sport,\n      stats: this.generatePlayerStats(sport),\n      recentForm: this.generateRecentForm(),\n      injuryStatus: Math.random() > 0.9 ? \"Questionable\" : \"Healthy\",\n      age: 21 + Math.floor(Math.random() * 15),\n      experience: Math.floor(Math.random() * 15),\n      salary: this.generateSalary(sport),\n    };\n  }\n\n  static generatePlayerStats(sport: string): any {\n    const stats: any = {};\n\n    switch (sport) {\n      case \"NBA\":\n        stats.points = 10 + Math.random() * 25;\n        stats.rebounds = 2 + Math.random() * 10;\n        stats.assists = 1 + Math.random() * 8;\n        stats.steals = 0.5 + Math.random() * 2;\n        stats.blocks = 0.3 + Math.random() * 2;\n        stats.threePointersMade = 0.5 + Math.random() * 4;\n        stats.fieldGoalPercentage = 0.35 + Math.random() * 0.25;\n        break;\n\n      case \"NFL\":\n        stats.passingYards = 150 + Math.random() * 200;\n        stats.rushingYards = 30 + Math.random() * 100;\n        stats.receptions = 2 + Math.random() * 8;\n        stats.receivingYards = 30 + Math.random() * 80;\n        stats.touchdowns = 0.3 + Math.random() * 2;\n        stats.interceptions = Math.random() * 1.5;\n        break;\n\n      case \"MLB\":\n        stats.hits = 0.8 + Math.random() * 1.5;\n        stats.rbis = 0.5 + Math.random() * 1.5;\n        stats.runs = 0.4 + Math.random() * 1.2;\n        stats.homeRuns = 0.1 + Math.random() * 0.8;\n        stats.strikeouts = 0.5 + Math.random() * 2;\n        stats.battingAverage = 0.2 + Math.random() * 0.15;\n        break;\n\n      case \"NHL\":\n        stats.goals = 0.2 + Math.random() * 1.5;\n        stats.assists = 0.3 + Math.random() * 2;\n        stats.shots = 2 + Math.random() * 4;\n        stats.points = stats.goals + stats.assists;\n        stats.plusMinus = (Math.random() - 0.5) * 20;\n        break;\n    }\n\n    return stats;\n  }\n\n  static generatePlayerName(): string {\n    const firstNames = [\n      \"Michael\",\n      \"James\",\n      \"John\",\n      \"Robert\",\n      \"David\",\n      \"Chris\",\n      \"Alex\",\n      \"Ryan\",\n      \"Tyler\",\n      \"Kevin\",\n      \"Anthony\",\n      \"Daniel\",\n      \"Marcus\",\n      \"Jordan\",\n      \"Brandon\",\n      \"Jason\",\n      \"Justin\",\n      \"Andrew\",\n      \"Josh\",\n      \"Nick\",\n    ];\n\n    const lastNames = [\n      \"Johnson\",\n      \"Williams\",\n      \"Brown\",\n      \"Jones\",\n      \"Garcia\",\n      \"Miller\",\n      \"Davis\",\n      \"Rodriguez\",\n      \"Martinez\",\n      \"Hernandez\",\n      \"Smith\",\n      \"Wilson\",\n      \"Anderson\",\n      \"Taylor\",\n      \"Thomas\",\n      \"Jackson\",\n      \"White\",\n      \"Harris\",\n      \"Martin\",\n      \"Thompson\",\n    ];\n\n    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n    const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n\n    return `${firstName} ${lastName}`;\n  }\n\n  static getPositionsForSport(sport: string): string[] {\n    const positions = {\n      NBA: [\"PG\", \"SG\", \"SF\", \"PF\", \"C\"],\n      NFL: [\"QB\", \"RB\", \"WR\", \"TE\", \"K\", \"DEF\"],\n      MLB: [\"C\", \"1B\", \"2B\", \"3B\", \"SS\", \"OF\", \"P\"],\n      NHL: [\"C\", \"LW\", \"RW\", \"D\", \"G\"],\n    };\n\n    return positions[sport] || [\"P\"];\n  }\n\n  static generateSalary(sport: string): number {\n    const salaryRanges = {\n      NBA: { min: 500000, max: 50000000 },\n      NFL: { min: 400000, max: 45000000 },\n      MLB: { min: 600000, max: 43000000 },\n      NHL: { min: 700000, max: 12500000 },\n    };\n\n    const range = salaryRanges[sport] || { min: 50000, max: 5000000 };\n    const logMin = Math.log(range.min);\n    const logMax = Math.log(range.max);\n\n    return Math.exp(logMin + Math.random() * (logMax - logMin));\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\encryption.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\encryption.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\encryption.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorHandler.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorHandler.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorHandler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorHandlingTest.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorLogger.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorLogger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorLogger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorUtils.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorUtils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\errorUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\formatters.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\formatters.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\formatters.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\helpers.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\helpers.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\helpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\lazyLoad.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\lazyLoad.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\lazyLoad.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\lineupValidation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\lineupValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\muiClickPatch.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\muiClickPatch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\odds.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\odds.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\odds.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\offlineDetectionTest.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\performance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\performanceOptimizer.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","line":121,"column":10,"nodeType":"Identifier","endLine":121,"endColumn":21},{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useCallback\" is called in function \"createMemoizedCallback\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","line":121,"column":10,"nodeType":"Identifier","endLine":121,"endColumn":21},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo received a function whose dependencies are unknown. Pass an inline function instead.","line":128,"column":10,"nodeType":"Identifier","endLine":128,"endColumn":17},{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useMemo\" is called in function \"createMemoizedValue\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","line":128,"column":10,"nodeType":"Identifier","endLine":128,"endColumn":17}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Performance Optimization Service\n * Handles component performance monitoring and optimization\n */\n\nimport { useCallback, useMemo, useRef, useEffect } from \"react\";\n\ninterface PerformanceMetrics {\n  renderTime: number;\n  memoryUsage: number;\n  componentRenders: number;\n  lastRenderTime: number;\n}\n\nclass PerformanceOptimizer {\n  private metrics: Map<string, PerformanceMetrics> = new Map();\n  private renderCounters: Map<string, number> = new Map();\n\n  // Track component render performance\n  trackRender(componentName: string) {\n    const startTime = performance.now();\n\n    return () => {\n      const endTime = performance.now();\n      const renderTime = endTime - startTime;\n\n      const existing = this.metrics.get(componentName) || {\n        renderTime: 0,\n        memoryUsage: 0,\n        componentRenders: 0,\n        lastRenderTime: 0,\n      };\n\n      this.metrics.set(componentName, {\n        ...existing,\n        renderTime: (existing.renderTime + renderTime) / 2, // Average\n        componentRenders: existing.componentRenders + 1,\n        lastRenderTime: renderTime,\n        memoryUsage: this.getMemoryUsage(),\n      });\n\n      // Log slow renders\n      if (renderTime > 16) {\n        // More than one frame\n        console.warn(\n          `Slow render detected: ${componentName} took ${renderTime.toFixed(2)}ms`,\n        );\n      }\n    };\n  }\n\n  // Get current memory usage\n  private getMemoryUsage(): number {\n    if (\"memory\" in performance) {\n      return (performance as any).memory.usedJSHeapSize / 1024 / 1024; // MB\n    }\n    return 0;\n  }\n\n  // Get performance metrics for a component\n  getMetrics(componentName: string): PerformanceMetrics | null {\n    return this.metrics.get(componentName) || null;\n  }\n\n  // Get all performance metrics\n  getAllMetrics(): Map<string, PerformanceMetrics> {\n    return new Map(this.metrics);\n  }\n\n  // Reset metrics for a component\n  resetMetrics(componentName: string) {\n    this.metrics.delete(componentName);\n    this.renderCounters.delete(componentName);\n  }\n\n  // Get performance summary\n  getPerformanceSummary() {\n    const allMetrics = Array.from(this.metrics.entries());\n\n    return {\n      totalComponents: allMetrics.length,\n      averageRenderTime:\n        allMetrics.reduce((sum, [, metrics]) => sum + metrics.renderTime, 0) /\n        allMetrics.length,\n      totalRenders: allMetrics.reduce(\n        (sum, [, metrics]) => sum + metrics.componentRenders,\n        0,\n      ),\n      memoryUsage: this.getMemoryUsage(),\n      slowComponents: allMetrics\n        .filter(([, metrics]) => metrics.renderTime > 16)\n        .map(([name]) => name),\n    };\n  }\n}\n\n// Singleton instance\nexport const performanceOptimizer = new PerformanceOptimizer();\n\n// React hook for performance tracking\nexport const usePerformanceTracker = (componentName: string) => {\n  const renderCountRef = useRef(0);\n\n  useEffect(() => {\n    renderCountRef.current++;\n    const endTracking = performanceOptimizer.trackRender(componentName);\n    return endTracking;\n  });\n\n  return {\n    renderCount: renderCountRef.current,\n    getMetrics: () => performanceOptimizer.getMetrics(componentName),\n  };\n};\n\n// Memoization helpers\nexport const createMemoizedCallback = <T extends (...args: any[]) => any>(\n  callback: T,\n  deps: React.DependencyList,\n): T => {\n  return useCallback(callback, deps);\n};\n\nexport const createMemoizedValue = <T>(\n  factory: () => T,\n  deps: React.DependencyList,\n): T => {\n  return useMemo(factory, deps);\n};\n\n// Debounce hook for expensive operations\nexport const useDebounce = <T>(value: T, delay: number): T => {\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\n// Throttle hook for high-frequency events\nexport const useThrottle = <T extends (...args: any[]) => any>(\n  callback: T,\n  delay: number,\n): T => {\n  const lastRun = useRef(Date.now());\n\n  return useCallback(\n    ((...args) => {\n      if (Date.now() - lastRun.current >= delay) {\n        callback(...args);\n        lastRun.current = Date.now();\n      }\n    }) as T,\n    [callback, delay],\n  );\n};\n\n// Virtual scrolling helper for large lists\nexport const useVirtualScrolling = (\n  items: any[],\n  itemHeight: number,\n  containerHeight: number,\n) => {\n  const [scrollTop, setScrollTop] = React.useState(0);\n\n  const visibleStart = Math.floor(scrollTop / itemHeight);\n  const visibleEnd = Math.min(\n    visibleStart + Math.ceil(containerHeight / itemHeight) + 1,\n    items.length,\n  );\n\n  const visibleItems = items.slice(visibleStart, visibleEnd);\n  const totalHeight = items.length * itemHeight;\n  const offsetY = visibleStart * itemHeight;\n\n  return {\n    visibleItems,\n    totalHeight,\n    offsetY,\n    setScrollTop,\n  };\n};\n\n// Image lazy loading helper\nexport const useLazyLoading = (threshold = 0.1) => {\n  const [isVisible, setIsVisible] = React.useState(false);\n  const ref = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          observer.disconnect();\n        }\n      },\n      { threshold },\n    );\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => observer.disconnect();\n  }, [threshold]);\n\n  return { ref, isVisible };\n};\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\performanceTracking.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\performanceTracking.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\performanceTracking.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\productionErrorHandler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\rateLimiter.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\rateLimiter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\rateLimiter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\scheduler.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\scheduler.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\scheduler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\security.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\security.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\security.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\serviceWorker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\serviceWorker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\serviceWorker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setup.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setup.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setupE2ETests.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setupE2ETests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setupE2ETests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setupIntegrationTests.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setupIntegrationTests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setupIntegrationTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setupTests.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setupTests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\setupTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\shap.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\shap.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\shap.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\strategy.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\strategy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\strategy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\test-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\test-utils.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\theme.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\theme.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\theme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\updateData.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\updateData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\updateData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\userSettings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\utils\\websocketHealthMonitor.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\validation\\schemas.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\validation\\schemas.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\validation\\schemas.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\workers\\combinationsWorker.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\workers\\combinationsWorker.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\workers\\combinationsWorker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\zod.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\zod.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\src\\zod.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\test-sportsradar.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\vite-backend-plugin.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\vite-backend-plugin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\vite.config.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\vite.config.minimal.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\bcmad\\Downloads\\A1Betting-master-main\\A1Betting-master-main\\frontend\\vite.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]
